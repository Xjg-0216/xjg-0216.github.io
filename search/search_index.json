{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Readme","text":"<p>\ud83d\udcda \u4e00\u4e2a\u57fa\u4e8e MkDocs \u548c Material for MkDocs \u7684\u4e2a\u4eba\u6280\u672f\u6587\u6863\u7ad9\u70b9\uff0c\u81ea\u52a8\u90e8\u7f72\u5728 GitHub Pages \u4e0a\u3002</p>"},{"location":"#_1","title":"\u9879\u76ee\u7b80\u4ecb","text":"<p>\u672c\u9879\u76ee\u7528\u4e8e\u6574\u7406\u3001\u7f16\u5199\u3001\u53d1\u5e03\u4e2a\u4eba\u5b66\u4e60\u4e0e\u5de5\u4f5c\u4e2d\u79ef\u7d2f\u7684\u7b14\u8bb0\u4e0e\u6280\u672f\u6587\u6863\uff0c\u4f7f\u7528 MkDocs \u4f5c\u4e3a\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u914d\u5408 Material for MkDocs \u4e3b\u9898\uff0c\u81ea\u52a8\u6e32\u67d3 Markdown \u6587\u4ef6\u4e3a\u54cd\u5e94\u5f0f\u3001\u53ef\u641c\u7d22\u7684\u6587\u6863\u7f51\u7ad9\uff0c\u5e76\u901a\u8fc7 GitHub Pages \u6301\u7eed\u96c6\u6210\u90e8\u7f72\u3002</p> <p>\u7ad9\u70b9\u5730\u5740\uff1a\ud83d\udc49 https://xjg-0216.github.io</p>"},{"location":"#_2","title":"\u9879\u76ee\u7ed3\u6784","text":"Text Only<pre><code>.\n\u251c\u2500\u2500 mkdocs.yml           # MkDocs \u7ad9\u70b9\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 docs/                # \u6240\u6709 Markdown \u6587\u6863\uff08\u7ad9\u70b9\u5185\u5bb9\uff09\n\u2502   \u251c\u2500\u2500 index.md         # \u4e3b\u9875\n\u2502   \u2514\u2500\u2500 ...              # \u5176\u4ed6\u5185\u5bb9\u5206\u7c7b\n\u251c\u2500\u2500 mkdocs/css/          # \u53ef\u9009\uff0c\u81ea\u5b9a\u4e49 CSS\n\u251c\u2500\u2500 mkdocs/javascripts/  # \u53ef\u9009\uff0c\u81ea\u5b9a\u4e49 JS\n\u251c\u2500\u2500 site/                # \u7531 MkDocs \u81ea\u52a8\u751f\u6210\u7684\u9759\u6001\u9875\u9762\uff08build \u540e\u4ea7\u751f\uff09\n\u2514\u2500\u2500 README.md            # \u9879\u76ee\u8bf4\u660e\u6587\u6863\n</code></pre>"},{"location":"#_3","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"#1","title":"1. \u5b89\u88c5\u4f9d\u8d56","text":"<p>\u9700\u8981 Python \u73af\u5883\uff08\u63a8\u8350 <code>Python &gt;= 3.8</code>\uff09</p> Bash<pre><code>pip install mkdocs-material\n</code></pre>"},{"location":"#2","title":"2. \u672c\u5730\u9884\u89c8","text":"Bash<pre><code>mkdocs serve\n</code></pre> <ul> <li>\u542f\u52a8\u672c\u5730\u5f00\u53d1\u670d\u52a1\u5668\uff1a http://127.0.0.1:8000</li> <li>\u7f16\u8f91 Markdown \u6587\u4ef6\u540e\uff0c\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u5237\u65b0\u3002</li> </ul>"},{"location":"#3","title":"\ud83c\udfd7\ufe0f 3. \u6784\u5efa\u9759\u6001\u7ad9\u70b9","text":"Bash<pre><code>mkdocs build\n</code></pre> <ul> <li>\u8f93\u51fa\u5230 <code>site/</code> \u6587\u4ef6\u5939\u3002</li> <li><code>site/</code> \u662f\u53ef\u76f4\u63a5\u90e8\u7f72\u5230\u4efb\u4f55\u9759\u6001\u7f51\u7ad9\u6258\u7ba1\u7684 HTML\u3002</li> </ul>"},{"location":"#4-github-pages","title":"\u2601\ufe0f 4. \u90e8\u7f72\u5230 GitHub Pages","text":"<p>\u672c\u4ed3\u5e93\u5df2\u914d\u7f6e <code>GitHub Pages</code>\uff0c\u53ef\u4f7f\u7528 MkDocs \u63d0\u4f9b\u7684\u90e8\u7f72\u547d\u4ee4\uff1a</p> Bash<pre><code>mkdocs gh-deploy --force\n</code></pre> <ul> <li>\u4f1a\u81ea\u52a8\u751f\u6210 <code>gh-pages</code> \u5206\u652f\u5e76\u63a8\u9001\u3002</li> <li>Pages \u8bbf\u95ee\u5730\u5740\u4e3a\uff1ahttps://xjg-0216.github.io</li> </ul>"},{"location":"#_4","title":"\u4e3b\u8981\u7279\u6027","text":"<p>\u2705 Material \u4e3b\u9898\uff1a</p> <ul> <li>\u81ea\u52a8\u4eae/\u6697\u8272\u6a21\u5f0f\u5207\u6362</li> <li>\u54cd\u5e94\u5f0f\u8bbe\u8ba1\uff0c\u624b\u673a\u53ef\u8bfb</li> <li>\u5f3a\u5927\u7684\u641c\u7d22\u529f\u80fd\uff08\u652f\u6301\u4e2d\u82f1\u65e5\u591a\u8bed\u8a00\uff09</li> <li>\u4ee3\u7801\u5757\u9ad8\u4eae\uff0c\u652f\u6301\u590d\u5236\u6309\u94ae</li> <li>\u6570\u5b66\u516c\u5f0f\uff08KaTeX\uff09\u6e32\u67d3</li> <li>\u652f\u6301\u63d0\u793a\u5757\u3001\u6807\u7b7e\u3001\u811a\u6ce8\u3001\u4efb\u52a1\u5217\u8868\u7b49 Markdown \u6269\u5c55</li> <li>\u4e0e GitHub \u4ed3\u5e93\u96c6\u6210\uff0c\u652f\u6301\u9875\u9762\u4e00\u952e\u8df3\u8f6c\u7f16\u8f91</li> </ul> <p>\u2705 \u5b8c\u5168\u9759\u6001\u3001\u53ef\u6301\u7eed\u90e8\u7f72\uff1a</p> <ul> <li>\u6240\u6709\u5185\u5bb9\u7531 Markdown \u9a71\u52a8\uff0c\u6613\u8bfb\u6613\u5199</li> <li>\u4f7f\u7528 <code>GitHub Actions</code> \u6216\u672c\u5730\u547d\u4ee4\u4e00\u952e\u53d1\u5e03</li> <li>\u514d\u8d39\u6258\u7ba1\uff0c\u65e0\u9700\u989d\u5916\u670d\u52a1\u5668\u8d44\u6e90</li> </ul>"},{"location":"#_5","title":"\u76f8\u5173\u94fe\u63a5","text":"<ul> <li>MkDocs \u5b98\u65b9\u6587\u6863</li> <li>Material for MkDocs \u4e3b\u9898\u6587\u6863</li> <li>GitHub Pages \u4f7f\u7528\u6307\u5357</li> </ul>"},{"location":"#license","title":"\ud83d\uddc2\ufe0f License","text":"<p>\u672c\u9879\u76ee\u9075\u5faa MIT License\uff0c\u53ef\u81ea\u7531\u4f7f\u7528\u4e0e\u4fee\u6539\u3002</p>"},{"location":"#maintainer","title":"\u2728 Maintainer","text":"<ul> <li>Author: xujg</li> <li>Site: https://xjg-0216.github.io</li> </ul>"},{"location":"Algorithm/01-kalman/","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2","text":"<p>\u5361\u5c14\u66fc\u6ee4\u6ce2\uff08Kalman Filter, KF\uff09\u662f\u4e00\u79cd\u9012\u5f52\u7684\u6700\u4f18\u4f30\u8ba1\u65b9\u6cd5\uff0c\u5e38\u7528\u4e8e\u5728\u6709\u566a\u58f0\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u52a8\u6001\u7cfb\u7edf\u7684\u72b6\u6001\uff08\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u59ff\u6001\u7b49\uff09\u8fdb\u884c\u4f30\u8ba1\u548c\u9884\u6d4b\u3002\u5b83\u5e7f\u6cdb\u5e94\u7528\u5728\u5bfc\u822a\u3001\u4fe1\u53f7\u5904\u7406\u3001\u76ee\u6807\u8ddf\u8e2a\u3001\u673a\u5668\u4eba\u5b9a\u4f4d\u7b49\u9886\u57df\u3002</p>"},{"location":"Algorithm/01-kalman/#1","title":"1. \u57fa\u672c\u601d\u60f3","text":"<p>\u7cfb\u7edf\u7684\u771f\u5b9e\u72b6\u6001\uff08\u4f8b\u5982\u76ee\u6807\u4f4d\u7f6e\u548c\u901f\u5ea6\uff09\u65e0\u6cd5\u76f4\u63a5\u7cbe\u786e\u89c2\u6d4b\uff0c\u53ea\u80fd\u901a\u8fc7\u542b\u566a\u58f0\u7684\u89c2\u6d4b\u503c\u6765\u83b7\u53d6\u3002 \u5361\u5c14\u66fc\u6ee4\u6ce2\u901a\u8fc7\uff1a</p> <ul> <li>\u9884\u6d4b (Predict)\uff1a\u6839\u636e\u8fd0\u52a8\u6a21\u578b\uff0c\u5229\u7528\u4e0a\u4e00\u6b21\u72b6\u6001\u4f30\u8ba1\u9884\u6d4b\u5f53\u524d\u72b6\u6001\uff1b</li> <li>\u66f4\u65b0 (Update)\uff1a\u7ed3\u5408\u5f53\u524d\u89c2\u6d4b\u503c\u4fee\u6b63\u9884\u6d4b\u7ed3\u679c\u3002</li> </ul> <p>\u8fd9\u6837\uff0c\u5c31\u80fd\u5728\u201c\u6a21\u578b\u9884\u6d4b\u201d\u548c\u201c\u6d4b\u91cf\u4fee\u6b63\u201d\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\uff0c\u4ece\u800c\u5f97\u5230\u6bd4\u5355\u72ec\u4f9d\u8d56\u6a21\u578b\u6216\u89c2\u6d4b\u66f4\u51c6\u786e\u7684\u4f30\u8ba1\u3002</p>"},{"location":"Algorithm/01-kalman/#2","title":"2. \u6570\u5b66\u6a21\u578b","text":"<p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u9002\u7528\u4e8e \u7ebf\u6027\u3001\u9ad8\u65af\u566a\u58f0 \u7684\u60c5\u51b5\u3002</p> <ul> <li>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff08\u7cfb\u7edf\u6a21\u578b\uff09\uff1a</li> </ul> \\[ x_k = A x_{k-1} + B u_k + w_k \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li> <p>\\(x_k\\)\uff1a\u7cfb\u7edf\u5728\u65f6\u523b \\(k\\) \u7684\u72b6\u6001\u5411\u91cf\uff08\u5982\u4f4d\u7f6e\u3001\u901f\u5ea6\uff09</p> </li> <li> <p>\\(A\\)\uff1a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff08\u63cf\u8ff0\u7cfb\u7edf\u7684\u8fd0\u52a8\u6a21\u578b\uff09</p> </li> <li> <p>\\(B\\)\uff1a\u63a7\u5236\u8f93\u5165\u77e9\u9635</p> </li> <li> <p>\\(u_k\\)\uff1a\u63a7\u5236\u91cf\uff08\u5982\u52a0\u901f\u5ea6\u3001\u8f6c\u5411\uff09</p> </li> <li> <p>\\(w_k\\)\uff1a\u8fc7\u7a0b\u566a\u58f0\uff0c\u670d\u4ece\u9ad8\u65af\u5206\u5e03 \\(N(0,Q)\\)</p> </li> <li> <p>\u89c2\u6d4b\u65b9\u7a0b\uff08\u6d4b\u91cf\u6a21\u578b\uff09\uff1a</p> </li> </ul> \\[ z_k = H x_k + v_k \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(z_k\\)\uff1a\u89c2\u6d4b\u91cf\uff08\u96f7\u8fbe\u6d4b\u5230\u7684\u4f4d\u7f6e\u3001\u4f20\u611f\u5668\u8bfb\u6570\uff09</li> <li>\\(H\\)\uff1a\u89c2\u6d4b\u77e9\u9635\uff08\u72b6\u6001\u4e0e\u89c2\u6d4b\u7684\u5173\u7cfb\uff09</li> <li>\\(v_k\\)\uff1a\u89c2\u6d4b\u566a\u58f0\uff0c\u670d\u4ece\u9ad8\u65af\u5206\u5e03 \\(N(0,R)\\)</li> </ul>"},{"location":"Algorithm/01-kalman/#3","title":"3. \u4e24\u4e2a\u4e3b\u8981\u6b65\u9aa4","text":""},{"location":"Algorithm/01-kalman/#1_1","title":"(1) \u9884\u6d4b\u6b65\u9aa4","text":"\\[ \\hat{x}_k^- = A \\hat{x}_{k-1} + B u_k \\] \\[ P_k^- = A P_{k-1} A^T + Q \\] <ul> <li>\\(\\hat{x}_k^-\\)\uff1a\u9884\u6d4b\u72b6\u6001</li> <li>\\(P_k^-\\)\uff1a\u9884\u6d4b\u534f\u65b9\u5dee\uff08\u4e0d\u786e\u5b9a\u6027\uff09</li> </ul>"},{"location":"Algorithm/01-kalman/#2_1","title":"(2) \u66f4\u65b0\u6b65\u9aa4","text":"<p>\u8ba1\u7b97\u5361\u5c14\u66fc\u589e\u76ca\uff1a</p> \\[ K_k = P_k^- H^T (H P_k^- H^T + R)^{-1} \\] <p>\u66f4\u65b0\u72b6\u6001\uff1a</p> \\[ \\hat{x}_k = \\hat{x}_k^- + K_k (z_k - H \\hat{x}_k^-) \\] <p>\u66f4\u65b0\u534f\u65b9\u5dee\uff1a</p> \\[ P_k = (I - K_k H) P_k^- \\] <p>\u8fd9\u91cc\u7684 \u5361\u5c14\u66fc\u589e\u76ca \\(K_k\\) \u51b3\u5b9a\u4e86\u9884\u6d4b\u548c\u89c2\u6d4b\u7684\u6743\u91cd\u5206\u914d\uff1a</p> <ul> <li>\u82e5\u89c2\u6d4b\u566a\u58f0\u5927\uff08R \u5927\uff09\uff0c\u5219\u66f4\u591a\u4f9d\u8d56\u9884\u6d4b\uff1b</li> <li>\u82e5\u6a21\u578b\u4e0d\u786e\u5b9a\uff08Q \u5927\uff09\uff0c\u5219\u66f4\u591a\u4f9d\u8d56\u89c2\u6d4b\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#4","title":"4. \u7279\u70b9","text":"<ul> <li> <p>\u4f18\u70b9\uff1a</p> </li> <li> <p>\u8ba1\u7b97\u6548\u7387\u9ad8\uff0c\u9012\u5f52\u5f62\u5f0f\u9002\u5408\u5b9e\u65f6\u5e94\u7528\uff1b</p> </li> <li>\u5728\u9ad8\u65af\u566a\u58f0\u548c\u7ebf\u6027\u7cfb\u7edf\u4e0b\u662f\u6700\u4f18\u4f30\u8ba1\u5668\u3002</li> <li> <p>\u7f3a\u70b9\uff1a</p> </li> <li> <p>\u5047\u8bbe\u7cfb\u7edf\u662f\u7ebf\u6027\u7684\u3001\u566a\u58f0\u662f\u9ad8\u65af\u5206\u5e03\uff1b</p> </li> <li>\u5bf9\u975e\u7ebf\u6027\u7cfb\u7edf\u9700\u4f7f\u7528 \u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2 (EKF) \u6216 \u65e0\u8ff9\u5361\u5c14\u66fc\u6ee4\u6ce2 (UKF)\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#5-c","title":"5. C++ \u4e2d\u5e38\u89c1\u7684\u5361\u5c14\u66fc\u6ee4\u6ce2\u5b9e\u73b0","text":""},{"location":"Algorithm/01-kalman/#51","title":"5.1 \u5e38\u89c1\u72b6\u6001/\u89c2\u6d4b\u5b9a\u4e49","text":"<p>\u5e38\u7528\u7684\u72b6\u6001\u5411\u91cf\uff088 \u7ef4\uff09\uff1a</p> Text Only<pre><code>x = [x_c, y_c, a, h, vx, vy, va, vh]^T\n</code></pre> <ul> <li><code>x_c,y_c</code>\uff1abbox \u4e2d\u5fc3\u5750\u6807</li> <li><code>a</code>\uff1a\u5bbd\u9ad8\u6bd4 (w/h) \u6216\u5bbd\u9ad8\u6bd4\u7684\u67d0\u79cd\u8868\u5f81\uff08\u5404\u5b9e\u73b0\u7ec6\u8282\u7565\u6709\u5dee\u5f02\uff09</li> <li><code>h</code>\uff1abbox \u9ad8\u5ea6\uff08\u6216 h\uff09</li> <li><code>vx,vy,va,vh</code>\uff1a\u5bf9\u5e94\u7684\u901f\u5ea6\u5206\u91cf\uff08\u72b6\u6001\u5411\u91cf\u540e\u534a\u6bb5\uff09</li> </ul> <p>\u89c2\u6d4b\u5411\u91cf <code>z</code> \u901a\u5e38\u662f 4 \u7ef4\uff1a</p> Text Only<pre><code>z = [x_c, y_c, a, h]^T\n</code></pre> <p>\u7ef4\u5ea6\u8bf4\u660e\uff1a</p> <ul> <li>\u72b6\u6001 <code>x</code> \u662f 8\u00d71 \u5411\u91cf</li> <li>\u72b6\u6001\u534f\u65b9\u5dee <code>P</code> \u662f 8\u00d78 \u77e9\u9635</li> <li>\u89c2\u6d4b\u77e9\u9635 <code>H</code> \u662f 4\u00d78\uff08\u628a\u72b6\u6001\u6295\u5f71\u5230\u89c2\u6d4b\u7a7a\u95f4\uff09</li> <li>\u89c2\u6d4b\u534f\u65b9\u5dee <code>R</code> \u662f 4\u00d74</li> <li>\u8fc7\u7a0b\u566a\u58f0\u534f\u65b9\u5dee <code>Q</code> \u662f 8\u00d78</li> </ul>"},{"location":"Algorithm/01-kalman/#52-a","title":"5.2 \u6838\u5fc3\u77e9\u9635\uff1a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635 A\uff08\u5300\u901f\u6a21\u578b\uff09","text":"<p>\u5178\u578b\u7684 <code>A</code>\uff088\u00d78\uff09\u7528\u4e8e\u201c\u4f4d\u7f6e += \u901f\u5ea6\u201d\u6a21\u578b\uff08\u79bb\u6563\u65f6\u95f4\u6b65\u957f\u5047\u5b9a\u4e3a 1\uff09\uff1a</p> Text Only<pre><code>A = [ I4  I4\n      0   I4 ]\n</code></pre> <p>\u66f4\u660e\u786e\u5730\uff08\u5757\u77e9\u9635\uff09\uff1a</p> <ul> <li>\u5de6\u4e0a 4\u00d74\uff1a\u5355\u4f4d\uff08\u4f4d\u7f6e\u7531\u4f4d\u7f6e\u4fdd\u7559\uff09</li> <li>\u5de6\u4e0b 4\u00d74\uff1a\u5168 0\uff08\u901f\u5ea6\u4e0d\u5f71\u54cd\u4e4b\u524d\u7684\u901f\u5ea6\uff09</li> <li>\u53f3\u4e0a 4\u00d74\uff1a\u5355\u4f4d\uff08\u4f4d\u7f6e += \u901f\u5ea6\uff09</li> <li>\u53f3\u4e0b 4\u00d74\uff1a\u5355\u4f4d\uff08\u901f\u5ea6\u4fdd\u6301\u4e0d\u53d8\uff09</li> </ul> <p>\u6570\u5b66\u4e0a\uff0c\u9884\u6d4b\u6b65\u9aa4\u7b49\u4ef7\u4e8e\uff1a</p> Text Only<pre><code>x^- = A x\nP^- = A P A^T + Q\n</code></pre> <p>\u5b9e\u73b0\u6ce8\u610f\uff1a</p> <ul> <li>\u6709\u4e9b\u5b9e\u73b0\u628a\u4f4d\u7f6e\u548c\u901f\u5ea6\u987a\u5e8f\u98a0\u5012\uff0c\u6ce8\u610f\u548c\u4ee3\u7801\u91cc\u7684\u7d22\u5f15\u5bf9\u9f50\u3002</li> <li>\u5982\u679c\u5e27\u95f4\u65f6\u95f4 dt \u2260 1\uff0c\u9700\u8981\u628a\u901f\u5ea6\u9879\u4e58\u4ee5 dt\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#53-h","title":"5.3 \u89c2\u6d4b\u77e9\u9635 H\uff08\u628a\u72b6\u6001\u6295\u5f71\u5230\u6d4b\u91cf\uff09","text":"<p><code>H</code> \u662f 4\u00d78\uff0c\u5e38\u4e3a\uff1a</p> Text Only<pre><code>H = [ I4  0 ]\n</code></pre> <p>\u4e5f\u5c31\u662f\u53d6\u72b6\u6001\u7684\u524d 4 \u4e2a\u5206\u91cf\u4f5c\u4e3a\u89c2\u6d4b\u9884\u6d4b\uff1a<code>z^- = H x^- = [x_c, y_c, a, h]</code></p>"},{"location":"Algorithm/01-kalman/#54-init-initiate","title":"5.4. \u521d\u59cb\u5316\uff08init / initiate\uff09","text":"<p>\u5f53\u68c0\u6d4b\u5668\u5728\u65b0\u76ee\u6807\u4e0a\u751f\u6210\u7b2c\u4e00\u6b21\u68c0\u6d4b\u65f6\uff0c\u4f1a\u8c03\u7528 <code>init</code>\uff1a</p> <p>\u5b9e\u73b0\u6b65\u9aa4\uff1a</p> <ol> <li>\u7528\u68c0\u6d4b\u6846\uff08<code>z</code>\uff09\u6784\u9020\u521d\u59cb\u72b6\u6001 <code>x</code>\uff1a\u628a\u4f4d\u7f6e\u90e8\u5206\u8bbe\u4e3a <code>z</code>\uff0c\u901f\u5ea6\u90e8\u5206\u8bbe\u4e3a 0\uff08\u6216\u8005\u5c0f\u503c\uff09\u3002</li> <li>\u521d\u59cb\u5316 <code>P</code>\uff1a\u901a\u5e38\u5bf9\u4f4d\u7f6e\u7ef4\u5ea6\u8d4b\u8f83\u5c0f\u65b9\u5dee\uff08\u4f8b\u5982 <code>10</code> \u6216 <code>1e-2</code>\uff09\uff0c\u5bf9\u901f\u5ea6\u7ef4\u5ea6\u8d4b\u8f83\u5927\u65b9\u5dee\uff08\u4f8b\u5982 <code>1e3</code>\uff09\u8868\u793a\u5bf9\u901f\u5ea6\u4e0d\u786e\u5b9a\u3002</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u4f2a\uff09\uff1a</p> C++<pre><code>Vector8 x;\nx.head(4) = z;         // z is 4x1\nx.tail(4).setZero();   // initial velocity unknown\n\nMatrix8 P;\nP.setZero();\nP.block&lt;4,4&gt;(0,0) = pos_var * I4;    // position variance\nP.block&lt;4,4&gt;(4,4) = vel_var * I4;    // velocity variance\n</code></pre>"},{"location":"Algorithm/01-kalman/#55-predict","title":"5.5 \u9884\u6d4b\uff08predict\uff09","text":"<p>\u5178\u578b\u5b9e\u73b0\uff08\u4f2a\uff09\uff1a</p> C++<pre><code>x = A * x;\nP = A * P * A.transpose() + Q;\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li><code>Q</code>\uff08\u8fc7\u7a0b\u566a\u58f0\uff09\u5e38\u9009\u4e3a\u5bf9\u89d2\u77e9\u9635\u3002\u5176\u6570\u503c\u51b3\u5b9a\u6a21\u578b\u5bf9\u201c\u52a0\u901f\u5ea6/\u6a21\u578b\u8bef\u5dee\u201d\u7684\u5bb9\u5fcd\u5ea6\uff1a<code>Q</code> \u5927 \u2192 \u9884\u6d4b\u66f4\u201c\u53d1\u6563\u201d\u3001\u66f4\u4fe1\u4efb\u89c2\u6d4b\u3002</li> <li>\u6709\u4e9b\u5b9e\u73b0\u628a <code>Q</code> \u8bbe\u8ba1\u4e3a\u4e0e\u76ee\u6807\u5c3a\u5ea6\uff08h\uff09\u6709\u5173\uff0c\u4f7f\u5f97\u5927\u76ee\u6807\u7684\u8fc7\u7a0b\u566a\u58f0\u6bd4\u4f8b\u4e0d\u540c\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#56-project-update","title":"5.6 \u6295\u5f71\u4e0e\u66f4\u65b0\uff08project + update\uff09","text":"<p>\u5148\u5c06\u9884\u6d4b\u7684\u72b6\u6001\u6295\u5f71\u5230\u89c2\u6d4b\u7a7a\u95f4\uff1a</p> C++<pre><code>z_pred = H * x;            // 4x1\nS = H * P * H.transpose() + R;  // 4x4, \u89c2\u6d4b\u534f\u65b9\u5dee\nK = P * H.transpose() * S.inverse(); // 8x4 \u5361\u5c14\u66fc\u589e\u76ca\n</code></pre> <p>\u968f\u540e\u7528\u89c2\u6d4b <code>z</code> \u66f4\u65b0\uff1a</p> C++<pre><code>x = x + K * (z - z_pred);\nP = (I - K * H) * P; // \u6807\u51c6\u5f62\u5f0f\n</code></pre> <p>\u5b9e\u73b0\u7ec6\u8282\uff1a</p> <ul> <li>\u4e3a\u6570\u503c\u7a33\u5b9a\uff0c\u6709\u65f6\u91c7\u7528 Joseph form \u66f4\u65b0\u534f\u65b9\u5dee\uff1a</li> </ul> <p>Text Only<pre><code>P = (I - K H) P (I - K H)^T + K R K^T\n</code></pre> * <code>S</code> \u7684\u9006\u6216 Cholesky \u5206\u89e3\u9700\u8981\u6570\u503c\u7a33\u5b9a\u6027\u5904\u7406\uff08\u907f\u514d\u975e\u6b63\u5b9a\uff09\u3002\u5b9e\u9645\u4e2d\u7528 <code>LDLT</code> \u6216 <code>LLT</code> \u66f4\u7a33\u5b9a\u3002</p>"},{"location":"Algorithm/01-kalman/#57-gatingmahalanobis-distance","title":"5.7 \u95e8\u63a7\uff08Gating\uff09\u4e0e\u9a6c\u6c0f\u8ddd\u79bb\uff08Mahalanobis distance\uff09","text":"<p>\u66f4\u65b0\u524d\u5e38\u9700\u8981\u5224\u65ad\u68c0\u6d4b\u4e0e\u9884\u6d4b\u7684\u201c\u8ddd\u79bb\u201d\u662f\u5426\u5408\u7406\uff08\u7528\u4e8e\u5173\u8054\u3001\u6ee4\u6389\u5f02\u5e38\u5339\u914d\uff09\u3002\u5e38\u7528\u4e24\u79cd\u8ddd\u79bb\uff1a</p> <ul> <li>IoU\uff08\u57fa\u4e8e bbox \u7684\u91cd\u53e0\uff09</li> <li>\u9a6c\u6c0f\u8ddd\u79bb\uff08\u8003\u8651\u9884\u6d4b\u534f\u65b9\u5dee\uff09\uff1a</li> </ul> <p>\u9a6c\u6c0f\u8ddd\u79bb\u8ba1\u7b97\uff08\u9884\u6d4b\u6295\u5f71\u5230\u89c2\u6d4b\u7a7a\u95f4\uff09\uff1a</p> Text Only<pre><code>d^2 = (z - z_pred)^T * S^{-1} * (z - z_pred)\n</code></pre> <p>\u5982\u679c <code>d^2</code> \u8d85\u8fc7 <code>chi2</code> \u9608\u503c\uff08\u81ea\u7531\u5ea6 = 4\uff0c\u5bf9\u5e94\u7f6e\u4fe1\u5ea6\u6bd4\u5982 0.995\uff09\uff0c\u5219\u8ba4\u4e3a\u8be5\u68c0\u6d4b\u4e0e\u8be5\u8f68\u8ff9\u4e0d\u76f8\u5bb9\uff08\u7528\u4e8e\u5308\u7259\u5229\u524d\u505a gating\uff09\u3002</p> <p>\u5b9e\u73b0\u8981\u70b9\uff1a</p> <ul> <li><code>S</code> \u662f 4\u00d74\uff0c\u4e0d\u540c\u76ee\u6807/\u5c3a\u5ea6 <code>S</code> \u4f1a\u4e0d\u540c\uff0c\u9a6c\u6c0f\u8ddd\u79bb\u81ea\u9002\u5e94\u5c3a\u5ea6\uff0c\u5f88\u9002\u5408\u591a\u5c3a\u5ea6\u76ee\u6807\u3002</li> <li>\u5e38\u5728 <code>KalmanFilter::gating_distance()</code> \u6216 <code>KalmanFilter::distance()</code> \u7b49\u51fd\u6570\u4e2d\u5b9e\u73b0\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#58-multi_predict","title":"5.8 \u6279\u91cf\u9884\u6d4b\uff08multi_predict\uff09","text":"<p>\u4e3a\u6027\u80fd\u8003\u8651\uff0cByteTrack \u5f80\u5f80\u4f1a\u5bf9\u6240\u6709\u6d3b\u8dc3\u8f68\u8ff9\u505a\u4e00\u6b21\u6279\u91cf\u9884\u6d4b\uff08\u4e00\u6b21\u77e9\u9635\u4e58\u6cd5\u5faa\u73af\uff09\uff0c\u7136\u540e\u5728\u5339\u914d\u4e4b\u524d\u628a\u6240\u6709 <code>x_pred</code> \u6295\u5f71\u51fa\u6765\u4ee5\u4f9b\u8ba1\u7b97 cost matrix\uff08IoU \u6216 Mahalanobis\uff09\u3002\u4f2a\u4ee3\u7801\uff1a</p> C++<pre><code>for each track:\n  x_pred = A * x_old\n  P_pred = A * P_old * A^T + Q\n  z_pred = H * x_pred\n  S = H * P_pred * H^T + R\n</code></pre>"},{"location":"Algorithm/01-kalman/#59-strack-bytetrack","title":"5.9 \u5728 STrack / ByteTrack \u7684\u4f7f\u7528\u4f4d\u7f6e\uff08\u7ed3\u5408\u8ddf\u8e2a\u6d41\u7a0b\uff09","text":"<ul> <li>\u521b\u5efa\u8f68\u8ff9\uff1a\u68c0\u6d4b\u5668\u7684\u67d0\u4e2a\u672a\u5339\u914d\u68c0\u6d4b\u4f1a <code>initiate()</code> \u4e00\u4e2a\u65b0\u7684\u8f68\u8ff9\uff08\u8c03\u7528 Kalman <code>init</code>\uff09\u3002</li> <li>\u9884\u6d4b\uff1a\u6bcf\u5e27\u5f00\u59cb\u4f1a\u5bf9\u6240\u6709\u6d3b\u8dc3\u8f68\u8ff9 <code>predict()</code>\uff08\u5f97\u5230 <code>x^-</code> \u4e0e <code>P^-</code>\uff09\u3002</li> <li>\u8ba1\u7b97 cost matrix\uff1a\u7528\u9884\u6d4b\u503c\u548c\u68c0\u6d4b\u6846\u8ba1\u7b97 IoU/\u9a6c\u6c0f\u8ddd\u79bb\u77e9\u9635\uff08\u7528\u4e8e\u5308\u7259\u5229\u5339\u914d\uff09\u3002\u5e38\u7528\u6df7\u5408\u7b56\u7565\uff1a\u4f18\u5148\u7528\u300c\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\u9ad8\u7684\u300d\u4e0e\u9884\u6d4b\u5339\u914d\uff08ByteTrack \u7684 trick\uff09\uff0c\u5e76\u628a\u4f4e\u7f6e\u4fe1\u68c0\u6d4b\u5f53\u4f5c\u8865\u5145\u3002</li> <li>\u66f4\u65b0\uff1a\u5bf9\u5339\u914d\u5230\u68c0\u6d4b\u7684\u8f68\u8ff9 <code>update()</code>\u3002</li> <li>\u7ba1\u7406\u751f\u547d\u5468\u671f\uff1a\u8fde\u7eed <code>n</code> \u5e27\u4e22\u5931\u540e\u5220\u9664\u8f68\u8ff9\u6216\u6807\u8bb0\u4e3a lost\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#6-c","title":"6 \u5178\u578b C++ \u4ee3\u7801\u7247\u6bb5","text":"<ul> <li><code>DETECTBOX</code>\uff1a4 \u5143\u7d20\u7684\u68c0\u6d4b\u5411\u91cf\uff0c\u683c\u5f0f\u901a\u5e38\u662f <code>[x_c, y_c, a, h]</code>\uff08\u4e2d\u5fc3 x, \u4e2d\u5fc3 y, \u5bbd\u9ad8\u6bd4, \u9ad8\u5ea6\uff09\uff0c\u5f62\u72b6\u53ef\u89c6\u4e3a <code>1\u00d74</code>\uff08\u6216 <code>4\u00d71</code>\uff0c\u89c1\u4e0b\u9762\u8ba8\u8bba\uff09\u3002</li> <li><code>KAL_MEAN</code>\uff1a\u72b6\u6001\u5411\u91cf\uff088 \u7ef4\uff09\uff0c\u5bf9\u5e94 <code>[x_c,y_c,a,h,vx,vy,va,vh]</code>\uff0c\u957f\u5ea6 8\u3002</li> <li><code>KAL_COVA</code>\uff1a\u72b6\u6001\u534f\u65b9\u5dee\u77e9\u9635\uff0c<code>8\u00d78</code>\u3002</li> <li><code>KAL_HMEAN</code>/<code>KAL_HCOVA</code>\uff1a\u89c2\u6d4b\u7a7a\u95f4\u7684 mean\uff084\uff09\u548c\u534f\u65b9\u5dee <code>4\u00d74</code>\u3002</li> <li><code>DETECTBOXSS</code>\uff1a<code>N\u00d74</code> \u7684\u77e9\u9635\uff08\u591a\u6761\u68c0\u6d4b\u5dee\u503c\u77e9\u9635\uff09\u3002</li> </ul> <p>\u6ce8\u610f\uff1a\u6e90\u7801\u91cc\u4f60\u6709\u5927\u91cf <code>transpose()</code> \u4e0e <code>block&lt;1,4&gt;</code> \u7684\u6df7\u7528\uff0c\u8868\u660e\u5b9e\u73b0\u4e0a\u72b6\u6001\u53ef\u80fd\u662f\u4ee5\u884c\u5411\u91cf\uff081\u00d78\uff09\u4e3a\u4e3b\uff08\u800c\u4e0d\u662f\u66f4\u5e38\u89c1\u7684\u5217\u5411\u91cf 8\u00d71\uff09\u3002\u4e0b\u9762\u89e3\u91ca\u65f6\u6211\u65e2\u4f1a\u6309\u201c\u6570\u5b66\u4e0a\u66f4\u6807\u51c6\u201d\u7684\u5217\u5411\u91cf\u5199\u6cd5\u7ed9\u51fa\u516c\u5f0f\uff0c\u4e5f\u4f1a\u6307\u51fa\u6e90\u7801\u4e2d\u5bf9\u5e94\u7684\u7ef4\u5ea6/\u8f6c\u7f6e\u4f4d\u7f6e\uff0c\u5e2e\u52a9\u4f60\u4e00\u4e00\u5bf9\u5e94\u3002</p>"},{"location":"Algorithm/01-kalman/#61-chi2inv95","title":"6.1 <code>chi2inv95</code>","text":"C++<pre><code>const double KalmanFilter::chi2inv95[10] = { 0, 3.8415, 5.9915, 7.8147, 9.4877, 11.070, 12.592, 14.067, 15.507, 16.919 };\n</code></pre> <ul> <li>\u8fd9\u662f\u5361\u65b9\u5206\u5e03\u5728 95% \u7f6e\u4fe1\u5ea6\u4e0b\u4e0d\u540c\u81ea\u7531\u5ea6\uff08degree-of-freedom\uff09\u7684\u4e34\u754c\u503c\u8868\uff1a<code>chi2inv95[d]</code> \u7ed9\u51fa <code>d</code> \u81ea\u7531\u5ea6\u7684\u4e34\u754c\u503c\uff08\u4f8b\u5982 <code>d=4</code> \u65f6\u7ea6 <code>9.4877</code>\uff09\u3002</li> <li>\u5728 gating\uff08\u95e8\u63a7\uff09\u65f6\u5e38\u7528\u6765\u5224\u65ad\u9a6c\u6c0f\u8ddd\u79bb\u662f\u5426\u5728\u63a5\u53d7\u8303\u56f4\u5185\uff08\u5982\u679c <code>maha^2 &gt; chi2inv95[d]</code> \u5219\u62d2\u7edd\u5339\u914d\uff09\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#62-kalmanfilterkalmanfilter","title":"6.2 \u6784\u9020\u51fd\u6570 <code>KalmanFilter::KalmanFilter()</code>","text":"C++<pre><code>int ndim = 4;\ndouble dt = 1.;\n\n_motion_mat = Eigen::MatrixXf::Identity(8, 8);\nfor (int i = 0; i &lt; ndim; i++) {\n    _motion_mat(i, ndim + i) = dt;\n}\n_update_mat = Eigen::MatrixXf::Identity(4, 8);\n\nthis-&gt;_std_weight_position = 1. / 20;\nthis-&gt;_std_weight_velocity = 1. / 160;\n</code></pre> <ul> <li><code>ndim = 4</code>\uff1a\u72b6\u6001\u4e2d\u201c\u53ef\u89c2\u6d4b\u7684\u201d\u90e8\u5206\u957f\u5ea6\uff08<code>x_c,y_c,a,h</code>\uff09\uff0c\u603b\u72b6\u6001\u7ef4\u5ea6 8\uff08\u542b\u901f\u5ea6\u5206\u91cf\uff09\u3002</li> <li><code>_motion_mat</code>\uff1a\u8fd9\u662f\u72b6\u6001\u8f6c\u79fb\u77e9\u9635 <code>A</code>\uff088\u00d78\uff09\uff0c\u6309\u5300\u901f\u6a21\u578b\u6784\u9020\uff08\u96e2\u6563\u6642\u9593 <code>dt</code> = 1\uff09\u3002\u6570\u5b66\u4e0a\u5bf9\u5e94\uff1a</li> </ul> <p>$$   A =   \\begin{bmatrix}   I_4 &amp; I_4\\   0   &amp; I_4   \\end{bmatrix}   $$</p> <p>\u5373\u4f4d\u7f6e\u90e8\u5206 <code>pos' = pos + vel * dt</code>\uff0c\u901f\u5ea6\u4fdd\u6301\u4e0d\u53d8\u3002 * <code>_update_mat</code>\uff1a\u89c2\u6d4b\u77e9\u9635 <code>H</code>\uff0c<code>4\u00d78</code>\uff0c\u901a\u5e38\u662f <code>[I4  0]</code> \u2014\u2014 \u628a\u72b6\u6001\u7684\u524d 4 \u4e2a\u91cf\u6620\u5c04\u4e3a\u89c2\u6d4b\u7a7a\u95f4\u3002 * <code>_std_weight_position</code> / <code>_std_weight_velocity</code>\uff1a\u6743\u91cd\u5e38\u91cf\uff0c\u7528\u6765\u628a\u5c3a\u5ea6\uff08\u901a\u5e38\u7528 <code>h</code>\uff09\u8f6c\u6210\u566a\u58f0\u6807\u51c6\u5dee\uff08std\uff09\u3002\u91c7\u7528\u76f8\u5bf9\u5c3a\u5ea6\u800c\u975e\u7edd\u5bf9\u50cf\u7d20\u503c\uff0c\u80fd\u8ba9\u566a\u58f0\u968f\u76ee\u6807\u5927\u5c0f\u8c03\u6574\u3002</p>"},{"location":"Algorithm/01-kalman/#63-initiateconst-detectbox-measurement","title":"6.3 <code>initiate(const DETECTBOX &amp;measurement)</code> \u2014\u2014 \u521d\u59cb\u5316\u65b0\u8f68\u8ff9","text":"<p>\u5173\u952e\u4ee3\u7801\uff1a</p> C++<pre><code>DETECTBOX mean_pos = measurement;\nDETECTBOX mean_vel; for (i...) mean_vel(i) = 0;\n\nKAL_MEAN mean;\nfor (i=0;i&lt;8;i++) {\n  if (i&lt;4) mean(i) = mean_pos(i);\n  else mean(i) = mean_vel(i-4);\n}\n\nKAL_MEAN std;\nstd(0) = 2 * _std_weight_position * measurement[3];\nstd(1) = 2 * _std_weight_position * measurement[3];\nstd(2) = 1e-2;\nstd(3) = 2 * _std_weight_position * measurement[3];\nstd(4) = 10 * _std_weight_velocity * measurement[3];\nstd(5) = 10 * _std_weight_velocity * measurement[3];\nstd(6) = 1e-5;\nstd(7) = 10 * _std_weight_velocity * measurement[3];\n\nKAL_MEAN tmp = std.array().square();\nKAL_COVA var = tmp.asDiagonal();\nreturn std::make_pair(mean, var);\n</code></pre> <ul> <li>mean\uff08\u521d\u59cb\u72b6\u6001\uff09\uff1a\u628a\u68c0\u6d4b\u91cf <code>measurement</code> \u7684\u524d 4 \u4e2a\u5206\u91cf\u653e\u5230 <code>mean</code> \u7684\u524d 4 \u4f4d\uff08\u4f4d\u7f6e\u76f8\u5173\uff09\uff0c\u901f\u5ea6\u5206\u91cf\u521d\u59cb\u5316\u4e3a 0\uff08\u6216\u8005\u53ef\u4ee5\u7528\u4e24\u5e27\u5dee\u5206\u4f30\u8ba1\uff09\u3002</li> <li> <p>\u534f\u65b9\u5dee <code>P</code> \u7684\u521d\u59cb\u5316\uff1a</p> </li> <li> <p>\u5bf9\u4f4d\u7f6e\uff1a<code>std = 2 * std_weight_position * h</code> \u2192 \u6807\u51c6\u5dee\u4e0e\u76ee\u6807\u9ad8\u5ea6 <code>h</code> \u6210\u6bd4\u4f8b\uff1b\u793a\u4f8b\uff1a\u82e5 <code>std_weight_position=1/20</code> \u4e14 <code>h=50</code>\uff0c\u5219 <code>std = 2 * (1/20) * 50 = 5</code> \u2192 \u65b9\u5dee = 25\u3002</p> </li> <li>\u5bf9\u901f\u5ea6\uff1a<code>std = 10 * std_weight_velocity * h</code> \u2192 \u901f\u5ea6\u7684\u4e0d\u786e\u5b9a\u6027\u901a\u5e38\u6bd4\u4f4d\u7f6e\u4fe1\u606f\u5927/\u5c0f\u8981\u770b\u5e38\u6570\uff08\u6b64\u5b9e\u73b0\u7528\u4e86 <code>10 * 1/160 * h</code> \u2192 \u2248 <code>h/16</code>\uff09\u3002</li> <li>\u7b2c 3 \u4e2a\u5206\u91cf\uff08aspect ratio\uff09\u548c\u7b2c 6 \u4e2a\u901f\u5ea6\u5206\u91cf\u88ab\u786c\u7f16\u7801\u4e3a\u5c0f\u5e38\u6570\uff08<code>1e-2</code>, <code>1e-5</code>\uff09\uff0c\u56e0\u4e3a aspect \u6bd4\u8f83\u7a33\u5b9a\u6216\u5c3a\u5ea6\u53d8\u5316\u8f83\u5c0f\u3002</li> <li>\u6700\u7ec8\u8fd4\u56de <code>(mean, var)</code>\uff1a<code>mean</code> \u662f 8 \u7ef4\u5411\u91cf\uff0c<code>var</code> \u662f <code>8\u00d78</code> \u5bf9\u89d2\u65b9\u5dee\u77e9\u9635\uff08\u53ea\u521d\u59cb\u5316\u5bf9\u89d2\uff09\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#64-predictkal_mean-mean-kal_cova-covariance","title":"6.4 <code>predict(KAL_MEAN &amp;mean, KAL_COVA &amp;covariance)</code> \u2014\u2014 \u9884\u6d4b\u6b65\u9aa4","text":"<p>\u4ee3\u7801\uff1a</p> C++<pre><code>DETECTBOX std_pos;\nstd_pos &lt;&lt; _std_weight_position * mean(3), _std_weight_position * mean(3), 1e-2, _std_weight_position * mean(3);\nDETECTBOX std_vel;\nstd_vel &lt;&lt; _std_weight_velocity * mean(3), _std_weight_velocity * mean(3), 1e-5, _std_weight_velocity * mean(3);\nKAL_MEAN tmp;\ntmp.block&lt;1, 4&gt;(0, 0) = std_pos;\ntmp.block&lt;1, 4&gt;(0, 4) = std_vel;\ntmp = tmp.array().square();\nKAL_COVA motion_cov = tmp.asDiagonal();\n\nKAL_MEAN mean1 = this-&gt;_motion_mat * mean.transpose();\nKAL_COVA covariance1 = this-&gt;_motion_mat * covariance *(_motion_mat.transpose());\ncovariance1 += motion_cov;\n\nmean = mean1;\ncovariance = covariance1;\n</code></pre> <p>\u6570\u5b66\u5bf9\u5e94\uff08\u6807\u51c6 KF\uff09\uff1a</p> <ul> <li>\u72b6\u6001\u9884\u6d4b\uff1a $ \\hat{x}^- = A \\hat{x} $\u3002</li> <li>\u534f\u65b9\u5dee\u9884\u6d4b\uff1a \\(P^- = A P A^T + Q\\)\uff0c\u5176\u4e2d <code>Q</code> \u662f\u8fc7\u7a0b\u566a\u58f0\u534f\u65b9\u5dee\uff08\u8fd9\u91cc\u53eb <code>motion_cov</code>\uff09\u3002   \u5b9e\u73b0\u7ec6\u8282\u8bf4\u660e\uff1a</li> <li> <p><code>motion_cov</code>\uff08Q\uff09\u662f\u6839\u636e\u5f53\u524d <code>mean(3)</code>\uff08\u4e5f\u5c31\u662f <code>h</code> \u2014\u2014 \u76ee\u6807\u9ad8\u5ea6\uff09\u52a8\u6001\u8ba1\u7b97\u7684\uff1a<code>std_pos = _std_weight_position * h</code>\uff08\u4e0e <code>init</code> \u4e0d\u540c\uff0c\u9884\u6d4b\u65f6\u6ca1\u6709\u4e58 <code>2</code>\uff0c\u8fd9\u662f\u5b9e\u73b0\u4e0a\u7684\u9009\u62e9\uff09\uff1b\u901f\u5ea6\u9879\u540c\u7406\u3002</p> </li> <li> <p>\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\uff1a\u76ee\u6807\u8d8a\u5927\uff08<code>h</code> \u5927\uff09\uff0c\u9884\u6d4b\u65f6\u7684\u7edd\u5bf9\u8bef\u5dee\u4e5f\u53ef\u80fd\u8d8a\u5927\uff0c\u6240\u4ee5\u5c06 <code>Q</code> \u968f <code>h</code> \u653e\u5927\u3002</p> </li> <li><code>mean1 = _motion_mat * mean.transpose()</code>\uff1a\u6e90\u7801\u91cc\u7528\u5230\u4e86\u591a\u6b21 <code>transpose()</code> \u2014\u2014 \u8fd9\u662f\u56e0\u4e3a\u4ee3\u7801\u4e2d\u72b6\u6001\u53ef\u80fd\u4ee5\u884c\u5411\u91cf\u5b58\u50a8\uff08<code>1\u00d78</code>\uff09\uff0c\u800c\u77e9\u9635 <code>A</code> \u4ee5 <code>8\u00d78</code> \u5f62\u5f0f\u5b58\u50a8\uff0c\u4e58\u6cd5\u9700\u8981\u5217\u5411\u91cf\u3002</li> <li>\u6700\u540e\u628a <code>mean</code> \u4e0e <code>covariance</code> \u66ff\u6362\u4e3a\u9884\u6d4b\u503c\u3002</li> </ul> <p>\u6ce8\u610f/\u5efa\u8bae\uff1a</p> <ul> <li><code>motion_cov</code> \u5e94\u4fdd\u8bc1\u6570\u503c\u7a33\u5b9a\uff08\u4e0d\u8981\u592a\u5c0f\u5bfc\u81f4 <code>P</code> \u4e27\u5931\u6b63\u5b9a\uff09\u3002</li> <li>\u5982\u679c\u5e27\u95f4\u65f6\u95f4 <code>dt</code> \u4e0d\u662f 1\uff0c\u5e94\u628a <code>A</code> \u548c <code>Q</code> \u6309 <code>dt</code> \u8c03\u6574\uff08\u4f8b\u5982\u4f4d\u7f6e\u9879\u4e58\u4ee5 <code>dt</code>\uff0c\u8fc7\u7a0b\u566a\u58f0\u6309 <code>dt</code> \u7684\u591a\u9879\u5f0f\u6269\u5c55\uff09\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#65-projectconst-kal_mean-mean-const-kal_cova-covariance","title":"6.5 <code>project(const KAL_MEAN &amp;mean, const KAL_COVA &amp;covariance)</code> \u2014\u2014 \u5c06\u72b6\u6001\u6295\u5f71\u5230\u89c2\u6d4b\u7a7a\u95f4","text":"<p>\u4ee3\u7801\uff1a</p> C++<pre><code>DETECTBOX std;\nstd &lt;&lt; _std_weight_position * mean(3), _std_weight_position * mean(3), 1e-1, _std_weight_position * mean(3);\nKAL_HMEAN mean1 = _update_mat * mean.transpose();\nKAL_HCOVA covariance1 = _update_mat * covariance * (_update_mat.transpose());\nEigen::Matrix&lt;float, 4, 4&gt; diag = std.asDiagonal();\ndiag = diag.array().square().matrix();\ncovariance1 += diag;\nreturn std::make_pair(mean1, covariance1);\n</code></pre> <p>\u6570\u5b66\u5bf9\u5e94\uff1a</p> <ul> <li><code>z_pred = H * x^-</code>\uff08\u9884\u6d4b\u7684\u89c2\u6d4b\uff09</li> <li><code>S = H P^- H^T + R</code>\uff0cR \u662f\u89c2\u6d4b\u566a\u58f0\u534f\u65b9\u5dee\uff08\u4ee3\u7801\u4e2d\u7528 <code>diag</code>\uff0c\u7531 <code>std</code> \u5f97\u5230\uff09</li> <li>\u8fd4\u56de <code>(z_pred, S)</code>   \u5b9e\u73b0/\u6ce8\u610f\u70b9\uff1a</li> <li><code>std</code> \u4e2d\u7b2c 3 \u4e2a\u5143\u7d20\uff08aspect\uff09\u5728 <code>project</code> \u4e2d\u4f7f\u7528 <code>1e-1</code>\uff08\u6bd4 <code>init</code> \u4f7f\u7528\u7684 <code>1e-2</code> \u7a0d\u5927\uff09\uff0c\u8fd9\u79cd\u4e0d\u4e00\u81f4\u53ef\u80fd\u662f\u4f5c\u8005\u523b\u610f\u5728\u89c2\u6d4b\u566a\u58f0\u4e0a\u66f4\u4fdd\u5b88\uff0c\u4e5f\u53ef\u80fd\u662f\u7b14\u8bef\uff0c\u5efa\u8bae\u7edf\u4e00\u6216\u6ce8\u91ca\u8bf4\u660e\u3002</li> <li><code>covariance1</code> \u5728\u8fd9\u91cc\u5c31\u662f <code>S</code>\uff08\u6295\u5f71\u534f\u65b9\u5dee\uff09\uff0c\u7528\u4e8e\u540e\u7eed\u8ba1\u7b97\u5361\u5c14\u66fc\u589e\u76ca\u4e0e gating\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#66-update","title":"6.6 <code>update(...)</code> \u2014\u2014 \u7528\u89c2\u6d4b\u4fee\u6b63\u9884\u6d4b","text":"<p>\u4ee3\u7801\uff08\u91cd\u8981\u6bb5\uff09\uff1a</p> C++<pre><code>KAL_HDATA pa = project(mean, covariance);\nKAL_HMEAN projected_mean = pa.first;\nKAL_HCOVA projected_cov = pa.second;\n\nEigen::Matrix&lt;float, 4, 8&gt; B = (covariance * (_update_mat.transpose())).transpose();\nEigen::Matrix&lt;float, 8, 4&gt; kalman_gain = (projected_cov.llt().solve(B)).transpose(); // eg.8x4\nEigen::Matrix&lt;float, 1, 4&gt; innovation = measurement - projected_mean; //eg.1x4\nauto tmp = innovation * (kalman_gain.transpose());\nKAL_MEAN new_mean = (mean.array() + tmp.array()).matrix();\nKAL_COVA new_covariance = covariance - kalman_gain * projected_cov * (kalman_gain.transpose());\nreturn std::make_pair(new_mean, new_covariance);\n</code></pre> <p>\u6570\u5b66\u5bf9\u5e94\uff08\u7ecf\u5178 KF\uff09\uff1a</p> <ul> <li>\u9884\u6d4b\u89c2\u6d4b\uff1a <code>z_pred = H x^-</code>\uff0c <code>S = H P^- H^T + R</code>\uff08\u5df2\u7531 <code>project</code> \u5f97\u5230\uff09</li> <li> <p>\u5361\u5c14\u66fc\u589e\u76ca\uff1a \\(K = P^- H^T S^{-1}\\)\u3002\u6e90\u7801\u901a\u8fc7\u7ebf\u6027\u4ee3\u6570\u53d8\u6362\u4e0e LLT \u6c42\u89e3\u907f\u514d\u76f4\u63a5\u6c42\u9006\uff1a</p> </li> <li> <p>\u53d6 <code>B = (P * H^T)^T</code>\uff0c\u7136\u540e <code>projected_cov.llt().solve(B)</code> \u8ba1\u7b97 <code>S^{-1} * B</code>\uff0c\u518d\u8f6c\u7f6e\u5f97\u5230 <code>K</code>\uff08\u6570\u5b66\u4e0a\u7b49\u4e8e <code>P H^T S^{-1}</code>\uff0c\u524d\u9762\u89e3\u91ca\u91cc\u53ef\u9a8c\u8bc1\uff09\u3002</p> </li> <li>\u521b\u65b0\uff08innovation\uff09\uff1a <code>y = z - z_pred</code> \uff08\u89c2\u6d4b\u51cf\u9884\u6d4b\u89c2\u6d4b\uff09</li> <li>\u72b6\u6001\u66f4\u65b0\uff1a <code>x = x^- + K y</code>\uff08\u6e90\u7801\u5b9e\u73b0\u4e3a\u884c\u5411\u91cf\u5f62\u5f0f\u7684 <code>mean + (innovation * K^T)</code>\uff09</li> <li>\u534f\u65b9\u5dee\u66f4\u65b0\uff08\u4f60\u7528\u7684\u662f\u6807\u51c6\u5f62\u5f0f\uff09\uff1a</li> </ul> <p>$$   P = P^- - K S K^T   $$</p> <ul> <li> <p>\u5efa\u8bae\uff1a\u4f7f\u7528 Joseph \u5f62\u5f0f \u66f4\u65b0\u53ef\u4ee5\u66f4\u6570\u503c\u7a33\u5b9a\u5e76\u66f4\u80fd\u4fdd\u8bc1 <code>P</code> \u6b63\u5b9a\uff1a</p> <p>$$ P = (I - K H) P^- (I - K H)^T + K R K^T. $$ * \u4f60\u7528 <code>projected_cov.llt().solve</code> \u6765\u89e3 <code>S X = B</code>\uff0c\u6bd4\u76f4\u63a5 <code>S.inverse()</code> \u66f4\u9ad8\u6548\u4e14\u66f4\u7a33\u5b9a\uff08\u8fd9\u662f\u597d\u7684\u5b9e\u8df5\uff09\u3002</p> </li> </ul> <p>\u6f5c\u5728\u95ee\u9898\uff1a</p> <ul> <li>\u5982\u679c <code>projected_cov</code> \u4e0d\u662f\u4e25\u683c\u6b63\u5b9a\uff0c<code>LLT</code> \u4f1a\u5931\u8d25\u3002\u5efa\u8bae\u5728\u5931\u8d25\u65f6\u9000\u7528 <code>LDLT</code>\uff0c\u6216\u8005\u5728\u5bf9\u89d2\u7ebf\u4e0a\u52a0\u5c0f\u91cf <code>eps</code>\uff08jitter\uff09\u540e\u518d\u505a\u5206\u89e3\u3002</li> <li><code>innovation</code> \u4e0e <code>mean</code> \u7684\u5f62\u72b6\uff08\u884c\u5411\u91cf vs \u5217\u5411\u91cf\uff09\u8981\u7edf\u4e00\uff1b\u6e90\u7801\u4e2d\u901a\u8fc7 <code>transpose()</code> \u591a\u6b21\u5207\u6362\u65b9\u5411\uff0c\u6613\u51fa\u9519\uff1b\u5efa\u8bae\u7edf\u4e00\u6210\u5217\u5411\u91cf\u5f62\u5f0f\uff0c\u7b80\u5316\u8868\u8fbe\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#67-gating_distance-gating","title":"6.7 <code>gating_distance(...)</code> \u2014\u2014 \u8ba1\u7b97\uff08\u6279\u91cf\uff09\u9a6c\u6c0f\u8ddd\u79bb\uff0c\u7528\u4e8e\u5173\u8054 gating","text":"<p>\u4ee3\u7801\uff1a</p> C++<pre><code>KAL_HDATA pa = this-&gt;project(mean, covariance);\n... // pa.first = mean1 (1x4), pa.second = covariance1 (4x4)\n\nDETECTBOXSS d(measurements.size(), 4);\nfor (box in measurements) {\n  d.row(pos++) = box - mean1;\n}\nEigen::Matrix&lt;float, -1, -1, RowMajor&gt; factor = covariance1.llt().matrixL();\nEigen::Matrix&lt;float, -1, -1&gt; z = factor.triangularView&lt;Eigen::Lower&gt;().solve&lt;Eigen::OnTheRight&gt;(d).transpose();\nauto zz = ((z.array())*(z.array())).matrix();\nauto square_maha = zz.colwise().sum();\nreturn square_maha;\n</code></pre> <p>\u6570\u5b66\u610f\u4e49\uff08\u9010\u6b65\uff09\uff1a</p> <ul> <li><code>d_i = z_i - z_pred</code>\uff0c\u5bf9 <code>N</code> \u4e2a\u68c0\u6d4b\u5f97\u5230 <code>N\u00d74</code> \u7684\u5dee\u503c\u77e9\u9635 <code>d</code>\u3002</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a <code>d_i</code>\uff0c\u9a6c\u6c0f\u8ddd\u79bb\u5e73\u65b9\u5b9a\u4e49\u4e3a \\(d_i^T S^{-1} d_i\\)\uff08<code>S</code> \u4e3a\u6295\u5f71\u534f\u65b9\u5dee\uff09\u3002</li> <li>\u8ba1\u7b97\u65b9\u6cd5\uff1a\u5bf9 <code>S</code> \u505a Cholesky \u5206\u89e3 <code>S = L L^T</code>\uff0c\u89e3 <code>L y = d_i^T</code> \u5f97 <code>y = L^{-1} d_i^T</code>\uff0c\u5219 <code>d_i^T S^{-1} d_i = ||y||^2</code>\u3002\u6e90\u7801\u5c31\u662f\u7528\u8fd9\u4e2a\u7a33\u5b9a\u505a\u6cd5\uff08\u907f\u514d\u76f4\u63a5\u6c42 <code>S^{-1}</code>\uff09\u3002</li> <li>\u8fd4\u56de\u7ed3\u679c <code>square_maha</code> \u4e3a\u6bcf\u4e2a <code>measurement</code> \u7684 \u5e73\u65b9\u9a6c\u6c0f\u8ddd\u79bb\uff08\u53ef\u4ee5\u4e0e <code>chi2inv95[4]</code> \u6bd4\u8f83\u505a\u95e8\u63a7\uff09\u3002</li> </ul> <p>\u5b9e\u73b0\u7ec6\u8282/\u6ce8\u610f\u70b9\uff1a</p> <ul> <li><code>only_position</code> \u5206\u652f\u672a\u5b9e\u73b0\uff08\u6e90\u7801 <code>printf(\"not implement!\"); exit(0);</code>\uff09\u3002<code>only_position</code> \u82e5\u4e3a\u771f\uff0c\u901a\u5e38\u610f\u56fe\u662f\u53ea\u57fa\u4e8e\u4f4d\u7f6e\uff08x,y\uff09\u8ba1\u7b97\u95e8\u63a7\u8ddd\u79bb\uff08\u81ea\u7531\u5ea6 = 2\uff09\uff0c\u7528\u4e8e\u67d0\u4e9b\u53ea\u5728 xy \u4e0a gating \u7684\u7b56\u7565\u3002\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u5b50 <code>H_pos</code> \u548c\u76f8\u5e94\u7684 <code>S_pos</code>\u3002</li> <li>\u540c\u6837\u8981\u5bf9 <code>LLT</code> \u5931\u8d25\u52a0\u4fdd\u62a4\uff08\u6570\u503c\u7a33\u5b9a\u6027\uff09\u3002</li> </ul>"},{"location":"Algorithm/01-kalman/#68","title":"6.8 \u53c2\u6570\u542b\u4e49\u4e0e\u5e38\u6570\u89e3\u91ca\uff08\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bbe\uff09","text":"<ul> <li> <p><code>_std_weight_position = 1/20</code> \u4e0e <code>_std_weight_velocity = 1/160</code>\uff1a\u628a\u76ee\u6807\u9ad8\u5ea6 <code>h</code> \u6620\u5c04\u4e3a\u566a\u58f0\u5c3a\u5ea6\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a <code>h = 50px</code>\uff1a</p> <ul> <li><code>init</code> \u65f6 <code>pos_std = 2 * (1/20) * 50 = 5</code> \u2192 <code>pos_var = 25</code>\uff08\u521d\u59cb\u4f4d\u7f6e\u4e0d\u786e\u5b9a\u5ea6 ~5 px\uff09</li> <li><code>init</code> \u65f6 <code>vel_std = 10 * (1/160) * 50 = 3.125</code> \u2192 <code>vel_var \u2248 9.77</code></li> <li>\u8fd9\u4e9b\u503c\u662f\u7ecf\u9a8c\u5e38\u6570\uff0c\u80fd\u6309\u5177\u4f53\u573a\u666f\uff08\u5e27\u7387\u3001\u76f8\u673a\u5206\u8fa8\u7387\u3001\u76ee\u6807\u8fd0\u52a8\u901f\u5ea6\uff09\u6765\u8c03\u3002</li> <li>\u5c0f\u5e38\u6570 <code>1e-2</code>, <code>1e-5</code>\uff1a\u8868\u793a\u5bf9\u67d0\u4e9b\u7ef4\u5ea6\uff08\u5982 aspect \u6216\u5176\u901f\u5ea6\uff09\u7684\u5f3a\u5148\u9a8c\uff08\u975e\u5e38\u786e\u5b9a\u6216\u975e\u5e38\u7a33\u5b9a\uff09\u2014\u2014\u4f46\u8981\u5c0f\u5fc3\uff0c\u4e0d\u8981\u628a\u67d0\u4e9b\u5206\u91cf\u8bbe\u5f97\u592a\u5c0f\uff0c\u5bfc\u81f4\u6570\u503c\u95ee\u9898\u3002</li> </ul> </li> </ul>"},{"location":"Algorithm/01-kalman/#69","title":"6.9 \u5e38\u89c1\u6539\u8fdb\u5efa\u8bae\uff08\u4ee3\u7801/\u6570\u503c\u7a33\u5b9a/\u6027\u80fd\uff09","text":"<ol> <li>\u7edf\u4e00\u5411\u91cf\u65b9\u5411\uff1a\u628a\u72b6\u6001 <code>x</code> \u7528\u56fa\u5b9a\u7684\u5217\u5411\u91cf\uff08<code>Eigen::Matrix&lt;float,8,1&gt;</code>\uff09\u8868\u793a\uff0c\u51cf\u5c11 <code>transpose()</code> \u8c03\u7528 \u2014\u2014 \u66f4\u76f4\u89c2\u4e5f\u66f4\u4e0d\u6613\u51fa\u9519\u3002</li> <li>\u534f\u65b9\u5dee\u66f4\u65b0\u91c7\u7528 Joseph \u5f62\u5f0f\uff0c\u4fdd\u8bc1\u6570\u503c\u7a33\u5b9a\u6027\uff1a</li> </ol> <p>C++<pre><code>Matrix8f I = Matrix8f::Identity();\nP = (I - K*H) * P * (I - K*H).transpose() + K * R * K.transpose();\n</code></pre> 3. LLT \u5931\u8d25\u4fdd\u62a4\uff1a\u5728 <code>project</code>/<code>update</code>/<code>gating</code> \u4e2d\uff0c\u5982\u679c <code>LLT</code> \u5931\u8d25\uff0c\u5148\u5c1d\u8bd5 <code>LDLT</code>\uff0c\u6216\u7ed9 <code>cov += eps * I</code> \u540e\u91cd\u8bd5\uff08<code>eps</code> \u5982 <code>1e-6</code>~<code>1e-3</code> \u89c6\u91cf\u7ea7\uff09\u3002 4. \u907f\u514d\u9891\u7e41\u52a8\u6001\u5185\u5b58\uff1a\u7528 <code>Eigen::Matrix&lt;float,8,8&gt;</code> \u7b49\u56fa\u5b9a\u5c3a\u5bf8\u7c7b\u578b\u63d0\u9ad8\u6027\u80fd\uff08\u907f\u514d <code>MatrixXf</code> \u7684\u52a8\u6001\u5206\u914d\uff09\u3002 5. \u6279\u91cf\u9884\u6d4b\uff1a\u5982\u679c\u6709\u5927\u91cf\u8f68\u8ff9\uff0c\u6309\u6279\uff08batch\uff09\u505a <code>A * X</code> \u53ef\u4ee5\u66f4\u5feb\uff08\u7ebf\u6027\u4ee3\u6570\u4f18\u5316\uff09\u3002 6. \u81ea\u9002\u5e94\u566a\u58f0\uff1a\u53ef\u4ee5\u628a <code>R</code> \u6216 <code>Q</code> \u4e0e\u68c0\u6d4b\u5668\u7f6e\u4fe1\u5ea6 <code>score</code> \u5173\u8054\uff08\u9ad8\u7f6e\u4fe1\u5ea6 \u2192 \u5c0f <code>R</code>\uff0c\u4fe1\u4efb\u89c2\u6d4b\u66f4\u591a\uff09\u3002 7. \u5e27\u95f4\u65f6\u95f4 <code>dt</code>\uff1a\u82e5\u89c6\u9891\u5e27\u7387\u4e0d\u7a33\u5b9a\uff0c<code>A</code> \u4e2d <code>dt</code> \u4e0d\u5e94\u56fa\u5b9a\u4e3a <code>1</code>\uff0c\u5e94\u4f20\u5165\u771f\u5b9e <code>dt</code> \u5e76\u628a <code>Q</code> \u6309 <code>dt</code> \u8c03\u6574\uff08\u4f8b\u5982 <code>Q</code> \u4f1a\u542b <code>dt^2</code>\u3001<code>dt^3</code> \u9879\uff09\u3002 8. \u5b9e\u73b0 <code>only_position</code> gating\uff1a\u5f53\u53ea\u4ee5 <code>x,y</code> \u505a gating \u65f6\uff0c\u6295\u5f71 <code>H_pos</code> = pick x,y dims\uff0c<code>S_pos</code> \u4e3a\u5bf9\u5e94\u5b50\u77e9\u9635\uff0cdegree-of-freedom = 2\u3002</p>"},{"location":"Algorithm/01-kalman/#610","title":"6.10. \u5c0f\u793a\u4f8b\uff1a\u6570\u503c\u5316\u8d70\u4e00\u904d\uff08\u4fbf\u4e8e\u7406\u89e3\uff09","text":"<p>\u5047\u8bbe\u8fdb\u5165 <code>initiate</code> \u7684\u68c0\u6d4b <code>measurement = [100, 200, 1.0, 50]</code>\uff08<code>h=50</code>\uff09\uff1a</p> <ul> <li>\u521d\u59cb\u5316 mean = <code>[100,200,1.0,50, 0,0,0,0]</code></li> <li> <p>\u521d\u59cb\u5316 std\uff1a</p> </li> <li> <p><code>std(0)=2*(1/20)*50 = 5</code> \u2192 var = 25</p> </li> <li><code>std(4)=10*(1/160)*50 = 3.125</code> \u2192 var \u2248 9.77</li> <li>\u5176\u4ed6\u6309\u6e90\u7801\uff08<code>1e-2</code>, <code>1e-5</code>\uff09</li> <li>\u5f97\u5230 <code>P = diag([25,25,1e-4,25, 9.77,9.77,1e-10,9.77])</code>\uff08\u7ea6\uff09   \u4e0b\u4e00\u5e27 predict\uff08\u5047\u8bbe mean \u7684\u901f\u5ea6\u73b0\u5728\u4ecd 0\uff09\uff1a</li> <li><code>mean^- = A * mean</code> \u2192 \u4f4d\u7f6e\u6ca1\u53d8\uff08\u901f\u5ea6 = 0\uff09\uff0c<code>P^- = A P A^T + Q</code>\uff0c<code>Q</code> \u6839\u636e <code>h</code> \u518d\u751f\u6210\u5e76\u52a0\u5165\u5230\u5bf9\u89d2\u4e0a\uff0c\u5bfc\u81f4 <code>P^-</code> \u7684\u4f4d\u7f6e\u4e0e\u901f\u5ea6\u65b9\u5dee\u7565\u589e\u52a0\u3002   \u5982\u679c\u68c0\u6d4b\u5668\u8fd4\u56de <code>z = [103, 199, 0.98, 49]</code>\uff1a</li> <li><code>project</code> \u5f97\u5230 <code>z_pred</code> \u4e0e <code>S</code></li> <li><code>kalman_gain K = P^- H^T S^{-1}</code></li> <li><code>innovation y = z - z_pred \u2248 [3, -1, -0.02, -1]</code></li> <li><code>x = x^- + K y</code> \u2192 \u5f97\u5230\u65b0\u7684\u4f4d\u7f6e/\u901f\u5ea6\u4f30\u8ba1\uff08\u878d\u5408\u4e86\u9884\u6d4b\u4e0e\u68c0\u6d4b\uff09</li> </ul>"},{"location":"C%2B%2B/00-stl/","title":"\u6a21\u677f","text":""},{"location":"C%2B%2B/00-stl/#1","title":"1 \u6a21\u677f\u6982\u5ff5\u53ca\u5206\u7c7b","text":"<p>\u6a21\u677f\u662f C++ \u63d0\u4f9b\u7684 \u6cdb\u578b\u7f16\u7a0b \u652f\u6301 \u6838\u5fc3\u76ee\u7684\uff1a \u4e0d\u5199\u91cd\u590d\u4ee3\u7801\uff0c\u8ba9\u7c7b\u578b\u505a\u53c2\u6570</p> <p>C++ \u91cc\u6a21\u677f\u5206\u4e24\u5927\u7c7b\uff1a 1\ufe0f\u20e3 \u51fd\u6570\u6a21\u677f 2\ufe0f\u20e3 \u7c7b\u6a21\u677f </p>"},{"location":"C%2B%2B/00-stl/#2","title":"2 \u51fd\u6570\u6a21\u677f","text":"<p>\u51fd\u6570\u6a21\u677f\u4f5c\u7528\uff1a</p> <p>\u5efa\u7acb\u4e00\u4e2a\u901a\u7528\u51fd\u6570\uff0c\u5176\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u5f62\u53c2\u7c7b\u578b\u53ef\u4ee5\u4e0d\u5177\u4f53\u5236\u5b9a\uff0c\u7528\u4e00\u4e2a\u865a\u62df\u7684\u7c7b\u578b\u6765\u4ee3\u8868</p> <p>\u8bed\u6cd5\uff1a </p> C++<pre><code>template&lt;typename T&gt;\n\u51fd\u6570\u58f0\u660e\u6216\u5b9a\u4e49\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li>template  ---  \u58f0\u660e\u521b\u5efa\u6a21\u677f </li> <li>typename  --- \u8868\u9762\u5176\u540e\u9762\u7684\u7b26\u53f7\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528class\u4ee3\u66ff</li> <li>T    ---   \u901a\u7528\u7684\u6570\u636e\u7c7b\u578b\uff0c\u540d\u79f0\u53ef\u4ee5\u66ff\u6362\uff0c\u901a\u5e38\u4e3a\u5927\u5199\u5b57\u6bcd</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>// \u4ea4\u6362\u6574\u5f62\u51fd\u6570\nvoid swapInt(int&amp; a, int&amp; b){\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\n// \u4ea4\u6362\u6d6e\u70b9\u578b\u51fd\u6570\nvoid swapDouble(double&amp; a, double&amp; b){\n    double temp = a;\n    a = b;\n    b = temp;\n}\n\n\n// \u5229\u7528\u6a21\u677f\u63d0\u4f9b\u901a\u7528\u7684\u6a21\u677f\u51fd\u6570\ntemplate&lt;typename T&gt;\nvoid mySwap(T&amp; a, T&amp; b){\n    T temp = a;\n    a = b;\n    b = temp;\n}\n\nvoid test01(){\n    int a = 10;\n    int b = 20;\n\n    swapInt(a, b);\n\n    // \u5229\u7528\u6a21\u677f\u5b9e\u73b0\u4ea4\u6362\n    // 1. \u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\n    mySwap(a, b);\n    // 2. \u663e\u793a\u6307\u5b9a\u7c7b\u578b\n    mySwap&lt;int&gt;(a, b);\n    cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; endl;\n    cout &lt;&lt; \"b = \" &lt;&lt; b &lt;&lt; endl;\n}\n\nint main(){\n    test01();\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u51fd\u6570\u6a21\u677f\u5229\u7528\u5173\u952e\u5b57 template</li> <li>\u4f7f\u7528\u51fd\u6570\u6a21\u677f\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\u3001\u663e\u793a\u6307\u5b9a\u7c7b\u578b</li> <li>\u6a21\u677f\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u590d\u7528\u6027\uff0c\u5c06\u7c7b\u578b\u53c2\u6570\u5316</li> </ul>"},{"location":"C%2B%2B/00-stl/#21","title":"2.1 \u51fd\u6570\u6a21\u677f\u6ce8\u610f\u4e8b\u9879","text":"<p>\u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li> <p>\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\uff0c\u5fc5\u987b\u63a8\u5bfc\u51fa\u4e00\u81f4\u7684\u6570\u636e\u7c7b\u578bT,\u624d\u53ef\u4ee5\u4f7f\u7528</p> </li> <li> <p>\u6a21\u677f\u5fc5\u987b\u8981\u786e\u5b9a\u51faT\u7684\u6570\u636e\u7c7b\u578b\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528</p> </li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u5229\u7528\u6a21\u677f\u63d0\u4f9b\u901a\u7528\u7684\u4ea4\u6362\u51fd\u6570\ntemplate&lt;class T&gt;\nvoid mySwap(T&amp; a, T&amp; b)\n{\n    T temp = a;\n    a = b;\n    b = temp;\n}\n\n\n// 1\u3001\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\uff0c\u5fc5\u987b\u63a8\u5bfc\u51fa\u4e00\u81f4\u7684\u6570\u636e\u7c7b\u578bT,\u624d\u53ef\u4ee5\u4f7f\u7528\nvoid test01()\n{\n    int a = 10;\n    int b = 20;\n    char c = 'c';\n\n    mySwap(a, b); // \u6b63\u786e\uff0c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u81f4\u7684T\n    //mySwap(a, c); // \u9519\u8bef\uff0c\u63a8\u5bfc\u4e0d\u51fa\u4e00\u81f4\u7684T\u7c7b\u578b\n}\n\n\n// 2\u3001\u6a21\u677f\u5fc5\u987b\u8981\u786e\u5b9a\u51faT\u7684\u6570\u636e\u7c7b\u578b\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\ntemplate&lt;class T&gt;\nvoid func()\n{\n    cout &lt;&lt; \"func \u8c03\u7528\" &lt;&lt; endl;\n}\n\nvoid test02()\n{\n    //func(); //\u9519\u8bef\uff0c\u6a21\u677f\u4e0d\u80fd\u72ec\u7acb\u4f7f\u7528\uff0c\u5fc5\u987b\u786e\u5b9a\u51faT\u7684\u7c7b\u578b\n    func&lt;int&gt;(); //\u5229\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\uff0c\u7ed9T\u4e00\u4e2a\u7c7b\u578b\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u8be5\u6a21\u677f\n}\n\nint main() {\n\n    test01();\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u4f7f\u7528\u6a21\u677f\u65f6\u5fc5\u987b\u786e\u5b9a\u51fa\u901a\u7528\u6570\u636e\u7c7b\u578bT\uff0c\u5e76\u4e14\u80fd\u591f\u63a8\u5bfc\u51fa\u4e00\u81f4\u7684\u7c7b\u578b</li> </ul>"},{"location":"C%2B%2B/00-stl/#22","title":"2.2 \u51fd\u6570\u6a21\u677f\u6848\u4f8b","text":"<p>\u6848\u4f8b\u63cf\u8ff0\uff1a</p> <ul> <li>\u5229\u7528\u51fd\u6570\u6a21\u677f\u5c01\u88c5\u4e00\u4e2a\u6392\u5e8f\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5bf9\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f</li> <li>\u6392\u5e8f\u89c4\u5219\u4ece\u5927\u5230\u5c0f\uff0c\u6392\u5e8f\u7b97\u6cd5\u4e3a\u9009\u62e9\u6392\u5e8f</li> <li>\u5206\u522b\u5229\u7528char\u6570\u7ec4\u548cint\u6570\u7ec4\u8fdb\u884c\u6d4b\u8bd5</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u4ea4\u6362\u7684\u51fd\u6570\u6a21\u677f\ntemplate&lt;typename T&gt;\nvoid mySwap(T &amp;a, T&amp;b)\n{\n    T temp = a;\n    a = b;\n    b = temp;\n}\n\n\ntemplate&lt;class T&gt; // \u4e5f\u53ef\u4ee5\u66ff\u6362\u6210typename\n//\u5229\u7528\u9009\u62e9\u6392\u5e8f\uff0c\u8fdb\u884c\u5bf9\u6570\u7ec4\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\nvoid mySort(T arr[], int len)\n{\n    for (int i = 0; i &lt; len; i++)\n    {\n        int max = i; //\u6700\u5927\u6570\u7684\u4e0b\u6807\n        for (int j = i + 1; j &lt; len; j++)\n        {\n            if (arr[max] &lt; arr[j])\n            {\n                max = j;\n            }\n        }\n        if (max != i) //\u5982\u679c\u6700\u5927\u6570\u7684\u4e0b\u6807\u4e0d\u662fi\uff0c\u4ea4\u6362\u4e24\u8005\n        {\n            mySwap(arr[max], arr[i]);\n        }\n    }\n}\ntemplate&lt;typename T&gt;\nvoid printArray(T arr[], int len) {\n\n    for (int i = 0; i &lt; len; i++) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\nvoid test01()\n{\n    //\u6d4b\u8bd5char\u6570\u7ec4\n    char charArr[] = \"bdcfeagh\";\n    int num = sizeof(charArr) / sizeof(char);\n    mySort(charArr, num);\n    printArray(charArr, num);\n}\n\nvoid test02()\n{\n    //\u6d4b\u8bd5int\u6570\u7ec4\n    int intArr[] = { 7, 5, 8, 1, 3, 9, 2, 4, 6 };\n    int num = sizeof(intArr) / sizeof(int);\n    mySort(intArr, num);\n    printArray(intArr, num);\n}\n\nint main() {\n\n    test01();\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u6a21\u677f\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u590d\u7528\uff0c\u9700\u8981\u719f\u7ec3\u638c\u63e1</p>"},{"location":"C%2B%2B/00-stl/#23","title":"2.3 \u51fd\u6570\u6a21\u677f\u4e0e\u666e\u901a\u51fd\u6570","text":""},{"location":"C%2B%2B/00-stl/#231","title":"2.3.1 \u533a\u522b","text":"<ul> <li>\u666e\u901a\u51fd\u6570\u8c03\u7528\u65f6\u53ef\u4ee5\u53d1\u751f\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff09</li> <li>\u51fd\u6570\u6a21\u677f\u8c03\u7528\u65f6\uff0c\u5982\u679c\u5229\u7528\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\uff0c\u4e0d\u4f1a\u53d1\u751f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362</li> <li>\u5982\u679c\u5229\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u53d1\u751f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u666e\u901a\u51fd\u6570\nint myAdd01(int a, int b)\n{\n    return a + b;\n}\n\n//\u51fd\u6570\u6a21\u677f\ntemplate&lt;class T&gt;\nT myAdd02(T a, T b)  \n{\n    return a + b;\n}\n\n//\u4f7f\u7528\u51fd\u6570\u6a21\u677f\u65f6\uff0c\u5982\u679c\u7528\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\uff0c\u4e0d\u4f1a\u53d1\u751f\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362,\u5373\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\nvoid test01()\n{\n    int a = 10;\n    int b = 20;\n    char c = 'c';\n\n    cout &lt;&lt; myAdd01(a, c) &lt;&lt; endl; //\u6b63\u786e\uff0c\u5c06char\u7c7b\u578b\u7684'c'\u9690\u5f0f\u8f6c\u6362\u4e3aint\u7c7b\u578b  'c' \u5bf9\u5e94 ASCII\u7801 99\n\n    //myAdd02(a, c); // \u62a5\u9519\uff0c\u4f7f\u7528\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\u65f6\uff0c\u4e0d\u4f1a\u53d1\u751f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\n\n    myAdd02&lt;int&gt;(a, c); //\u6b63\u786e\uff0c\u5982\u679c\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\uff0c\u53ef\u4ee5\u53d1\u751f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u5efa\u8bae\u4f7f\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\uff0c\u8c03\u7528\u51fd\u6570\u6a21\u677f\uff0c\u56e0\u4e3a\u53ef\u4ee5\u81ea\u5df1\u786e\u5b9a\u901a\u7528\u7c7b\u578bT</p>"},{"location":"C%2B%2B/00-stl/#232","title":"2.3.2 \u8c03\u7528\u89c4\u5219","text":"<p>\u8c03\u7528\u89c4\u5219\u5982\u4e0b\uff1a</p> <ol> <li>\u5982\u679c\u51fd\u6570\u6a21\u677f\u548c\u666e\u901a\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f18\u5148\u8c03\u7528\u666e\u901a\u51fd\u6570</li> <li>\u53ef\u4ee5\u901a\u8fc7\u7a7a\u6a21\u677f\u53c2\u6570\u5217\u8868\u6765\u5f3a\u5236\u8c03\u7528\u51fd\u6570\u6a21\u677f</li> <li>\u51fd\u6570\u6a21\u677f\u4e5f\u53ef\u4ee5\u53d1\u751f\u91cd\u8f7d</li> <li>\u5982\u679c\u51fd\u6570\u6a21\u677f\u53ef\u4ee5\u4ea7\u751f\u66f4\u597d\u7684\u5339\u914d,\u4f18\u5148\u8c03\u7528\u51fd\u6570\u6a21\u677f</li> </ol> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u666e\u901a\u51fd\u6570\u4e0e\u51fd\u6570\u6a21\u677f\u8c03\u7528\u89c4\u5219\nvoid myPrint(int a, int b)\n{\n    cout &lt;&lt; \"\u8c03\u7528\u7684\u666e\u901a\u51fd\u6570\" &lt;&lt; endl;\n}\n\ntemplate&lt;typename T&gt;\nvoid myPrint(T a, T b) \n{ \n    cout &lt;&lt; \"\u8c03\u7528\u7684\u6a21\u677f\" &lt;&lt; endl;\n}\n\ntemplate&lt;typename T&gt;\nvoid myPrint(T a, T b, T c) \n{ \n    cout &lt;&lt; \"\u8c03\u7528\u91cd\u8f7d\u7684\u6a21\u677f\" &lt;&lt; endl; \n}\n\nvoid test01()\n{\n    //1\u3001\u5982\u679c\u51fd\u6570\u6a21\u677f\u548c\u666e\u901a\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f18\u5148\u8c03\u7528\u666e\u901a\u51fd\u6570\n    // \u6ce8\u610f \u5982\u679c\u544a\u8bc9\u7f16\u8bd1\u5668  \u666e\u901a\u51fd\u6570\u662f\u6709\u7684\uff0c\u4f46\u53ea\u662f\u58f0\u660e\u6ca1\u6709\u5b9e\u73b0\uff0c\u6216\u8005\u4e0d\u5728\u5f53\u524d\u6587\u4ef6\u5185\u5b9e\u73b0\uff0c\u5c31\u4f1a\u62a5\u9519\u627e\u4e0d\u5230\n    int a = 10;\n    int b = 20;\n    myPrint(a, b); //\u8c03\u7528\u666e\u901a\u51fd\u6570\n\n    //2\u3001\u53ef\u4ee5\u901a\u8fc7\u7a7a\u6a21\u677f\u53c2\u6570\u5217\u8868\u6765\u5f3a\u5236\u8c03\u7528\u51fd\u6570\u6a21\u677f\n    myPrint&lt;&gt;(a, b); //\u8c03\u7528\u51fd\u6570\u6a21\u677f\n\n    //3\u3001\u51fd\u6570\u6a21\u677f\u4e5f\u53ef\u4ee5\u53d1\u751f\u91cd\u8f7d\n    int c = 30;\n    myPrint(a, b, c); //\u8c03\u7528\u91cd\u8f7d\u7684\u51fd\u6570\u6a21\u677f\n\n    //4\u3001 \u5982\u679c\u51fd\u6570\u6a21\u677f\u53ef\u4ee5\u4ea7\u751f\u66f4\u597d\u7684\u5339\u914d,\u4f18\u5148\u8c03\u7528\u51fd\u6570\u6a21\u677f\n    char c1 = 'a';\n    char c2 = 'b';\n    myPrint(c1, c2); //\u8c03\u7528\u51fd\u6570\u6a21\u677f\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u65e2\u7136\u63d0\u4f9b\u4e86\u51fd\u6570\u6a21\u677f\uff0c\u6700\u597d\u5c31\u4e0d\u8981\u63d0\u4f9b\u666e\u901a\u51fd\u6570\uff0c\u5426\u5219\u5bb9\u6613\u51fa\u73b0\u4e8c\u4e49\u6027</p>"},{"location":"C%2B%2B/00-stl/#24","title":"2.4 \u51fd\u6570\u6a21\u677f\u5c40\u9650\u6027","text":"<p>\u4f8b\u5982\uff1a</p> C++<pre><code>    template&lt;class T&gt;\n    void f(T a, T b)\n    { \n        a = b;\n    }\n</code></pre> <p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u63d0\u4f9b\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u5982\u679c\u4f20\u5165\u7684a\u548cb\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c31\u65e0\u6cd5\u5b9e\u73b0\u4e86</p> <p>\u518d\u4f8b\u5982\uff1a</p> C++<pre><code>    template&lt;class T&gt;\n    void f(T a, T b)\n    { \n        if(a &gt; b) { ... }\n    }\n</code></pre> <p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u5982\u679cT\u7684\u6570\u636e\u7c7b\u578b\u4f20\u5165\u7684\u662f\u50cfPerson\u8fd9\u6837\u7684\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c</p> <p>\u56e0\u6b64C++\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\uff0c\u63d0\u4f9b\u6a21\u677f\u7684\u91cd\u8f7d\uff0c\u53ef\u4ee5\u4e3a\u8fd9\u4e9b\u7279\u5b9a\u7684\u7c7b\u578b\u63d0\u4f9b\u5177\u4f53\u5316\u7684\u6a21\u677f</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\n#include &lt;string&gt;\n\nclass Person\n{\npublic:\n    Person(string name, int age)\n    {\n        this-&gt;m_Name = name;\n        this-&gt;m_Age = age;\n    }\n    string m_Name;\n    int m_Age;\n};\n\n//\u666e\u901a\u51fd\u6570\u6a21\u677f\ntemplate&lt;class T&gt;\nbool myCompare(T&amp; a, T&amp; b)\n{\n    if (a == b)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}\n\n\n//\u5177\u4f53\u5316\uff0c\u663e\u793a\u5177\u4f53\u5316\u7684\u539f\u578b\u548c\u5b9a\u610f\u601d\u4ee5template&lt;&gt;\u5f00\u5934\uff0c\u5e76\u901a\u8fc7\u540d\u79f0\u6765\u6307\u51fa\u7c7b\u578b\n//\u5177\u4f53\u5316\u4f18\u5148\u4e8e\u5e38\u89c4\u6a21\u677f\ntemplate&lt;&gt; bool myCompare(Person &amp;p1, Person &amp;p2)\n{\n    if ( p1.m_Name  == p2.m_Name &amp;&amp; p1.m_Age == p2.m_Age)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}\n\nvoid test01()\n{\n    int a = 10;\n    int b = 20;\n    //\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u901a\u7528\u7684\u51fd\u6570\u6a21\u677f\n    bool ret = myCompare(a, b);\n    if (ret)\n    {\n        cout &lt;&lt; \"a == b \" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"a != b \" &lt;&lt; endl;\n    }\n}\n\nvoid test02()\n{\n    Person p1(\"Tom\", 10);\n    Person p2(\"Tom\", 10);\n    //\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u4e0d\u4f1a\u8c03\u7528\u666e\u901a\u7684\u51fd\u6570\u6a21\u677f\n    //\u53ef\u4ee5\u521b\u5efa\u5177\u4f53\u5316\u7684Person\u6570\u636e\u7c7b\u578b\u7684\u6a21\u677f\uff0c\u7528\u4e8e\u7279\u6b8a\u5904\u7406\u8fd9\u4e2a\u7c7b\u578b\n    bool ret = myCompare(p1, p2);\n    if (ret)\n    {\n        cout &lt;&lt; \"p1 == p2 \" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"p1 != p2 \" &lt;&lt; endl;\n    }\n}\n\nint main() {\n\n    test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/00-stl/#3","title":"3 \u7c7b\u6a21\u677f","text":""},{"location":"C%2B%2B/00-stl/#31","title":"3.1 \u7c7b\u6a21\u677f\u8bed\u6cd5","text":"<p>\u7c7b\u6a21\u677f\u4f5c\u7528\uff1a</p> <ul> <li>\u5efa\u7acb\u4e00\u4e2a\u901a\u7528\u7c7b\uff0c\u7c7b\u4e2d\u7684\u6210\u5458 \u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4e0d\u5177\u4f53\u5236\u5b9a\uff0c\u7528\u4e00\u4e2a\u865a\u62df\u7684\u7c7b\u578b\u6765\u4ee3\u8868\u3002</li> </ul> <p>\u8bed\u6cd5\uff1a </p> C++<pre><code>template&lt;typename T&gt;\n\u7c7b\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li>template  ---  \u58f0\u660e\u521b\u5efa\u6a21\u677f</li> <li>typename  --- \u8868\u9762\u5176\u540e\u9762\u7684\u7b26\u53f7\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528class\u4ee3\u66ff</li> <li>T    ---   \u901a\u7528\u7684\u6570\u636e\u7c7b\u578b\uff0c\u540d\u79f0\u53ef\u4ee5\u66ff\u6362\uff0c\u901a\u5e38\u4e3a\u5927\u5199\u5b57\u6bcd</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;string&gt;\n//\u7c7b\u6a21\u677f\ntemplate&lt;class NameType, class AgeType&gt; \nclass Person\n{\npublic:\n    Person(NameType name, AgeType age)\n    {\n        this-&gt;mName = name;\n        this-&gt;mAge = age;\n    }\n    void showPerson()\n    {\n        cout &lt;&lt; \"name: \" &lt;&lt; this-&gt;mName &lt;&lt; \" age: \" &lt;&lt; this-&gt;mAge &lt;&lt; endl;\n    }\npublic:\n    NameType mName;\n    AgeType mAge;\n};\n\nvoid test01()\n{\n    // \u6307\u5b9aNameType \u4e3astring\u7c7b\u578b\uff0cAgeType \u4e3a int\u7c7b\u578b\n    Person&lt;string, int&gt;P1(\"\u5b59\u609f\u7a7a\", 999);\n    P1.showPerson();\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> C++<pre><code>template &lt;typename T&gt;\nclass Box {\nprivate:\n    T value;\npublic:\n    Box(T v) : value(v) {}\n    T get() const { return value; }\n};\n\nBox&lt;int&gt; b1(123);\nBox&lt;std::string&gt; b2(\"hello\");\n</code></pre> <p>\u603b\u7ed3\uff1a\u7c7b\u6a21\u677f\u548c\u51fd\u6570\u6a21\u677f\u8bed\u6cd5\u76f8\u4f3c\uff0c\u5728\u58f0\u660e\u6a21\u677ftemplate\u540e\u9762\u52a0\u7c7b\uff0c\u6b64\u7c7b\u79f0\u4e3a\u7c7b\u6a21\u677f</p>"},{"location":"C%2B%2B/00-stl/#32","title":"3.2 \u7c7b\u6a21\u677f\u51fd\u6570\u6a21\u677f\u533a\u522b","text":"<p>\u7c7b\u6a21\u677f\u4e0e\u51fd\u6570\u6a21\u677f\u533a\u522b\u4e3b\u8981\u6709\u4e24\u70b9\uff1a</p> <ol> <li>\u7c7b\u6a21\u677f\u6ca1\u6709\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\u7684\u4f7f\u7528\u65b9\u5f0f</li> <li>\u7c7b\u6a21\u677f\u5728\u6a21\u677f\u53c2\u6570\u5217\u8868\u4e2d\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570</li> </ol> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;string&gt;\n//\u7c7b\u6a21\u677f\ntemplate&lt;class NameType, class AgeType = int&gt; \nclass Person\n{\npublic:\n    Person(NameType name, AgeType age)\n    {\n        this-&gt;mName = name;\n        this-&gt;mAge = age;\n    }\n    void showPerson()\n    {\n        cout &lt;&lt; \"name: \" &lt;&lt; this-&gt;mName &lt;&lt; \" age: \" &lt;&lt; this-&gt;mAge &lt;&lt; endl;\n    }\npublic:\n    NameType mName;\n    AgeType mAge;\n};\n\n//1\u3001\u7c7b\u6a21\u677f\u6ca1\u6709\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\u7684\u4f7f\u7528\u65b9\u5f0f\nvoid test01()\n{\n    // Person p(\"\u5b59\u609f\u7a7a\", 1000); // \u9519\u8bef \u7c7b\u6a21\u677f\u4f7f\u7528\u65f6\u5019\uff0c\u4e0d\u53ef\u4ee5\u7528\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\n    Person &lt;string ,int&gt;p(\"\u5b59\u609f\u7a7a\", 1000); //\u5fc5\u987b\u4f7f\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u7c7b\u6a21\u677f\n    p.showPerson();\n}\n\n//2\u3001\u7c7b\u6a21\u677f\u5728\u6a21\u677f\u53c2\u6570\u5217\u8868\u4e2d\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570\nvoid test02()\n{\n    Person &lt;string&gt; p(\"\u732a\u516b\u6212\", 999); //\u7c7b\u6a21\u677f\u4e2d\u7684\u6a21\u677f\u53c2\u6570\u5217\u8868 \u53ef\u4ee5\u6307\u5b9a\u9ed8\u8ba4\u53c2\u6570\n    p.showPerson();\n}\n\nint main() {\n\n    test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u7c7b\u6a21\u677f\u4f7f\u7528\u53ea\u80fd\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u65b9\u5f0f</li> <li>\u7c7b\u6a21\u677f\u4e2d\u7684\u6a21\u677f\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570</li> </ul>"},{"location":"C%2B%2B/00-stl/#33","title":"3.3 \u7c7b\u6a21\u677f\u6210\u5458\u51fd\u6570\u521b\u5efa\u65f6\u673a","text":"<p>\u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u548c\u666e\u901a\u7c7b\u4e2d\u6210\u5458\u51fd\u6570\u521b\u5efa\u65f6\u673a\u662f\u6709\u533a\u522b\u7684\uff1a</p> <ul> <li>\u666e\u901a\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u4e00\u5f00\u59cb\u5c31\u53ef\u4ee5\u521b\u5efa</li> <li>\u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\u5728\u8c03\u7528\u65f6\u624d\u521b\u5efa</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Person1\n{\npublic:\n    void showPerson1()\n    {\n        cout &lt;&lt; \"Person1 show\" &lt;&lt; endl;\n    }\n};\n\nclass Person2\n{\npublic:\n    void showPerson2()\n    {\n        cout &lt;&lt; \"Person2 show\" &lt;&lt; endl;\n    }\n};\n\ntemplate&lt;class T&gt;\nclass MyClass\n{\npublic:\n    T obj;\n\n    //\u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\uff0c\u5e76\u4e0d\u662f\u4e00\u5f00\u59cb\u5c31\u521b\u5efa\u7684\uff0c\u800c\u662f\u5728\u6a21\u677f\u8c03\u7528\u65f6\u518d\u751f\u6210\n\n    void fun1() { obj.showPerson1(); }\n    void fun2() { obj.showPerson2(); }\n\n};\n\nvoid test01()\n{\n    MyClass&lt;Person1&gt; m;\n\n    m.fun1();\n\n    //m.fun2();//\u7f16\u8bd1\u4f1a\u51fa\u9519\uff0c\u8bf4\u660e\u51fd\u6570\u8c03\u7528\u624d\u4f1a\u53bb\u521b\u5efa\u6210\u5458\u51fd\u6570\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\u5e76\u4e0d\u662f\u4e00\u5f00\u59cb\u5c31\u521b\u5efa\u7684\uff0c\u5728\u8c03\u7528\u65f6\u624d\u53bb\u521b\u5efa</p>"},{"location":"C%2B%2B/00-stl/#34","title":"3.4 \u7c7b\u6a21\u677f\u5bf9\u8c61\u505a\u51fd\u6570\u53c2\u6570","text":"<p>\u4e00\u5171\u6709\u4e09\u79cd\u4f20\u5165\u65b9\u5f0f\uff1a</p> <ol> <li>\u6307\u5b9a\u4f20\u5165\u7684\u7c7b\u578b   --- \u76f4\u63a5\u663e\u793a\u5bf9\u8c61\u7684\u6570\u636e\u7c7b\u578b</li> <li>\u53c2\u6570\u6a21\u677f\u5316           --- \u5c06\u5bf9\u8c61\u4e2d\u7684\u53c2\u6570\u53d8\u4e3a\u6a21\u677f\u8fdb\u884c\u4f20\u9012</li> <li>\u6574\u4e2a\u7c7b\u6a21\u677f\u5316       --- \u5c06\u8fd9\u4e2a\u5bf9\u8c61\u7c7b\u578b \u6a21\u677f\u5316\u8fdb\u884c\u4f20\u9012</li> </ol> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;string&gt;\n//\u7c7b\u6a21\u677f\ntemplate&lt;class NameType, class AgeType = int&gt; \nclass Person\n{\npublic:\n    Person(NameType name, AgeType age)\n    {\n        this-&gt;mName = name;\n        this-&gt;mAge = age;\n    }\n    void showPerson()\n    {\n        cout &lt;&lt; \"name: \" &lt;&lt; this-&gt;mName &lt;&lt; \" age: \" &lt;&lt; this-&gt;mAge &lt;&lt; endl;\n    }\npublic:\n    NameType mName;\n    AgeType mAge;\n};\n\n//1\u3001\u6307\u5b9a\u4f20\u5165\u7684\u7c7b\u578b\nvoid printPerson1(Person&lt;string, int&gt; &amp;p) \n{\n    p.showPerson();\n}\nvoid test01()\n{\n    Person &lt;string, int &gt;p(\"\u5b59\u609f\u7a7a\", 100);\n    printPerson1(p);\n}\n\n//2\u3001\u53c2\u6570\u6a21\u677f\u5316\ntemplate &lt;class T1, class T2&gt;\nvoid printPerson2(Person&lt;T1, T2&gt;&amp;p)\n{\n    p.showPerson();\n    cout &lt;&lt; \"T1\u7684\u7c7b\u578b\u4e3a\uff1a \" &lt;&lt; typeid(T1).name() &lt;&lt; endl;\n    cout &lt;&lt; \"T2\u7684\u7c7b\u578b\u4e3a\uff1a \" &lt;&lt; typeid(T2).name() &lt;&lt; endl;\n}\nvoid test02()\n{\n    Person &lt;string, int &gt;p(\"\u732a\u516b\u6212\", 90);\n    printPerson2(p);\n}\n\n//3\u3001\u6574\u4e2a\u7c7b\u6a21\u677f\u5316\ntemplate&lt;class T&gt;\nvoid printPerson3(T &amp; p)\n{\n    cout &lt;&lt; \"T\u7684\u7c7b\u578b\u4e3a\uff1a \" &lt;&lt; typeid(T).name() &lt;&lt; endl;\n    p.showPerson();\n\n}\nvoid test03()\n{\n    Person &lt;string, int &gt;p(\"\u5510\u50e7\", 30);\n    printPerson3(p);\n}\n\nint main() {\n\n    test01();\n    test02();\n    test03();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u901a\u8fc7\u7c7b\u6a21\u677f\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6709\u4e09\u79cd\u65b9\u5f0f\u5411\u51fd\u6570\u4e2d\u8fdb\u884c\u4f20\u53c2</li> <li>\u4f7f\u7528\u6bd4\u8f83\u5e7f\u6cdb\u662f\u7b2c\u4e00\u79cd\uff1a\u6307\u5b9a\u4f20\u5165\u7684\u7c7b\u578b</li> </ul>"},{"location":"C%2B%2B/00-stl/#35","title":"3.5 \u7c7b\u6a21\u677f\u4e0e\u7ee7\u627f","text":"<p>\u5f53\u7c7b\u6a21\u677f\u78b0\u5230\u7ee7\u627f\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u51e0\u70b9\uff1a</p> <ul> <li>\u5f53\u5b50\u7c7b\u7ee7\u627f\u7684\u7236\u7c7b\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\u65f6\uff0c\u5b50\u7c7b\u5728\u58f0\u660e\u7684\u65f6\u5019\uff0c\u8981\u6307\u5b9a\u51fa\u7236\u7c7b\u4e2dT\u7684\u7c7b\u578b</li> <li>\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u7ed9\u5b50\u7c7b\u5206\u914d\u5185\u5b58</li> <li>\u5982\u679c\u60f3\u7075\u6d3b\u6307\u5b9a\u51fa\u7236\u7c7b\u4e2dT\u7684\u7c7b\u578b\uff0c\u5b50\u7c7b\u4e5f\u9700\u53d8\u4e3a\u7c7b\u6a21\u677f</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>template&lt;class T&gt;\nclass Base\n{\n    T m;\n};\n\n//class Son:public Base  //\u9519\u8bef\uff0cc++\u7f16\u8bd1\u9700\u8981\u7ed9\u5b50\u7c7b\u5206\u914d\u5185\u5b58\uff0c\u5fc5\u987b\u77e5\u9053\u7236\u7c7b\u4e2dT\u7684\u7c7b\u578b\u624d\u53ef\u4ee5\u5411\u4e0b\u7ee7\u627f\nclass Son :public Base&lt;int&gt; //\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u7c7b\u578b\n{\n};\nvoid test01()\n{\n    Son c;\n}\n\n//\u7c7b\u6a21\u677f\u7ee7\u627f\u7c7b\u6a21\u677f ,\u53ef\u4ee5\u7528T2\u6307\u5b9a\u7236\u7c7b\u4e2d\u7684T\u7c7b\u578b\ntemplate&lt;class T1, class T2&gt;\nclass Son2 :public Base&lt;T2&gt;\n{\npublic:\n    Son2()\n    {\n        cout &lt;&lt; typeid(T1).name() &lt;&lt; endl;\n        cout &lt;&lt; typeid(T2).name() &lt;&lt; endl;\n    }\n};\n\nvoid test02()\n{\n    Son2&lt;int, char&gt; child1;\n}\n\n\nint main() {\n\n    test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u5982\u679c\u7236\u7c7b\u662f\u7c7b\u6a21\u677f\uff0c\u5b50\u7c7b\u9700\u8981\u6307\u5b9a\u51fa\u7236\u7c7b\u4e2dT\u7684\u6570\u636e\u7c7b\u578b</p>"},{"location":"C%2B%2B/00-stl/#36","title":"3.6 \u7c7b\u6a21\u677f\u6210\u5458\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0","text":"<p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;string&gt;\n\n//\u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0\ntemplate&lt;class T1, class T2&gt;\nclass Person {\npublic:\n    //\u6210\u5458\u51fd\u6570\u7c7b\u5185\u58f0\u660e\n    Person(T1 name, T2 age);\n    void showPerson();\n\npublic:\n    T1 m_Name;\n    T2 m_Age;\n};\n\n//\u6784\u9020\u51fd\u6570 \u7c7b\u5916\u5b9e\u73b0\ntemplate&lt;class T1, class T2&gt;\nPerson&lt;T1, T2&gt;::Person(T1 name, T2 age) {\n    this-&gt;m_Name = name;\n    this-&gt;m_Age = age;\n}\n\n//\u6210\u5458\u51fd\u6570 \u7c7b\u5916\u5b9e\u73b0\ntemplate&lt;class T1, class T2&gt;\nvoid Person&lt;T1, T2&gt;::showPerson() {\n    cout &lt;&lt; \"\u59d3\u540d: \" &lt;&lt; this-&gt;m_Name &lt;&lt; \" \u5e74\u9f84:\" &lt;&lt; this-&gt;m_Age &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    Person&lt;string, int&gt; p(\"Tom\", 20);\n    p.showPerson();\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0\u65f6\uff0c\u9700\u8981\u52a0\u4e0a\u6a21\u677f\u53c2\u6570\u5217\u8868</p>"},{"location":"C%2B%2B/00-stl/#37","title":"3.7 \u7c7b\u6a21\u677f\u5206\u6587\u4ef6\u7f16\u5199","text":"<p>\u95ee\u9898\uff1a</p> <ul> <li>\u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u521b\u5efa\u65f6\u673a\u662f\u5728\u8c03\u7528\u9636\u6bb5\uff0c\u5bfc\u81f4\u5206\u6587\u4ef6\u7f16\u5199\u65f6\u94fe\u63a5\u4e0d\u5230</li> </ul> <p>\u89e3\u51b3\uff1a</p> <ul> <li>\u89e3\u51b3\u65b9\u5f0f1\uff1a\u76f4\u63a5\u5305\u542b.cpp\u6e90\u6587\u4ef6</li> <li>\u89e3\u51b3\u65b9\u5f0f2\uff1a\u5c06\u58f0\u660e\u548c\u5b9e\u73b0\u5199\u5230\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5e76\u66f4\u6539\u540e\u7f00\u540d\u4e3a.hpp\uff0chpp\u662f\u7ea6\u5b9a\u7684\u540d\u79f0\uff0c\u5e76\u4e0d\u662f\u5f3a\u5236</li> </ul> <p>\u793a\u4f8b\uff1a</p> <p>person.hpp\u4e2d\u4ee3\u7801\uff1a</p> C++<pre><code>#pragma once\n#include &lt;iostream&gt;\nusing namespace std;\n#include &lt;string&gt;\n\ntemplate&lt;class T1, class T2&gt;\nclass Person {\npublic:\n    Person(T1 name, T2 age);\n    void showPerson();\npublic:\n    T1 m_Name;\n    T2 m_Age;\n};\n\n//\u6784\u9020\u51fd\u6570 \u7c7b\u5916\u5b9e\u73b0\ntemplate&lt;class T1, class T2&gt;\nPerson&lt;T1, T2&gt;::Person(T1 name, T2 age) {\n    this-&gt;m_Name = name;\n    this-&gt;m_Age = age;\n}\n\n//\u6210\u5458\u51fd\u6570 \u7c7b\u5916\u5b9e\u73b0\ntemplate&lt;class T1, class T2&gt;\nvoid Person&lt;T1, T2&gt;::showPerson() {\n    cout &lt;&lt; \"\u59d3\u540d: \" &lt;&lt; this-&gt;m_Name &lt;&lt; \" \u5e74\u9f84:\" &lt;&lt; this-&gt;m_Age &lt;&lt; endl;\n}\n</code></pre> <p>\u7c7b\u6a21\u677f\u5206\u6587\u4ef6\u7f16\u5199.cpp\u4e2d\u4ee3\u7801</p> C++<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\n//#include \"person.h\"\n#include \"person.cpp\" //\u89e3\u51b3\u65b9\u5f0f1\uff0c\u5305\u542bcpp\u6e90\u6587\u4ef6\n\n//\u89e3\u51b3\u65b9\u5f0f2\uff0c\u5c06\u58f0\u660e\u548c\u5b9e\u73b0\u5199\u5230\u4e00\u8d77\uff0c\u6587\u4ef6\u540e\u7f00\u540d\u6539\u4e3a.hpp\n#include \"person.hpp\"\nvoid test01()\n{\n    Person&lt;string, int&gt; p(\"Tom\", 10);\n    p.showPerson();\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u4e3b\u6d41\u7684\u89e3\u51b3\u65b9\u5f0f\u662f\u7b2c\u4e8c\u79cd\uff0c\u5c06\u7c7b\u6a21\u677f\u6210\u5458\u51fd\u6570\u5199\u5230\u4e00\u8d77\uff0c\u5e76\u5c06\u540e\u7f00\u540d\u6539\u4e3a.hpp</p>"},{"location":"C%2B%2B/00-stl/#38","title":"3.8 \u7c7b\u6a21\u677f\u4e0e\u53cb\u5143","text":"<p>\u5168\u5c40\u51fd\u6570\u7c7b\u5185\u5b9e\u73b0 - \u76f4\u63a5\u5728\u7c7b\u5185\u58f0\u660e\u53cb\u5143\u5373\u53ef</p> <p>\u5168\u5c40\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0 - \u9700\u8981\u63d0\u524d\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u5168\u5c40\u51fd\u6570\u7684\u5b58\u5728</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;string&gt;\n\n//2\u3001\u5168\u5c40\u51fd\u6570\u914d\u5408\u53cb\u5143  \u7c7b\u5916\u5b9e\u73b0 - \u5148\u505a\u51fd\u6570\u6a21\u677f\u58f0\u660e\uff0c\u4e0b\u65b9\u5728\u505a\u51fd\u6570\u6a21\u677f\u5b9a\u4e49\uff0c\u5728\u505a\u53cb\u5143\ntemplate&lt;class T1, class T2&gt; class Person;\n\n//\u5982\u679c\u58f0\u660e\u4e86\u51fd\u6570\u6a21\u677f\uff0c\u53ef\u4ee5\u5c06\u5b9e\u73b0\u5199\u5230\u540e\u9762\uff0c\u5426\u5219\u9700\u8981\u5c06\u5b9e\u73b0\u4f53\u5199\u5230\u7c7b\u7684\u524d\u9762\u8ba9\u7f16\u8bd1\u5668\u63d0\u524d\u770b\u5230\n//template&lt;class T1, class T2&gt; void printPerson2(Person&lt;T1, T2&gt; &amp; p); \n\ntemplate&lt;class T1, class T2&gt;\nvoid printPerson2(Person&lt;T1, T2&gt; &amp; p)\n{\n    cout &lt;&lt; \"\u7c7b\u5916\u5b9e\u73b0 ---- \u59d3\u540d\uff1a \" &lt;&lt; p.m_Name &lt;&lt; \" \u5e74\u9f84\uff1a\" &lt;&lt; p.m_Age &lt;&lt; endl;\n}\n\ntemplate&lt;class T1, class T2&gt;\nclass Person\n{\n    //1\u3001\u5168\u5c40\u51fd\u6570\u914d\u5408\u53cb\u5143   \u7c7b\u5185\u5b9e\u73b0\n    friend void printPerson(Person&lt;T1, T2&gt; &amp; p)\n    {\n        cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; p.m_Name &lt;&lt; \" \u5e74\u9f84\uff1a\" &lt;&lt; p.m_Age &lt;&lt; endl;\n    }\n\n\n    //\u5168\u5c40\u51fd\u6570\u914d\u5408\u53cb\u5143  \u7c7b\u5916\u5b9e\u73b0\n    friend void printPerson2&lt;&gt;(Person&lt;T1, T2&gt; &amp; p);\n\npublic:\n\n    Person(T1 name, T2 age)\n    {\n        this-&gt;m_Name = name;\n        this-&gt;m_Age = age;\n    }\n\n\nprivate:\n    T1 m_Name;\n    T2 m_Age;\n\n};\n\n//1\u3001\u5168\u5c40\u51fd\u6570\u5728\u7c7b\u5185\u5b9e\u73b0\nvoid test01()\n{\n    Person &lt;string, int &gt;p(\"Tom\", 20);\n    printPerson(p);\n}\n\n\n//2\u3001\u5168\u5c40\u51fd\u6570\u5728\u7c7b\u5916\u5b9e\u73b0\nvoid test02()\n{\n    Person &lt;string, int &gt;p(\"Jerry\", 30);\n    printPerson2(p);\n}\n\nint main() {\n\n    //test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u5efa\u8bae\u5168\u5c40\u51fd\u6570\u505a\u7c7b\u5185\u5b9e\u73b0\uff0c\u7528\u6cd5\u7b80\u5355\uff0c\u800c\u4e14\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u8bc6\u522b</p>"},{"location":"C%2B%2B/00-stl/#39","title":"3.9 \u7c7b\u6a21\u677f\u6848\u4f8b","text":"<p>\u6848\u4f8b\u63cf\u8ff0:  \u5b9e\u73b0\u4e00\u4e2a\u901a\u7528\u7684\u6570\u7ec4\u7c7b\uff0c\u8981\u6c42\u5982\u4e0b\uff1a</p> <ul> <li>\u53ef\u4ee5\u5bf9\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u8fdb\u884c\u5b58\u50a8</li> <li>\u5c06\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u5b58\u50a8\u5230\u5806\u533a</li> <li>\u6784\u9020\u51fd\u6570\u4e2d\u53ef\u4ee5\u4f20\u5165\u6570\u7ec4\u7684\u5bb9\u91cf</li> <li>\u63d0\u4f9b\u5bf9\u5e94\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4ee5\u53caoperator=\u9632\u6b62\u6d45\u62f7\u8d1d\u95ee\u9898</li> <li>\u63d0\u4f9b\u5c3e\u63d2\u6cd5\u548c\u5c3e\u5220\u6cd5\u5bf9\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u52a0\u548c\u5220\u9664</li> <li>\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u7684\u65b9\u5f0f\u8bbf\u95ee\u6570\u7ec4\u4e2d\u7684\u5143\u7d20</li> <li>\u53ef\u4ee5\u83b7\u53d6\u6570\u7ec4\u4e2d\u5f53\u524d\u5143\u7d20\u4e2a\u6570\u548c\u6570\u7ec4\u7684\u5bb9\u91cf</li> </ul> <p>\u793a\u4f8b\uff1a</p> <p>myArray.hpp\u4e2d\u4ee3\u7801</p> C++<pre><code>#pragma once\n#include &lt;iostream&gt;\nusing namespace std;\n\ntemplate&lt;class T&gt;\nclass MyArray\n{\npublic:\n\n    //\u6784\u9020\u51fd\u6570\n    MyArray(int capacity)\n    {\n        this-&gt;m_Capacity = capacity;\n        this-&gt;m_Size = 0;\n        pAddress = new T[this-&gt;m_Capacity];\n    }\n\n    //\u62f7\u8d1d\u6784\u9020\n    MyArray(const MyArray &amp; arr)\n    {\n        this-&gt;m_Capacity = arr.m_Capacity;\n        this-&gt;m_Size = arr.m_Size;\n        this-&gt;pAddress = new T[this-&gt;m_Capacity];\n        for (int i = 0; i &lt; this-&gt;m_Size; i++)\n        {\n            //\u5982\u679cT\u4e3a\u5bf9\u8c61\uff0c\u800c\u4e14\u8fd8\u5305\u542b\u6307\u9488\uff0c\u5fc5\u987b\u9700\u8981\u91cd\u8f7d = \u64cd\u4f5c\u7b26\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u7b49\u53f7\u4e0d\u662f \u6784\u9020 \u800c\u662f\u8d4b\u503c\uff0c\n            // \u666e\u901a\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5= \u4f46\u662f\u6307\u9488\u7c7b\u578b\u9700\u8981\u6df1\u62f7\u8d1d\n            this-&gt;pAddress[i] = arr.pAddress[i];\n        }\n    }\n\n    //\u91cd\u8f7d= \u64cd\u4f5c\u7b26  \u9632\u6b62\u6d45\u62f7\u8d1d\u95ee\u9898\n    MyArray&amp; operator=(const MyArray&amp; myarray) {\n\n        if (this-&gt;pAddress != NULL) {\n            delete[] this-&gt;pAddress;\n            this-&gt;m_Capacity = 0;\n            this-&gt;m_Size = 0;\n        }\n\n        this-&gt;m_Capacity = myarray.m_Capacity;\n        this-&gt;m_Size = myarray.m_Size;\n        this-&gt;pAddress = new T[this-&gt;m_Capacity];\n        for (int i = 0; i &lt; this-&gt;m_Size; i++) {\n            this-&gt;pAddress[i] = myarray[i];\n        }\n        return *this;\n    }\n\n    //\u91cd\u8f7d[] \u64cd\u4f5c\u7b26  arr[0]\n    T&amp; operator [](int index)\n    {\n        return this-&gt;pAddress[index]; //\u4e0d\u8003\u8651\u8d8a\u754c\uff0c\u7528\u6237\u81ea\u5df1\u53bb\u5904\u7406\n    }\n\n    //\u5c3e\u63d2\u6cd5\n    void Push_back(const T &amp; val)\n    {\n        if (this-&gt;m_Capacity == this-&gt;m_Size)\n        {\n            return;\n        }\n        this-&gt;pAddress[this-&gt;m_Size] = val;\n        this-&gt;m_Size++;\n    }\n\n    //\u5c3e\u5220\u6cd5\n    void Pop_back()\n    {\n        if (this-&gt;m_Size == 0)\n        {\n            return;\n        }\n        this-&gt;m_Size--;\n    }\n\n    //\u83b7\u53d6\u6570\u7ec4\u5bb9\u91cf\n    int getCapacity()\n    {\n        return this-&gt;m_Capacity;\n    }\n\n    //\u83b7\u53d6\u6570\u7ec4\u5927\u5c0f\n    int getSize()\n    {\n        return this-&gt;m_Size;\n    }\n\n\n    //\u6790\u6784\n    ~MyArray()\n    {\n        if (this-&gt;pAddress != NULL)\n        {\n            delete[] this-&gt;pAddress;\n            this-&gt;pAddress = NULL;\n            this-&gt;m_Capacity = 0;\n            this-&gt;m_Size = 0;\n        }\n    }\n\nprivate:\n    T * pAddress;  //\u6307\u5411\u4e00\u4e2a\u5806\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u7a7a\u95f4\u5b58\u50a8\u771f\u6b63\u7684\u6570\u636e\n    int m_Capacity; //\u5bb9\u91cf\n    int m_Size;   // \u5927\u5c0f\n};\n</code></pre> <p>\u7c7b\u6a21\u677f\u6848\u4f8b\u2014\u6570\u7ec4\u7c7b\u5c01\u88c5.cpp\u4e2d</p> C++<pre><code>#include \"myArray.hpp\"\n#include &lt;string&gt;\n\nvoid printIntArray(MyArray&lt;int&gt;&amp; arr) {\n    for (int i = 0; i &lt; arr.getSize(); i++) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u6d4b\u8bd5\u5185\u7f6e\u6570\u636e\u7c7b\u578b\nvoid test01()\n{\n    MyArray&lt;int&gt; array1(10);\n    for (int i = 0; i &lt; 10; i++)\n    {\n        array1.Push_back(i);\n    }\n    cout &lt;&lt; \"array1\u6253\u5370\u8f93\u51fa\uff1a\" &lt;&lt; endl;\n    printIntArray(array1);\n    cout &lt;&lt; \"array1\u7684\u5927\u5c0f\uff1a\" &lt;&lt; array1.getSize() &lt;&lt; endl;\n    cout &lt;&lt; \"array1\u7684\u5bb9\u91cf\uff1a\" &lt;&lt; array1.getCapacity() &lt;&lt; endl;\n\n    cout &lt;&lt; \"--------------------------\" &lt;&lt; endl;\n\n    MyArray&lt;int&gt; array2(array1);\n    array2.Pop_back();\n    cout &lt;&lt; \"array2\u6253\u5370\u8f93\u51fa\uff1a\" &lt;&lt; endl;\n    printIntArray(array2);\n    cout &lt;&lt; \"array2\u7684\u5927\u5c0f\uff1a\" &lt;&lt; array2.getSize() &lt;&lt; endl;\n    cout &lt;&lt; \"array2\u7684\u5bb9\u91cf\uff1a\" &lt;&lt; array2.getCapacity() &lt;&lt; endl;\n}\n\n//\u6d4b\u8bd5\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\nclass Person {\npublic:\n    Person() {} \n        Person(string name, int age) {\n        this-&gt;m_Name = name;\n        this-&gt;m_Age = age;\n    }\npublic:\n    string m_Name;\n    int m_Age;\n};\n\nvoid printPersonArray(MyArray&lt;Person&gt;&amp; personArr)\n{\n    for (int i = 0; i &lt; personArr.getSize(); i++) {\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; personArr[i].m_Name &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; personArr[i].m_Age &lt;&lt; endl;\n    }\n\n}\n\nvoid test02()\n{\n    //\u521b\u5efa\u6570\u7ec4\n    MyArray&lt;Person&gt; pArray(10);\n    Person p1(\"\u5b59\u609f\u7a7a\", 30);\n    Person p2(\"\u97e9\u4fe1\", 20);\n    Person p3(\"\u59b2\u5df1\", 18);\n    Person p4(\"\u738b\u662d\u541b\", 15);\n    Person p5(\"\u8d75\u4e91\", 24);\n\n    //\u63d2\u5165\u6570\u636e\n    pArray.Push_back(p1);\n    pArray.Push_back(p2);\n    pArray.Push_back(p3);\n    pArray.Push_back(p4);\n    pArray.Push_back(p5);\n\n    printPersonArray(pArray);\n\n    cout &lt;&lt; \"pArray\u7684\u5927\u5c0f\uff1a\" &lt;&lt; pArray.getSize() &lt;&lt; endl;\n    cout &lt;&lt; \"pArray\u7684\u5bb9\u91cf\uff1a\" &lt;&lt; pArray.getCapacity() &lt;&lt; endl;\n\n}\n\nint main() {\n\n    //test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/00-stl/#4-stl","title":"4 STL","text":"<ul> <li>STL(Standard Template Library,\u6807\u51c6\u6a21\u677f\u5e93)</li> <li>STL \u4ece\u5e7f\u4e49\u4e0a\u5206\u4e3a: \u5bb9\u5668(container) \u7b97\u6cd5(algorithm) \u8fed\u4ee3\u5668(iterator)</li> <li>\u5bb9\u5668\u548c\u7b97\u6cd5\u4e4b\u95f4\u901a\u8fc7\u8fed\u4ee3\u5668\u8fdb\u884c\u65e0\u7f1d\u8fde\u63a5\u3002</li> <li>STL \u51e0\u4e4e\u6240\u6709\u7684\u4ee3\u7801\u90fd\u91c7\u7528\u4e86\u6a21\u677f\u7c7b\u6216\u8005\u6a21\u677f\u51fd\u6570</li> </ul>"},{"location":"C%2B%2B/00-stl/#41-stl","title":"4.1 STL\u516d\u5927\u7ec4\u4ef6","text":"<p>STL\u5927\u4f53\u5206\u4e3a\u516d\u5927\u7ec4\u4ef6\uff0c\u5206\u522b\u662f:\u5bb9\u5668\u3001\u7b97\u6cd5\u3001\u8fed\u4ee3\u5668\u3001\u4eff\u51fd\u6570\u3001\u9002\u914d\u5668\uff08\u914d\u63a5\u5668\uff09\u3001\u7a7a\u95f4\u914d\u7f6e\u5668</p> <ol> <li>\u5bb9\u5668\uff1a\u5404\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5982vector\u3001list\u3001deque\u3001set\u3001map\u7b49,\u7528\u6765\u5b58\u653e\u6570\u636e\u3002</li> <li>\u7b97\u6cd5\uff1a\u5404\u79cd\u5e38\u7528\u7684\u7b97\u6cd5\uff0c\u5982sort\u3001find\u3001copy\u3001for_each\u7b49</li> <li>\u8fed\u4ee3\u5668\uff1a\u626e\u6f14\u4e86\u5bb9\u5668\u4e0e\u7b97\u6cd5\u4e4b\u95f4\u7684\u80f6\u5408\u5242\u3002</li> <li>\u4eff\u51fd\u6570\uff1a\u884c\u4e3a\u7c7b\u4f3c\u51fd\u6570\uff0c\u53ef\u4f5c\u4e3a\u7b97\u6cd5\u7684\u67d0\u79cd\u7b56\u7565\u3002</li> <li>\u9002\u914d\u5668\uff1a\u4e00\u79cd\u7528\u6765\u4fee\u9970\u5bb9\u5668\u6216\u8005\u4eff\u51fd\u6570\u6216\u8fed\u4ee3\u5668\u63a5\u53e3\u7684\u4e1c\u897f\u3002</li> <li>\u7a7a\u95f4\u914d\u7f6e\u5668\uff1a\u8d1f\u8d23\u7a7a\u95f4\u7684\u914d\u7f6e\u4e0e\u7ba1\u7406\u3002</li> </ol>"},{"location":"C%2B%2B/00-stl/#42-stl","title":"4.2 STL\u4e2d\u7684\u5bb9\u5668\u3001\u7b97\u6cd5\u3001\u8fed\u4ee3\u5668","text":"<p>\u5bb9\u5668\uff1a\u7f6e\u7269\u4e4b\u6240\u4e5f</p> <p>STL\u5bb9\u5668\u5c31\u662f\u5c06\u8fd0\u7528\u6700\u5e7f\u6cdb\u7684\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u51fa\u6765</p> <p>\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\uff1a\u6570\u7ec4, \u94fe\u8868,\u6811, \u6808, \u961f\u5217, \u96c6\u5408, \u6620\u5c04\u8868 \u7b49</p> <p>\u8fd9\u4e9b\u5bb9\u5668\u5206\u4e3a\u5e8f\u5217\u5f0f\u5bb9\u5668\u548c\u5173\u8054\u5f0f\u5bb9\u5668\u4e24\u79cd:</p> <p>\u200b   \u5e8f\u5217\u5f0f\u5bb9\u5668:\u5f3a\u8c03\u503c\u7684\u6392\u5e8f\uff0c\u5e8f\u5217\u5f0f\u5bb9\u5668\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5747\u6709\u56fa\u5b9a\u7684\u4f4d\u7f6e\u3002     \u5173\u8054\u5f0f\u5bb9\u5668:\u4e8c\u53c9\u6811\u7ed3\u6784\uff0c\u5404\u5143\u7d20\u4e4b\u95f4\u6ca1\u6709\u4e25\u683c\u7684\u7269\u7406\u4e0a\u7684\u987a\u5e8f\u5173\u7cfb</p> <p>\u7b97\u6cd5\uff1a\u95ee\u9898\u4e4b\u89e3\u6cd5\u4e5f</p> <p>\u6709\u9650\u7684\u6b65\u9aa4\uff0c\u89e3\u51b3\u903b\u8f91\u6216\u6570\u5b66\u4e0a\u7684\u95ee\u9898\uff0c\u8fd9\u4e00\u95e8\u5b66\u79d1\u6211\u4eec\u53eb\u505a\u7b97\u6cd5(Algorithms)</p> <p>\u7b97\u6cd5\u5206\u4e3a:\u8d28\u53d8\u7b97\u6cd5\u548c\u975e\u8d28\u53d8\u7b97\u6cd5\u3002</p> <p>\u8d28\u53d8\u7b97\u6cd5\uff1a\u662f\u6307\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u66f4\u6539\u533a\u95f4\u5185\u7684\u5143\u7d20\u7684\u5185\u5bb9\u3002\u4f8b\u5982\u62f7\u8d1d\uff0c\u66ff\u6362\uff0c\u5220\u9664\u7b49\u7b49</p> <p>\u975e\u8d28\u53d8\u7b97\u6cd5\uff1a\u662f\u6307\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u66f4\u6539\u533a\u95f4\u5185\u7684\u5143\u7d20\u5185\u5bb9\uff0c\u4f8b\u5982\u67e5\u627e\u3001\u8ba1\u6570\u3001\u904d\u5386\u3001\u5bfb\u627e\u6781\u503c\u7b49\u7b49</p> <p>\u8fed\u4ee3\u5668\uff1a\u5bb9\u5668\u548c\u7b97\u6cd5\u4e4b\u95f4\u7c98\u5408\u5242</p> <p>\u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u4e4b\u80fd\u591f\u4f9d\u5e8f\u5bfb\u8bbf\u67d0\u4e2a\u5bb9\u5668\u6240\u542b\u7684\u5404\u4e2a\u5143\u7d20\uff0c\u800c\u53c8\u65e0\u9700\u66b4\u9732\u8be5\u5bb9\u5668\u7684\u5185\u90e8\u8868\u793a\u65b9\u5f0f\u3002</p> <p>\u6bcf\u4e2a\u5bb9\u5668\u90fd\u6709\u81ea\u5df1\u4e13\u5c5e\u7684\u8fed\u4ee3\u5668</p> <p>\u8fed\u4ee3\u5668\u4f7f\u7528\u975e\u5e38\u7c7b\u4f3c\u4e8e\u6307\u9488\uff0c\u521d\u5b66\u9636\u6bb5\u6211\u4eec\u53ef\u4ee5\u5148\u7406\u89e3\u8fed\u4ee3\u5668\u4e3a\u6307\u9488</p> <p>\u8fed\u4ee3\u5668\u79cd\u7c7b\uff1a</p> \u79cd\u7c7b \u529f\u80fd \u652f\u6301\u8fd0\u7b97 \u8f93\u5165\u8fed\u4ee3\u5668 \u5bf9\u6570\u636e\u7684\u53ea\u8bfb\u8bbf\u95ee \u53ea\u8bfb\uff0c\u652f\u6301++\u3001==\u3001\uff01= \u8f93\u51fa\u8fed\u4ee3\u5668 \u5bf9\u6570\u636e\u7684\u53ea\u5199\u8bbf\u95ee \u53ea\u5199\uff0c\u652f\u6301++ \u524d\u5411\u8fed\u4ee3\u5668 \u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u63a8\u8fdb\u8fed\u4ee3\u5668 \u8bfb\u5199\uff0c\u652f\u6301++\u3001==\u3001\uff01= \u53cc\u5411\u8fed\u4ee3\u5668 \u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u548c\u5411\u540e\u64cd\u4f5c \u8bfb\u5199\uff0c\u652f\u6301++\u3001--\uff0c \u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668 \u8bfb\u5199\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4ee5\u8df3\u8dc3\u7684\u65b9\u5f0f\u8bbf\u95ee\u4efb\u610f\u6570\u636e\uff0c\u529f\u80fd\u6700\u5f3a\u7684\u8fed\u4ee3\u5668 \u8bfb\u5199\uff0c\u652f\u6301++\u3001--\u3001[n]\u3001-n\u3001&lt;\u3001&lt;=\u3001&gt;\u3001&gt;= <p>\u5e38\u7528\u7684\u5bb9\u5668\u4e2d\u8fed\u4ee3\u5668\u79cd\u7c7b\u4e3a\u53cc\u5411\u8fed\u4ee3\u5668\uff0c\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668</p>"},{"location":"C%2B%2B/00-stl/#43-string","title":"4.3 string \u5bb9\u5668","text":""},{"location":"C%2B%2B/00-stl/#431-string","title":"4.3.1 string\u57fa\u672c\u6982\u5ff5","text":"<p>\u672c\u8d28\uff1a</p> <ul> <li>string\u662fC++\u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u800cstring\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u7c7b</li> </ul> <p>string\u548cchar * \u533a\u522b\uff1a</p> <ul> <li>char * \u662f\u4e00\u4e2a\u6307\u9488</li> <li>string\u662f\u4e00\u4e2a\u7c7b\uff0c\u7c7b\u5185\u90e8\u5c01\u88c5\u4e86char*\uff0c\u7ba1\u7406\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u662f\u4e00\u4e2achar*\u578b\u7684\u5bb9\u5668\u3002</li> </ul> <p>\u7279\u70b9\uff1a</p> <p>string \u7c7b\u5185\u90e8\u5c01\u88c5\u4e86\u5f88\u591a\u6210\u5458\u65b9\u6cd5</p> <p>\u4f8b\u5982\uff1a\u67e5\u627efind\uff0c\u62f7\u8d1dcopy\uff0c\u5220\u9664delete \u66ff\u6362replace\uff0c\u63d2\u5165insert</p> <p>string\u7ba1\u7406char*\u6240\u5206\u914d\u7684\u5185\u5b58\uff0c\u4e0d\u7528\u62c5\u5fc3\u590d\u5236\u8d8a\u754c\u548c\u53d6\u503c\u8d8a\u754c\u7b49\uff0c\u7531\u7c7b\u5185\u90e8\u8fdb\u884c\u8d1f\u8d23</p>"},{"location":"C%2B%2B/00-stl/#432-string","title":"4.3.2 string\u6784\u9020\u51fd\u6570","text":"<p>\u6784\u9020\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>string();</code>                       //\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u5b57\u7b26\u4e32 \u4f8b\u5982: string str;</li> <li><code>string(const char* s);</code>          //\u4f7f\u7528\u5b57\u7b26\u4e32s\u521d\u59cb\u5316</li> <li><code>string(const string&amp; str);</code>    //\u4f7f\u7528\u4e00\u4e2astring\u5bf9\u8c61\u521d\u59cb\u5316\u53e6\u4e00\u4e2astring\u5bf9\u8c61</li> <li><code>string(int n, char c);</code>           //\u4f7f\u7528n\u4e2a\u5b57\u7b26c\u521d\u59cb\u5316 </li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;string&gt;\n//string\u6784\u9020\nvoid test01()\n{\n    string s1; //\u521b\u5efa\u7a7a\u5b57\u7b26\u4e32\uff0c\u8c03\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570\n    cout &lt;&lt; \"str1 = \" &lt;&lt; s1 &lt;&lt; endl;\n\n    const char* str = \"hello world\";\n    string s2(str); //\u628ac_string\u8f6c\u6362\u6210\u4e86string\n\n    cout &lt;&lt; \"str2 = \" &lt;&lt; s2 &lt;&lt; endl;\n\n    string s3(s2); //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    cout &lt;&lt; \"str3 = \" &lt;&lt; s3 &lt;&lt; endl;\n\n    string s4(10, 'a');\n    cout &lt;&lt; \"str3 = \" &lt;&lt; s3 &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1astring\u7684\u591a\u79cd\u6784\u9020\u65b9\u5f0f\u6ca1\u6709\u53ef\u6bd4\u6027\uff0c\u7075\u6d3b\u4f7f\u7528\u5373\u53ef</p>"},{"location":"C%2B%2B/00-stl/#433-string","title":"4.3.3 string \u8d4b\u503c\u64cd\u4f5c","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u7ed9string\u5b57\u7b26\u4e32\u8fdb\u884c\u8d4b\u503c</li> </ul> <p>\u8d4b\u503c\u7684\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>string&amp; operator=(const char* s);</code>             //char*\u7c7b\u578b\u5b57\u7b26\u4e32 \u8d4b\u503c\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32</li> <li><code>string&amp; operator=(const string &amp;s);</code>         //\u628a\u5b57\u7b26\u4e32s\u8d4b\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32</li> <li><code>string&amp; operator=(char c);</code>                          //\u5b57\u7b26\u8d4b\u503c\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32</li> <li><code>string&amp; assign(const char *s);</code>                  //\u628a\u5b57\u7b26\u4e32s\u8d4b\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32</li> <li><code>string&amp; assign(const char *s, int n);</code>     //\u628a\u5b57\u7b26\u4e32s\u7684\u524dn\u4e2a\u5b57\u7b26\u8d4b\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32</li> <li><code>string&amp; assign(const string &amp;s);</code>              //\u628a\u5b57\u7b26\u4e32s\u8d4b\u7ed9\u5f53\u524d\u5b57\u7b26\u4e32</li> <li><code>string&amp; assign(int n, char c);</code>                  //\u7528n\u4e2a\u5b57\u7b26c\u8d4b\u7ed9\u5f53\u524d\u5b57\u7b26\u4e32</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u8d4b\u503c\nvoid test01()\n{\n    string str1;\n    str1 = \"hello world\";\n    cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n\n    string str2;\n    str2 = str1;\n    cout &lt;&lt; \"str2 = \" &lt;&lt; str2 &lt;&lt; endl;\n\n    string str3;\n    str3 = 'a';\n    cout &lt;&lt; \"str3 = \" &lt;&lt; str3 &lt;&lt; endl;\n\n    string str4;\n    str4.assign(\"hello c++\");\n    cout &lt;&lt; \"str4 = \" &lt;&lt; str4 &lt;&lt; endl;\n\n    string str5;\n    str5.assign(\"hello c++\",5);\n    cout &lt;&lt; \"str5 = \" &lt;&lt; str5 &lt;&lt; endl;\n\n\n    string str6;\n    str6.assign(str5);\n    cout &lt;&lt; \"str6 = \" &lt;&lt; str6 &lt;&lt; endl;\n\n    string str7;\n    str7.assign(5, 'x');\n    cout &lt;&lt; \"str7 = \" &lt;&lt; str7 &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <p>\u200b   string\u7684\u8d4b\u503c\u65b9\u5f0f\u5f88\u591a\uff0c<code>operator=</code>  \u8fd9\u79cd\u65b9\u5f0f\u662f\u6bd4\u8f83\u5b9e\u7528\u7684</p>"},{"location":"C%2B%2B/00-stl/#434-string","title":"4.3.4 string\u5b57\u7b26\u4e32\u62fc\u63a5","text":"<p>*\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5b9e\u73b0\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u62fc\u63a5\u5b57\u7b26\u4e32</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>string&amp; operator+=(const char* str);</code>                   //\u91cd\u8f7d+=\u64cd\u4f5c\u7b26</li> <li><code>string&amp; operator+=(const char c);</code>                         //\u91cd\u8f7d+=\u64cd\u4f5c\u7b26</li> <li><code>string&amp; operator+=(const string&amp; str);</code>                //\u91cd\u8f7d+=\u64cd\u4f5c\u7b26</li> <li><code>string&amp; append(const char *s);</code>                               //\u628a\u5b57\u7b26\u4e32s\u8fde\u63a5\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7ed3\u5c3e</li> <li><code>string&amp; append(const char *s, int n);</code>                 //\u628a\u5b57\u7b26\u4e32s\u7684\u524dn\u4e2a\u5b57\u7b26\u8fde\u63a5\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7ed3\u5c3e</li> <li><code>string&amp; append(const string &amp;s);</code>                           //\u540coperator+=(const string&amp; str)</li> <li><code>string&amp; append(const string &amp;s, int pos, int n);</code>//\u5b57\u7b26\u4e32s\u4e2d\u4ecepos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u8fde\u63a5\u5230\u5b57\u7b26\u4e32\u7ed3\u5c3e</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u5b57\u7b26\u4e32\u62fc\u63a5\nvoid test01()\n{\n    string str1 = \"\u6211\";\n\n    str1 += \"\u7231\u73a9\u6e38\u620f\";\n\n    cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n\n    str1 += ':';\n\n    cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n\n    string str2 = \"LOL DNF\";\n\n    str1 += str2;\n\n    cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n\n    string str3 = \"I\";\n    str3.append(\" love \");\n    str3.append(\"game abcde\", 4);\n    //str3.append(str2);\n    str3.append(str2, 4, 3); // \u4ece\u4e0b\u68074\u4f4d\u7f6e\u5f00\u59cb \uff0c\u622a\u53d63\u4e2a\u5b57\u7b26\uff0c\u62fc\u63a5\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\n    cout &lt;&lt; \"str3 = \" &lt;&lt; str3 &lt;&lt; endl;\n}\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u7684\u91cd\u8f7d\u7248\u672c\u5f88\u591a\uff0c\u521d\u5b66\u9636\u6bb5\u8bb0\u4f4f\u51e0\u79cd\u5373\u53ef</p>"},{"location":"C%2B%2B/00-stl/#435-string","title":"4.3.5 string\u67e5\u627e\u548c\u66ff\u6362","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u67e5\u627e\uff1a\u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u662f\u5426\u5b58\u5728</li> <li>\u66ff\u6362\uff1a\u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u66ff\u6362\u5b57\u7b26\u4e32</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>int find(const string&amp; str, int pos = 0) const;</code>              //\u67e5\u627estr\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e,\u4ecepos\u5f00\u59cb\u67e5\u627e</li> <li><code>int find(const char* s, int pos = 0) const;</code>                     //\u67e5\u627es\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e,\u4ecepos\u5f00\u59cb\u67e5\u627e</li> <li><code>int find(const char* s, int pos, int n) const;</code>               //\u4ecepos\u4f4d\u7f6e\u67e5\u627es\u7684\u524dn\u4e2a\u5b57\u7b26\u7b2c\u4e00\u6b21\u4f4d\u7f6e</li> <li><code>int find(const char c, int pos = 0) const;</code>                       //\u67e5\u627e\u5b57\u7b26c\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e</li> <li><code>int rfind(const string&amp; str, int pos = npos) const;</code>      //\u67e5\u627estr\u6700\u540e\u4e00\u6b21\u4f4d\u7f6e,\u4ecepos\u5f00\u59cb\u67e5\u627e</li> <li><code>int rfind(const char* s, int pos = npos) const;</code>              //\u67e5\u627es\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e,\u4ecepos\u5f00\u59cb\u67e5\u627e</li> <li><code>int rfind(const char* s, int pos, int n) const;</code>              //\u4ecepos\u67e5\u627es\u7684\u524dn\u4e2a\u5b57\u7b26\u6700\u540e\u4e00\u6b21\u4f4d\u7f6e</li> <li><code>int rfind(const char c, int pos = 0) const;</code>                      //\u67e5\u627e\u5b57\u7b26c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e</li> <li><code>string&amp; replace(int pos, int n, const string&amp; str);</code>       //\u66ff\u6362\u4ecepos\u5f00\u59cbn\u4e2a\u5b57\u7b26\u4e3a\u5b57\u7b26\u4e32str</li> <li><code>string&amp; replace(int pos, int n,const char* s);</code>                 //\u66ff\u6362\u4ecepos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u4e3a\u5b57\u7b26\u4e32s</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u67e5\u627e\u548c\u66ff\u6362\nvoid test01()\n{\n    //\u67e5\u627e\n    string str1 = \"abcdefgde\";\n\n    int pos = str1.find(\"de\");\n\n    if (pos == -1)\n    {\n        cout &lt;&lt; \"\u672a\u627e\u5230\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"pos = \" &lt;&lt; pos &lt;&lt; endl;\n    }\n\n\n    pos = str1.rfind(\"de\");\n\n    cout &lt;&lt; \"pos = \" &lt;&lt; pos &lt;&lt; endl;\n\n}\n\nvoid test02()\n{\n    //\u66ff\u6362\n    string str1 = \"abcdefgde\";\n    str1.replace(1, 3, \"1111\");\n\n    cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n}\n\nint main() {\n\n    //test01();\n    //test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>find\u67e5\u627e\u662f\u4ece\u5de6\u5f80\u540e\uff0crfind\u4ece\u53f3\u5f80\u5de6</li> <li>find\u627e\u5230\u5b57\u7b26\u4e32\u540e\u8fd4\u56de\u67e5\u627e\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4f4d\u7f6e\uff0c\u627e\u4e0d\u5230\u8fd4\u56de-1</li> <li>replace\u5728\u66ff\u6362\u65f6\uff0c\u8981\u6307\u5b9a\u4ece\u54ea\u4e2a\u4f4d\u7f6e\u8d77\uff0c\u591a\u5c11\u4e2a\u5b57\u7b26\uff0c\u66ff\u6362\u6210\u4ec0\u4e48\u6837\u7684\u5b57\u7b26\u4e32</li> </ul>"},{"location":"C%2B%2B/00-stl/#44-vector","title":"4.4 vector\u5bb9\u5668","text":"<p>\u529f\u80fd\uff1a</p> <ul> <li>vector\u6570\u636e\u7ed3\u6784\u548c\u6570\u7ec4\u975e\u5e38\u76f8\u4f3c\uff0c\u4e5f\u79f0\u4e3a\u5355\u7aef\u6570\u7ec4</li> </ul> <p>vector\u4e0e\u666e\u901a\u6570\u7ec4\u533a\u522b\uff1a</p> <ul> <li>\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6570\u7ec4\u662f\u9759\u6001\u7a7a\u95f4\uff0c\u800cvector\u53ef\u4ee5\u52a8\u6001\u6269\u5c55</li> </ul> <p>\u52a8\u6001\u6269\u5c55\uff1a</p> <ul> <li> <p>\u5e76\u4e0d\u662f\u5728\u539f\u7a7a\u95f4\u4e4b\u540e\u7eed\u63a5\u65b0\u7a7a\u95f4\uff0c\u800c\u662f\u627e\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u5c06\u539f\u6570\u636e\u62f7\u8d1d\u65b0\u7a7a\u95f4\uff0c\u91ca\u653e\u539f\u7a7a\u95f4</p> </li> <li> <p>vector\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u662f\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684\u8fed\u4ee3\u5668</p> </li> </ul>"},{"location":"C%2B%2B/00-stl/#441-vector","title":"4.4.1 vector\u6784\u9020\u51fd\u6570","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u521b\u5efavector\u5bb9\u5668</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>vector&lt;T&gt; v;</code>                            //\u91c7\u7528\u6a21\u677f\u5b9e\u73b0\u7c7b\u5b9e\u73b0\uff0c\u9ed8\u8ba4\u6784\u9020\u51fd\u6570</li> <li><code>vector(v.begin(), v.end());</code>       //\u5c06v[begin(), end())\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>vector(n, elem);</code>                            //\u6784\u9020\u51fd\u6570\u5c06n\u4e2aelem\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>vector(const vector &amp;vec);</code>         //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;vector&gt;\n\nvoid printVector(vector&lt;int&gt;&amp; v) {\n\n    for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    vector&lt;int&gt; v1; //\u65e0\u53c2\u6784\u9020\n    for (int i = 0; i &lt; 10; i++)\n    {\n        v1.push_back(i);\n    }\n    printVector(v1);\n\n    vector&lt;int&gt; v2(v1.begin(), v1.end());\n    printVector(v2);\n\n    vector&lt;int&gt; v3(10, 100);\n    printVector(v3);\n\n    vector&lt;int&gt; v4(v3);\n    printVector(v4);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1avector\u7684\u591a\u79cd\u6784\u9020\u65b9\u5f0f\u6ca1\u6709\u53ef\u6bd4\u6027\uff0c\u7075\u6d3b\u4f7f\u7528\u5373\u53ef</p>"},{"location":"C%2B%2B/00-stl/#442-vector","title":"4.4.2 vector\u8d4b\u503c\u64cd\u4f5c","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u7ed9vector\u5bb9\u5668\u8fdb\u884c\u8d4b\u503c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li> <p><code>vector&amp; operator=(const vector &amp;vec);</code>//\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</p> </li> <li> <p><code>assign(beg, end);</code>       //\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u6570\u636e\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</p> </li> <li><code>assign(n, elem);</code>        //\u5c06n\u4e2aelem\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;vector&gt;\n\nvoid printVector(vector&lt;int&gt;&amp; v) {\n\n    for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u8d4b\u503c\u64cd\u4f5c\nvoid test01()\n{\n    vector&lt;int&gt; v1; //\u65e0\u53c2\u6784\u9020\n    for (int i = 0; i &lt; 10; i++)\n    {\n        v1.push_back(i);\n    }\n    printVector(v1);\n\n    vector&lt;int&gt;v2;\n    v2 = v1;\n    printVector(v2);\n\n    vector&lt;int&gt;v3;\n    v3.assign(v1.begin(), v1.end());\n    printVector(v3);\n\n    vector&lt;int&gt;v4;\n    v4.assign(10, 100);\n    printVector(v4);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a vector\u8d4b\u503c\u65b9\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u4f7f\u7528operator=\uff0c\u6216\u8005assign\u90fd\u53ef\u4ee5</p>"},{"location":"C%2B%2B/00-stl/#443-vector","title":"4.4.3 vector\u5bb9\u91cf\u548c\u5927\u5c0f","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9vector\u5bb9\u5668\u7684\u5bb9\u91cf\u548c\u5927\u5c0f\u64cd\u4f5c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li> <p><code>empty();</code>                            //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a</p> </li> <li> <p><code>capacity();</code>                      //\u5bb9\u5668\u7684\u5bb9\u91cf</p> </li> <li> <p><code>size();</code>                              //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e2a\u6570</p> </li> <li> <p><code>resize(int num);</code>             //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002</p> </li> </ul> <p>\u200b                       //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002</p> <ul> <li><code>resize(int num, elem);</code>  //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002</li> </ul> <p>\u200b                           //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664</p> C++<pre><code>#include &lt;vector&gt;\n\nvoid printVector(vector&lt;int&gt;&amp; v) {\n\n    for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    vector&lt;int&gt; v1;\n    for (int i = 0; i &lt; 10; i++)\n    {\n        v1.push_back(i);\n    }\n    printVector(v1);\n    if (v1.empty())\n    {\n        cout &lt;&lt; \"v1\u4e3a\u7a7a\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"v1\u4e0d\u4e3a\u7a7a\" &lt;&lt; endl;\n        cout &lt;&lt; \"v1\u7684\u5bb9\u91cf = \" &lt;&lt; v1.capacity() &lt;&lt; endl;\n        cout &lt;&lt; \"v1\u7684\u5927\u5c0f = \" &lt;&lt; v1.size() &lt;&lt; endl;\n    }\n\n    //resize \u91cd\u65b0\u6307\u5b9a\u5927\u5c0f \uff0c\u82e5\u6307\u5b9a\u7684\u66f4\u5927\uff0c\u9ed8\u8ba4\u75280\u586b\u5145\u65b0\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5229\u7528\u91cd\u8f7d\u7248\u672c\u66ff\u6362\u9ed8\u8ba4\u586b\u5145\n    v1.resize(15,10);\n    printVector(v1);\n\n    //resize \u91cd\u65b0\u6307\u5b9a\u5927\u5c0f \uff0c\u82e5\u6307\u5b9a\u7684\u66f4\u5c0f\uff0c\u8d85\u51fa\u90e8\u5206\u5143\u7d20\u88ab\u5220\u9664\n    v1.resize(5);\n    printVector(v1);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a  --- empty</li> <li>\u8fd4\u56de\u5143\u7d20\u4e2a\u6570  --- size</li> <li>\u8fd4\u56de\u5bb9\u5668\u5bb9\u91cf  --- capacity</li> <li>\u91cd\u65b0\u6307\u5b9a\u5927\u5c0f  ---  resize</li> </ul>"},{"location":"C%2B%2B/00-stl/#444-vector","title":"4.4.4 vector\u63d2\u5165\u548c\u5220\u9664","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9vector\u5bb9\u5668\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>push_back(ele);</code>                                         //\u5c3e\u90e8\u63d2\u5165\u5143\u7d20ele</li> <li><code>pop_back();</code>                                                //\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li><code>insert(const_iterator pos, ele);</code>        //\u8fed\u4ee3\u5668\u6307\u5411\u4f4d\u7f6epos\u63d2\u5165\u5143\u7d20ele</li> <li><code>insert(const_iterator pos, int count,ele);</code>//\u8fed\u4ee3\u5668\u6307\u5411\u4f4d\u7f6epos\u63d2\u5165count\u4e2a\u5143\u7d20ele</li> <li><code>erase(const_iterator pos);</code>                     //\u5220\u9664\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5143\u7d20</li> <li><code>erase(const_iterator start, const_iterator end);</code>//\u5220\u9664\u8fed\u4ee3\u5668\u4ecestart\u5230end\u4e4b\u95f4\u7684\u5143\u7d20</li> <li><code>clear();</code>                                                        //\u5220\u9664\u5bb9\u5668\u4e2d\u6240\u6709\u5143\u7d20</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;vector&gt;\n\nvoid printVector(vector&lt;int&gt;&amp; v) {\n\n    for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u63d2\u5165\u548c\u5220\u9664\nvoid test01()\n{\n    vector&lt;int&gt; v1;\n    //\u5c3e\u63d2\n    v1.push_back(10);\n    v1.push_back(20);\n    v1.push_back(30);\n    v1.push_back(40);\n    v1.push_back(50);\n    printVector(v1);\n    //\u5c3e\u5220\n    v1.pop_back();\n    printVector(v1);\n    //\u63d2\u5165\n    v1.insert(v1.begin(), 100);\n    printVector(v1);\n\n    v1.insert(v1.begin(), 2, 1000);\n    printVector(v1);\n\n    //\u5220\u9664\n    v1.erase(v1.begin());\n    printVector(v1);\n\n    //\u6e05\u7a7a\n    v1.erase(v1.begin(), v1.end());\n    v1.clear();\n    printVector(v1);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5c3e\u63d2  --- push_back</li> <li>\u5c3e\u5220  --- pop_back</li> <li>\u63d2\u5165  --- insert    (\u4f4d\u7f6e\u8fed\u4ee3\u5668)</li> <li>\u5220\u9664  --- erase  \uff08\u4f4d\u7f6e\u8fed\u4ee3\u5668\uff09</li> <li>\u6e05\u7a7a  ---  clear  </li> </ul>"},{"location":"C%2B%2B/00-stl/#445-vector","title":"4.4.5 vector\u6570\u636e\u5b58\u53d6","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9vector\u4e2d\u7684\u6570\u636e\u7684\u5b58\u53d6\u64cd\u4f5c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>at(int idx);</code>     //\u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e</li> <li><code>operator[];</code>       //\u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e</li> <li><code>front();</code>            //\u8fd4\u56de\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u6570\u636e\u5143\u7d20</li> <li><code>back();</code>              //\u8fd4\u56de\u5bb9\u5668\u4e2d\u6700\u540e\u4e00\u4e2a\u6570\u636e\u5143\u7d20</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;vector&gt;\n\nvoid test01()\n{\n    vector&lt;int&gt;v1;\n    for (int i = 0; i &lt; 10; i++)\n    {\n        v1.push_back(i);\n    }\n\n    for (int i = 0; i &lt; v1.size(); i++)\n    {\n        cout &lt;&lt; v1[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    for (int i = 0; i &lt; v1.size(); i++)\n    {\n        cout &lt;&lt; v1.at(i) &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"v1\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; v1.front() &lt;&lt; endl;\n    cout &lt;&lt; \"v1\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; v1.back() &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u9664\u4e86\u7528\u8fed\u4ee3\u5668\u83b7\u53d6vector\u5bb9\u5668\u4e2d\u5143\u7d20\uff0c[ ]\u548cat\u4e5f\u53ef\u4ee5</li> <li>front\u8fd4\u56de\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li>back\u8fd4\u56de\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> </ul>"},{"location":"C%2B%2B/00-stl/#446-vector","title":"4.4.6 vector\u4e92\u6362\u5bb9\u5668","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5b9e\u73b0\u4e24\u4e2a\u5bb9\u5668\u5185\u5143\u7d20\u8fdb\u884c\u4e92\u6362</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>swap(vec);</code>  // \u5c06vec\u4e0e\u672c\u8eab\u7684\u5143\u7d20\u4e92\u6362</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;vector&gt;\n\nvoid printVector(vector&lt;int&gt;&amp; v) {\n\n    for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    vector&lt;int&gt;v1;\n    for (int i = 0; i &lt; 10; i++)\n    {\n        v1.push_back(i);\n    }\n    printVector(v1);\n\n    vector&lt;int&gt;v2;\n    for (int i = 10; i &gt; 0; i--)\n    {\n        v2.push_back(i);\n    }\n    printVector(v2);\n\n    //\u4e92\u6362\u5bb9\u5668\n    cout &lt;&lt; \"\u4e92\u6362\u540e\" &lt;&lt; endl;\n    v1.swap(v2);\n    printVector(v1);\n    printVector(v2);\n}\n\nvoid test02()\n{\n    vector&lt;int&gt; v;\n    for (int i = 0; i &lt; 100000; i++) {\n        v.push_back(i);\n    }\n\n    cout &lt;&lt; \"v\u7684\u5bb9\u91cf\u4e3a\uff1a\" &lt;&lt; v.capacity() &lt;&lt; endl;\n    cout &lt;&lt; \"v\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; v.size() &lt;&lt; endl;\n\n    v.resize(3);\n\n    cout &lt;&lt; \"v\u7684\u5bb9\u91cf\u4e3a\uff1a\" &lt;&lt; v.capacity() &lt;&lt; endl;\n    cout &lt;&lt; \"v\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; v.size() &lt;&lt; endl;\n\n    //\u6536\u7f29\u5185\u5b58\n    vector&lt;int&gt;(v).swap(v); //\u533f\u540d\u5bf9\u8c61\n\n    cout &lt;&lt; \"v\u7684\u5bb9\u91cf\u4e3a\uff1a\" &lt;&lt; v.capacity() &lt;&lt; endl;\n    cout &lt;&lt; \"v\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; v.size() &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1aswap\u53ef\u4ee5\u4f7f\u4e24\u4e2a\u5bb9\u5668\u4e92\u6362\uff0c\u53ef\u4ee5\u8fbe\u5230\u5b9e\u7528\u7684\u6536\u7f29\u5185\u5b58\u6548\u679c</p>"},{"location":"C%2B%2B/00-stl/#447-vector","title":"4.4.7 vector\u9884\u7559\u7a7a\u95f4","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u51cf\u5c11vector\u5728\u52a8\u6001\u6269\u5c55\u5bb9\u91cf\u65f6\u7684\u6269\u5c55\u6b21\u6570</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>reserve(int len);</code>//\u5bb9\u5668\u9884\u7559len\u4e2a\u5143\u7d20\u957f\u5ea6\uff0c\u9884\u7559\u4f4d\u7f6e\u4e0d\u521d\u59cb\u5316\uff0c\u5143\u7d20\u4e0d\u53ef\u8bbf\u95ee\u3002</li> </ul> <p>\u200b</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;vector&gt;\n\nvoid test01()\n{\n    vector&lt;int&gt; v;\n\n    //\u9884\u7559\u7a7a\u95f4\n    v.reserve(100000);\n\n    int num = 0;\n    int* p = NULL;\n    for (int i = 0; i &lt; 100000; i++) {\n        v.push_back(i);\n        if (p != &amp;v[0]) {\n            p = &amp;v[0];\n            num++;\n        }\n    }\n\n    cout &lt;&lt; \"num:\" &lt;&lt; num &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u5982\u679c\u6570\u636e\u91cf\u8f83\u5927\uff0c\u53ef\u4ee5\u4e00\u5f00\u59cb\u5229\u7528reserve\u9884\u7559\u7a7a\u95f4</p>"},{"location":"C%2B%2B/00-stl/#45-deque","title":"4.5 deque\u5bb9\u5668","text":""},{"location":"C%2B%2B/00-stl/#451-deque","title":"4.5.1 deque\u5bb9\u5668\u57fa\u672c\u6982\u5ff5","text":"<p>\u529f\u80fd\uff1a</p> <ul> <li>\u53cc\u7aef\u6570\u7ec4\uff0c\u53ef\u4ee5\u5bf9\u5934\u7aef\u8fdb\u884c\u63d2\u5165\u5220\u9664\u64cd\u4f5c</li> </ul> <p>deque\u5185\u90e8\u6709\u4e2a\u4e2d\u63a7\u5668\uff0c\u7ef4\u62a4\u6bcf\u6bb5\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5bb9\uff0c\u7f13\u51b2\u533a\u4e2d\u5b58\u653e\u771f\u5b9e\u6570\u636e</p> <p>\u4e2d\u63a7\u5668\u7ef4\u62a4\u7684\u662f\u6bcf\u4e2a\u7f13\u51b2\u533a\u7684\u5730\u5740\uff0c\u4f7f\u5f97\u4f7f\u7528deque\u65f6\u50cf\u4e00\u7247\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4</p> <p>vector \u7684\u5185\u5b58\u662f\u4e00\u5757\u8fde\u7eed\u7684\u5927\u5185\u5b58\uff0c\u50cf\u6570\u7ec4\u4e00\u6837\u6392\u597d\u961f\u3002</p> <p>\u63d2\u5165/\u5220\u9664\u53ea\u80fd\u5728\u5c3e\u90e8\u9ad8\u6548\uff08\u5426\u5219\u5c31\u8981\u6574\u4f53\u642c\u5bb6\uff09\u3002</p> <p>deque \u662f\u628a\u5143\u7d20\u5206\u6bb5\u653e\u5728\u591a\u4e2a\u5c0f\u5757\u7f13\u51b2\u533a\uff08buffer\uff09\u91cc\uff0c\u4e0d\u8981\u6c42\u7269\u7406\u8fde\u7eed\u3002</p> <p>\u53ef\u4ee5\u5728\u5934\u90e8\u548c\u5c3e\u90e8\u90fd\u5feb\u901f\u63d2\u5165/\u5220\u9664\u3002</p> <p>\u901a\u8fc7\u4e00\u4e2a \u4e2d\u63a7\u5668\uff08map\uff0c\u4e5f\u53eb\u63a7\u5236\u4e2d\u5fc3\uff09 \u628a\u8fd9\u4e9b\u5c0f\u5757\u4e32\u8d77\u6765\uff0c\u770b\u8d77\u6765\u50cf\u4e00\u7247\u8fde\u7eed\u7684\u7a7a\u95f4\u3002</p>"},{"location":"C%2B%2B/00-stl/#452-deque","title":"4.5.2 deque\u6784\u9020\u51fd\u6570","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>deque\u5bb9\u5668\u6784\u9020</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>deque&lt;T&gt;</code> deqT;                      //\u9ed8\u8ba4\u6784\u9020\u5f62\u5f0f</li> <li><code>deque(beg, end);</code>                  //\u6784\u9020\u51fd\u6570\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>deque(n, elem);</code>                    //\u6784\u9020\u51fd\u6570\u5c06n\u4e2aelem\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>deque(const deque &amp;deq);</code>   //\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;deque&gt;\n\nvoid printDeque(const deque&lt;int&gt;&amp; d) \n{\n    for (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n\n    }\n    cout &lt;&lt; endl;\n}\n//deque\u6784\u9020\nvoid test01() {\n\n    deque&lt;int&gt; d1; //\u65e0\u53c2\u6784\u9020\u51fd\u6570\n    for (int i = 0; i &lt; 10; i++)\n    {\n        d1.push_back(i);\n    }\n    printDeque(d1);\n    deque&lt;int&gt; d2(d1.begin(),d1.end());\n    printDeque(d2);\n\n    deque&lt;int&gt;d3(10,100);\n    printDeque(d3);\n\n    deque&lt;int&gt;d4 = d3;\n    printDeque(d4);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1adeque\u5bb9\u5668\u548cvector\u5bb9\u5668\u7684\u6784\u9020\u65b9\u5f0f\u51e0\u4e4e\u4e00\u81f4\uff0c\u7075\u6d3b\u4f7f\u7528\u5373\u53ef</p>"},{"location":"C%2B%2B/00-stl/#453-deque","title":"4.5.3 deque\u8d4b\u503c\u64cd\u4f5c","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u7ed9deque\u5bb9\u5668\u8fdb\u884c\u8d4b\u503c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li> <p><code>deque&amp; operator=(const deque &amp;deq);</code>         //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</p> </li> <li> <p><code>assign(beg, end);</code>                                           //\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u6570\u636e\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</p> </li> <li><code>assign(n, elem);</code>                                             //\u5c06n\u4e2aelem\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;deque&gt;\n\nvoid printDeque(const deque&lt;int&gt;&amp; d) \n{\n    for (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n\n    }\n    cout &lt;&lt; endl;\n}\n//\u8d4b\u503c\u64cd\u4f5c\nvoid test01()\n{\n    deque&lt;int&gt; d1;\n    for (int i = 0; i &lt; 10; i++)\n    {\n        d1.push_back(i);\n    }\n    printDeque(d1);\n\n    deque&lt;int&gt;d2;\n    d2 = d1;\n    printDeque(d2);\n\n    deque&lt;int&gt;d3;\n    d3.assign(d1.begin(), d1.end());\n    printDeque(d3);\n\n    deque&lt;int&gt;d4;\n    d4.assign(10, 100);\n    printDeque(d4);\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1adeque\u8d4b\u503c\u64cd\u4f5c\u4e5f\u4e0evector\u76f8\u540c\uff0c\u9700\u719f\u7ec3\u638c\u63e1</p>"},{"location":"C%2B%2B/00-stl/#454-deque","title":"4.5.4 deque\u5927\u5c0f\u64cd\u4f5c","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9deque\u5bb9\u5668\u7684\u5927\u5c0f\u8fdb\u884c\u64cd\u4f5c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li> <p><code>deque.empty();</code>                       //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a</p> </li> <li> <p><code>deque.size();</code>                         //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e2a\u6570</p> </li> <li> <p><code>deque.resize(num);</code>                //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum,\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002</p> </li> </ul> <p>\u200b                                      //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002</p> <ul> <li><code>deque.resize(num, elem);</code>     //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum,\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002</li> </ul> <p>\u200b                                                     //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002</p> <p>\u200b</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;deque&gt;\n\nvoid printDeque(const deque&lt;int&gt;&amp; d) \n{\n    for (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u5927\u5c0f\u64cd\u4f5c\nvoid test01()\n{\n    deque&lt;int&gt; d1;\n    for (int i = 0; i &lt; 10; i++)\n    {\n        d1.push_back(i);\n    }\n    printDeque(d1);\n\n    //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a\n    if (d1.empty()) {\n        cout &lt;&lt; \"d1\u4e3a\u7a7a!\" &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"d1\u4e0d\u4e3a\u7a7a!\" &lt;&lt; endl;\n        //\u7edf\u8ba1\u5927\u5c0f\n        cout &lt;&lt; \"d1\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; d1.size() &lt;&lt; endl;\n    }\n\n    //\u91cd\u65b0\u6307\u5b9a\u5927\u5c0f\n    d1.resize(15, 1);\n    printDeque(d1);\n\n    d1.resize(5);\n    printDeque(d1);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>deque\u6ca1\u6709\u5bb9\u91cf\u7684\u6982\u5ff5</li> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u8fd4\u56de\u5143\u7d20\u4e2a\u6570   --- size</li> <li>\u91cd\u65b0\u6307\u5b9a\u4e2a\u6570   --- resize</li> </ul>"},{"location":"C%2B%2B/00-stl/#455-deque","title":"4.5.5 deque\u63d2\u5165\u548c\u5220\u9664","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5411deque\u5bb9\u5668\u4e2d\u63d2\u5165\u548c\u5220\u9664\u6570\u636e</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <p>\u4e24\u7aef\u63d2\u5165\u64cd\u4f5c\uff1a</p> <ul> <li><code>push_back(elem);</code>          //\u5728\u5bb9\u5668\u5c3e\u90e8\u6dfb\u52a0\u4e00\u4e2a\u6570\u636e</li> <li><code>push_front(elem);</code>        //\u5728\u5bb9\u5668\u5934\u90e8\u63d2\u5165\u4e00\u4e2a\u6570\u636e</li> <li><code>pop_back();</code>                   //\u5220\u9664\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u6570\u636e</li> <li><code>pop_front();</code>                 //\u5220\u9664\u5bb9\u5668\u7b2c\u4e00\u4e2a\u6570\u636e</li> </ul> <p>\u6307\u5b9a\u4f4d\u7f6e\u64cd\u4f5c\uff1a</p> <ul> <li> <p><code>insert(pos,elem);</code>         //\u5728pos\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2aelem\u5143\u7d20\u7684\u62f7\u8d1d\uff0c\u8fd4\u56de\u65b0\u6570\u636e\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p><code>insert(pos,n,elem);</code>     //\u5728pos\u4f4d\u7f6e\u63d2\u5165n\u4e2aelem\u6570\u636e\uff0c\u65e0\u8fd4\u56de\u503c\u3002</p> </li> <li> <p><code>insert(pos,beg,end);</code>    //\u5728pos\u4f4d\u7f6e\u63d2\u5165[beg,end)\u533a\u95f4\u7684\u6570\u636e\uff0c\u65e0\u8fd4\u56de\u503c\u3002</p> </li> <li> <p><code>clear();</code>                           //\u6e05\u7a7a\u5bb9\u5668\u7684\u6240\u6709\u6570\u636e</p> </li> <li> <p><code>erase(beg,end);</code>             //\u5220\u9664[beg,end)\u533a\u95f4\u7684\u6570\u636e\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p><code>erase(pos);</code>                    //\u5220\u9664pos\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u3002</p> </li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;deque&gt;\n\nvoid printDeque(const deque&lt;int&gt;&amp; d) \n{\n    for (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n\n    }\n    cout &lt;&lt; endl;\n}\n//\u4e24\u7aef\u64cd\u4f5c\nvoid test01()\n{\n    deque&lt;int&gt; d;\n    //\u5c3e\u63d2\n    d.push_back(10);\n    d.push_back(20);\n    //\u5934\u63d2\n    d.push_front(100);\n    d.push_front(200);\n\n    printDeque(d);\n\n    //\u5c3e\u5220\n    d.pop_back();\n    //\u5934\u5220\n    d.pop_front();\n    printDeque(d);\n}\n\n//\u63d2\u5165\nvoid test02()\n{\n    deque&lt;int&gt; d;\n    d.push_back(10);\n    d.push_back(20);\n    d.push_front(100);\n    d.push_front(200);\n    printDeque(d);\n\n    d.insert(d.begin(), 1000);\n    printDeque(d);\n\n    d.insert(d.begin(), 2,10000);\n    printDeque(d);\n\n    deque&lt;int&gt;d2;\n    d2.push_back(1);\n    d2.push_back(2);\n    d2.push_back(3);\n\n    d.insert(d.begin(), d2.begin(), d2.end());\n    printDeque(d);\n\n}\n\n//\u5220\u9664\nvoid test03()\n{\n    deque&lt;int&gt; d;\n    d.push_back(10);\n    d.push_back(20);\n    d.push_front(100);\n    d.push_front(200);\n    printDeque(d);\n\n    d.erase(d.begin());\n    printDeque(d);\n\n    d.erase(d.begin(), d.end());\n    d.clear();\n    printDeque(d);\n}\n\nint main() {\n\n    //test01();\n\n    //test02();\n\n    test03();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u63d2\u5165\u548c\u5220\u9664\u63d0\u4f9b\u7684\u4f4d\u7f6e\u662f\u8fed\u4ee3\u5668\uff01</li> <li>\u5c3e\u63d2   ---  push_back</li> <li>\u5c3e\u5220   ---  pop_back</li> <li>\u5934\u63d2   ---  push_front</li> <li>\u5934\u5220   ---  pop_front</li> </ul>"},{"location":"C%2B%2B/00-stl/#456-deque","title":"4.5.6 deque\u6570\u636e\u5b58\u53d6","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9deque \u4e2d\u7684\u6570\u636e\u7684\u5b58\u53d6\u64cd\u4f5c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>at(int idx);</code>     //\u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e</li> <li><code>operator[];</code>      //\u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e</li> <li><code>front();</code>            //\u8fd4\u56de\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u6570\u636e\u5143\u7d20</li> <li><code>back();</code>              //\u8fd4\u56de\u5bb9\u5668\u4e2d\u6700\u540e\u4e00\u4e2a\u6570\u636e\u5143\u7d20</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;deque&gt;\n\nvoid printDeque(const deque&lt;int&gt;&amp; d) \n{\n    for (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u6570\u636e\u5b58\u53d6\nvoid test01()\n{\n\n    deque&lt;int&gt; d;\n    d.push_back(10);\n    d.push_back(20);\n    d.push_front(100);\n    d.push_front(200);\n\n    for (int i = 0; i &lt; d.size(); i++) {\n        cout &lt;&lt; d[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n\n    for (int i = 0; i &lt; d.size(); i++) {\n        cout &lt;&lt; d.at(i) &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"front:\" &lt;&lt; d.front() &lt;&lt; endl;\n\n    cout &lt;&lt; \"back:\" &lt;&lt; d.back() &lt;&lt; endl;\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u9664\u4e86\u7528\u8fed\u4ee3\u5668\u83b7\u53d6deque\u5bb9\u5668\u4e2d\u5143\u7d20\uff0c[ ]\u548cat\u4e5f\u53ef\u4ee5</li> <li>front\u8fd4\u56de\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li>back\u8fd4\u56de\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> </ul>"},{"location":"C%2B%2B/00-stl/#457-deque","title":"4.5.7 deque\u6392\u5e8f","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5229\u7528\u7b97\u6cd5\u5b9e\u73b0\u5bf9deque\u5bb9\u5668\u8fdb\u884c\u6392\u5e8f</li> </ul> <p>\u7b97\u6cd5\uff1a</p> <ul> <li><code>sort(iterator beg, iterator end)</code>  //\u5bf9beg\u548cend\u533a\u95f4\u5185\u5143\u7d20\u8fdb\u884c\u6392\u5e8f</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;deque&gt;\n#include &lt;algorithm&gt;\n\nvoid printDeque(const deque&lt;int&gt;&amp; d) \n{\n    for (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n\n    deque&lt;int&gt; d;\n    d.push_back(10);\n    d.push_back(20);\n    d.push_front(100);\n    d.push_front(200);\n\n    printDeque(d);\n    sort(d.begin(), d.end());\n    printDeque(d);\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1asort\u7b97\u6cd5\u975e\u5e38\u5b9e\u7528\uff0c\u4f7f\u7528\u65f6\u5305\u542b\u5934\u6587\u4ef6 algorithm\u5373\u53ef</p>"},{"location":"C%2B%2B/00-stl/#46-stack","title":"4.6 stack\u5bb9\u5668","text":""},{"location":"C%2B%2B/00-stl/#461-stack","title":"4.6.1 stack \u57fa\u672c\u6982\u5ff5","text":"<p>\u6982\u5ff5\uff1astack\u662f\u4e00\u79cd\u5148\u8fdb\u540e\u51fa(First In Last Out,FILO)\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u51fa\u53e3</p> <p>\u6808\u4e2d\u53ea\u6709\u9876\u7aef\u7684\u5143\u7d20\u624d\u53ef\u4ee5\u88ab\u5916\u754c\u4f7f\u7528\uff0c\u56e0\u6b64\u6808\u4e0d\u5141\u8bb8\u6709\u904d\u5386\u884c\u4e3a</p> <p>\u6808\u4e2d\u8fdb\u5165\u6570\u636e\u79f0\u4e3a  --- \u5165\u6808 <code>push</code></p> <p>\u6808\u4e2d\u5f39\u51fa\u6570\u636e\u79f0\u4e3a  --- \u51fa\u6808 <code>pop</code></p>"},{"location":"C%2B%2B/00-stl/#462-stack","title":"4.6.2 stack \u5e38\u7528\u63a5\u53e3","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a\u6808\u5bb9\u5668\u5e38\u7528\u7684\u5bf9\u5916\u63a5\u53e3</p> <p>\u6784\u9020\u51fd\u6570\uff1a</p> <ul> <li><code>stack&lt;T&gt; stk;</code>                                 //stack\u91c7\u7528\u6a21\u677f\u7c7b\u5b9e\u73b0\uff0c stack\u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u5f62\u5f0f</li> <li><code>stack(const stack &amp;stk);</code>            //\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> <p>\u8d4b\u503c\u64cd\u4f5c\uff1a</p> <ul> <li><code>stack&amp; operator=(const stack &amp;stk);</code>           //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> </ul> <p>\u6570\u636e\u5b58\u53d6\uff1a</p> <ul> <li><code>push(elem);</code>      //\u5411\u6808\u9876\u6dfb\u52a0\u5143\u7d20</li> <li><code>pop();</code>                //\u4ece\u6808\u9876\u79fb\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li><code>top();</code>                //\u8fd4\u56de\u6808\u9876\u5143\u7d20</li> </ul> <p>\u5927\u5c0f\u64cd\u4f5c\uff1a</p> <ul> <li><code>empty();</code>            //\u5224\u65ad\u5806\u6808\u662f\u5426\u4e3a\u7a7a</li> <li><code>size();</code>              //\u8fd4\u56de\u6808\u7684\u5927\u5c0f</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;stack&gt;\n\n//\u6808\u5bb9\u5668\u5e38\u7528\u63a5\u53e3\nvoid test01()\n{\n    //\u521b\u5efa\u6808\u5bb9\u5668 \u6808\u5bb9\u5668\u5fc5\u987b\u7b26\u5408\u5148\u8fdb\u540e\u51fa\n    stack&lt;int&gt; s;\n\n    //\u5411\u6808\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u53eb\u505a \u538b\u6808 \u5165\u6808\n    s.push(10);\n    s.push(20);\n    s.push(30);\n\n    while (!s.empty()) {\n        //\u8f93\u51fa\u6808\u9876\u5143\u7d20\n        cout &lt;&lt; \"\u6808\u9876\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; s.top() &lt;&lt; endl;\n        //\u5f39\u51fa\u6808\u9876\u5143\u7d20\n        s.pop();\n    }\n    cout &lt;&lt; \"\u6808\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; s.size() &lt;&lt; endl;\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5165\u6808   --- push</li> <li>\u51fa\u6808   --- pop</li> <li>\u8fd4\u56de\u6808\u9876   --- top</li> <li>\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u8fd4\u56de\u6808\u5927\u5c0f   --- size</li> </ul>"},{"location":"C%2B%2B/00-stl/#47-queue","title":"4.7 queue\u5bb9\u5668","text":""},{"location":"C%2B%2B/00-stl/#471-queue","title":"4.7.1 queue\u57fa\u672c\u6982\u5ff5","text":"<p>\u6982\u5ff5\uff1aQueue\u662f\u4e00\u79cd\u5148\u8fdb\u5148\u51fa(First In First Out,FIFO)\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u6709\u4e24\u4e2a\u51fa\u53e3</p> <p>\u961f\u5217\u5bb9\u5668\u5141\u8bb8\u4ece\u4e00\u7aef\u65b0\u589e\u5143\u7d20\uff0c\u4ece\u53e6\u4e00\u7aef\u79fb\u9664\u5143\u7d20</p> <p>\u961f\u5217\u4e2d\u53ea\u6709\u961f\u5934\u548c\u961f\u5c3e\u624d\u53ef\u4ee5\u88ab\u5916\u754c\u4f7f\u7528\uff0c\u56e0\u6b64\u961f\u5217\u4e0d\u5141\u8bb8\u6709\u904d\u5386\u884c\u4e3a</p> <p>\u961f\u5217\u4e2d\u8fdb\u6570\u636e\u79f0\u4e3a --- \u5165\u961f <code>push</code></p> <p>\u961f\u5217\u4e2d\u51fa\u6570\u636e\u79f0\u4e3a --- \u51fa\u961f <code>pop</code></p>"},{"location":"C%2B%2B/00-stl/#472-queue","title":"4.7.2 queue\u5e38\u7528\u63a5\u53e3","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a\u6808\u5bb9\u5668\u5e38\u7528\u7684\u5bf9\u5916\u63a5\u53e3</p> <p>\u6784\u9020\u51fd\u6570\uff1a</p> <ul> <li><code>queue&lt;T&gt; que;</code>                                 //queue\u91c7\u7528\u6a21\u677f\u7c7b\u5b9e\u73b0\uff0cqueue\u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u5f62\u5f0f</li> <li><code>queue(const queue &amp;que);</code>            //\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> <p>\u8d4b\u503c\u64cd\u4f5c\uff1a</p> <ul> <li><code>queue&amp; operator=(const queue &amp;que);</code>           //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> </ul> <p>\u6570\u636e\u5b58\u53d6\uff1a</p> <ul> <li><code>push(elem);</code>                             //\u5f80\u961f\u5c3e\u6dfb\u52a0\u5143\u7d20</li> <li><code>pop();</code>                                      //\u4ece\u961f\u5934\u79fb\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li><code>back();</code>                                    //\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li><code>front();</code>                                  //\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20</li> </ul> <p>\u5927\u5c0f\u64cd\u4f5c\uff1a</p> <ul> <li><code>empty();</code>            //\u5224\u65ad\u5806\u6808\u662f\u5426\u4e3a\u7a7a</li> <li><code>size();</code>              //\u8fd4\u56de\u6808\u7684\u5927\u5c0f</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;queue&gt;\n#include &lt;string&gt;\nclass Person\n{\npublic:\n    Person(string name, int age)\n    {\n        this-&gt;m_Name = name;\n        this-&gt;m_Age = age;\n    }\n\n    string m_Name;\n    int m_Age;\n};\n\nvoid test01() {\n\n    //\u521b\u5efa\u961f\u5217\n    queue&lt;Person&gt; q;\n\n    //\u51c6\u5907\u6570\u636e\n    Person p1(\"\u5510\u50e7\", 30);\n    Person p2(\"\u5b59\u609f\u7a7a\", 1000);\n    Person p3(\"\u732a\u516b\u6212\", 900);\n    Person p4(\"\u6c99\u50e7\", 800);\n\n    //\u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u5143\u7d20  \u5165\u961f\u64cd\u4f5c\n    q.push(p1);\n    q.push(p2);\n    q.push(p3);\n    q.push(p4);\n\n    //\u961f\u5217\u4e0d\u63d0\u4f9b\u8fed\u4ee3\u5668\uff0c\u66f4\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee \n    while (!q.empty()) {\n        //\u8f93\u51fa\u961f\u5934\u5143\u7d20\n        cout &lt;&lt; \"\u961f\u5934\u5143\u7d20-- \u59d3\u540d\uff1a \" &lt;&lt; q.front().m_Name \n              &lt;&lt; \" \u5e74\u9f84\uff1a \"&lt;&lt; q.front().m_Age &lt;&lt; endl;\n\n        cout &lt;&lt; \"\u961f\u5c3e\u5143\u7d20-- \u59d3\u540d\uff1a \" &lt;&lt; q.back().m_Name  \n              &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; q.back().m_Age &lt;&lt; endl;\n\n        cout &lt;&lt; endl;\n        //\u5f39\u51fa\u961f\u5934\u5143\u7d20\n        q.pop();\n    }\n\n    cout &lt;&lt; \"\u961f\u5217\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; q.size() &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5165\u961f   --- push</li> <li>\u51fa\u961f   --- pop</li> <li>\u8fd4\u56de\u961f\u5934\u5143\u7d20   --- front</li> <li>\u8fd4\u56de\u961f\u5c3e\u5143\u7d20   --- back</li> <li>\u5224\u65ad\u961f\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u8fd4\u56de\u961f\u5217\u5927\u5c0f   --- size</li> </ul>"},{"location":"C%2B%2B/00-stl/#48-list","title":"4.8 list\u5bb9\u5668","text":""},{"location":"C%2B%2B/00-stl/#481-list","title":"4.8.1 list\u57fa\u672c\u6982\u5ff5","text":"<p>\u529f\u80fd\uff1a\u5c06\u6570\u636e\u8fdb\u884c\u94fe\u5f0f\u5b58\u50a8</p> <p>\u94fe\u8868\uff08list\uff09\u662f\u4e00\u79cd\u7269\u7406\u5b58\u50a8\u5355\u5143\u4e0a\u975e\u8fde\u7eed\u7684\u5b58\u50a8\u7ed3\u6784\uff0c\u6570\u636e\u5143\u7d20\u7684\u903b\u8f91\u987a\u5e8f\u662f\u901a\u8fc7\u94fe\u8868\u4e2d\u7684\u6307\u9488\u94fe\u63a5\u5b9e\u73b0\u7684</p> <p>\u94fe\u8868\u7684\u7ec4\u6210\uff1a\u94fe\u8868\u7531\u4e00\u7cfb\u5217\u7ed3\u70b9\u7ec4\u6210 \u7ed3\u70b9\u7684\u7ec4\u6210\uff1a\u4e00\u4e2a\u662f\u5b58\u50a8\u6570\u636e\u5143\u7d20\u7684\u6570\u636e\u57df\uff0c\u53e6\u4e00\u4e2a\u662f\u5b58\u50a8\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u5730\u5740\u7684\u6307\u9488\u57df</p> <p>STL\u4e2d\u7684\u94fe\u8868\u662f\u4e00\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868</p> <p>list\u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u91c7\u7528\u52a8\u6001\u5b58\u50a8\u5206\u914d\uff0c\u4e0d\u4f1a\u9020\u6210\u5185\u5b58\u6d6a\u8d39\u548c\u6ea2\u51fa</li> <li>\u94fe\u8868\u6267\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u5341\u5206\u65b9\u4fbf\uff0c\u4fee\u6539\u6307\u9488\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u5927\u91cf\u5143\u7d20</li> </ul> <p>list\u7684\u7f3a\u70b9\uff1a</p> <ul> <li>\u94fe\u8868\u7075\u6d3b\uff0c\u4f46\u662f\u7a7a\u95f4(\u6307\u9488\u57df) \u548c \u65f6\u95f4\uff08\u904d\u5386\uff09\u989d\u5916\u8017\u8d39\u8f83\u5927</li> </ul> <p>List\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff0c\u63d2\u5165\u64cd\u4f5c\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u9020\u6210\u539f\u6709list\u8fed\u4ee3\u5668\u7684\u5931\u6548\uff0c\u8fd9\u5728vector\u662f\u4e0d\u6210\u7acb\u7684\u3002</p> <p>\u603b\u7ed3\uff1aSTL\u4e2dList\u548cvector\u662f\u4e24\u4e2a\u6700\u5e38\u88ab\u4f7f\u7528\u7684\u5bb9\u5668\uff0c\u5404\u6709\u4f18\u7f3a\u70b9</p>"},{"location":"C%2B%2B/00-stl/#482-list","title":"4.8.2 list\u6784\u9020\u51fd\u6570","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u521b\u5efalist\u5bb9\u5668</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>list&lt;T&gt; lst;</code>                               //list\u91c7\u7528\u91c7\u7528\u6a21\u677f\u7c7b\u5b9e\u73b0,\u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u5f62\u5f0f\uff1a</li> <li><code>list(beg,end);</code>                           //\u6784\u9020\u51fd\u6570\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>list(n,elem);</code>                             //\u6784\u9020\u51fd\u6570\u5c06n\u4e2aelem\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>list(const list &amp;lst);</code>            //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;list&gt;\n\nvoid printList(const list&lt;int&gt;&amp; L) {\n\n    for (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    list&lt;int&gt;L1;\n    L1.push_back(10);\n    L1.push_back(20);\n    L1.push_back(30);\n    L1.push_back(40);\n\n    printList(L1);\n\n    list&lt;int&gt;L2(L1.begin(),L1.end());\n    printList(L2);\n\n    list&lt;int&gt;L3(L2);\n    printList(L3);\n\n    list&lt;int&gt;L4(10, 1000);\n    printList(L4);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1alist\u6784\u9020\u65b9\u5f0f\u540c\u5176\u4ed6\u51e0\u4e2aSTL\u5e38\u7528\u5bb9\u5668\uff0c\u719f\u7ec3\u638c\u63e1\u5373\u53ef</p>"},{"location":"C%2B%2B/00-stl/#483-list","title":"4.8.3 list\u8d4b\u503c\u548c\u4ea4\u6362","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u7ed9list\u5bb9\u5668\u8fdb\u884c\u8d4b\u503c\uff0c\u4ee5\u53ca\u4ea4\u6362list\u5bb9\u5668</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>assign(beg, end);</code>            //\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u6570\u636e\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</li> <li><code>assign(n, elem);</code>              //\u5c06n\u4e2aelem\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</li> <li><code>list&amp; operator=(const list &amp;lst);</code>         //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> <li><code>swap(lst);</code>                         //\u5c06lst\u4e0e\u672c\u8eab\u7684\u5143\u7d20\u4e92\u6362\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;list&gt;\n\nvoid printList(const list&lt;int&gt;&amp; L) {\n\n    for (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u8d4b\u503c\u548c\u4ea4\u6362\nvoid test01()\n{\n    list&lt;int&gt;L1;\n    L1.push_back(10);\n    L1.push_back(20);\n    L1.push_back(30);\n    L1.push_back(40);\n    printList(L1);\n\n    //\u8d4b\u503c\n    list&lt;int&gt;L2;\n    L2 = L1;\n    printList(L2);\n\n    list&lt;int&gt;L3;\n    L3.assign(L2.begin(), L2.end());\n    printList(L3);\n\n    list&lt;int&gt;L4;\n    L4.assign(10, 100);\n    printList(L4);\n\n}\n\n//\u4ea4\u6362\nvoid test02()\n{\n\n    list&lt;int&gt;L1;\n    L1.push_back(10);\n    L1.push_back(20);\n    L1.push_back(30);\n    L1.push_back(40);\n\n    list&lt;int&gt;L2;\n    L2.assign(10, 100);\n\n    cout &lt;&lt; \"\u4ea4\u6362\u524d\uff1a \" &lt;&lt; endl;\n    printList(L1);\n    printList(L2);\n\n    cout &lt;&lt; endl;\n\n    L1.swap(L2);\n\n    cout &lt;&lt; \"\u4ea4\u6362\u540e\uff1a \" &lt;&lt; endl;\n    printList(L1);\n    printList(L2);\n\n}\n\nint main() {\n\n    //test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1alist\u8d4b\u503c\u548c\u4ea4\u6362\u64cd\u4f5c\u80fd\u591f\u7075\u6d3b\u8fd0\u7528\u5373\u53ef</p>"},{"location":"C%2B%2B/00-stl/#484-list","title":"4.8.4 list \u5927\u5c0f\u64cd\u4f5c","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9list\u5bb9\u5668\u7684\u5927\u5c0f\u8fdb\u884c\u64cd\u4f5c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li> <p><code>size();</code>                             //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e2a\u6570</p> </li> <li> <p><code>empty();</code>                           //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a</p> </li> <li> <p><code>resize(num);</code>                   //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002</p> </li> </ul> <p>\u200b                     //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002</p> <ul> <li><code>resize(num, elem);</code>       //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002Text Only<pre><code>            \u200b                       //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002\n</code></pre> </li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;list&gt;\n\nvoid printList(const list&lt;int&gt;&amp; L) {\n\n    for (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u5927\u5c0f\u64cd\u4f5c\nvoid test01()\n{\n    list&lt;int&gt;L1;\n    L1.push_back(10);\n    L1.push_back(20);\n    L1.push_back(30);\n    L1.push_back(40);\n\n    if (L1.empty())\n    {\n        cout &lt;&lt; \"L1\u4e3a\u7a7a\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"L1\u4e0d\u4e3a\u7a7a\" &lt;&lt; endl;\n        cout &lt;&lt; \"L1\u7684\u5927\u5c0f\u4e3a\uff1a \" &lt;&lt; L1.size() &lt;&lt; endl;\n    }\n\n    //\u91cd\u65b0\u6307\u5b9a\u5927\u5c0f\n    L1.resize(10);\n    printList(L1);\n\n    L1.resize(2);\n    printList(L1);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u8fd4\u56de\u5143\u7d20\u4e2a\u6570   --- size</li> <li>\u91cd\u65b0\u6307\u5b9a\u4e2a\u6570   --- resize</li> </ul>"},{"location":"C%2B%2B/00-stl/#485-list","title":"4.8.5 list \u63d2\u5165\u548c\u5220\u9664","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9list\u5bb9\u5668\u8fdb\u884c\u6570\u636e\u7684\u63d2\u5165\u548c\u5220\u9664</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li>push_back(elem);//\u5728\u5bb9\u5668\u5c3e\u90e8\u52a0\u5165\u4e00\u4e2a\u5143\u7d20</li> <li>pop_back();//\u5220\u9664\u5bb9\u5668\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li>push_front(elem);//\u5728\u5bb9\u5668\u5f00\u5934\u63d2\u5165\u4e00\u4e2a\u5143\u7d20</li> <li>pop_front();//\u4ece\u5bb9\u5668\u5f00\u5934\u79fb\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li>insert(pos,elem);//\u5728pos\u4f4d\u7f6e\u63d2elem\u5143\u7d20\u7684\u62f7\u8d1d\uff0c\u8fd4\u56de\u65b0\u6570\u636e\u7684\u4f4d\u7f6e\u3002</li> <li>insert(pos,n,elem);//\u5728pos\u4f4d\u7f6e\u63d2\u5165n\u4e2aelem\u6570\u636e\uff0c\u65e0\u8fd4\u56de\u503c\u3002</li> <li>insert(pos,beg,end);//\u5728pos\u4f4d\u7f6e\u63d2\u5165[beg,end)\u533a\u95f4\u7684\u6570\u636e\uff0c\u65e0\u8fd4\u56de\u503c\u3002</li> <li>clear();//\u79fb\u9664\u5bb9\u5668\u7684\u6240\u6709\u6570\u636e</li> <li>erase(beg,end);//\u5220\u9664[beg,end)\u533a\u95f4\u7684\u6570\u636e\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u3002</li> <li>erase(pos);//\u5220\u9664pos\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u3002</li> <li>remove(elem);//\u5220\u9664\u5bb9\u5668\u4e2d\u6240\u6709\u4e0eelem\u503c\u5339\u914d\u7684\u5143\u7d20\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;list&gt;\n\nvoid printList(const list&lt;int&gt;&amp; L) {\n\n    for (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u63d2\u5165\u548c\u5220\u9664\nvoid test01()\n{\n    list&lt;int&gt; L;\n    //\u5c3e\u63d2\n    L.push_back(10);\n    L.push_back(20);\n    L.push_back(30);\n    //\u5934\u63d2\n    L.push_front(100);\n    L.push_front(200);\n    L.push_front(300);\n\n    printList(L);\n\n    //\u5c3e\u5220\n    L.pop_back();\n    printList(L);\n\n    //\u5934\u5220\n    L.pop_front();\n    printList(L);\n\n    //\u63d2\u5165\n    list&lt;int&gt;::iterator it = L.begin();\n    L.insert(++it, 1000);\n    printList(L);\n\n    //\u5220\u9664\n    it = L.begin();\n    L.erase(++it);\n    printList(L);\n\n    //\u79fb\u9664\n    L.push_back(10000);\n    L.push_back(10000);\n    L.push_back(10000);\n    printList(L);\n    L.remove(10000);\n    printList(L);\n\n    //\u6e05\u7a7a\n    L.clear();\n    printList(L);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5c3e\u63d2   --- push_back</li> <li>\u5c3e\u5220   --- pop_back</li> <li>\u5934\u63d2   --- push_front</li> <li>\u5934\u5220   --- pop_front</li> <li>\u63d2\u5165   --- insert</li> <li>\u5220\u9664   --- erase</li> <li>\u79fb\u9664   --- remove</li> <li>\u6e05\u7a7a   --- clear</li> </ul>"},{"location":"C%2B%2B/00-stl/#486-list","title":"4.8.6 list \u6570\u636e\u5b58\u53d6","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9list\u5bb9\u5668\u4e2d\u6570\u636e\u8fdb\u884c\u5b58\u53d6</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>front();</code>        //\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002</li> <li><code>back();</code>         //\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;list&gt;\n\n//\u6570\u636e\u5b58\u53d6\nvoid test01()\n{\n    list&lt;int&gt;L1;\n    L1.push_back(10);\n    L1.push_back(20);\n    L1.push_back(30);\n    L1.push_back(40);\n\n\n    //cout &lt;&lt; L1.at(0) &lt;&lt; endl;//\u9519\u8bef \u4e0d\u652f\u6301at\u8bbf\u95ee\u6570\u636e\n    //cout &lt;&lt; L1[0] &lt;&lt; endl; //\u9519\u8bef  \u4e0d\u652f\u6301[]\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e\n    cout &lt;&lt; \"\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; L1.front() &lt;&lt; endl;\n    cout &lt;&lt; \"\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; L1.back() &lt;&lt; endl;\n\n    //list\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u662f\u53cc\u5411\u8fed\u4ee3\u5668\uff0c\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\n    list&lt;int&gt;::iterator it = L1.begin();\n    //it = it + 1;//\u9519\u8bef\uff0c\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u8bbf\u95ee\uff0c\u5373\u4f7f\u662f+1\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>list\u5bb9\u5668\u4e2d\u4e0d\u53ef\u4ee5\u901a\u8fc7[]\u6216\u8005at\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e</li> <li>\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20   --- front</li> <li>\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20   --- back</li> </ul>"},{"location":"C%2B%2B/00-stl/#487-list","title":"4.8.7 list \u53cd\u8f6c\u548c\u6392\u5e8f","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5c06\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u53cd\u8f6c\uff0c\u4ee5\u53ca\u5c06\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>reverse();</code>   //\u53cd\u8f6c\u94fe\u8868</li> <li><code>sort();</code>        //\u94fe\u8868\u6392\u5e8f</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>void printList(const list&lt;int&gt;&amp; L) {\n\n    for (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\nbool myCompare(int val1 , int val2)\n{\n    return val1 &gt; val2;\n}\n\n//\u53cd\u8f6c\u548c\u6392\u5e8f\nvoid test01()\n{\n    list&lt;int&gt; L;\n    L.push_back(90);\n    L.push_back(30);\n    L.push_back(20);\n    L.push_back(70);\n    printList(L);\n\n    //\u53cd\u8f6c\u5bb9\u5668\u7684\u5143\u7d20\n    L.reverse();\n    printList(L);\n\n    //\u6392\u5e8f\n    L.sort(); //\u9ed8\u8ba4\u7684\u6392\u5e8f\u89c4\u5219 \u4ece\u5c0f\u5230\u5927\n    printList(L);\n\n    L.sort(myCompare); //\u6307\u5b9a\u89c4\u5219\uff0c\u4ece\u5927\u5230\u5c0f\n    printList(L);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u53cd\u8f6c   --- reverse</li> <li>\u6392\u5e8f   --- sort \uff08\u6210\u5458\u51fd\u6570\uff09</li> </ul>"},{"location":"C%2B%2B/00-stl/#49-setmultiset","title":"4.9 set/multiset \u5bb9\u5668","text":""},{"location":"C%2B%2B/00-stl/#491-set","title":"4.9.1 set\u57fa\u672c\u6982\u5ff5","text":"<p>\u7b80\u4ecb\uff1a</p> <ul> <li>\u6240\u6709\u5143\u7d20\u90fd\u4f1a\u5728\u63d2\u5165\u65f6\u81ea\u52a8\u88ab\u6392\u5e8f</li> </ul> <p>\u672c\u8d28\uff1a</p> <ul> <li>set/multiset\u5c5e\u4e8e\u5173\u8054\u5f0f\u5bb9\u5668\uff0c\u5e95\u5c42\u7ed3\u6784\u662f\u7528\u4e8c\u53c9\u6811\u5b9e\u73b0</li> </ul> <p>set\u548cmultiset\u533a\u522b\uff1a</p> <ul> <li>set\u4e0d\u5141\u8bb8\u5bb9\u5668\u4e2d\u6709\u91cd\u590d\u7684\u5143\u7d20</li> <li>multiset\u5141\u8bb8\u5bb9\u5668\u4e2d\u6709\u91cd\u590d\u7684\u5143\u7d20</li> </ul>"},{"location":"C%2B%2B/00-stl/#492-set","title":"4.9.2 set\u6784\u9020\u548c\u8d4b\u503c","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a\u521b\u5efaset\u5bb9\u5668\u4ee5\u53ca\u8d4b\u503c</p> <p>\u6784\u9020\uff1a</p> <ul> <li><code>set&lt;T&gt; st;</code>                        //\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff1a</li> <li><code>set(const set &amp;st);</code>       //\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> <p>\u8d4b\u503c\uff1a</p> <ul> <li><code>set&amp; operator=(const set &amp;st);</code>    //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;set&gt;\n\nvoid printSet(set&lt;int&gt; &amp; s)\n{\n    for (set&lt;int&gt;::iterator it = s.begin(); it != s.end(); it++)\n    {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u6784\u9020\u548c\u8d4b\u503c\nvoid test01()\n{\n    set&lt;int&gt; s1;\n\n    s1.insert(10);\n    s1.insert(30);\n    s1.insert(20);\n    s1.insert(40);\n    printSet(s1);\n\n    //\u62f7\u8d1d\u6784\u9020\n    set&lt;int&gt;s2(s1);\n    printSet(s2);\n\n    //\u8d4b\u503c\n    set&lt;int&gt;s3;\n    s3 = s2;\n    printSet(s3);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>set\u5bb9\u5668\u63d2\u5165\u6570\u636e\u65f6\u7528insert</li> <li>set\u5bb9\u5668\u63d2\u5165\u6570\u636e\u7684\u6570\u636e\u4f1a\u81ea\u52a8\u6392\u5e8f</li> </ul>"},{"location":"C%2B%2B/00-stl/#493-set","title":"4.9.3 set\u5927\u5c0f\u548c\u4ea4\u6362","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u7edf\u8ba1set\u5bb9\u5668\u5927\u5c0f\u4ee5\u53ca\u4ea4\u6362set\u5bb9\u5668</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>size();</code>          //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6570\u76ee</li> <li><code>empty();</code>        //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a</li> <li><code>swap(st);</code>      //\u4ea4\u6362\u4e24\u4e2a\u96c6\u5408\u5bb9\u5668</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;set&gt;\n\nvoid printSet(set&lt;int&gt; &amp; s)\n{\n    for (set&lt;int&gt;::iterator it = s.begin(); it != s.end(); it++)\n    {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u5927\u5c0f\nvoid test01()\n{\n\n    set&lt;int&gt; s1;\n\n    s1.insert(10);\n    s1.insert(30);\n    s1.insert(20);\n    s1.insert(40);\n\n    if (s1.empty())\n    {\n        cout &lt;&lt; \"s1\u4e3a\u7a7a\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"s1\u4e0d\u4e3a\u7a7a\" &lt;&lt; endl;\n        cout &lt;&lt; \"s1\u7684\u5927\u5c0f\u4e3a\uff1a \" &lt;&lt; s1.size() &lt;&lt; endl;\n    }\n\n}\n\n//\u4ea4\u6362\nvoid test02()\n{\n    set&lt;int&gt; s1;\n\n    s1.insert(10);\n    s1.insert(30);\n    s1.insert(20);\n    s1.insert(40);\n\n    set&lt;int&gt; s2;\n\n    s2.insert(100);\n    s2.insert(300);\n    s2.insert(200);\n    s2.insert(400);\n\n    cout &lt;&lt; \"\u4ea4\u6362\u524d\" &lt;&lt; endl;\n    printSet(s1);\n    printSet(s2);\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"\u4ea4\u6362\u540e\" &lt;&lt; endl;\n    s1.swap(s2);\n    printSet(s1);\n    printSet(s2);\n}\n\nint main() {\n\n    //test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u7edf\u8ba1\u5927\u5c0f   --- size</li> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u4ea4\u6362\u5bb9\u5668   --- swap</li> </ul>"},{"location":"C%2B%2B/00-stl/#494-set","title":"4.9.4 set\u63d2\u5165\u548c\u5220\u9664","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>set\u5bb9\u5668\u8fdb\u884c\u63d2\u5165\u6570\u636e\u548c\u5220\u9664\u6570\u636e</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>insert(elem);</code>           //\u5728\u5bb9\u5668\u4e2d\u63d2\u5165\u5143\u7d20\u3002</li> <li><code>clear();</code>                    //\u6e05\u9664\u6240\u6709\u5143\u7d20</li> <li><code>erase(pos);</code>              //\u5220\u9664pos\u8fed\u4ee3\u5668\u6240\u6307\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002</li> <li><code>erase(beg, end);</code>    //\u5220\u9664\u533a\u95f4[beg,end)\u7684\u6240\u6709\u5143\u7d20 \uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002</li> <li><code>erase(elem);</code>            //\u5220\u9664\u5bb9\u5668\u4e2d\u503c\u4e3aelem\u7684\u5143\u7d20\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;set&gt;\n\nvoid printSet(set&lt;int&gt; &amp; s)\n{\n    for (set&lt;int&gt;::iterator it = s.begin(); it != s.end(); it++)\n    {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u63d2\u5165\u548c\u5220\u9664\nvoid test01()\n{\n    set&lt;int&gt; s1;\n    //\u63d2\u5165\n    s1.insert(10);\n    s1.insert(30);\n    s1.insert(20);\n    s1.insert(40);\n    printSet(s1);\n\n    //\u5220\u9664\n    s1.erase(s1.begin());\n    printSet(s1);\n\n    s1.erase(30);\n    printSet(s1);\n\n    //\u6e05\u7a7a\n    //s1.erase(s1.begin(), s1.end());\n    s1.clear();\n    printSet(s1);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u63d2\u5165   --- insert</li> <li>\u5220\u9664   --- erase</li> <li>\u6e05\u7a7a   --- clear</li> </ul>"},{"location":"C%2B%2B/00-stl/#495-set","title":"4.9.5 set\u67e5\u627e\u548c\u7edf\u8ba1","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9set\u5bb9\u5668\u8fdb\u884c\u67e5\u627e\u6570\u636e\u4ee5\u53ca\u7edf\u8ba1\u6570\u636e</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>find(key);</code>                  //\u67e5\u627ekey\u662f\u5426\u5b58\u5728,\u82e5\u5b58\u5728\uff0c\u8fd4\u56de\u8be5\u952e\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff1b\u82e5\u4e0d\u5b58\u5728\uff0c\u8fd4\u56deset.end();</li> <li><code>count(key);</code>                //\u7edf\u8ba1key\u7684\u5143\u7d20\u4e2a\u6570</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;set&gt;\n\n//\u67e5\u627e\u548c\u7edf\u8ba1\nvoid test01()\n{\n    set&lt;int&gt; s1;\n    //\u63d2\u5165\n    s1.insert(10);\n    s1.insert(30);\n    s1.insert(20);\n    s1.insert(40);\n\n    //\u67e5\u627e\n    set&lt;int&gt;::iterator pos = s1.find(30);\n\n    if (pos != s1.end())\n    {\n        cout &lt;&lt; \"\u627e\u5230\u4e86\u5143\u7d20 \uff1a \" &lt;&lt; *pos &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"\u672a\u627e\u5230\u5143\u7d20\" &lt;&lt; endl;\n    }\n\n    //\u7edf\u8ba1\n    int num = s1.count(30);\n    cout &lt;&lt; \"num = \" &lt;&lt; num &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u67e5\u627e   ---  find    \uff08\u8fd4\u56de\u7684\u662f\u8fed\u4ee3\u5668\uff09</li> <li>\u7edf\u8ba1   ---  count  \uff08\u5bf9\u4e8eset\uff0c\u7ed3\u679c\u4e3a0\u6216\u80051\uff09</li> </ul>"},{"location":"C%2B%2B/00-stl/#496-setmultiset","title":"4.9.6 set\u548cmultiset\u533a\u522b","text":"<p>\u5b66\u4e60\u76ee\u6807\uff1a</p> <ul> <li>\u638c\u63e1set\u548cmultiset\u7684\u533a\u522b</li> </ul> <p>\u533a\u522b\uff1a</p> <ul> <li>set\u4e0d\u53ef\u4ee5\u63d2\u5165\u91cd\u590d\u6570\u636e\uff0c\u800cmultiset\u53ef\u4ee5</li> <li>set\u63d2\u5165\u6570\u636e\u7684\u540c\u65f6\u4f1a\u8fd4\u56de\u63d2\u5165\u7ed3\u679c\uff0c\u8868\u793a\u63d2\u5165\u662f\u5426\u6210\u529f</li> <li>multiset\u4e0d\u4f1a\u68c0\u6d4b\u6570\u636e\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d2\u5165\u91cd\u590d\u6570\u636e</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;set&gt;\n\n//set\u548cmultiset\u533a\u522b\nvoid test01()\n{\n    set&lt;int&gt; s;\n    pair&lt;set&lt;int&gt;::iterator, bool&gt;  ret = s.insert(10);\n    if (ret.second) {\n        cout &lt;&lt; \"\u7b2c\u4e00\u6b21\u63d2\u5165\u6210\u529f!\" &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"\u7b2c\u4e00\u6b21\u63d2\u5165\u5931\u8d25!\" &lt;&lt; endl;\n    }\n\n    ret = s.insert(10);\n    if (ret.second) {\n        cout &lt;&lt; \"\u7b2c\u4e8c\u6b21\u63d2\u5165\u6210\u529f!\" &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"\u7b2c\u4e8c\u6b21\u63d2\u5165\u5931\u8d25!\" &lt;&lt; endl;\n    }\n\n    //multiset\n    multiset&lt;int&gt; ms;\n    ms.insert(10);\n    ms.insert(10);\n\n    for (multiset&lt;int&gt;::iterator it = ms.begin(); it != ms.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5982\u679c\u4e0d\u5141\u8bb8\u63d2\u5165\u91cd\u590d\u6570\u636e\u53ef\u4ee5\u5229\u7528set</li> <li>\u5982\u679c\u9700\u8981\u63d2\u5165\u91cd\u590d\u6570\u636e\u5229\u7528multiset</li> </ul>"},{"location":"C%2B%2B/00-stl/#410-mapmultimap","title":"4.10 map/multimap\u5bb9\u5668","text":""},{"location":"C%2B%2B/00-stl/#4101-map","title":"4.10.1 map\u57fa\u672c\u6982\u5ff5","text":"<p>\u7b80\u4ecb\uff1a</p> <ul> <li>map\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u662fpair\uff08\u6570\u636e\u7c7b\u578b\uff0c\u4e0d\u662f\u5bb9\u5668\uff09</li> <li>pair\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3akey\uff08\u952e\u503c\uff09\uff0c\u8d77\u5230\u7d22\u5f15\u4f5c\u7528\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u4e3avalue\uff08\u5b9e\u503c\uff09</li> <li>\u6240\u6709\u5143\u7d20\u90fd\u4f1a\u6839\u636e\u5143\u7d20\u7684\u952e\u503c\u81ea\u52a8\u6392\u5e8f</li> </ul> <p>\u672c\u8d28\uff1a</p> <ul> <li>map/multimap\u5c5e\u4e8e\u5173\u8054\u5f0f\u5bb9\u5668\uff0c\u5e95\u5c42\u7ed3\u6784\u662f\u7528\u4e8c\u53c9\u6811\u5b9e\u73b0\u3002</li> </ul> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u53ef\u4ee5\u6839\u636ekey\u503c\u5feb\u901f\u627e\u5230value\u503c</li> </ul> <p>map\u548cmultimap\u533a\u522b\uff1a</p> <ul> <li>map\u4e0d\u5141\u8bb8\u5bb9\u5668\u4e2d\u6709\u91cd\u590dkey\u503c\u5143\u7d20</li> <li>multimap\u5141\u8bb8\u5bb9\u5668\u4e2d\u6709\u91cd\u590dkey\u503c\u5143\u7d20</li> </ul>"},{"location":"C%2B%2B/00-stl/#4102-map","title":"4.10.2  map\u6784\u9020\u548c\u8d4b\u503c","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9map\u5bb9\u5668\u8fdb\u884c\u6784\u9020\u548c\u8d4b\u503c\u64cd\u4f5c</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <p>\u6784\u9020\uff1a</p> <ul> <li><code>map&lt;T1, T2&gt; mp;</code>                     //map\u9ed8\u8ba4\u6784\u9020\u51fd\u6570: </li> <li><code>map(const map &amp;mp);</code>             //\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> <p>\u8d4b\u503c\uff1a</p> <ul> <li><code>map&amp; operator=(const map &amp;mp);</code>    //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;map&gt;\n\nvoid printMap(map&lt;int,int&gt;&amp;m)\n{\n    for (map&lt;int, int&gt;::iterator it = m.begin(); it != m.end(); it++)\n    {\n        cout &lt;&lt; \"key = \" &lt;&lt; it-&gt;first &lt;&lt; \" value = \" &lt;&lt; it-&gt;second &lt;&lt; endl;\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    map&lt;int,int&gt;m; //\u9ed8\u8ba4\u6784\u9020\n    m.insert(pair&lt;int, int&gt;(1, 10));\n    m.insert(pair&lt;int, int&gt;(2, 20));\n    m.insert(pair&lt;int, int&gt;(3, 30));\n    printMap(m);\n\n    map&lt;int, int&gt;m2(m); //\u62f7\u8d1d\u6784\u9020\n    printMap(m2);\n\n    map&lt;int, int&gt;m3;\n    m3 = m2; //\u8d4b\u503c\n    printMap(m3);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1amap\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u662f\u6210\u5bf9\u51fa\u73b0\uff0c\u63d2\u5165\u6570\u636e\u65f6\u5019\u8981\u4f7f\u7528\u5bf9\u7ec4</p>"},{"location":"C%2B%2B/00-stl/#4103-map","title":"4.10.3 map\u5927\u5c0f\u548c\u4ea4\u6362","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u7edf\u8ba1map\u5bb9\u5668\u5927\u5c0f\u4ee5\u53ca\u4ea4\u6362map\u5bb9\u5668</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>size();</code>          //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6570\u76ee</li> <li><code>empty();</code>        //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a</li> <li><code>swap(st);</code>      //\u4ea4\u6362\u4e24\u4e2a\u96c6\u5408\u5bb9\u5668</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;map&gt;\n\nvoid printMap(map&lt;int,int&gt;&amp;m)\n{\n    for (map&lt;int, int&gt;::iterator it = m.begin(); it != m.end(); it++)\n    {\n        cout &lt;&lt; \"key = \" &lt;&lt; it-&gt;first &lt;&lt; \" value = \" &lt;&lt; it-&gt;second &lt;&lt; endl;\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    map&lt;int, int&gt;m;\n    m.insert(pair&lt;int, int&gt;(1, 10));\n    m.insert(pair&lt;int, int&gt;(2, 20));\n    m.insert(pair&lt;int, int&gt;(3, 30));\n\n    if (m.empty())\n    {\n        cout &lt;&lt; \"m\u4e3a\u7a7a\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"m\u4e0d\u4e3a\u7a7a\" &lt;&lt; endl;\n        cout &lt;&lt; \"m\u7684\u5927\u5c0f\u4e3a\uff1a \" &lt;&lt; m.size() &lt;&lt; endl;\n    }\n}\n\n\n//\u4ea4\u6362\nvoid test02()\n{\n    map&lt;int, int&gt;m;\n    m.insert(pair&lt;int, int&gt;(1, 10));\n    m.insert(pair&lt;int, int&gt;(2, 20));\n    m.insert(pair&lt;int, int&gt;(3, 30));\n\n    map&lt;int, int&gt;m2;\n    m2.insert(pair&lt;int, int&gt;(4, 100));\n    m2.insert(pair&lt;int, int&gt;(5, 200));\n    m2.insert(pair&lt;int, int&gt;(6, 300));\n\n    cout &lt;&lt; \"\u4ea4\u6362\u524d\" &lt;&lt; endl;\n    printMap(m);\n    printMap(m2);\n\n    cout &lt;&lt; \"\u4ea4\u6362\u540e\" &lt;&lt; endl;\n    m.swap(m2);\n    printMap(m);\n    printMap(m2);\n}\n\nint main() {\n\n    test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u7edf\u8ba1\u5927\u5c0f   --- size</li> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u4ea4\u6362\u5bb9\u5668   --- swap</li> </ul>"},{"location":"C%2B%2B/00-stl/#4104-map","title":"4.10.4 map\u63d2\u5165\u548c\u5220\u9664","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>map\u5bb9\u5668\u8fdb\u884c\u63d2\u5165\u6570\u636e\u548c\u5220\u9664\u6570\u636e</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>insert(elem);</code>           //\u5728\u5bb9\u5668\u4e2d\u63d2\u5165\u5143\u7d20\u3002</li> <li><code>clear();</code>                    //\u6e05\u9664\u6240\u6709\u5143\u7d20</li> <li><code>erase(pos);</code>              //\u5220\u9664pos\u8fed\u4ee3\u5668\u6240\u6307\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002</li> <li><code>erase(beg, end);</code>    //\u5220\u9664\u533a\u95f4[beg,end)\u7684\u6240\u6709\u5143\u7d20 \uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002</li> <li><code>erase(key);</code>            //\u5220\u9664\u5bb9\u5668\u4e2d\u503c\u4e3akey\u7684\u5143\u7d20\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;map&gt;\n\nvoid printMap(map&lt;int,int&gt;&amp;m)\n{\n    for (map&lt;int, int&gt;::iterator it = m.begin(); it != m.end(); it++)\n    {\n        cout &lt;&lt; \"key = \" &lt;&lt; it-&gt;first &lt;&lt; \" value = \" &lt;&lt; it-&gt;second &lt;&lt; endl;\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    //\u63d2\u5165\n    map&lt;int, int&gt; m;\n    //\u7b2c\u4e00\u79cd\u63d2\u5165\u65b9\u5f0f\n    m.insert(pair&lt;int, int&gt;(1, 10));\n    //\u7b2c\u4e8c\u79cd\u63d2\u5165\u65b9\u5f0f\n    m.insert(make_pair(2, 20));\n    //\u7b2c\u4e09\u79cd\u63d2\u5165\u65b9\u5f0f\n    m.insert(map&lt;int, int&gt;::value_type(3, 30));\n    //\u7b2c\u56db\u79cd\u63d2\u5165\u65b9\u5f0f\n    m[4] = 40; \n    printMap(m);\n\n    //\u5220\u9664\n    m.erase(m.begin());\n    printMap(m);\n\n    m.erase(3);\n    printMap(m);\n\n    //\u6e05\u7a7a\n    m.erase(m.begin(),m.end());\n    m.clear();\n    printMap(m);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li> <p>map\u63d2\u5165\u65b9\u5f0f\u5f88\u591a\uff0c\u8bb0\u4f4f\u5176\u4e00\u5373\u53ef</p> </li> <li> <p>\u63d2\u5165   --- insert </p> </li> <li>\u5220\u9664   --- erase</li> <li>\u6e05\u7a7a   --- clear</li> </ul>"},{"location":"C%2B%2B/00-stl/#4105-map","title":"4.10.5 map\u67e5\u627e\u548c\u7edf\u8ba1","text":"<p>\u529f\u80fd\u63cf\u8ff0\uff1a</p> <ul> <li>\u5bf9map\u5bb9\u5668\u8fdb\u884c\u67e5\u627e\u6570\u636e\u4ee5\u53ca\u7edf\u8ba1\u6570\u636e</li> </ul> <p>\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>find(key);</code>                  //\u67e5\u627ekey\u662f\u5426\u5b58\u5728,\u82e5\u5b58\u5728\uff0c\u8fd4\u56de\u8be5\u952e\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff1b\u82e5\u4e0d\u5b58\u5728\uff0c\u8fd4\u56deset.end();</li> <li><code>count(key);</code>                //\u7edf\u8ba1key\u7684\u5143\u7d20\u4e2a\u6570</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;map&gt;\n\n//\u67e5\u627e\u548c\u7edf\u8ba1\nvoid test01()\n{\n    map&lt;int, int&gt;m; \n    m.insert(pair&lt;int, int&gt;(1, 10));\n    m.insert(pair&lt;int, int&gt;(2, 20));\n    m.insert(pair&lt;int, int&gt;(3, 30));\n\n    //\u67e5\u627e\n    map&lt;int, int&gt;::iterator pos = m.find(3);\n\n    if (pos != m.end())\n    {\n        cout &lt;&lt; \"\u627e\u5230\u4e86\u5143\u7d20 key = \" &lt;&lt; (*pos).first &lt;&lt; \" value = \" &lt;&lt; (*pos).second &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"\u672a\u627e\u5230\u5143\u7d20\" &lt;&lt; endl;\n    }\n\n    //\u7edf\u8ba1\n    int num = m.count(3);\n    cout &lt;&lt; \"num = \" &lt;&lt; num &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u67e5\u627e   ---  find    \uff08\u8fd4\u56de\u7684\u662f\u8fed\u4ee3\u5668\uff09</li> <li>\u7edf\u8ba1   ---  count  \uff08\u5bf9\u4e8emap\uff0c\u7ed3\u679c\u4e3a0\u6216\u80051\uff09</li> </ul>"},{"location":"C%2B%2B/01-class1/","title":"\u4e00 \u7c7b-\u5c01\u88c5","text":""},{"location":"C%2B%2B/01-class1/#1","title":"1. \u5c01\u88c5\u7684\u610f\u4e49","text":"<ul> <li>\u5c06\u5c5e\u6027\u548c\u884c\u4e3a\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u8868\u73b0\u751f\u6d3b\u4e2d\u7684\u4e8b\u7269</li> <li>\u5c06\u5c5e\u6027\u548c\u884c\u4e3a\u52a0\u4ee5\u6743\u9650\u63a7\u5236</li> </ul> <p>\u8bed\u6cd5\uff1a <code>class \u7c7b\u540d{   \u8bbf\u95ee\u6743\u9650\uff1a \u5c5e\u6027  / \u884c\u4e3a  };</code></p>"},{"location":"C%2B%2B/01-class1/#11","title":"1.1 \u5c5e\u6027\u548c\u884c\u4e3a\u4f5c\u4e3a\u6574\u4f53","text":"<p>\u793a\u4f8b1\u8bbe\u8ba1\u4e00\u4e2a\u5706\u7c7b\uff0c\u6c42\u5706\u7684\u5468\u957f</p> <p>\u793a\u4f8b\u4ee3\u7801\uff1a</p> C++<pre><code>//\u5706\u5468\u7387\nconst double PI = 3.14;\n\n//1\u3001\u5c01\u88c5\u7684\u610f\u4e49\n//\u5c06\u5c5e\u6027\u548c\u884c\u4e3a\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u7528\u6765\u8868\u73b0\u751f\u6d3b\u4e2d\u7684\u4e8b\u7269\n\n//\u5c01\u88c5\u4e00\u4e2a\u5706\u7c7b\uff0c\u6c42\u5706\u7684\u5468\u957f\n//class\u4ee3\u8868\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\uff0c\u540e\u9762\u8ddf\u7740\u7684\u662f\u7c7b\u540d\nclass Circle\n{\npublic:  //\u8bbf\u95ee\u6743\u9650  \u516c\u5171\u7684\u6743\u9650\n\n    //\u5c5e\u6027\n    int m_r;//\u534a\u5f84\n\n    //\u884c\u4e3a\n    //\u83b7\u53d6\u5230\u5706\u7684\u5468\u957f\n    double calculateZC()\n    {\n        //2 * pi  * r\n        //\u83b7\u53d6\u5706\u7684\u5468\u957f\n        return  2 * PI * m_r;\n    }\n};\n\nint main() {\n\n    //\u901a\u8fc7\u5706\u7c7b\uff0c\u521b\u5efa\u5706\u7684\u5bf9\u8c61\n    // c1\u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u5706\n    Circle c1;\n    c1.m_r = 10; //\u7ed9\u5706\u5bf9\u8c61\u7684\u534a\u5f84 \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\n\n    //2 * pi * 10 = = 62.8\n    cout &lt;&lt; \"\u5706\u7684\u5468\u957f\u4e3a\uff1a \" &lt;&lt; c1.calculateZC() &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u793a\u4f8b2\u4ee3\u7801\uff1a</p> C++<pre><code>//\u5b66\u751f\u7c7b\nclass Student {\npublic:\n    void setName(string name) {\n        m_name = name;\n    }\n    void setID(int id) {\n        m_id = id;\n    }\n\n    void showStudent() {\n        cout &lt;&lt; \"name:\" &lt;&lt; m_name &lt;&lt; \" ID:\" &lt;&lt; m_id &lt;&lt; endl;\n    }\npublic:\n    string m_name;\n    int m_id;\n};\n\nint main() {\n\n    Student stu;\n    stu.setName(\"\u5fb7\u739b\u897f\u4e9a\");\n    stu.setID(250);\n    stu.showStudent();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#12","title":"1.2 \u6743\u9650\u63a7\u5236","text":"<p>\u7c7b\u5728\u8bbe\u8ba1\u65f6\uff0c\u53ef\u4ee5\u628a\u5c5e\u6027\u548c\u884c\u4e3a\u653e\u5728\u4e0d\u540c\u6743\u9650\u4e0b\uff0c\u52a0\u4ee5\u63a7\u5236 \u8bbf\u95ee\u6743\u9650\u6709\u4e09\u79cd\u63a7\u5236\u4fee\u9970\u7b26 - public \u516c\u5171\u6743\u9650 - protected \u4fdd\u62a4\u6743\u9650 - private \u79c1\u6709\u6743\u9650</p> \u8bbf\u95ee\u7ea7\u522b \u7c7b\u5185\u90e8 \u5b50\u7c7b\u5185\u90e8 \u7c7b\u5916\u90e8 <code>public</code> \u2705 \u2705 \u2705 <code>protected</code> \u2705 \u2705 \u274c <code>private</code> \u2705 \u274c \u274c <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u4e09\u79cd\u6743\u9650\n//\u516c\u5171\u6743\u9650  public     \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u53ef\u4ee5\u8bbf\u95ee\n//\u4fdd\u62a4\u6743\u9650  protected  \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u4e0d\u53ef\u4ee5\u8bbf\u95ee\n//\u79c1\u6709\u6743\u9650  private    \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u4e0d\u53ef\u4ee5\u8bbf\u95ee\n\nclass Person\n{\n    //\u59d3\u540d  \u516c\u5171\u6743\u9650\npublic:\n    string m_Name;\n\n    //\u6c7d\u8f66  \u4fdd\u62a4\u6743\u9650\nprotected:\n    string m_Car;\n\n    //\u94f6\u884c\u5361\u5bc6\u7801  \u79c1\u6709\u6743\u9650\nprivate:\n    int m_Password;\n\npublic:\n    void func()\n    {\n        m_Name = \"\u5f20\u4e09\";\n        m_Car = \"\u62d6\u62c9\u673a\";\n        m_Password = 123456;\n    }\n};\n\nint main() {\n\n    Person p;\n    p.m_Name = \"\u674e\u56db\";\n    //p.m_Car = \"\u5954\u9a70\";  //\u4fdd\u62a4\u6743\u9650\u7c7b\u5916\u8bbf\u95ee\u4e0d\u5230\n    //p.m_Password = 123; //\u79c1\u6709\u6743\u9650\u7c7b\u5916\u8bbf\u95ee\u4e0d\u5230\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#2-structclass","title":"2. struct\u548cclass\u533a\u522b","text":"<p>\u5728C++\u4e2d struct\u548cclass\u552f\u4e00\u7684\u533a\u522b\u5c31\u5728\u4e8e \u9ed8\u8ba4\u7684\u8bbf\u95ee\u6743\u9650\u4e0d\u540c</p> <p>\u533a\u522b\uff1a</p> <ul> <li>struct \u9ed8\u8ba4\u6743\u9650\u4e3a\u516c\u5171</li> <li>class   \u9ed8\u8ba4\u6743\u9650\u4e3a\u79c1\u6709</li> </ul> C++<pre><code>class C1\n{\n    int  m_A; //\u9ed8\u8ba4\u662f\u79c1\u6709\u6743\u9650\n};\n\nstruct C2\n{\n    int m_A;  //\u9ed8\u8ba4\u662f\u516c\u5171\u6743\u9650\n};\n\nint main() {\n\n    C1 c1;\n    c1.m_A = 10; //\u9519\u8bef\uff0c\u8bbf\u95ee\u6743\u9650\u662f\u79c1\u6709\n\n    C2 c2;\n    c2.m_A = 10; //\u6b63\u786e\uff0c\u8bbf\u95ee\u6743\u9650\u662f\u516c\u5171\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#3","title":"3. \u6784\u9020\u548c\u6790\u6784\u51fd\u6570","text":"<ul> <li>\u6784\u9020\u51fd\u6570\uff1a\u4e3b\u8981\u4f5c\u7528\u5728\u4e8e\u521b\u5efa\u5bf9\u8c61\u65f6\u4e3a\u5bf9\u8c61\u7684\u6210\u5458\u5c5e\u6027\u8d4b\u503c\uff0c\u6784\u9020\u51fd\u6570\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\uff0c\u65e0\u987b\u624b\u52a8\u8c03\u7528\u3002</li> <li>\u6790\u6784\u51fd\u6570\uff1a\u4e3b\u8981\u4f5c\u7528\u5728\u4e8e\u5bf9\u8c61\u9500\u6bc1\u524d\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\uff0c\u6267\u884c\u4e00\u4e9b\u6e05\u7406\u5de5\u4f5c\u3002</li> </ul> <p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u88ab\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\uff0c\u5b8c\u6210\u5bf9\u8c61\u521d\u59cb\u5316\u548c\u6e05\u7406\u5de5\u4f5c\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u4e0d\u63d0\u4f9b\u6784\u9020\u548c\u6790\u6784\uff0c\u7f16\u8bd1\u5668\u4f1a\u63d0\u4f9b\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u662f\u7a7a\u5b9e\u73b0\u3002</p> <p>\u6784\u9020\u51fd\u6570\u8bed\u6cd5\uff1a<code>\u7c7b\u540d(){}</code></p> <ol> <li>\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u4e5f\u4e0d\u5199void</li> <li>\u51fd\u6570\u540d\u79f0\u4e0e\u7c7b\u540d\u76f8\u540c</li> <li>\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u53d1\u751f\u91cd\u8f7d</li> <li>\u7a0b\u5e8f\u5728\u8c03\u7528\u5bf9\u8c61\u65f6\u5019\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\uff0c\u65e0\u987b\u624b\u52a8\u8c03\u7528,\u800c\u4e14\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21</li> </ol> <p>\u6790\u6784\u51fd\u6570\u8bed\u6cd5\uff1a <code>~\u7c7b\u540d(){}</code></p> <ol> <li>\u6790\u6784\u51fd\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u4e5f\u4e0d\u5199void</li> <li>\u51fd\u6570\u540d\u79f0\u4e0e\u7c7b\u540d\u76f8\u540c,\u5728\u540d\u79f0\u524d\u52a0\u4e0a\u7b26\u53f7  ~</li> <li>\u6790\u6784\u51fd\u6570\u4e0d\u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u53d1\u751f\u91cd\u8f7d</li> <li>\u7a0b\u5e8f\u5728\u5bf9\u8c61\u9500\u6bc1\u524d\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\uff0c\u65e0\u987b\u624b\u52a8\u8c03\u7528,\u800c\u4e14\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21</li> </ol> C++<pre><code>class Person\n{\npublic:\n    //\u6784\u9020\u51fd\u6570\n    Person()\n    {\n        cout &lt;&lt; \"Person\u7684\u6784\u9020\u51fd\u6570\u8c03\u7528\" &lt;&lt; endl;\n    }\n    //\u6790\u6784\u51fd\u6570\n    ~Person()\n    {\n        cout &lt;&lt; \"Person\u7684\u6790\u6784\u51fd\u6570\u8c03\u7528\" &lt;&lt; endl;\n    }\n\n};\n\nvoid test01()\n{\n    Person p;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#31","title":"3.1 \u6784\u9020\u51fd\u6570\u7684\u5206\u7c7b\u53ca\u8c03\u7528","text":"<p>\u4e24\u79cd\u5206\u7c7b\u65b9\u5f0f\uff1a</p> <ul> <li>\u6309\u53c2\u6570\u5206\u4e3a\uff1a \u6709\u53c2\u6784\u9020\u548c\u65e0\u53c2\u6784\u9020</li> <li>\u6309\u7c7b\u578b\u5206\u4e3a\uff1a \u666e\u901a\u6784\u9020\u548c\u62f7\u8d1d\u6784\u9020</li> </ul> <p>\u4e09\u79cd\u8c03\u7528\u65b9\u5f0f\uff1a</p> <ul> <li>\u62ec\u53f7\u6cd5</li> <li>\u663e\u793a\u6cd5</li> <li>\u9690\u5f0f\u8f6c\u6362\u6cd5</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//1\u3001\u6784\u9020\u51fd\u6570\u5206\u7c7b\n// \u6309\u7167\u53c2\u6570\u5206\u7c7b\u5206\u4e3a \u6709\u53c2\u548c\u65e0\u53c2\u6784\u9020   \u65e0\u53c2\u53c8\u79f0\u4e3a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n// \u6309\u7167\u7c7b\u578b\u5206\u7c7b\u5206\u4e3a \u666e\u901a\u6784\u9020\u548c\u62f7\u8d1d\u6784\u9020\n\nclass Person {\npublic:\n    //\u65e0\u53c2\uff08\u9ed8\u8ba4\uff09\u6784\u9020\u51fd\u6570\n    Person() {\n        cout &lt;&lt; \"\u65e0\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u6709\u53c2\u6784\u9020\u51fd\u6570\n    Person(int a) {\n        age = a;\n        cout &lt;&lt; \"\u6709\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    // \u4e5f\u53ef\u4ee5\u901a\u8fc7\u521d\u59cb\u5316\u5217\u8868\u65b9\u5f0f\u8fdb\u884c\u6709\u53c2\u6784\u9020,\u591a\u4e2a\u6210\u5458\u95f4\u7528\u9017\u53f7\u5206\u5272\n    Person(int a): age(a){}\n    //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    Person(const Person&amp; p) {\n        age = p.age;\n        cout &lt;&lt; \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u6790\u6784\u51fd\u6570\n    ~Person() {\n        cout &lt;&lt; \"\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\npublic:\n    int age;\n};\n\n//2\u3001\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\n//\u8c03\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570\nvoid test01() {\n    Person p; //\u8c03\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570\n}\n\n//\u8c03\u7528\u6709\u53c2\u7684\u6784\u9020\u51fd\u6570\nvoid test02() {\n\n    //2.1  \u62ec\u53f7\u6cd5\uff0c\u5e38\u7528\n    Person p1(10);\n    //\u6ce8\u610f1\uff1a\u8c03\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u52a0\u62ec\u53f7\uff0c\u5982\u679c\u52a0\u4e86\u7f16\u8bd1\u5668\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\n    //Person p2();\n\n    //2.2 \u663e\u5f0f\u6cd5\n    Person p2 = Person(10); \n    Person p3 = Person(p2);\n    //Person(10)\u5355\u72ec\u5199\u5c31\u662f\u533f\u540d\u5bf9\u8c61  \u5f53\u524d\u884c\u7ed3\u675f\u4e4b\u540e\uff0c\u9a6c\u4e0a\u6790\u6784\n\n    //2.3 \u9690\u5f0f\u8f6c\u6362\u6cd5\n    Person p4 = 10; // Person p4 = Person(10); \n    Person p5 = p4; // Person p5 = Person(p4); \n\n    //\u6ce8\u610f2\uff1a\u4e0d\u80fd\u5229\u7528 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u521d\u59cb\u5316\u533f\u540d\u5bf9\u8c61 \u7f16\u8bd1\u5668\u8ba4\u4e3a\u662f\u5bf9\u8c61\u58f0\u660e\n    Person p5(p4);\n}\n\nint main() {\n\n    test01();\n    //test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#32","title":"3.2 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8c03\u7528\u65f6\u673a","text":"<p>C++\u4e2d\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8c03\u7528\u65f6\u673a\u901a\u5e38\u6709\u4e09\u79cd\u60c5\u51b5</p> <ul> <li>\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u5b8c\u6bd5\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u5bf9\u8c61</li> <li>\u503c\u4f20\u9012\u7684\u65b9\u5f0f\u7ed9\u51fd\u6570\u53c2\u6570\u4f20\u503c</li> <li>\u4ee5\u503c\u65b9\u5f0f\u8fd4\u56de\u5c40\u90e8\u5bf9\u8c61</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Person {\npublic:\n    Person() {\n        cout &lt;&lt; \"\u65e0\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n        mAge = 0;\n    }\n    Person(int age) {\n        cout &lt;&lt; \"\u6709\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n        mAge = age;\n    }\n    Person(const Person&amp; p) {\n        cout &lt;&lt; \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n        mAge = p.mAge;\n    }\n    //\u6790\u6784\u51fd\u6570\u5728\u91ca\u653e\u5185\u5b58\u4e4b\u524d\u8c03\u7528\n    ~Person() {\n        cout &lt;&lt; \"\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\npublic:\n    int mAge;\n};\n\n//1. \u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u5b8c\u6bd5\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u5bf9\u8c61\nvoid test01() {\n\n    Person man(100); //p\u5bf9\u8c61\u5df2\u7ecf\u521b\u5efa\u5b8c\u6bd5\n    Person newman(man); //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    Person newman2 = man; //\u62f7\u8d1d\u6784\u9020\n\n    //Person newman3;\n    //newman3 = man; //\u4e0d\u662f\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8d4b\u503c\u64cd\u4f5c\n}\n\n//2. \u503c\u4f20\u9012\u7684\u65b9\u5f0f\u7ed9\u51fd\u6570\u53c2\u6570\u4f20\u503c\n//\u76f8\u5f53\u4e8ePerson p1 = p;\nvoid doWork(Person p1) {}\nvoid test02() {\n    Person p; //\u65e0\u53c2\u6784\u9020\u51fd\u6570\n    doWork(p);\n}\n\n//3. \u4ee5\u503c\u65b9\u5f0f\u8fd4\u56de\u5c40\u90e8\u5bf9\u8c61\nPerson doWork2()\n{\n    Person p1;\n    cout &lt;&lt; (int *)&amp;p1 &lt;&lt; endl;\n    return p1;\n}\n\nvoid test03()\n{\n    Person p = doWork2();\n    cout &lt;&lt; (int *)&amp;p &lt;&lt; endl;\n}\n\n\nint main() {\n\n    //test01();\n    //test02();\n    test03();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#33","title":"3.3 \u6784\u9020\u51fd\u6570\u8c03\u7528\u89c4\u5219","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cc++\u7f16\u8bd1\u5668\u81f3\u5c11\u7ed9\u4e00\u4e2a\u7c7b\u6dfb\u52a03\u4e2a\u51fd\u6570</p> <p>1\uff0e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570(\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a)</p> <p>2\uff0e\u9ed8\u8ba4\u6790\u6784\u51fd\u6570(\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a)</p> <p>3\uff0e\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5c5e\u6027\u8fdb\u884c\u503c\u62f7\u8d1d</p> <p>\u6784\u9020\u51fd\u6570\u8c03\u7528\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5982\u679c\u7528\u6237\u5b9a\u4e49\u6709\u53c2\u6784\u9020\u51fd\u6570\uff0cc++\u4e0d\u5728\u63d0\u4f9b\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\uff0c\u4f46\u662f\u4f1a\u63d0\u4f9b\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020</p> </li> <li> <p>\u5982\u679c\u7528\u6237\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0cc++\u4e0d\u4f1a\u518d\u63d0\u4f9b\u5176\u4ed6\u6784\u9020\u51fd\u6570</p> </li> </ul>"},{"location":"C%2B%2B/01-class1/#34","title":"3.4 \u521d\u59cb\u5316\u5217\u8868","text":"<p>\u4f5c\u7528\uff1a</p> <p>C++\u63d0\u4f9b\u4e86\u521d\u59cb\u5316\u5217\u8868\u8bed\u6cd5\uff0c\u7528\u6765\u521d\u59cb\u5316\u5c5e\u6027</p> <p>\u8bed\u6cd5\uff1a<code>\u6784\u9020\u51fd\u6570()\uff1a\u5c5e\u60271(\u503c1),\u5c5e\u60272\uff08\u503c2\uff09... {}</code></p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Person {\npublic:\n\n    ////\u4f20\u7edf\u65b9\u5f0f\u521d\u59cb\u5316\n    //Person(int a, int b, int c) {\n    //  m_A = a;\n    //  m_B = b;\n    //  m_C = c;\n    //}\n\n    //\u521d\u59cb\u5316\u5217\u8868\u65b9\u5f0f\u521d\u59cb\u5316\n    Person(int a, int b, int c) :m_A(a), m_B(b), m_C(c) {}\n    void PrintPerson() {\n        cout &lt;&lt; \"mA:\" &lt;&lt; m_A &lt;&lt; endl;\n        cout &lt;&lt; \"mB:\" &lt;&lt; m_B &lt;&lt; endl;\n        cout &lt;&lt; \"mC:\" &lt;&lt; m_C &lt;&lt; endl;\n    }\nprivate:\n    int m_A;\n    int m_B;\n    int m_C;\n};\n\nint main() {\n\n    Person p(1, 2, 3);\n    p.PrintPerson();\n\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#35","title":"3.5 \u6784\u9020\u548c\u6790\u6784\u987a\u5e8f","text":"C++<pre><code>class A {}\nclass B\n{\n    A a;\n}\n</code></pre> <ul> <li> <p>\u6784\u9020\u987a\u5e8f\uff1a\u5148\u6784\u9020 A\uff08\u6210\u5458\u5bf9\u8c61\uff09\uff0c\u518d\u6784\u9020 B \u81ea\u8eab</p> </li> <li> <p>\u6790\u6784\u987a\u5e8f\uff1a\u5148\u6790\u6784 B \u81ea\u8eab\uff0c\u518d\u6790\u6784 A\uff08\u6210\u5458\u5bf9\u8c61\uff09</p> </li> </ul> <p>\u6784\u9020\u4ece\u201c\u91cc\u5230\u5916\u201d\uff0c\u6790\u6784\u4ece\u201c\u5916\u5230\u91cc\u201d</p>"},{"location":"C%2B%2B/01-class1/#4","title":"4. \u9759\u6001\u6210\u5458","text":"<p>\u9759\u6001\u6210\u5458\u5c31\u662f\u5728\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u524d\u52a0\u4e0a\u5173\u952e\u5b57static\uff0c\u79f0\u4e3a\u9759\u6001\u6210\u5458</p> <p>\u9759\u6001\u6210\u5458\u5206\u4e3a\uff1a</p> <p>\u9759\u6001\u6210\u5458\u53d8\u91cf </p> <ul> <li>\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e</li> <li>\u5728\u7f16\u8bd1\u9636\u6bb5\u5206\u914d\u5185\u5b58</li> <li>\u7c7b\u5185\u58f0\u660e\uff0c\u7c7b\u5916\u521d\u59cb\u5316</li> </ul> <p>\u9759\u6001\u6210\u5458\u51fd\u6570    *  \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u7c7b\u7684\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u6ca1\u6709this\u6307\u9488    *  \u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf</p> <p>\u793a\u4f8b1 \uff1a\u9759\u6001\u6210\u5458\u53d8\u91cf</p> C++<pre><code>class Person\n{\n\npublic:\n\n    static int m_A; //\u9759\u6001\u6210\u5458\u53d8\u91cf\n\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u7279\u70b9\uff1a\n    //1 \u5728\u7f16\u8bd1\u9636\u6bb5\u5206\u914d\u5185\u5b58\n    //2 \u7c7b\u5185\u58f0\u660e\uff0c\u7c7b\u5916\u521d\u59cb\u5316\n    //3 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e\n\nprivate:\n    static int m_B; //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e5f\u662f\u6709\u8bbf\u95ee\u6743\u9650\u7684\n};\nint Person::m_A = 10;\nint Person::m_B = 10;\n\nvoid test01()\n{\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\n\n    //1\u3001\u901a\u8fc7\u5bf9\u8c61\n    Person p1;\n    p1.m_A = 100;\n    cout &lt;&lt; \"p1.m_A = \" &lt;&lt; p1.m_A &lt;&lt; endl;\n\n    Person p2;\n    p2.m_A = 200;\n    cout &lt;&lt; \"p1.m_A = \" &lt;&lt; p1.m_A &lt;&lt; endl; //\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e\n    cout &lt;&lt; \"p2.m_A = \" &lt;&lt; p2.m_A &lt;&lt; endl;\n\n    //2\u3001\u901a\u8fc7\u7c7b\u540d\n    cout &lt;&lt; \"m_A = \" &lt;&lt; Person::m_A &lt;&lt; endl;\n\n\n    //cout &lt;&lt; \"m_B = \" &lt;&lt; Person::m_B &lt;&lt; endl; //\u79c1\u6709\u6743\u9650\u8bbf\u95ee\u4e0d\u5230\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u793a\u4f8b2\uff1a\u9759\u6001\u6210\u5458\u51fd\u6570</p> C++<pre><code>class Person\n{\n\npublic:\n\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u7279\u70b9\uff1a\n    //1 \u7a0b\u5e8f\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\n    //2 \u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\n\n    static void func()\n    {\n        cout &lt;&lt; \"func\u8c03\u7528\" &lt;&lt; endl;\n        m_A = 100;\n        //m_B = 100; //\u9519\u8bef\uff0c\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\n    }\n\n    static int m_A; //\u9759\u6001\u6210\u5458\u53d8\u91cf\n    int m_B; // \nprivate:\n\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u4e5f\u662f\u6709\u8bbf\u95ee\u6743\u9650\u7684\n    static void func2()\n    {\n        cout &lt;&lt; \"func2\u8c03\u7528\" &lt;&lt; endl;\n    }\n};\nint Person::m_A = 10;\n\n\nvoid test01()\n{\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\n\n    //1\u3001\u901a\u8fc7\u5bf9\u8c61\n    Person p1;\n    p1.func();\n\n    //2\u3001\u901a\u8fc7\u7c7b\u540d\n    Person::func();\n\n\n    //Person::func2(); //\u79c1\u6709\u6743\u9650\u8bbf\u95ee\u4e0d\u5230\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#5-this","title":"5. \u5bf9\u8c61\u6a21\u578b\u548cthis\u6307\u9488","text":""},{"location":"C%2B%2B/01-class1/#51","title":"5.1 \u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570","text":"<p>\u5728C++\u4e2d\uff0c\u7c7b\u5185\u7684\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u5206\u5f00\u5b58\u50a8</p> <p>\u53ea\u6709\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u624d\u5c5e\u4e8e\u7c7b\u7684\u5bf9\u8c61\u4e0a</p> C++<pre><code>class Person {\npublic:\n    Person() {\n        mA = 0;\n    }\n    //\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u5360\u5bf9\u8c61\u7a7a\u95f4\n    int mA;\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\n    static int mB; \n    //\u51fd\u6570\u4e5f\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\uff0c\u6240\u6709\u51fd\u6570\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\u5b9e\u4f8b\n    void func() {\n        cout &lt;&lt; \"mA:\" &lt;&lt; this-&gt;mA &lt;&lt; endl;\n    }\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u4e5f\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\n    static void sfunc() {\n    }\n};\n\nint main() {\n\n    cout &lt;&lt; sizeof(Person) &lt;&lt; endl; // 4\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#52-this","title":"5.2 this\u6307\u9488","text":"<p>this\u6307\u9488\u6307\u5411\u88ab\u8c03\u7528\u7684\u6210\u5458\u51fd\u6570\u6240\u5c5e\u7684\u5bf9\u8c61</p> <p>this\u6307\u9488\u7684\u7528\u9014\uff1a</p> <ul> <li>\u5f53\u5f62\u53c2\u548c\u6210\u5458\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u53ef\u7528this\u6307\u9488\u6765\u533a\u5206</li> <li>\u5728\u7c7b\u7684\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u4e2d\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\uff0c\u53ef\u4f7f\u7528return *this</li> </ul> C++<pre><code>class Person\n{\npublic:\n\n    Person(int age)\n    {\n        //1\u3001\u5f53\u5f62\u53c2\u548c\u6210\u5458\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u53ef\u7528this\u6307\u9488\u6765\u533a\u5206\n        this-&gt;age = age;\n    }\n\n    Person&amp; PersonAddPerson(Person p)\n    {\n        this-&gt;age += p.age;\n        //\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\n        return *this;\n    }\n\n    int age;\n};\n\nvoid test01()\n{\n    Person p1(10);\n    cout &lt;&lt; \"p1.age = \" &lt;&lt; p1.age &lt;&lt; endl;\n\n    Person p2(10);\n    p2.PersonAddPerson(p1).PersonAddPerson(p1).PersonAddPerson(p1);\n    cout &lt;&lt; \"p2.age = \" &lt;&lt; p2.age &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#53","title":"5.3 \u7a7a\u6307\u9488\u8bbf\u95ee\u6210\u5458\u51fd\u6570","text":"<p>C++\u4e2d\u7a7a\u6307\u9488\u4e5f\u662f\u53ef\u4ee5\u8c03\u7528\u6210\u5458\u51fd\u6570\u7684\uff0c\u4f46\u662f\u4e5f\u8981\u6ce8\u610f\u6709\u6ca1\u6709\u7528\u5230this\u6307\u9488</p> <p>\u5982\u679c\u7528\u5230this\u6307\u9488\uff0c\u9700\u8981\u52a0\u4ee5\u5224\u65ad\u4fdd\u8bc1\u4ee3\u7801\u7684\u5065\u58ee\u6027</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u7a7a\u6307\u9488\u8bbf\u95ee\u6210\u5458\u51fd\u6570\nclass Person {\npublic:\n\n    void ShowClassName() {\n        cout &lt;&lt; \"\u6211\u662fPerson\u7c7b!\" &lt;&lt; endl;\n    }\n\n    void ShowPerson() {\n        if (this == NULL) {\n            return;\n        }\n        cout &lt;&lt; mAge &lt;&lt; endl;\n    }\n\npublic:\n    int mAge;\n};\n\nvoid test01()\n{\n    Person * p = NULL;\n    p-&gt;ShowClassName(); //\u7a7a\u6307\u9488\uff0c\u53ef\u4ee5\u8c03\u7528\u6210\u5458\u51fd\u6570\n    p-&gt;ShowPerson();  //\u4f46\u662f\u5982\u679c\u6210\u5458\u51fd\u6570\u4e2d\u7528\u5230\u4e86this\u6307\u9488\uff0c\u5c31\u4e0d\u53ef\u4ee5\u4e86\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#6-const","title":"6. const \u4fee\u9970\u6210\u5458\u51fd\u6570","text":"<p>\u5e38\u51fd\u6570\uff1a</p> <ul> <li>\u6210\u5458\u51fd\u6570\u540e\u52a0const\u540e\u6211\u4eec\u79f0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u4e3a\u5e38\u51fd\u6570</li> <li>\u5e38\u51fd\u6570\u5185\u4e0d\u53ef\u4ee5\u4fee\u6539\u6210\u5458\u53d8\u91cf</li> <li>\u6210\u5458\u53d8\u91cf\u58f0\u660e\u65f6\u52a0\u5173\u952e\u5b57mutable\u540e\uff0c\u5728\u5e38\u51fd\u6570\u4e2d\u4f9d\u7136\u53ef\u4ee5\u4fee\u6539 <p>mutable \u7528\u4e8e\u7a81\u7834 const \u9650\u5236\uff0c\u8ba9\u7279\u5b9a\u6210\u5458\u53d8\u91cf\u5728 const \u6210\u5458\u51fd\u6570\u4e2d\u4ecd\u7136\u53ef\u4ee5\u88ab\u4fee\u6539\u3002</p> </li> </ul> <p>\u5e38\u5bf9\u8c61\uff1a</p> <ul> <li>\u58f0\u660e\u5bf9\u8c61\u524d\u52a0const\u79f0\u8be5\u5bf9\u8c61\u4e3a\u5e38\u5bf9\u8c61</li> <li>\u5e38\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u5e38\u51fd\u6570</li> <li>\u5e38\u5bf9\u8c61\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\uff0c\u4f46\u53ef\u4ee5\u8bbf\u95ee</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Person {\npublic:\n    Person() {\n        m_A = 0;\n        m_B = 0;\n    }\n\n    //this\u6307\u9488\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u6307\u9488\u7684\u6307\u5411\u4e0d\u53ef\u4fee\u6539\n    //\u5982\u679c\u60f3\u8ba9\u6307\u9488\u6307\u5411\u7684\u503c\u4e5f\u4e0d\u53ef\u4ee5\u4fee\u6539\uff0c\u9700\u8981\u58f0\u660e\u5e38\u51fd\u6570\n    void ShowPerson() const {\n        //const Type* const pointer;\n        //this = NULL; //\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u6307\u5411 Person* const this;\n        //this-&gt;mA = 100; //\u4f46\u662fthis\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u7684\u6570\u636e\u662f\u53ef\u4ee5\u4fee\u6539\u7684\n\n        //const\u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u8868\u793a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u6570\u636e\u4e0d\u80fd\u4fee\u6539\uff0c\u9664\u4e86mutable\u4fee\u9970\u7684\u53d8\u91cf\n        this-&gt;m_B = 100;\n    }\n\n    void MyFunc() const {\n        //mA = 10000;\n    }\n\npublic:\n    int m_A;\n    mutable int m_B; //\u53ef\u4fee\u6539 \u53ef\u53d8\u7684\n};\n\n\n//const\u4fee\u9970\u5bf9\u8c61  \u5e38\u5bf9\u8c61\nvoid test01() {\n\n    const Person person; //\u5e38\u91cf\u5bf9\u8c61  \n    cout &lt;&lt; person.m_A &lt;&lt; endl;\n    //person.mA = 100; //\u5e38\u5bf9\u8c61\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u503c,\u4f46\u662f\u53ef\u4ee5\u8bbf\u95ee\n    person.m_B = 100; //\u4f46\u662f\u5e38\u5bf9\u8c61\u53ef\u4ee5\u4fee\u6539mutable\u4fee\u9970\u6210\u5458\u53d8\u91cf\n\n    //\u5e38\u5bf9\u8c61\u8bbf\u95ee\u6210\u5458\u51fd\u6570\n    person.MyFunc(); //\u5e38\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u7684\u51fd\u6570\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#7","title":"7. \u53cb\u5143","text":"<p>\u5728 C++ \u4e2d\uff0c\u53cb\u5143\uff08friend\uff09\u662f\u4e00\u79cd\u673a\u5236\uff0c\u5141\u8bb8\u4e00\u4e2a\u51fd\u6570\u6216\u7c7b\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u7684\u79c1\u6709\uff08private\uff09\u6216\u53d7\u4fdd\u62a4\uff08protected\uff09\u6210\u5458\uff0c\u5373\u4f7f\u5b83\u4e0d\u662f\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u3002</p> <p>\u53cb\u5143\u7684\u4e09\u79cd\u5b9e\u73b0</p> <ul> <li>\u5168\u5c40\u51fd\u6570\u505a\u53cb\u5143</li> <li>\u7c7b\u505a\u53cb\u5143</li> <li>\u6210\u5458\u51fd\u6570\u505a\u53cb\u5143</li> </ul> <p>\u2705 \u5b9e\u9645\u4f7f\u7528\u573a\u666f - \u91cd\u8f7d\u64cd\u4f5c\u7b26\uff08\u5982 &lt;&lt;, +\uff09\u65f6\u9700\u8981\u8bbf\u95ee\u7c7b\u7684\u79c1\u6709\u6570\u636e\uff1b</p> <ul> <li> <p>\u4e24\u4e2a\u7c7b\u4e92\u4e3a\u201c\u4eb2\u5bc6\u534f\u4f5c\u5173\u7cfb\u201d\uff0c\u9700\u8981\u5171\u4eab\u6570\u636e\uff1b</p> </li> <li> <p>\u67d0\u4e9b\u5de5\u5177\u51fd\u6570\u9700\u8981\u8bbf\u95ee\u7c7b\u5185\u90e8\u6570\u636e\u505a\u4f18\u5316\u3002</p> </li> </ul>"},{"location":"C%2B%2B/01-class1/#71","title":"7.1 \u5168\u5c40\u51fd\u6570\u505a\u53cb\u5143","text":"<p>\uff08\u6700\u5e38\u89c1\u7684\u65b9\u5f0f\uff09</p> C++<pre><code>class Building\n{\n    //\u544a\u8bc9\u7f16\u8bd1\u5668 goodGay\u5168\u5c40\u51fd\u6570 \u662f Building\u7c7b\u7684\u597d\u670b\u53cb\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u4e2d\u7684\u79c1\u6709\u5185\u5bb9\n    friend void goodGay(Building * building); // \u58f0\u660e\u53cb\u5143\u51fd\u6570\n\npublic:\n\n    Building()\n    {\n        this-&gt;m_SittingRoom = \"\u5ba2\u5385\";\n        this-&gt;m_BedRoom = \"\u5367\u5ba4\";\n    }\n\n\npublic:\n    string m_SittingRoom; //\u5ba2\u5385\n\nprivate:\n    string m_BedRoom; //\u5367\u5ba4\n};\n\n\nvoid goodGay(Building * building)\n{\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\uff1a \" &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\uff1a \" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;\n}\n\n\nvoid test01()\n{\n    Building b;\n    goodGay(&amp;b);\n}\n\nint main(){\n\n    test01();\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#72","title":"7.2 \u7c7b\u505a\u53cb\u5143","text":"C++<pre><code>class A {\n    friend class B;  // B \u662f A \u7684\u53cb\u5143\u7c7b\nprivate:\n    int data = 100;\n};\n\nclass B {\npublic:\n    void accessA(A&amp; a) {\n        std::cout &lt;&lt; a.data &lt;&lt; std::endl;  // \u2705 \u53ef\u8bbf\u95ee A \u7684\u79c1\u6709\u6210\u5458\n    }\n};\n</code></pre> C++<pre><code>class Building;\nclass goodGay\n{\npublic:\n\n    goodGay();\n    void visit();\n\nprivate:\n    Building *building;\n};\n\n\nclass Building\n{\n    //\u544a\u8bc9\u7f16\u8bd1\u5668 goodGay\u7c7b\u662fBuilding\u7c7b\u7684\u597d\u670b\u53cb\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5230Building\u7c7b\u4e2d\u79c1\u6709\u5185\u5bb9\n    friend class goodGay;\n\npublic:\n    Building();\n\npublic:\n    string m_SittingRoom; //\u5ba2\u5385\nprivate:\n    string m_BedRoom;//\u5367\u5ba4\n};\n\nBuilding::Building()\n{\n    this-&gt;m_SittingRoom = \"\u5ba2\u5385\";\n    this-&gt;m_BedRoom = \"\u5367\u5ba4\";\n}\n\ngoodGay::goodGay()\n{\n    building = new Building;\n}\n\nvoid goodGay::visit()\n{\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    goodGay gg;\n    gg.visit();\n\n}\n\nint main(){\n\n    test01();\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#73","title":"7.3 \u6210\u5458\u51fd\u6570\u505a\u53cb\u5143","text":"C++<pre><code>class Building;\nclass goodGay\n{\npublic:\n\n    goodGay();\n    void visit(); //\u53ea\u8ba9visit\u51fd\u6570\u4f5c\u4e3aBuilding\u7684\u597d\u670b\u53cb\uff0c\u53ef\u4ee5\u53d1\u8bbf\u95eeBuilding\u4e2d\u79c1\u6709\u5185\u5bb9\n    void visit2(); \n\nprivate:\n    Building *building;\n};\n\n\nclass Building\n{\n    //\u544a\u8bc9\u7f16\u8bd1\u5668  goodGay\u7c7b\u4e2d\u7684visit\u6210\u5458\u51fd\u6570 \u662fBuilding\u597d\u670b\u53cb\uff0c\u53ef\u4ee5\u8bbf\u95ee\u79c1\u6709\u5185\u5bb9\n    friend void goodGay::visit();\n\npublic:\n    Building();\n\npublic:\n    string m_SittingRoom; //\u5ba2\u5385\nprivate:\n    string m_BedRoom;//\u5367\u5ba4\n};\n\nBuilding::Building()\n{\n    this-&gt;m_SittingRoom = \"\u5ba2\u5385\";\n    this-&gt;m_BedRoom = \"\u5367\u5ba4\";\n}\n\ngoodGay::goodGay()\n{\n    building = new Building;\n}\n\nvoid goodGay::visit()\n{\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;\n}\n\nvoid goodGay::visit2()\n{\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;\n    //cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    goodGay  gg;\n    gg.visit();\n\n}\n\nint main(){\n\n    test01();\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#8","title":"8. \u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6982\u5ff5\uff1a\u5bf9\u5df2\u6709\u7684\u8fd0\u7b97\u7b26\u91cd\u65b0\u8fdb\u884c\u5b9a\u4e49\uff0c\u8d4b\u4e88\u5176\u53e6\u4e00\u79cd\u529f\u80fd\uff0c\u4ee5\u9002\u5e94\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b</p>"},{"location":"C%2B%2B/01-class1/#81","title":"8.1 \u52a0\u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u4f5c\u7528\uff1a\u5b9e\u73b0\u4e24\u4e2a\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u76f8\u52a0\u7684\u8fd0\u7b97</p> C++<pre><code>class Person {\npublic:\n    Person() {};\n    Person(int a, int b)\n    {\n        this-&gt;m_A = a;\n        this-&gt;m_B = b;\n    }\n    //\u6210\u5458\u51fd\u6570\u5b9e\u73b0 + \u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d\n    Person operator+(const Person&amp; p) {\n        Person temp;\n        temp.m_A = this-&gt;m_A + p.m_A;\n        temp.m_B = this-&gt;m_B + p.m_B;\n        return temp;\n    }\n\n\npublic:\n    int m_A;\n    int m_B;\n};\n\n//\u5168\u5c40\u51fd\u6570\u5b9e\u73b0 + \u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d\n//Person operator+(const Person&amp; p1, const Person&amp; p2) {\n//  Person temp(0, 0);\n//  temp.m_A = p1.m_A + p2.m_A;\n//  temp.m_B = p1.m_B + p2.m_B;\n//  return temp;\n//}\n\n//\u8fd0\u7b97\u7b26\u91cd\u8f7d \u53ef\u4ee5\u53d1\u751f\u51fd\u6570\u91cd\u8f7d \nPerson operator+(const Person&amp; p2, int val)  \n{\n    Person temp;\n    temp.m_A = p2.m_A + val;\n    temp.m_B = p2.m_B + val;\n    return temp;\n}\n\nvoid test() {\n\n    Person p1(10, 10);\n    Person p2(20, 20);\n\n    //\u6210\u5458\u51fd\u6570\u65b9\u5f0f\n    Person p3 = p2 + p1;  //\u76f8\u5f53\u4e8e p2.operaor+(p1)\n    cout &lt;&lt; \"mA:\" &lt;&lt; p3.m_A &lt;&lt; \" mB:\" &lt;&lt; p3.m_B &lt;&lt; endl;\n\n\n    Person p4 = p3 + 10; //\u76f8\u5f53\u4e8e operator+(p3,10)\n    cout &lt;&lt; \"mA:\" &lt;&lt; p4.m_A &lt;&lt; \" mB:\" &lt;&lt; p4.m_B &lt;&lt; endl;\n\n}\n\nint main() {\n\n    test();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/01-class1/#82","title":"8.2 \u5de6\u79fb\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u4f5c\u7528\uff1a\u53ef\u4ee5\u8f93\u51fa\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b</p> <p>demo1 C++<pre><code>class Person {\nprivate:\n    string name;\n    int age;\n\npublic:\n    Person(string n, int a) : name(n), age(a) {}\n\n    // \ud83d\udc47 \u53cb\u5143\u51fd\u6570\u58f0\u660e\uff1a\u5141\u8bb8\u8bbf\u95ee\u79c1\u6709\u6210\u5458\n    friend ostream&amp; operator&lt;&lt;(ostream&amp; os, const Person&amp; p);\n};\nostream&amp; operator&lt;&lt;(ostream&amp; os, const Person&amp; p) {\n    os &lt;&lt; \"Name: \" &lt;&lt; p.name &lt;&lt; \", Age: \" &lt;&lt; p.age;  // \u80fd\u8bbf\u95ee\u79c1\u6709\u6210\u5458\n    return os;\n}\n</code></pre> \u56e0\u4e3a <code>operator&lt;&lt;</code> \u662f\u4e00\u4e2a\u666e\u901a\u51fd\u6570\uff08\u975e\u6210\u5458\u51fd\u6570\uff09\uff0c\u5b83\u5e76\u4e0d\u662f\u7c7b <code>Person</code> \u7684\u6210\u5458\u51fd\u6570\uff0c\u6ca1\u6709\u6743\u9650\u8bbf\u95ee <code>name</code> \u548c <code>age</code>\uff0c\u9664\u975e\u4f60\u663e\u5f0f\u5730\u544a\u8bc9\u7f16\u8bd1\u5668\u5b83\u662f <code>friend</code></p> <p>demo2 C++<pre><code>class Person {\n    friend ostream&amp; operator&lt;&lt;(ostream&amp; out, Person&amp; p);\n\npublic:\n\n    Person(int a, int b)\n    {\n        this-&gt;m_A = a;\n        this-&gt;m_B = b;\n    }\n\n    //\u6210\u5458\u51fd\u6570 \u5b9e\u73b0\u4e0d\u4e86  p &lt;&lt; cout \u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\n    //void operator&lt;&lt;(Person&amp; p){\n    //}\n\nprivate:\n    int m_A;\n    int m_B;\n};\n\n//\u5168\u5c40\u51fd\u6570\u5b9e\u73b0\u5de6\u79fb\u91cd\u8f7d\n//ostream\u5bf9\u8c61\u53ea\u80fd\u6709\u4e00\u4e2a\nostream&amp; operator&lt;&lt;(ostream&amp; out, Person&amp; p) {\n    out &lt;&lt; \"a:\" &lt;&lt; p.m_A &lt;&lt; \" b:\" &lt;&lt; p.m_B;\n    return out;\n}\n\nvoid test() {\n\n    Person p1(10, 20);\n\n    cout &lt;&lt; p1 &lt;&lt; \"hello world\" &lt;&lt; endl; //\u94fe\u5f0f\u7f16\u7a0b\n}\n\nint main() {\n\n    test();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre></p>"},{"location":"C%2B%2B/01-class1/#83","title":"8.3 \u9012\u589e\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"C++<pre><code>class MyInteger {\n\n    friend ostream&amp; operator&lt;&lt;(ostream&amp; out, MyInteger myint);\n\npublic:\n    MyInteger() {\n        m_Num = 0;\n    }\n    //\u524d\u7f6e++\n    MyInteger&amp; operator++() {\n        //\u5148++\n        m_Num++;\n        //\u518d\u8fd4\u56de\n        return *this;\n    }\n\n    //\u540e\u7f6e++\n    MyInteger operator++(int) {\n        //\u5148\u8fd4\u56de\n        MyInteger temp = *this; //\u8bb0\u5f55\u5f53\u524d\u672c\u8eab\u7684\u503c\uff0c\u7136\u540e\u8ba9\u672c\u8eab\u7684\u503c\u52a01\uff0c\u4f46\u662f\u8fd4\u56de\u7684\u662f\u4ee5\u524d\u7684\u503c\uff0c\u8fbe\u5230\u5148\u8fd4\u56de\u540e++\uff1b\n        m_Num++;\n        return temp;\n    }\n\nprivate:\n    int m_Num;\n};\n\n\nostream&amp; operator&lt;&lt;(ostream&amp; out, MyInteger myint) {\n    out &lt;&lt; myint.m_Num;\n    return out;\n}\n\n\n//\u524d\u7f6e++ \u5148++ \u518d\u8fd4\u56de\nvoid test01() {\n    MyInteger myInt;\n    cout &lt;&lt; ++myInt &lt;&lt; endl; // 1\n    cout &lt;&lt; myInt &lt;&lt; endl; // 1\n}\n\n//\u540e\u7f6e++ \u5148\u8fd4\u56de \u518d++\nvoid test02() {\n\n    MyInteger myInt;\n    cout &lt;&lt; myInt++ &lt;&lt; endl; // 0\n    cout &lt;&lt; myInt &lt;&lt; endl; // 1\n}\n\nint main() {\n\n    test01();\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a \u524d\u7f6e\u9012\u589e\u8fd4\u56de\u5f15\u7528\uff0c\u540e\u7f6e\u9012\u589e\u8fd4\u56de\u503c</p>"},{"location":"C%2B%2B/01-class1/#84","title":"8.4 \u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>c++\u7f16\u8bd1\u5668\u81f3\u5c11\u7ed9\u4e00\u4e2a\u7c7b\u6dfb\u52a04\u4e2a\u51fd\u6570</p> <ol> <li>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570(\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a)</li> <li>\u9ed8\u8ba4\u6790\u6784\u51fd\u6570(\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a)</li> <li>\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5c5e\u6027\u8fdb\u884c\u503c\u62f7\u8d1d</li> <li>\u8d4b\u503c\u8fd0\u7b97\u7b26 operator=, \u5bf9\u5c5e\u6027\u8fdb\u884c\u503c\u62f7\u8d1d</li> </ol> <p>\u5982\u679c\u7c7b\u4e2d\u6709\u5c5e\u6027\u6307\u5411\u5806\u533a\uff0c\u505a\u8d4b\u503c\u64cd\u4f5c\u65f6\u4e5f\u4f1a\u51fa\u73b0\u6df1\u6d45\u62f7\u8d1d\u95ee\u9898</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Person\n{\npublic:\n\n    Person(int age)\n    {\n        //\u5c06\u5e74\u9f84\u6570\u636e\u5f00\u8f9f\u5230\u5806\u533a\n        m_Age = new int(age);\n    }\n\n    //\u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26 \n    Person&amp; operator=(Person &amp;p)\n    {\n        if (m_Age != NULL)\n        {\n            delete m_Age;\n            m_Age = NULL;\n        }\n        //\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u4ee3\u7801\u662f\u6d45\u62f7\u8d1d\n        //m_Age = p.m_Age;\n\n        //\u63d0\u4f9b\u6df1\u62f7\u8d1d \u89e3\u51b3\u6d45\u62f7\u8d1d\u7684\u95ee\u9898\n        m_Age = new int(*p.m_Age);\n\n        //\u8fd4\u56de\u81ea\u8eab\n        return *this;\n    }\n\n\n    ~Person()\n    {\n        if (m_Age != NULL)\n        {\n            delete m_Age;\n            m_Age = NULL;\n        }\n    }\n\n    //\u5e74\u9f84\u7684\u6307\u9488\n    int *m_Age;\n\n};\n\n\nvoid test01()\n{\n    Person p1(18);\n\n    Person p2(20);\n\n    Person p3(30);\n\n    p3 = p2 = p1; //\u8d4b\u503c\u64cd\u4f5c\n\n    cout &lt;&lt; \"p1\u7684\u5e74\u9f84\u4e3a\uff1a\" &lt;&lt; *p1.m_Age &lt;&lt; endl;\n\n    cout &lt;&lt; \"p2\u7684\u5e74\u9f84\u4e3a\uff1a\" &lt;&lt; *p2.m_Age &lt;&lt; endl;\n\n    cout &lt;&lt; \"p3\u7684\u5e74\u9f84\u4e3a\uff1a\" &lt;&lt; *p3.m_Age &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    //int a = 10;\n    //int b = 20;\n    //int c = 30;\n\n    //c = b = a;\n    //cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; endl;\n    //cout &lt;&lt; \"b = \" &lt;&lt; b &lt;&lt; endl;\n    //cout &lt;&lt; \"c = \" &lt;&lt; c &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/02-class2/","title":"\u4e8c \u7c7b-\u7ee7\u627f","text":"<p>C++ \u4e2d\u7684 \u7ee7\u627f\uff08Inheritance\uff09 \u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e09\u5927\u7279\u6027\u4e4b\u4e00\uff08\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\uff09\u3002\u5b83\u5141\u8bb8\u901a\u8fc7\u5df2\u6709\u7684\u7c7b\u6d3e\u751f\u51fa\u65b0\u7c7b\uff0c\u4ece\u800c\u5b9e\u73b0\u4ee3\u7801\u590d\u7528\u548c\u4f53\u7cfb\u7ed3\u6784\u7684\u6269\u5c55\u3002</p>"},{"location":"C%2B%2B/02-class2/#1","title":"1. \u7236\u7c7b\u4e0e\u5b50\u7c7b","text":"C++<pre><code>class Animal {   // \u7236\u7c7b\npublic:\n    void eat() {\n        cout &lt;&lt; \"Animal is eating\" &lt;&lt; endl;\n    }\n};\n\nclass Dog : public Animal {  // \u5b50\u7c7b\npublic:\n    void bark() {\n        cout &lt;&lt; \"Dog is barking\" &lt;&lt; endl;\n    }\n};\n</code></pre> <p><code>Dog</code> \u7ee7\u627f\u4e86 <code>Animal</code>\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>Animal</code> \u7684 <code>eat()</code> \u65b9\u6cd5\uff1a</p> C++<pre><code>Dog d;\nd.eat();   // \u7ee7\u627f\u6765\u7684\u65b9\u6cd5\nd.bark();  // \u81ea\u5df1\u7684\u529f\u80fd\n</code></pre>"},{"location":"C%2B%2B/02-class2/#2","title":"2. \u7ee7\u627f\u7684\u7c7b\u578b\uff08\u8bbf\u95ee\u63a7\u5236\uff09","text":"<p>\u7ee7\u627f\u7684\u8bed\u6cd5\uff1a<code>class \u5b50\u7c7b : \u7ee7\u627f\u65b9\u5f0f  \u7236\u7c7b</code></p>"},{"location":"C%2B%2B/02-class2/#21","title":"2.1 \u7ee7\u627f\u65b9\u5f0f","text":"<p>\u7ee7\u627f\u65b9\u5f0f\u4e00\u5171\u6709\u4e09\u79cd\uff1a</p> <ul> <li>\u516c\u5171\u7ee7\u627f</li> <li>\u4fdd\u62a4\u7ee7\u627f</li> <li>\u79c1\u6709\u7ee7\u627f</li> </ul> C++<pre><code>class A {\npublic:    int x;\nprotected: int y;\nprivate:   int z;\n};\n\nclass B1 : public A {  // \u516c\u6709\u7ee7\u627f\n    // x \u662f public, y \u662f protected, z \u4e0d\u53ef\u8bbf\u95ee\n};\n\nclass B2 : protected A {  // \u4fdd\u62a4\u7ee7\u627f\n    // x \u662f protected, y \u662f protected, z \u4e0d\u53ef\u8bbf\u95ee\n};\n\nclass B3 : private A {  // \u79c1\u6709\u7ee7\u627f\n    // x \u662f private, y \u662f private, z \u4e0d\u53ef\u8bbf\u95ee\n};\n</code></pre> \u6210\u5458\u6743\u9650 public\u7ee7\u627f protected\u7ee7\u627f private\u7ee7\u627f public\u6210\u5458 \u53d8 public \u53d8 protected \u53d8 private protected\u6210\u5458 \u53d8 protected \u53d8 protected \u53d8 private private\u6210\u5458 \u4e0d\u53ef\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Base1\n{\npublic: \n    int m_A;\nprotected:\n    int m_B;\nprivate:\n    int m_C;\n};\n\n//\u516c\u5171\u7ee7\u627f\nclass Son1 :public Base1\n{\npublic:\n    void func()\n    {\n        m_A; //\u53ef\u8bbf\u95ee public\u6743\u9650\n        m_B; //\u53ef\u8bbf\u95ee protected\u6743\u9650\n        //m_C; //\u4e0d\u53ef\u8bbf\u95ee\n    }\n};\n\nvoid myClass()\n{\n    Son1 s1;\n    s1.m_A; //\u5176\u4ed6\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5230\u516c\u5171\u6743\u9650\n}\n\n//\u4fdd\u62a4\u7ee7\u627f\nclass Base2\n{\npublic:\n    int m_A;\nprotected:\n    int m_B;\nprivate:\n    int m_C;\n};\nclass Son2:protected Base2\n{\npublic:\n    void func()\n    {\n        m_A; //\u53ef\u8bbf\u95ee protected\u6743\u9650\n        m_B; //\u53ef\u8bbf\u95ee protected\u6743\u9650\n        //m_C; //\u4e0d\u53ef\u8bbf\u95ee\n    }\n};\nvoid myClass2()\n{\n    Son2 s;\n    //s.m_A; //\u4e0d\u53ef\u8bbf\u95ee\n}\n\n//\u79c1\u6709\u7ee7\u627f\nclass Base3\n{\npublic:\n    int m_A;\nprotected:\n    int m_B;\nprivate:\n    int m_C;\n};\nclass Son3:private Base3\n{\npublic:\n    void func()\n    {\n        m_A; //\u53ef\u8bbf\u95ee private\u6743\u9650\n        m_B; //\u53ef\u8bbf\u95ee private\u6743\u9650\n        //m_C; //\u4e0d\u53ef\u8bbf\u95ee\n    }\n};\nclass GrandSon3 :public Son3\n{\npublic:\n    void func()\n    {\n        //Son3\u662f\u79c1\u6709\u7ee7\u627f\uff0c\u6240\u4ee5\u7ee7\u627fSon3\u7684\u5c5e\u6027\u5728GrandSon3\u4e2d\u90fd\u65e0\u6cd5\u8bbf\u95ee\u5230\n        //m_A;\n        //m_B;\n        //m_C;\n    }\n};\n</code></pre>"},{"location":"C%2B%2B/02-class2/#22","title":"2.2 \u7ee7\u627f\u4e2d\u7684\u5bf9\u8c61\u6a21\u578b","text":"<p>\u95ee\u9898: \u4ece\u7236\u7c7b\u7ee7\u627f\u8fc7\u6765\u7684\u6210\u5458\uff0c\u54ea\u4e9b\u5c5e\u4e8e\u5b50\u7c7b\u5bf9\u8c61\u4e2d\uff1f</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Base\n{\npublic:\n    int m_A;\nprotected:\n    int m_B;\nprivate:\n    int m_C; //\u79c1\u6709\u6210\u5458\u53ea\u662f\u88ab\u9690\u85cf\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u4f1a\u7ee7\u627f\u4e0b\u53bb\n};\n\n//\u516c\u5171\u7ee7\u627f\nclass Son :public Base\n{\npublic:\n    int m_D;\n};\n\nvoid test01()\n{\n    cout &lt;&lt; \"sizeof Son = \" &lt;&lt; sizeof(Son) &lt;&lt; endl; // 16\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u79c1\u6709\u6210\u5458 m_C \u867d\u7136\u5728\u6d3e\u751f\u7c7b\u4e2d\u88ab\u5c01\u88c5\uff08\u4e0d\u53ef\u76f4\u63a5\u8bbf\u95ee\uff09\uff0c\u4f46\u4f9d\u65e7\u662f\u7236\u7c7b\u5b50\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u4e5f\u8ba1\u5165 Son \u7684\u603b\u4f53\u5927\u5c0f\u3002</p>"},{"location":"C%2B%2B/02-class2/#3","title":"3. \u7ee7\u627f\u7684\u6784\u9020\u548c\u6790\u6784","text":"<p>\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u540e\uff0c\u5f53\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\uff0c\u4e5f\u4f1a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570</p> <p>\u5b50\u7c7b\u5bf9\u8c61\u521b\u5efa\u65f6\uff1a</p> <ul> <li>\u5148\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570</li> <li>\u7136\u540e\u8c03\u7528\u5b50\u7c7b\u6784\u9020\u51fd\u6570</li> <li>\u6790\u6784\u987a\u5e8f\u4e0e\u6784\u9020\u76f8\u53cd</li> </ul> C++<pre><code>class A {\npublic:\n    A() { cout &lt;&lt; \"A\u6784\u9020\\n\"; }\n    ~A() { cout &lt;&lt; \"A\u6790\u6784\\n\"; }\n};\n\nclass B : public A {\npublic:\n    B() { cout &lt;&lt; \"B\u6784\u9020\\n\"; }\n    ~B() { cout &lt;&lt; \"B\u6790\u6784\\n\"; }\n};\n\nint main() {\n    B b;\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>A\u6784\u9020\nB\u6784\u9020\nB\u6790\u6784\nA\u6790\u6784\n</code></pre>"},{"location":"C%2B%2B/02-class2/#4","title":"4. \u7ee7\u627f\u4e0e\u540c\u540d\u8986\u76d6","text":""},{"location":"C%2B%2B/02-class2/#41","title":"4.1 \u7ee7\u627f\u540c\u540d\u6210\u5458\u5904\u7406\u65b9\u5f0f","text":"<p>\u95ee\u9898\uff1a\u5f53\u5b50\u7c7b\u4e0e\u7236\u7c7b\u51fa\u73b0\u540c\u540d\u7684\u6210\u5458\uff0c\u5982\u4f55\u901a\u8fc7\u5b50\u7c7b\u5bf9\u8c61\uff0c\u8bbf\u95ee\u5230\u5b50\u7c7b\u6216\u7236\u7c7b\u4e2d\u540c\u540d\u7684\u6570\u636e\u5462\uff1f</p> <ul> <li>\u8bbf\u95ee\u5b50\u7c7b\u540c\u540d\u6210\u5458   \u76f4\u63a5\u8bbf\u95ee\u5373\u53ef</li> <li>\u8bbf\u95ee\u7236\u7c7b\u540c\u540d\u6210\u5458   \u9700\u8981\u52a0\u4f5c\u7528\u57df</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Base {\npublic:\n    Base()\n    {\n        m_A = 100;\n    }\n\n    void func()\n    {\n        cout &lt;&lt; \"Base - func()\u8c03\u7528\" &lt;&lt; endl;\n    }\n\n    void func(int a)\n    {\n        cout &lt;&lt; \"Base - func(int a)\u8c03\u7528\" &lt;&lt; endl;\n    }\n\npublic:\n    int m_A;\n};\n\n\nclass Son : public Base {\npublic:\n    Son()\n    {\n        m_A = 200;\n    }\n\n    //\u5f53\u5b50\u7c7b\u4e0e\u7236\u7c7b\u62e5\u6709\u540c\u540d\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b50\u7c7b\u4f1a\u9690\u85cf\u7236\u7c7b\u4e2d\u6240\u6709\u7248\u672c\u7684\u540c\u540d\u6210\u5458\u51fd\u6570\n    //\u5982\u679c\u60f3\u8bbf\u95ee\u7236\u7c7b\u4e2d\u88ab\u9690\u85cf\u7684\u540c\u540d\u6210\u5458\u51fd\u6570\uff0c\u9700\u8981\u52a0\u7236\u7c7b\u7684\u4f5c\u7528\u57df\n    void func()\n    {\n        cout &lt;&lt; \"Son - func()\u8c03\u7528\" &lt;&lt; endl;\n    }\npublic:\n    int m_A;\n};\n\nvoid test01()\n{\n    Son s;\n\n    cout &lt;&lt; \"Son\u4e0b\u7684m_A = \" &lt;&lt; s.m_A &lt;&lt; endl;\n    cout &lt;&lt; \"Base\u4e0b\u7684m_A = \" &lt;&lt; s.Base::m_A &lt;&lt; endl;\n\n    s.func();\n    s.Base::func();\n    s.Base::func(10);\n\n}\nint main() {\n\n    test01();\n\n    system(\"pause\");\n    return EXIT_SUCCESS;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ol> <li>\u5b50\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5230\u5b50\u7c7b\u4e2d\u540c\u540d\u6210\u5458</li> <li>\u5b50\u7c7b\u5bf9\u8c61\u52a0\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u5230\u7236\u7c7b\u540c\u540d\u6210\u5458</li> <li>\u5f53\u5b50\u7c7b\u4e0e\u7236\u7c7b\u62e5\u6709\u540c\u540d\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b50\u7c7b\u4f1a\u9690\u85cf\u7236\u7c7b\u4e2d\u540c\u540d\u6210\u5458\u51fd\u6570\uff0c\u52a0\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u5230\u7236\u7c7b\u4e2d\u540c\u540d\u51fd\u6570</li> </ol>"},{"location":"C%2B%2B/02-class2/#42","title":"4.2 \u7ee7\u627f\u540c\u540d\u9759\u6001\u6210\u5458\u5904\u7406\u65b9\u5f0f","text":"<p>\u95ee\u9898\uff1a\u7ee7\u627f\u4e2d\u540c\u540d\u7684\u9759\u6001\u6210\u5458\u5728\u5b50\u7c7b\u5bf9\u8c61\u4e0a\u5982\u4f55\u8fdb\u884c\u8bbf\u95ee\uff1f</p> <p>\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\u51fa\u73b0\u540c\u540d\uff0c\u5904\u7406\u65b9\u5f0f\u4e00\u81f4</p> <ul> <li>\u8bbf\u95ee\u5b50\u7c7b\u540c\u540d\u6210\u5458   \u76f4\u63a5\u8bbf\u95ee\u5373\u53ef</li> <li>\u8bbf\u95ee\u7236\u7c7b\u540c\u540d\u6210\u5458   \u9700\u8981\u52a0\u4f5c\u7528\u57df</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Base {\npublic:\n    static void func()\n    {\n        cout &lt;&lt; \"Base - static void func()\" &lt;&lt; endl;\n    }\n    static void func(int a)\n    {\n        cout &lt;&lt; \"Base - static void func(int a)\" &lt;&lt; endl;\n    }\n\n    static int m_A;\n};\n\nint Base::m_A = 100;\n\nclass Son : public Base {\npublic:\n    static void func()\n    {\n        cout &lt;&lt; \"Son - static void func()\" &lt;&lt; endl;\n    }\n    static int m_A;\n};\n\nint Son::m_A = 200;\n\n//\u540c\u540d\u6210\u5458\u5c5e\u6027\nvoid test01()\n{\n    //\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\n    cout &lt;&lt; \"\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\uff1a \" &lt;&lt; endl;\n    Son s;\n    cout &lt;&lt; \"Son  \u4e0b m_A = \" &lt;&lt; s.m_A &lt;&lt; endl;\n    cout &lt;&lt; \"Base \u4e0b m_A = \" &lt;&lt; s.Base::m_A &lt;&lt; endl;\n\n    //\u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\n    cout &lt;&lt; \"\u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\uff1a \" &lt;&lt; endl;\n    cout &lt;&lt; \"Son  \u4e0b m_A = \" &lt;&lt; Son::m_A &lt;&lt; endl;\n    cout &lt;&lt; \"Base \u4e0b m_A = \" &lt;&lt; Son::Base::m_A &lt;&lt; endl;\n}\n\n//\u540c\u540d\u6210\u5458\u51fd\u6570\nvoid test02()\n{\n    //\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\n    cout &lt;&lt; \"\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\uff1a \" &lt;&lt; endl;\n    Son s;\n    s.func();\n    s.Base::func();\n\n    cout &lt;&lt; \"\u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\uff1a \" &lt;&lt; endl;\n    Son::func();\n    Son::Base::func();\n    //\u51fa\u73b0\u540c\u540d\uff0c\u5b50\u7c7b\u4f1a\u9690\u85cf\u6389\u7236\u7c7b\u4e2d\u6240\u6709\u540c\u540d\u6210\u5458\u51fd\u6570\uff0c\u9700\u8981\u52a0\u4f5c\u4f5c\u7528\u57df\u8bbf\u95ee\n    Son::Base::func(100);\n}\nint main() {\n\n    //test01();\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u540c\u540d\u9759\u6001\u6210\u5458\u5904\u7406\u65b9\u5f0f\u548c\u975e\u9759\u6001\u5904\u7406\u65b9\u5f0f\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u6709\u4e24\u79cd\u8bbf\u95ee\u7684\u65b9\u5f0f\uff08\u901a\u8fc7\u5bf9\u8c61 \u548c \u901a\u8fc7\u7c7b\u540d\uff09</p>"},{"location":"C%2B%2B/02-class2/#5","title":"5. \u591a\u7ee7\u627f\uff08\u4e0d\u63a8\u8350\u8fc7\u5ea6\u4f7f\u7528\uff09","text":"<p>C++\u5141\u8bb8\u4e00\u4e2a\u7c7b\u7ee7\u627f\u591a\u4e2a\u7c7b</p> <p>\u8bed\u6cd5\uff1a<code>class \u5b50\u7c7b \uff1a\u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b1 \uff0c \u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b2...</code></p> <p>\u591a\u7ee7\u627f\u53ef\u80fd\u4f1a\u5f15\u53d1\u7236\u7c7b\u4e2d\u6709\u540c\u540d\u6210\u5458\u51fa\u73b0\uff0c\u9700\u8981\u52a0\u4f5c\u7528\u57df\u533a\u5206</p> <p>C++\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e0d\u5efa\u8bae\u7528\u591a\u7ee7\u627f</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Base1 {\npublic:\n    Base1()\n    {\n        m_A = 100;\n    }\npublic:\n    int m_A;\n};\n\nclass Base2 {\npublic:\n    Base2()\n    {\n        m_A = 200;  //\u5f00\u59cb\u662fm_B \u4e0d\u4f1a\u51fa\u95ee\u9898\uff0c\u4f46\u662f\u6539\u4e3amA\u5c31\u4f1a\u51fa\u73b0\u4e0d\u660e\u786e\n    }\npublic:\n    int m_A;\n};\n\n//\u8bed\u6cd5\uff1aclass \u5b50\u7c7b\uff1a\u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b1 \uff0c\u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b2 \nclass Son : public Base2, public Base1 \n{\npublic:\n    Son()\n    {\n        m_C = 300;\n        m_D = 400;\n    }\npublic:\n    int m_C;\n    int m_D;\n};\n\n\n//\u591a\u7ee7\u627f\u5bb9\u6613\u4ea7\u751f\u6210\u5458\u540c\u540d\u7684\u60c5\u51b5\n//\u901a\u8fc7\u4f7f\u7528\u7c7b\u540d\u4f5c\u7528\u57df\u53ef\u4ee5\u533a\u5206\u8c03\u7528\u54ea\u4e00\u4e2a\u57fa\u7c7b\u7684\u6210\u5458\nvoid test01()\n{\n    Son s;\n    cout &lt;&lt; \"sizeof Son = \" &lt;&lt; sizeof(s) &lt;&lt; endl;\n    cout &lt;&lt; s.Base1::m_A &lt;&lt; endl;\n    cout &lt;&lt; s.Base2::m_A &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a \u591a\u7ee7\u627f\u4e2d\u5982\u679c\u7236\u7c7b\u4e2d\u51fa\u73b0\u4e86\u540c\u540d\u60c5\u51b5\uff0c\u5b50\u7c7b\u4f7f\u7528\u65f6\u5019\u8981\u52a0\u4f5c\u7528\u57df</p>"},{"location":"C%2B%2B/02-class2/#6","title":"6. \u865a\u7ee7\u627f\uff08\u89e3\u51b3\u83f1\u5f62\u7ee7\u627f\u95ee\u9898\uff09","text":"<p>\u83f1\u5f62\u7ee7\u627f\u6982\u5ff5\uff1a</p> <ul> <li>\u4e24\u4e2a\u5b50\u7c7b\u7ee7\u627f\u540c\u4e00\u4e2a\u7236\u7c7b</li> <li>\u53c8\u6709\u67d0\u4e2a\u7c7b\u540c\u65f6\u7ee7\u627f\u8005\u4e24\u4e2a\u5b50\u7c7b</li> <li>\u8fd9\u79cd\u7ee7\u627f\u88ab\u79f0\u4e3a\u83f1\u5f62\u7ee7\u627f\uff0c\u6216\u8005\u94bb\u77f3\u7ee7\u627f</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Animal\n{\npublic:\n    int m_Age;\n};\n\n//\u7ee7\u627f\u524d\u52a0virtual\u5173\u952e\u5b57\u540e\uff0c\u53d8\u4e3a\u865a\u7ee7\u627f\n//\u6b64\u65f6\u516c\u5171\u7684\u7236\u7c7bAnimal\u79f0\u4e3a\u865a\u57fa\u7c7b\nclass Sheep : virtual public Animal {};\nclass Tuo   : virtual public Animal {};\nclass SheepTuo : public Sheep, public Tuo {};\n\nvoid test01()\n{\n    SheepTuo st;\n    st.Sheep::m_Age = 100;\n    st.Tuo::m_Age = 200;\n\n    cout &lt;&lt; \"st.Sheep::m_Age = \" &lt;&lt; st.Sheep::m_Age &lt;&lt; endl;\n    cout &lt;&lt; \"st.Tuo::m_Age = \" &lt;&lt;  st.Tuo::m_Age &lt;&lt; endl;\n    cout &lt;&lt; \"st.m_Age = \" &lt;&lt; st.m_Age &lt;&lt; endl;\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u83f1\u5f62\u7ee7\u627f\u5e26\u6765\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5b50\u7c7b\u7ee7\u627f\u4e24\u4efd\u76f8\u540c\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u8d44\u6e90\u6d6a\u8d39\u4ee5\u53ca\u6beb\u65e0\u610f\u4e49</li> <li>\u5229\u7528\u865a\u7ee7\u627f\u53ef\u4ee5\u89e3\u51b3\u83f1\u5f62\u7ee7\u627f\u95ee\u9898</li> </ul>"},{"location":"C%2B%2B/03-class3/","title":"\u4e09 \u7c7b-\u591a\u6001","text":""},{"location":"C%2B%2B/03-class3/#1","title":"1. \u591a\u6001\u7684\u57fa\u672c\u6982\u5ff5","text":"<p>\u5728 C++ \u4e2d\uff0c\u591a\u6001(Polymorphism) \u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e09\u5927\u7279\u6027\u4e4b\u4e00\uff08\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\uff09\u3002\u5b83\u7684\u6838\u5fc3\u76ee\u7684\u662f\uff1a\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u5b50\u7c7b\u7684\u91cd\u5199\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u201c\u4e00\u4e2a\u63a5\u53e3\uff0c\u591a\u79cd\u5b9e\u73b0\u201d\u3002</p> \u7c7b\u578b \u63cf\u8ff0 \u662f\u5426\u8fd0\u884c\u65f6\u51b3\u5b9a \u9759\u6001\u591a\u6001 \u7f16\u8bd1\u65f6\u591a\u6001\uff0c\u5982\u51fd\u6570\u91cd\u8f7d\u3001\u6a21\u677f \u5426 \u52a8\u6001\u591a\u6001 \u8fd0\u884c\u65f6\u591a\u6001\uff0c\u4f9d\u8d56\u865a\u51fd\u6570\u673a\u5236 \u662f \u2705 <p>\u9759\u6001\u591a\u6001\u548c\u52a8\u6001\u591a\u6001\u533a\u522b\uff1a</p> <ul> <li>\u9759\u6001\u591a\u6001\u7684\u51fd\u6570\u5730\u5740\u65e9\u7ed1\u5b9a  -  \u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u51fd\u6570\u5730\u5740</li> <li>\u52a8\u6001\u591a\u6001\u7684\u51fd\u6570\u5730\u5740\u665a\u7ed1\u5b9a  -  \u8fd0\u884c\u9636\u6bb5\u786e\u5b9a\u51fd\u6570\u5730\u5740</li> </ul> <p>\u865a\u51fd\u6570\u5c31\u662f\u201c\u53ef\u4ee5\u88ab\u5b50\u7c7b\u91cd\u5199\u5e76\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u8c03\u7528\u201d\u7684\u51fd\u6570</p> C++<pre><code>class Animal\n{\npublic:\n    //Speak\u51fd\u6570\u5c31\u662f\u865a\u51fd\u6570\n    //\u51fd\u6570\u524d\u9762\u52a0\u4e0avirtual\u5173\u952e\u5b57\uff0c\u53d8\u6210\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u786e\u5b9a\u51fd\u6570\u8c03\u7528\u4e86\u3002\n    virtual void speak()\n    {\n        cout &lt;&lt; \"\u52a8\u7269\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n};\n\nclass Cat :public Animal\n{\npublic:\n    void speak()\n    {\n        cout &lt;&lt; \"\u5c0f\u732b\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n};\n\nclass Dog :public Animal\n{\npublic:\n\n    void speak()\n    {\n        cout &lt;&lt; \"\u5c0f\u72d7\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n\n};\n//\u6211\u4eec\u5e0c\u671b\u4f20\u5165\u4ec0\u4e48\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u8c03\u7528\u4ec0\u4e48\u5bf9\u8c61\u7684\u51fd\u6570\n//\u5982\u679c\u51fd\u6570\u5730\u5740\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u80fd\u786e\u5b9a\uff0c\u90a3\u4e48\u9759\u6001\u8054\u7f16\n//\u5982\u679c\u51fd\u6570\u5730\u5740\u5728\u8fd0\u884c\u9636\u6bb5\u624d\u80fd\u786e\u5b9a\uff0c\u5c31\u662f\u52a8\u6001\u8054\u7f16\n\nvoid DoSpeak(Animal &amp; animal)\n{\n    animal.speak();\n}\n//\n//\u591a\u6001\u6ee1\u8db3\u6761\u4ef6\uff1a \n//1\u3001\u6709\u7ee7\u627f\u5173\u7cfb\n//2\u3001\u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\n//\u591a\u6001\u4f7f\u7528\uff1a\n//\u7236\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\n\nvoid test01()\n{\n    Cat cat;\n    DoSpeak(cat); // \u5c0f\u732b\u5728\u8bf4\u8bdd\n\n\n    Dog dog;\n    DoSpeak(dog); // \u5c0f\u72d7\u5728\u8bf4\u8bdd\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <p>\u591a\u6001\u6ee1\u8db3\u6761\u4ef6</p> <ul> <li>\u6709\u7ee7\u627f\u5173\u7cfb</li> <li>\u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u865a\u51fd\u6570</li> </ul> <p>\u591a\u6001\u4f7f\u7528\u6761\u4ef6</p> <ul> <li>\u7236\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61</li> </ul> <p>\u91cd\u5199\uff1a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b  \u51fd\u6570\u540d \u53c2\u6570\u5217\u8868 \u5b8c\u5168\u4e00\u81f4\u79f0\u4e3a\u91cd\u5199</p>"},{"location":"C%2B%2B/03-class3/#2-","title":"2. \u591a\u6001\u6848\u4f8b\u4e00-\u8ba1\u7b97\u5668\u7c7b","text":"<p>\u6848\u4f8b\u63cf\u8ff0\uff1a</p> <p>\u5206\u522b\u5229\u7528\u666e\u901a\u5199\u6cd5\u548c\u591a\u6001\u6280\u672f\uff0c\u8bbe\u8ba1\u5b9e\u73b0\u4e24\u4e2a\u64cd\u4f5c\u6570\u8fdb\u884c\u8fd0\u7b97\u7684\u8ba1\u7b97\u5668\u7c7b</p> <p>\u591a\u6001\u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u4ee3\u7801\u7ec4\u7ec7\u7ed3\u6784\u6e05\u6670</li> <li>\u53ef\u8bfb\u6027\u5f3a</li> <li>\u5229\u4e8e\u524d\u671f\u548c\u540e\u671f\u7684\u6269\u5c55\u4ee5\u53ca\u7ef4\u62a4</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u666e\u901a\u5b9e\u73b0\nclass Calculator {\npublic:\n    int getResult(string oper)\n    {\n        if (oper == \"+\") {\n            return m_Num1 + m_Num2;\n        }\n        else if (oper == \"-\") {\n            return m_Num1 - m_Num2;\n        }\n        else if (oper == \"*\") {\n            return m_Num1 * m_Num2;\n        }\n        //\u5982\u679c\u8981\u63d0\u4f9b\u65b0\u7684\u8fd0\u7b97\uff0c\u9700\u8981\u4fee\u6539\u6e90\u7801\n    }\npublic:\n    int m_Num1;\n    int m_Num2;\n};\n\nvoid test01()\n{\n    //\u666e\u901a\u5b9e\u73b0\u6d4b\u8bd5\n    Calculator c;\n    c.m_Num1 = 10;\n    c.m_Num2 = 10;\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" + \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"+\") &lt;&lt; endl;\n\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" - \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"-\") &lt;&lt; endl;\n\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" * \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"*\") &lt;&lt; endl;\n}\n\n\n\n//\u591a\u6001\u5b9e\u73b0\n//\u62bd\u8c61\u8ba1\u7b97\u5668\u7c7b\n//\u591a\u6001\u4f18\u70b9\uff1a\u4ee3\u7801\u7ec4\u7ec7\u7ed3\u6784\u6e05\u6670\uff0c\u53ef\u8bfb\u6027\u5f3a\uff0c\u5229\u4e8e\u524d\u671f\u548c\u540e\u671f\u7684\u6269\u5c55\u4ee5\u53ca\u7ef4\u62a4\nclass AbstractCalculator\n{\npublic :\n\n    virtual int getResult()\n    {\n        return 0;\n    }\n\n    int m_Num1;\n    int m_Num2;\n};\n\n//\u52a0\u6cd5\u8ba1\u7b97\u5668\nclass AddCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 + m_Num2;\n    }\n};\n\n//\u51cf\u6cd5\u8ba1\u7b97\u5668\nclass SubCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 - m_Num2;\n    }\n};\n\n//\u4e58\u6cd5\u8ba1\u7b97\u5668\nclass MulCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 * m_Num2;\n    }\n};\n\n\nvoid test02()\n{\n    //\u521b\u5efa\u52a0\u6cd5\u8ba1\u7b97\u5668\n    AbstractCalculator *abc = new AddCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" + \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;  //\u7528\u5b8c\u4e86\u8bb0\u5f97\u9500\u6bc1\n\n    //\u521b\u5efa\u51cf\u6cd5\u8ba1\u7b97\u5668\n    abc = new SubCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" - \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;  \n\n    //\u521b\u5efa\u4e58\u6cd5\u8ba1\u7b97\u5668\n    abc = new MulCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" * \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;\n}\n\nint main() {\n\n    //test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1aC++\u5f00\u53d1\u63d0\u5021\u5229\u7528\u591a\u6001\u8bbe\u8ba1\u7a0b\u5e8f\u67b6\u6784\uff0c\u56e0\u4e3a\u591a\u6001\u4f18\u70b9\u5f88\u591a</p>"},{"location":"C%2B%2B/03-class3/#3","title":"3. \u7eaf\u865a\u51fd\u6570\u548c\u62bd\u8c61\u7c7b","text":"<p>\u5728\u591a\u6001\u4e2d\uff0c\u901a\u5e38\u7236\u7c7b\u4e2d\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff0c\u4e3b\u8981\u90fd\u662f\u8c03\u7528\u5b50\u7c7b\u91cd\u5199\u7684\u5185\u5bb9</p> <p>\u56e0\u6b64\u53ef\u4ee5\u5c06\u865a\u51fd\u6570\u6539\u4e3a\u7eaf\u865a\u51fd\u6570</p> <p>\u7eaf\u865a\u51fd\u6570\u8bed\u6cd5\uff1a<code>virtual \u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d \uff08\u53c2\u6570\u5217\u8868\uff09= 0 ;</code></p> <p>\u5f53\u7c7b\u4e2d\u6709\u4e86\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u4e5f\u79f0\u4e3a==\u62bd\u8c61\u7c7b==</p> <p>\u62bd\u8c61\u7c7b\u7279\u70b9\uff1a</p> <ul> <li>\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61</li> <li>\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u62bd\u8c61\u7c7b\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Base\n{\npublic:\n    //\u7eaf\u865a\u51fd\u6570\n    //\u7c7b\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\u5c31\u79f0\u4e3a\u62bd\u8c61\u7c7b\n    //\u62bd\u8c61\u7c7b\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61\n    //\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b\n    virtual void func() = 0;\n};\n\nclass Son :public Base\n{\npublic:\n    virtual void func() \n    {\n        cout &lt;&lt; \"func\u8c03\u7528\" &lt;&lt; endl;\n    };\n};\n\nvoid test01()\n{\n    Base * base = NULL;\n    //base = new Base; // \u9519\u8bef\uff0c\u62bd\u8c61\u7c7b\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61\n    base = new Son;\n    base-&gt;func();\n    delete base;//\u8bb0\u5f97\u9500\u6bc1\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/03-class3/#4-","title":"4. \u591a\u6001\u6848\u4f8b\u4e8c-\u5236\u4f5c\u996e\u54c1","text":"<p>\u6848\u4f8b\u63cf\u8ff0\uff1a</p> <p>\u5236\u4f5c\u996e\u54c1\u7684\u5927\u81f4\u6d41\u7a0b\u4e3a\uff1a\u716e\u6c34 -  \u51b2\u6ce1 - \u5012\u5165\u676f\u4e2d - \u52a0\u5165\u8f85\u6599</p> <p>\u5229\u7528\u591a\u6001\u6280\u672f\u5b9e\u73b0\u672c\u6848\u4f8b\uff0c\u63d0\u4f9b\u62bd\u8c61\u5236\u4f5c\u996e\u54c1\u57fa\u7c7b\uff0c\u63d0\u4f9b\u5b50\u7c7b\u5236\u4f5c\u5496\u5561\u548c\u8336\u53f6</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>//\u62bd\u8c61\u5236\u4f5c\u996e\u54c1\nclass AbstractDrinking {\npublic:\n    //\u70e7\u6c34\n    virtual void Boil() = 0;\n    //\u51b2\u6ce1\n    virtual void Brew() = 0;\n    //\u5012\u5165\u676f\u4e2d\n    virtual void PourInCup() = 0;\n    //\u52a0\u5165\u8f85\u6599\n    virtual void PutSomething() = 0;\n    //\u89c4\u5b9a\u6d41\u7a0b\n    void MakeDrink() {\n        Boil();\n        Brew();\n        PourInCup();\n        PutSomething();\n    }\n};\n\n//\u5236\u4f5c\u5496\u5561\nclass Coffee : public AbstractDrinking {\npublic:\n    //\u70e7\u6c34\n    virtual void Boil() {\n        cout &lt;&lt; \"\u716e\u519c\u592b\u5c71\u6cc9!\" &lt;&lt; endl;\n    }\n    //\u51b2\u6ce1\n    virtual void Brew() {\n        cout &lt;&lt; \"\u51b2\u6ce1\u5496\u5561!\" &lt;&lt; endl;\n    }\n    //\u5012\u5165\u676f\u4e2d\n    virtual void PourInCup() {\n        cout &lt;&lt; \"\u5c06\u5496\u5561\u5012\u5165\u676f\u4e2d!\" &lt;&lt; endl;\n    }\n    //\u52a0\u5165\u8f85\u6599\n    virtual void PutSomething() {\n        cout &lt;&lt; \"\u52a0\u5165\u725b\u5976!\" &lt;&lt; endl;\n    }\n};\n\n//\u5236\u4f5c\u8336\u6c34\nclass Tea : public AbstractDrinking {\npublic:\n    //\u70e7\u6c34\n    virtual void Boil() {\n        cout &lt;&lt; \"\u716e\u81ea\u6765\u6c34!\" &lt;&lt; endl;\n    }\n    //\u51b2\u6ce1\n    virtual void Brew() {\n        cout &lt;&lt; \"\u51b2\u6ce1\u8336\u53f6!\" &lt;&lt; endl;\n    }\n    //\u5012\u5165\u676f\u4e2d\n    virtual void PourInCup() {\n        cout &lt;&lt; \"\u5c06\u8336\u6c34\u5012\u5165\u676f\u4e2d!\" &lt;&lt; endl;\n    }\n    //\u52a0\u5165\u8f85\u6599\n    virtual void PutSomething() {\n        cout &lt;&lt; \"\u52a0\u5165\u67b8\u675e!\" &lt;&lt; endl;\n    }\n};\n\n//\u4e1a\u52a1\u51fd\u6570\nvoid DoWork(AbstractDrinking* drink) {\n    drink-&gt;MakeDrink();\n    delete drink;\n}\n\nvoid test01() {\n    DoWork(new Coffee);\n    cout &lt;&lt; \"--------------\" &lt;&lt; endl;\n    DoWork(new Tea);\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/03-class3/#5","title":"5. \u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784","text":"<p>\u591a\u6001\u4f7f\u7528\u65f6\uff0c\u5982\u679c\u5b50\u7c7b\u4e2d\u6709\u5c5e\u6027\u5f00\u8f9f\u5230\u5806\u533a\uff0c\u90a3\u4e48\u7236\u7c7b\u6307\u9488\u5728\u91ca\u653e\u65f6\u65e0\u6cd5\u8c03\u7528\u5230\u5b50\u7c7b\u7684\u6790\u6784\u4ee3\u7801</p> <p>\u89e3\u51b3\u65b9\u5f0f\uff1a\u5c06\u7236\u7c7b\u4e2d\u7684\u6790\u6784\u51fd\u6570\u6539\u4e3a\u865a\u6790\u6784\u6216\u8005\u7eaf\u865a\u6790\u6784</p> <p>\u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784\u5171\u6027\uff1a</p> <ul> <li>\u53ef\u4ee5\u89e3\u51b3\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61</li> <li>\u90fd\u9700\u8981\u6709\u5177\u4f53\u7684\u51fd\u6570\u5b9e\u73b0</li> </ul> <p>\u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784\u533a\u522b\uff1a</p> <ul> <li>\u5982\u679c\u662f\u7eaf\u865a\u6790\u6784\uff0c\u8be5\u7c7b\u5c5e\u4e8e\u62bd\u8c61\u7c7b\uff0c\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61</li> </ul> <p>\u865a\u6790\u6784\u8bed\u6cd5\uff1a</p> <p><code>virtual ~\u7c7b\u540d(){}</code></p> <p>\u7eaf\u865a\u6790\u6784\u8bed\u6cd5\uff1a</p> <p><code>virtual ~\u7c7b\u540d() = 0;</code></p> <p><code>\u7c7b\u540d::~\u7c7b\u540d(){}</code></p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Animal {\npublic:\n\n    Animal()\n    {\n        cout &lt;&lt; \"Animal \u6784\u9020\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n    }\n    virtual void Speak() = 0;\n\n    //\u6790\u6784\u51fd\u6570\u52a0\u4e0avirtual\u5173\u952e\u5b57\uff0c\u53d8\u6210\u865a\u6790\u6784\u51fd\u6570\n    //virtual ~Animal()\n    //{\n    //  cout &lt;&lt; \"Animal\u865a\u6790\u6784\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n    //}\n\n\n    virtual ~Animal() = 0;\n};\n\nAnimal::~Animal()\n{   // \u5fc5\u987b\u5b9e\u73b0\n    cout &lt;&lt; \"Animal \u7eaf\u865a\u6790\u6784\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n}\n\n//\u548c\u5305\u542b\u666e\u901a\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u4e00\u6837\uff0c\u5305\u542b\u4e86\u7eaf\u865a\u6790\u6784\u51fd\u6570\u7684\u7c7b\u4e5f\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u3002\u4e0d\u80fd\u591f\u88ab\u5b9e\u4f8b\u5316\u3002\n\nclass Cat : public Animal {\npublic:\n    Cat(string name)\n    {\n        cout &lt;&lt; \"Cat\u6784\u9020\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n        m_Name = new string(name);\n    }\n    virtual void Speak()\n    {\n        cout &lt;&lt; *m_Name &lt;&lt;  \"\u5c0f\u732b\u5728\u8bf4\u8bdd!\" &lt;&lt; endl;\n    }\n    ~Cat()\n    {\n        cout &lt;&lt; \"Cat\u6790\u6784\u51fd\u6570\u8c03\u7528!\" &lt;&lt; endl;\n        if (this-&gt;m_Name != NULL) {\n            delete m_Name;\n            m_Name = NULL;\n        }\n    }\n\npublic:\n    string *m_Name;\n};\n\nvoid test01()\n{\n    Animal *animal = new Cat(\"Tom\");\n    animal-&gt;Speak();\n\n    //\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u53bb\u91ca\u653e\uff0c\u4f1a\u5bfc\u81f4\u5b50\u7c7b\u5bf9\u8c61\u53ef\u80fd\u6e05\u7406\u4e0d\u5e72\u51c0\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\n    //\u600e\u4e48\u89e3\u51b3\uff1f\u7ed9\u57fa\u7c7b\u589e\u52a0\u4e00\u4e2a\u865a\u6790\u6784\u51fd\u6570\n    //\u865a\u6790\u6784\u51fd\u6570\u5c31\u662f\u7528\u6765\u89e3\u51b3\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61\n    delete animal;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <p>\u200b   1. \u865a\u6790\u6784\u6216\u7eaf\u865a\u6790\u6784\u5c31\u662f\u7528\u6765\u89e3\u51b3\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61</p> <p>\u200b   2. \u5982\u679c\u5b50\u7c7b\u4e2d\u6ca1\u6709\u5806\u533a\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u5199\u4e3a\u865a\u6790\u6784\u6216\u7eaf\u865a\u6790\u6784</p> <p>\u200b   3. \u62e5\u6709\u7eaf\u865a\u6790\u6784\u51fd\u6570\u7684\u7c7b\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b</p>"},{"location":"C%2B%2B/03-class3/#6-","title":"6. \u591a\u6001\u6848\u4f8b\u4e09-\u7535\u8111\u7ec4\u88c5","text":"<p>\u6848\u4f8b\u63cf\u8ff0\uff1a</p> <p>\u7535\u8111\u4e3b\u8981\u7ec4\u6210\u90e8\u4ef6\u4e3a CPU\uff08\u7528\u4e8e\u8ba1\u7b97\uff09\uff0c\u663e\u5361\uff08\u7528\u4e8e\u663e\u793a\uff09\uff0c\u5185\u5b58\u6761\uff08\u7528\u4e8e\u5b58\u50a8\uff09</p> <p>\u5c06\u6bcf\u4e2a\u96f6\u4ef6\u5c01\u88c5\u51fa\u62bd\u8c61\u57fa\u7c7b\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e0d\u540c\u7684\u5382\u5546\u751f\u4ea7\u4e0d\u540c\u7684\u96f6\u4ef6\uff0c\u4f8b\u5982Intel\u5382\u5546\u548cLenovo\u5382\u5546</p> <p>\u521b\u5efa\u7535\u8111\u7c7b\u63d0\u4f9b\u8ba9\u7535\u8111\u5de5\u4f5c\u7684\u51fd\u6570\uff0c\u5e76\u4e14\u8c03\u7528\u6bcf\u4e2a\u96f6\u4ef6\u5de5\u4f5c\u7684\u63a5\u53e3</p> <p>\u6d4b\u8bd5\u65f6\u7ec4\u88c5\u4e09\u53f0\u4e0d\u540c\u7684\u7535\u8111\u8fdb\u884c\u5de5\u4f5c</p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\n//\u62bd\u8c61CPU\u7c7b\nclass CPU\n{\npublic:\n    //\u62bd\u8c61\u7684\u8ba1\u7b97\u51fd\u6570\n    virtual void calculate() = 0;\n};\n\n//\u62bd\u8c61\u663e\u5361\u7c7b\nclass VideoCard\n{\npublic:\n    //\u62bd\u8c61\u7684\u663e\u793a\u51fd\u6570\n    virtual void display() = 0;\n};\n\n//\u62bd\u8c61\u5185\u5b58\u6761\u7c7b\nclass Memory\n{\npublic:\n    //\u62bd\u8c61\u7684\u5b58\u50a8\u51fd\u6570\n    virtual void storage() = 0;\n};\n\n//\u7535\u8111\u7c7b\nclass Computer\n{\npublic:\n    Computer(CPU * cpu, VideoCard * vc, Memory * mem)\n    {\n        m_cpu = cpu;\n        m_vc = vc;\n        m_mem = mem;\n    }\n\n    //\u63d0\u4f9b\u5de5\u4f5c\u7684\u51fd\u6570\n    void work()\n    {\n        //\u8ba9\u96f6\u4ef6\u5de5\u4f5c\u8d77\u6765\uff0c\u8c03\u7528\u63a5\u53e3\n        m_cpu-&gt;calculate();\n\n        m_vc-&gt;display();\n\n        m_mem-&gt;storage();\n    }\n\n    //\u63d0\u4f9b\u6790\u6784\u51fd\u6570 \u91ca\u653e3\u4e2a\u7535\u8111\u96f6\u4ef6\n    ~Computer()\n    {\n\n        //\u91ca\u653eCPU\u96f6\u4ef6\n        if (m_cpu != NULL)\n        {\n            delete m_cpu;\n            m_cpu = NULL;\n        }\n\n        //\u91ca\u653e\u663e\u5361\u96f6\u4ef6\n        if (m_vc != NULL)\n        {\n            delete m_vc;\n            m_vc = NULL;\n        }\n\n        //\u91ca\u653e\u5185\u5b58\u6761\u96f6\u4ef6\n        if (m_mem != NULL)\n        {\n            delete m_mem;\n            m_mem = NULL;\n        }\n    }\n\nprivate:\n\n    CPU * m_cpu; //CPU\u7684\u96f6\u4ef6\u6307\u9488\n    VideoCard * m_vc; //\u663e\u5361\u96f6\u4ef6\u6307\u9488\n    Memory * m_mem; //\u5185\u5b58\u6761\u96f6\u4ef6\u6307\u9488\n};\n\n//\u5177\u4f53\u5382\u5546\n//Intel\u5382\u5546\nclass IntelCPU :public CPU\n{\npublic:\n    virtual void calculate()\n    {\n        cout &lt;&lt; \"Intel\u7684CPU\u5f00\u59cb\u8ba1\u7b97\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\nclass IntelVideoCard :public VideoCard\n{\npublic:\n    virtual void display()\n    {\n        cout &lt;&lt; \"Intel\u7684\u663e\u5361\u5f00\u59cb\u663e\u793a\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\nclass IntelMemory :public Memory\n{\npublic:\n    virtual void storage()\n    {\n        cout &lt;&lt; \"Intel\u7684\u5185\u5b58\u6761\u5f00\u59cb\u5b58\u50a8\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\n//Lenovo\u5382\u5546\nclass LenovoCPU :public CPU\n{\npublic:\n    virtual void calculate()\n    {\n        cout &lt;&lt; \"Lenovo\u7684CPU\u5f00\u59cb\u8ba1\u7b97\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\nclass LenovoVideoCard :public VideoCard\n{\npublic:\n    virtual void display()\n    {\n        cout &lt;&lt; \"Lenovo\u7684\u663e\u5361\u5f00\u59cb\u663e\u793a\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\nclass LenovoMemory :public Memory\n{\npublic:\n    virtual void storage()\n    {\n        cout &lt;&lt; \"Lenovo\u7684\u5185\u5b58\u6761\u5f00\u59cb\u5b58\u50a8\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\n\nvoid test01()\n{\n    //\u7b2c\u4e00\u53f0\u7535\u8111\u96f6\u4ef6\n    CPU * intelCpu = new IntelCPU;\n    VideoCard * intelCard = new IntelVideoCard;\n    Memory * intelMem = new IntelMemory;\n\n    cout &lt;&lt; \"\u7b2c\u4e00\u53f0\u7535\u8111\u5f00\u59cb\u5de5\u4f5c\uff1a\" &lt;&lt; endl;\n    //\u521b\u5efa\u7b2c\u4e00\u53f0\u7535\u8111\n    Computer * computer1 = new Computer(intelCpu, intelCard, intelMem);\n    computer1-&gt;work();\n    delete computer1;\n\n    cout &lt;&lt; \"-----------------------\" &lt;&lt; endl;\n    cout &lt;&lt; \"\u7b2c\u4e8c\u53f0\u7535\u8111\u5f00\u59cb\u5de5\u4f5c\uff1a\" &lt;&lt; endl;\n    //\u7b2c\u4e8c\u53f0\u7535\u8111\u7ec4\u88c5\n    Computer * computer2 = new Computer(new LenovoCPU, new LenovoVideoCard, new LenovoMemory);;\n    computer2-&gt;work();\n    delete computer2;\n\n    cout &lt;&lt; \"-----------------------\" &lt;&lt; endl;\n    cout &lt;&lt; \"\u7b2c\u4e09\u53f0\u7535\u8111\u5f00\u59cb\u5de5\u4f5c\uff1a\" &lt;&lt; endl;\n    //\u7b2c\u4e09\u53f0\u7535\u8111\u7ec4\u88c5\n    Computer * computer3 = new Computer(new LenovoCPU, new IntelVideoCard, new LenovoMemory);;\n    computer3-&gt;work();\n    delete computer3;\n\n}\n</code></pre>"},{"location":"C%2B%2B/04-memory/","title":"\u56db \u5185\u5b58\u5206\u914d\u4e0e\u91ca\u653e","text":""},{"location":"C%2B%2B/04-memory/#1","title":"1. \u5185\u5b58\u7684\u57fa\u672c\u5206\u533a","text":"<p>C++ \u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5185\u5b58\u901a\u5e38\u88ab\u5212\u5206\u4e3a\u51e0\u4e2a\u533a\u57df\uff1a</p> \u533a\u57df \u63cf\u8ff0 \u6808\uff08Stack\uff09 \u51fd\u6570\u8c03\u7528\u65f6\u7684\u5c40\u90e8\u53d8\u91cf\u3001\u53c2\u6570\u7b49\uff0c\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u4e0e\u91ca\u653e \u5806\uff08Heap\uff09 \u7a0b\u5e8f\u5458\u624b\u52a8\u7533\u8bf7\u4e0e\u91ca\u653e\u7684\u52a8\u6001\u5185\u5b58\uff0c\u7528 <code>new/delete</code> \u6216 <code>malloc/free</code> \u7ba1\u7406 \u5168\u5c40\u533a/\u9759\u6001\u533a \u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf\uff0c\u7a0b\u5e8f\u8fd0\u884c\u6574\u4e2a\u751f\u547d\u5468\u671f\u90fd\u5b58\u5728 \u5e38\u91cf\u533a \u5b57\u7b26\u4e32\u5e38\u91cf\u3001const \u5e38\u91cf \u4ee3\u7801\u533a \u5b58\u653e\u7a0b\u5e8f\u7684\u6307\u4ee4\u4ee3\u7801"},{"location":"C%2B%2B/04-memory/#2","title":"2. \u6808\u5185\u5b58\uff08\u81ea\u52a8\u5206\u914d\uff09","text":"C++<pre><code>void func() {\n    int a = 10;  // a \u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5206\u914d\u5728\u6808\u4e0a\n}  // \u9000\u51fa\u51fd\u6570\u540e\uff0ca \u7684\u5185\u5b58\u81ea\u52a8\u91ca\u653e\n</code></pre> <p>\u7279\u70b9\uff1a</p> <ul> <li>\u5206\u914d\u3001\u91ca\u653e\u7531\u7f16\u8bd1\u5668\u7ba1\u7406\u3002</li> <li>\u6267\u884c\u6548\u7387\u9ad8\u3002</li> <li>\u7a7a\u95f4\u6709\u9650\uff0c\u4e0d\u9002\u5408\u5206\u914d\u5927\u5bf9\u8c61\u6216\u957f\u751f\u547d\u5468\u671f\u5bf9\u8c61\u3002</li> </ul>"},{"location":"C%2B%2B/04-memory/#3","title":"3. \u5806\u5185\u5b58\uff08\u52a8\u6001\u5206\u914d\uff09","text":"<p>\u5806\u5185\u5b58\u7531\u7a0b\u5e8f\u5458\u901a\u8fc7\u5173\u952e\u5b57\u624b\u52a8\u7ba1\u7406\uff0c\u53ef\u4ee5\u8de8\u51fd\u6570\u3001\u52a8\u6001\u7533\u8bf7\u6216\u91ca\u653e\u3002</p>"},{"location":"C%2B%2B/04-memory/#31-new-delete","title":"3.1. \u4f7f\u7528 <code>new</code> / <code>delete</code>","text":"C++<pre><code>int* p = new int(10);  // \u5206\u914d\u4e00\u4e2a int\uff0c\u5e76\u8d4b\u503c\u4e3a 10\ncout &lt;&lt; *p &lt;&lt; endl;    // \u8f93\u51fa 10\ndelete p;              // \u624b\u52a8\u91ca\u653e\u5185\u5b58\n</code></pre>"},{"location":"C%2B%2B/04-memory/#32","title":"3.2 \u5206\u914d\u6570\u7ec4","text":"C++<pre><code>int* arr = new int[5];  // \u5206\u914d\u542b 5 \u4e2a int \u7684\u6570\u7ec4\ndelete[] arr;           // \u7528 delete[] \u91ca\u653e\u6570\u7ec4\u5185\u5b58\n</code></pre>"},{"location":"C%2B%2B/04-memory/#2-malloc-free","title":"2. \u4f7f\u7528 <code>malloc</code> / <code>free</code>","text":"C++<pre><code>#include &lt;cstdlib&gt;\n\nint* p = (int*)malloc(sizeof(int));  // \u5206\u914d\u4e00\u4e2a int \u5927\u5c0f\u7684\u5185\u5b58\n*p = 20;\nfree(p);  // \u91ca\u653e\u5185\u5b58\n</code></pre> <p>\u2757 \u6ce8\u610f\uff1a<code>malloc</code> \u4e0d\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c<code>free</code> \u4e5f\u4e0d\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u4e0d\u63a8\u8350\u5728 C++ \u4e2d\u7528\u4e8e\u5bf9\u8c61\u5206\u914d\u3002</p> <p>\u5bf9\u7c7b\u5bf9\u8c61\u7684\u5f71\u54cd C++<pre><code>class Person {\npublic:\n    Person() { std::cout &lt;&lt; \"\u6784\u9020\\n\"; }\n    ~Person() { std::cout &lt;&lt; \"\u6790\u6784\\n\"; }\n};\n\n// new/delete\uff1a\u6784\u9020 + \u6790\u6784\nPerson* p1 = new Person();  // \u8f93\u51fa\uff1a\u6784\u9020\ndelete p1;                  // \u8f93\u51fa\uff1a\u6790\u6784\n\n// malloc/free\uff1a\u6ca1\u6709\u6784\u9020\u3001\u6ca1\u6709\u6790\u6784\nPerson* p2 = (Person*)malloc(sizeof(Person));  // \u6ca1\u6709\u8f93\u51fa\nfree(p2);                                      // \u6ca1\u6709\u8f93\u51fa\n</code></pre></p>"},{"location":"C%2B%2B/04-memory/#4","title":"4. \u5806\u5185\u5b58\u7ba1\u7406\u6ce8\u610f\u4e8b\u9879","text":"\u95ee\u9898\u7c7b\u578b \u63cf\u8ff0 \u5185\u5b58\u6cc4\u6f0f\uff08Memory Leak\uff09 \u5fd8\u8bb0 <code>delete</code> \u6216 <code>free</code> \u5bfc\u81f4\u5185\u5b58\u65e0\u6cd5\u56de\u6536 \u91ce\u6307\u9488\uff08Dangling Pointer\uff09 <code>delete</code> \u540e\u6ca1\u6709\u5c06\u6307\u9488\u8bbe\u4e3a <code>nullptr</code>\uff0c\u518d\u4f7f\u7528\u5b83\u5c31\u4f1a\u51fa\u9519 \u91cd\u590d\u91ca\u653e \u5bf9\u540c\u4e00\u4e2a\u5730\u5740 <code>delete</code> \u591a\u6b21\u4f1a\u51fa\u9519\uff08\u672a\u8bbe\u4e3a <code>nullptr</code>\uff09"},{"location":"C%2B%2B/04-memory/#41","title":"4.1 \u793a\u4f8b","text":"C++<pre><code>int* p = new int(5);\ndelete p;\np = nullptr;  // \ud83d\udc4d \u5b89\u5168\u505a\u6cd5\n\ndelete p;     // \u2705 \u5b89\u5168\uff08delete nullptr \u662f\u65e0\u5bb3\u7684\uff09\n</code></pre>"},{"location":"C%2B%2B/04-memory/#5","title":"5. \u5bf9\u8c61\u7684\u52a8\u6001\u5206\u914d","text":"C++<pre><code>class Person {\npublic:\n    Person() { cout &lt;&lt; \"\u6784\u9020\" &lt;&lt; endl; }\n    ~Person() { cout &lt;&lt; \"\u6790\u6784\" &lt;&lt; endl; }\n};\n\nint main() {\n    Person* p = new Person();  // \u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\n    delete p;                  // \u6790\u6784\u51fd\u6570\u88ab\u8c03\u7528\n}\n</code></pre> <p>\u5982\u679c\u662f\u6570\u7ec4\u5bf9\u8c61\uff1a</p> C++<pre><code>Person* arr = new Person[3];  // \u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528 3 \u6b21\ndelete[] arr;                 // \u6790\u6784\u51fd\u6570\u88ab\u8c03\u7528 3 \u6b21\n</code></pre>"},{"location":"C%2B%2B/04-memory/#6","title":"6. \u667a\u80fd\u6307\u9488","text":"<p>\u624b\u52a8\u7ba1\u7406\u5185\u5b58\u5bb9\u6613\u51fa\u9519\uff0cC++11 \u8d77\u63a8\u8350\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90\uff1a</p> C++<pre><code>#include &lt;memory&gt;\n\nstd::unique_ptr&lt;int&gt; p1(new int(10));      // \u72ec\u5360\u5f0f\nstd::shared_ptr&lt;int&gt; p2 = std::make_shared&lt;int&gt;(20);  // \u5171\u4eab\u5f0f\n</code></pre> <p>\u4e0d\u7528\u624b\u52a8 <code>delete</code>\uff0c\u79bb\u5f00\u4f5c\u7528\u57df\u540e\u81ea\u52a8\u91ca\u653e\uff0c\u66f4\u5b89\u5168\u66f4\u73b0\u4ee3</p> <p>\u667a\u80fd\u6307\u9488\u662f C++11 \u5f15\u5165\u7684 \u6a21\u677f\u7c7b\uff0c\u7528\u6765 \u81ea\u52a8\u7ba1\u7406\u5806\u5185\u5b58\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\uff0c\u9632\u6b62\u5e38\u89c1\u7684\u5185\u5b58\u6cc4\u6f0f\u548c\u91ce\u6307\u9488\u95ee\u9898\u3002</p> <p>\u667a\u80fd\u6307\u9488\u4f1a\u5728\u5bf9\u8c61\u4e0d\u518d\u9700\u8981\u65f6\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\uff0c\u76f8\u5f53\u4e8e\u201c\u5e26\u6709\u81ea\u52a8\u91ca\u653e\u529f\u80fd\u7684\u666e\u901a\u6307\u9488\u201d\u3002</p>"},{"location":"C%2B%2B/04-memory/#61","title":"6.1 \u4e09\u79cd\u4e3b\u8981\u667a\u80fd\u6307\u9488\u7c7b\u578b","text":"\u667a\u80fd\u6307\u9488\u7c7b\u578b \u7b80\u4ecb \u6240\u9700\u5934\u6587\u4ef6 <code>std::unique_ptr</code> \u72ec\u5360\u5f0f\u62e5\u6709\uff0c\u4e0d\u80fd\u5171\u4eab <code>&lt;memory&gt;</code> <code>std::shared_ptr</code> \u5171\u4eab\u5f0f\u62e5\u6709\uff0c\u5f15\u7528\u8ba1\u6570\u7ba1\u7406 <code>&lt;memory&gt;</code> <code>std::weak_ptr</code> \u5f31\u5f15\u7528\uff0c\u4e0d\u62e5\u6709\u8d44\u6e90\uff0c\u9632\u6b62\u5faa\u73af\u5f15\u7528 <code>&lt;memory&gt;</code> <p><code>std::unique_ptr</code>\uff08\u72ec\u5360\u5f0f\uff09</p> <p>\u53ea\u80fd\u6709\u4e00\u4e2a <code>unique_ptr</code> \u62e5\u6709\u67d0\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u6743\uff0c\u4e0d\u80fd\u590d\u5236\uff0c\u4f46\u53ef\u4ee5\u8f6c\u79fb</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\nusing namespace std;\n\nclass Test {\npublic:\n    Test() { cout &lt;&lt; \"\u6784\u9020\" &lt;&lt; endl; }\n    ~Test() { cout &lt;&lt; \"\u6790\u6784\" &lt;&lt; endl; }\n};\n\nint main() {\n    unique_ptr&lt;Test&gt; p1(new Test());  // \u521b\u5efa\u5bf9\u8c61\n    // unique_ptr&lt;Test&gt; p2 = p1;      // \u274c \u9519\u8bef\uff1a\u4e0d\u80fd\u590d\u5236\n\n    unique_ptr&lt;Test&gt; p2 = std::move(p1); // \u2705 \u6240\u6709\u6743\u8f6c\u79fb\n    // p1 \u6b64\u65f6\u4e3a\u7a7a\n}\n</code></pre> <p><code>std::shared_ptr</code>\uff08\u5171\u4eab\u5f0f\uff09</p> <p>\u591a\u4e2a <code>shared_ptr</code> \u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5185\u90e8\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\u6765\u7ba1\u7406\u5185\u5b58</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\nusing namespace std;\n\nclass Test {\npublic:\n    Test() { cout &lt;&lt; \"\u6784\u9020\" &lt;&lt; endl; }\n    ~Test() { cout &lt;&lt; \"\u6790\u6784\" &lt;&lt; endl; }\n};\n\nint main() {\n    shared_ptr&lt;Test&gt; p1 = make_shared&lt;Test&gt;();\n    shared_ptr&lt;Test&gt; p2 = p1; // \u5f15\u7528\u8ba1\u6570+1\n    cout &lt;&lt; \"\u5f15\u7528\u8ba1\u6570: \" &lt;&lt; p1.use_count() &lt;&lt; endl; // \u8f93\u51fa 2\n} // \u4e24\u4e2a\u6307\u9488\u51fa\u4f5c\u7528\u57df\u540e\uff0c\u81ea\u52a8\u6790\u6784\n</code></pre> <p><code>std::weak_ptr</code>\uff08\u5f31\u5f15\u7528\uff09</p> <p>\u7528\u4e8e\u914d\u5408 <code>shared_ptr</code>\uff0c\u9632\u6b62\u5faa\u73af\u5f15\u7528\uff0c\u5b83\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\u3002</p> <p>\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff1a</p> C++<pre><code>struct B; // \u524d\u5411\u58f0\u660e\n\nstruct A {\n    shared_ptr&lt;B&gt; bptr;\n};\n\nstruct B {\n    shared_ptr&lt;A&gt; aptr; // \u274c \u4e0e A \u76f8\u4e92\u6301\u6709 -&gt; \u5185\u5b58\u6cc4\u6f0f\n};\n</code></pre> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u4f7f\u7528 <code>weak_ptr</code></p> C++<pre><code>struct A;\nstruct B;\n\nstruct A {\n    shared_ptr&lt;B&gt; bptr;\n};\n\nstruct B {\n    weak_ptr&lt;A&gt; aptr;  // \u2705 \u5f31\u5f15\u7528\uff0c\u9632\u6b62\u5faa\u73af\u5f15\u7528\n};\n</code></pre>"},{"location":"C%2B%2B/04-memory/#62-shared_ptr","title":"6.2 \u539f\u7406\u7b80\u4ecb\uff08\u4ee5 <code>shared_ptr</code> \u4e3a\u4f8b\uff09","text":"<ul> <li>\u6bcf\u4e2a <code>shared_ptr</code> \u6307\u5411\u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a \u63a7\u5236\u5757\uff08control block\uff09\u3002</li> <li> <p>\u63a7\u5236\u5757\u4e2d\u4fdd\u5b58\uff1a</p> </li> <li> <p>\u5f15\u7528\u8ba1\u6570\uff08shared\uff09</p> </li> <li>\u5f31\u5f15\u7528\u8ba1\u6570\uff08weak\uff09</li> <li>\u6307\u9488\u672c\u4f53</li> </ul> <p>\u5f53 <code>shared_ptr</code> \u6700\u540e\u4e00\u4e2a\u5f15\u7528\u9500\u6bc1\u65f6\uff0c\u6790\u6784\u88ab\u8c03\u7528\uff1b\u4f46\u53ea\u6709\u5f53\u6240\u6709 <code>weak_ptr</code> \u4e5f\u9500\u6bc1\u540e\uff0c\u5185\u5b58\u624d\u4f1a\u88ab\u91ca\u653e\u3002</p>"},{"location":"C%2B%2B/04-memory/#63","title":"6.3 \u4f7f\u7528\u6ce8\u610f\u4e8b\u9879","text":"\u9879 \u5efa\u8bae/\u8bf4\u660e \u4e0d\u8981\u6df7\u7528 <code>shared_ptr</code> \u548c\u539f\u59cb\u6307\u9488 \u9632\u6b62\u91cd\u590d\u91ca\u653e \u907f\u514d <code>shared_ptr</code> \u5faa\u73af\u5f15\u7528 \u4f7f\u7528 <code>weak_ptr</code> \u4e0d\u8981 <code>delete</code> \u667a\u80fd\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61 \u4f1a\u51fa\u9519\uff0c\u667a\u80fd\u6307\u9488\u81ea\u52a8\u91ca\u653e \u4f7f\u7528 <code>make_shared</code> \u6bd4 <code>shared_ptr(new T)</code> \u66f4\u9ad8\u6548 \u51cf\u5c11\u5185\u5b58\u788e\u7247\u548c\u5206\u914d\u6b21\u6570"},{"location":"C%2B%2B/04-memory/#_2","title":"\u88f8\u6307\u9488\u65b9\u5f0f\uff08\u5bb9\u6613\u5fd8\u8bb0\u91ca\u653e\uff09\uff1a","text":"C++<pre><code>Person* p = new Person();\n// ... \u4f7f\u7528 p\ndelete p; // \u26a0\ufe0f \u5982\u679c\u5fd8\u4e86\u5c31\u5185\u5b58\u6cc4\u6f0f\n</code></pre>"},{"location":"C%2B%2B/04-memory/#_3","title":"\u667a\u80fd\u6307\u9488\u65b9\u5f0f\uff1a","text":"C++<pre><code>shared_ptr&lt;Person&gt; p = make_shared&lt;Person&gt;();\n// \u81ea\u52a8\u6790\u6784\u91ca\u653e\uff0c\u65e0\u9700\u624b\u52a8 delete\n</code></pre>"},{"location":"C%2B%2B/04-memory/#64","title":"6.4 \u603b\u7ed3","text":"\u7c7b\u578b \u6240\u6709\u6743 \u53ef\u590d\u5236 \u5f15\u7528\u8ba1\u6570 \u81ea\u52a8\u91ca\u653e \u5e94\u7528\u573a\u666f <code>unique_ptr</code> \u72ec\u5360 \u274c \u5426 \u2705 \u72ec\u7acb\u5bf9\u8c61 <code>shared_ptr</code> \u5171\u4eab \u2705 \u662f \u2705 \u591a\u4eba\u5171\u4eab\u7684\u8d44\u6e90 <code>weak_ptr</code> \u5f31\u5f15\u7528 \u2705 \u4e0d\u589e\u8ba1\u6570 \u274c\uff08\u914d\u5408 <code>shared_ptr</code> \u4f7f\u7528\uff09 \u89e3\u51b3\u5faa\u73af\u5f15\u7528\u95ee\u9898"},{"location":"C%2B%2B/05-argv/","title":"\u4e94 \u547d\u4ee4\u884c\u53c2\u6570","text":"<p>\u5728 C \u548c C++ \u4e2d\uff0c<code>int main(int argc, char **argv)</code> \u662f\u7a0b\u5e8f\u4e3b\u51fd\u6570\u7684\u4e00\u79cd\u6807\u51c6\u7b7e\u540d\uff0c\u7528\u4e8e\u63a5\u6536\u547d\u4ee4\u884c\u53c2\u6570\u3002\u3002</p>"},{"location":"C%2B%2B/05-argv/#1-main","title":"1. <code>main</code> \u51fd\u6570\u7684\u53c2\u6570","text":""},{"location":"C%2B%2B/05-argv/#11-main","title":"1.1 <code>main</code> \u51fd\u6570\u7684\u57fa\u672c\u5f62\u5f0f","text":"<ul> <li>C \u548c C++ \u6807\u51c6\u5141\u8bb8 <code>main</code> \u51fd\u6570\u6709\u51e0\u79cd\u7b7e\u540d\uff0c\u5176\u4e2d\u6700\u5e38\u7528\u7684\u662f\uff1a   C<pre><code>int main(int argc, char **argv)\n</code></pre></li> <li><code>argc</code>\uff1a\u8868\u793a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u6570\u91cf\uff08argument count\uff09\uff0c\u5305\u62ec\u7a0b\u5e8f\u540d\u672c\u8eab\u3002</li> <li><code>argv</code>\uff1a\u8868\u793a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5185\u5bb9\uff08argument vector\uff09\uff0c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u3002</li> </ul>"},{"location":"C%2B%2B/05-argv/#12","title":"1.2 \u547d\u4ee4\u884c\u53c2\u6570\u793a\u4f8b","text":"<p>\u5047\u8bbe\u4f60\u5728\u7ec8\u7aef\u8fd0\u884c\u7a0b\u5e8f\uff1a Bash<pre><code>./myprogram hello world 123\n</code></pre> - <code>argc</code> = 4\uff084 \u4e2a\u53c2\u6570\uff1a<code>myprogram</code>, <code>hello</code>, <code>world</code>, <code>123</code>\uff09\u3002 - <code>argv</code> \u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5305\u542b\u6307\u5411\u8fd9\u4e9b\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff1a   - <code>argv[0]</code> = <code>\"myprogram\"</code>\uff08\u7a0b\u5e8f\u540d\uff09\u3002   - <code>argv[1]</code> = <code>\"hello\"</code>\u3002   - <code>argv[2]</code> = <code>\"world\"</code>\u3002   - <code>argv[3]</code> = <code>\"123\"</code>\u3002   - <code>argv[4]</code> = <code>NULL</code>\uff08\u6807\u8bb0\u6570\u7ec4\u7ed3\u675f\uff09\u3002</p>"},{"location":"C%2B%2B/05-argv/#2-char","title":"2. \u4e3a\u4ec0\u4e48\u7528 <code>char**</code>\uff1f","text":"<ul> <li><code>char**</code> \u662f\u6307\u5411\u6307\u9488\u7684\u6307\u9488\uff1a</li> <li><code>char*</code>\uff1a\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff08\u5b57\u7b26\u4e32\uff09\u3002</li> <li><code>char**</code>\uff1a\u6307\u5411\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u800c\u8fd9\u4e9b\u6307\u9488\u53c8\u6307\u5411\u5b57\u7b26\u4e32\u3002</li> <li>\u5185\u5b58\u89c6\u56fe\uff1a</li> <li><code>argv</code> \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a\u8fde\u7eed\u7684 <code>char*</code> \u6570\u7ec4\u3002</li> <li>\u6bcf\u4e2a <code>char*</code> \u6307\u5411\u5185\u5b58\u4e2d\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u5730\u5740\u3002</li> </ul>"},{"location":"C%2B%2B/05-argv/#3","title":"3. \u7b80\u5355\u793a\u4f8b","text":"<p>C<pre><code>#include &lt;stdio.h&gt;\nint main(int argc, char **argv) {\n    printf(\"Argument count: %d\\n\", argc);\n    for (int i = 0; i &lt; argc; i++) {\n        printf(\"argv[%d]: %s\\n\", i, argv[i]);\n    }\n    return 0;\n}\n</code></pre> - \u8fd0\u884c\uff1a<code>./program hello world</code> - \u8f93\u51fa\uff1a   Text Only<pre><code>Argument count: 3\nargv[0]: ./program\nargv[1]: hello\nargv[2]: world\n</code></pre></p> <p>\u68c0\u67e5 <code>argv</code> \u7684\u7ed3\u675f - <code>argv[argc]</code> \u603b\u662f <code>NULL</code>\uff0c\u53ef\u4ee5\u7528\u4f5c\u5faa\u73af\u7ec8\u6b62\u6761\u4ef6\uff1a C<pre><code>#include &lt;stdio.h&gt;\nint main(int argc, char **argv) {\n    int i = 0;\n    while (argv[i] != NULL) {\n        printf(\"argv[%d]: %s\\n\", i, argv[i]);\n        i++;\n    }\n    return 0;\n}\n</code></pre></p> <p>\u7b49\u4ef7\u5199\u6cd5\uff1a<code>char *argv[]</code> - <code>char **argv</code> \u548c <code>char *argv[]</code> \u662f\u7b49\u4ef7\u7684\uff1a   - <code>char *argv[]</code> \u662f\u6570\u7ec4\u5f62\u5f0f\uff0c\u66f4\u76f4\u89c2\u5730\u8868\u793a\u201c\u6307\u9488\u6570\u7ec4\u201d\u3002   - \u5728\u51fd\u6570\u53c2\u6570\u4e2d\uff0c\u6570\u7ec4\u4f1a\u9000\u5316\u4e3a\u6307\u9488\uff0c\u56e0\u6b64 <code>char *argv[]</code> \u7b49\u540c\u4e8e <code>char **argv</code>\u3002 C<pre><code>int main(int argc, char *argv[]) {\n    printf(\"argv[0]: %s\\n\", argv[0]);\n    return 0;\n}\n</code></pre></p>"},{"location":"C%2B%2B/05-argv/#4-argv","title":"4. argv\u4e2d\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u578b","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;  // for atoi, atof\n\nint main(int argc, char **argv)\n{\n  if (argc &lt; 3)\n  {\n    std::cout &lt;&lt; \"Please provide at least two arguments\" &gt;&gt; std::endl;\n  }\n\n  // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u53c2\u6570\u5e76\u8f6c\u6362\u4e3a\u6574\u6570\n  int int_value = std::atoi(argv[1]);\n  // \u83b7\u53d6\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5e76\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\n  float float_value = std::atof(argv[2]);\n\n  std::cout &lt;&lt; \"Integer value: \" &lt;&lt; int_value &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"Float value: \" &lt;&lt; float_value &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"C%2B%2B/06-char/","title":"\u516d <code>char</code> \u548c <code>string</code>","text":""},{"location":"C%2B%2B/06-char/#_1","title":"\u7b2c\u4e00\u90e8\u5206\uff1a\u57fa\u7840\u6982\u5ff5","text":""},{"location":"C%2B%2B/06-char/#11-char","title":"1.1 <code>char</code>\uff1a\u5b57\u7b26\u7684\u57fa\u672c\u5355\u4f4d","text":"<ul> <li>\u5b9a\u4e49\uff1a<code>char</code> \u662f C \u548c C++ \u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5360\u7528 1 \u5b57\u8282\uff088 \u4f4d\uff09\uff0c\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u6216\u4e00\u4e2a\u6574\u6570\uff08\u8303\u56f4\u901a\u5e38\u662f -128 \u5230 127 \u6216 0 \u5230 255\uff0c\u53d6\u51b3\u4e8e\u5b9e\u73b0\u662f\u5426\u7b7e\u540d\uff09\u3002</li> <li>\u7528\u9014\uff1a</li> <li>\u8868\u793a\u5355\u4e2a\u5b57\u7b26\uff08\u5982 <code>'A'</code>\u3001<code>'b'</code>\uff09\u3002</li> <li>\u901a\u8fc7\u6570\u7ec4\u6216\u6307\u9488\u7ec4\u6210\u5b57\u7b26\u4e32\uff08C \u98ce\u683c\u5b57\u7b26\u4e32\uff09\u3002</li> <li>\u521d\u59cb\u5316\uff1a   C<pre><code>char c1 = 'A';         // \u5355\u5b57\u7b26\uff0c\u7528\u5355\u5f15\u53f7\nchar c2 = 65;          // \u7b49\u4ef7\u4e8e 'A'\uff08ASCII \u503c\uff09\nchar str[] = \"Hello\";  // \u5b57\u7b26\u6570\u7ec4\uff0c\u81ea\u52a8\u5305\u542b '\\0'\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#12-stringc","title":"1.2 <code>string</code>\uff1aC++ \u7684\u5b57\u7b26\u4e32\u7c7b","text":"<ul> <li>\u5b9a\u4e49\uff1a<code>string</code> \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u7c7b\uff08<code>std::string</code>\uff09\uff0c\u5b9a\u4e49\u5728 <code>&lt;string&gt;</code> \u5934\u6587\u4ef6\u4e2d\u3002\u5b83\u5c01\u88c5\u4e86\u5bf9\u5b57\u7b26\u4e32\u7684\u7ba1\u7406\u548c\u64cd\u4f5c\u3002</li> <li>\u7528\u9014\uff1a</li> <li>\u5904\u7406\u5b8c\u6574\u7684\u5b57\u7b26\u4e32\uff0c\u652f\u6301\u52a8\u6001\u957f\u5ea6\u548c\u4e30\u5bcc\u64cd\u4f5c\u3002</li> <li>\u521d\u59cb\u5316\uff1a   C++<pre><code>#include &lt;string&gt;\nstd::string s1 = \"Hello\";      // \u76f4\u63a5\u521d\u59cb\u5316\nstd::string s2(5, 'a');       // \u521d\u59cb\u5316\u4e3a \"aaaaa\"\nstd::string s3 = s1 + \" World\"; // \u62fc\u63a5\u521d\u59cb\u5316\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#13","title":"1.3 \u6838\u5fc3\u8054\u7cfb","text":"<ul> <li><code>char</code> \u662f <code>string</code> \u7684\u6784\u5efa\u5757\uff1a<code>string</code> \u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u7684 <code>char</code> \u6570\u7ec4\u3002</li> <li>\u8f6c\u6362\uff1a</li> <li><code>string</code> \u5230 <code>char*</code>\uff1a\u7528 <code>.c_str()</code> \u6216 <code>.data()</code>\u3002</li> <li><code>char*</code> \u5230 <code>string</code>\uff1a\u76f4\u63a5\u8d4b\u503c\u6216\u6784\u9020\u3002</li> </ul>"},{"location":"C%2B%2B/06-char/#_2","title":"\u7b2c\u4e8c\u90e8\u5206\uff1a\u64cd\u4f5c\u4e0e\u7528\u6cd5","text":""},{"location":"C%2B%2B/06-char/#21-char","title":"2.1 <code>char</code> \u7684\u64cd\u4f5c","text":"<ul> <li>\u5355\u4e2a\u5b57\u7b26\uff1a</li> <li> <p>\u76f4\u63a5\u8d4b\u503c\u3001\u6bd4\u8f83\u6216\u6253\u5370\u3002   C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    char c = 'A';\n    printf(\"Character: %c, ASCII: %d\\n\", c, c); // \u8f93\u51fa: Character: A, ASCII: 65\n    return 0;\n}\n</code></pre></p> </li> <li> <p>C \u98ce\u683c\u5b57\u7b26\u4e32\uff1a</p> </li> <li>\u7528 <code>char</code> \u6570\u7ec4\u6216\u6307\u9488\u8868\u793a\uff0c\u672b\u5c3e\u4ee5 <code>\\0</code> \u7ed3\u5c3e\u3002</li> <li>\u64cd\u4f5c\u4f9d\u8d56 <code>&lt;string.h&gt;</code> \u7684\u51fd\u6570\u3002   C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char str1[] = \"Hello\";\n    char str2[20];\n    strcpy(str2, str1);      // \u590d\u5236\n    strcat(str2, \" World\");  // \u62fc\u63a5\n    printf(\"Result: %s, Length: %lu\\n\", str2, strlen(str2));\n    return 0;\n}\n// \u8f93\u51fa: Result: Hello World, Length: 11\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#22-string","title":"2.2 <code>string</code> \u7684\u64cd\u4f5c","text":"<ul> <li>\u57fa\u672c\u64cd\u4f5c\uff1a</li> <li> <p>\u62fc\u63a5\u3001\u8bbf\u95ee\u3001\u957f\u5ea6\u7b49\u3002   C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nint main() {\n    std::string s = \"Hello\";\n    s += \" World\";           // \u62fc\u63a5\n    std::cout &lt;&lt; s[0] &lt;&lt; std::endl; // \u8bbf\u95ee\u9996\u5b57\u7b26: H\n    std::cout &lt;&lt; \"Length: \" &lt;&lt; s.length() &lt;&lt; std::endl; // \u8f93\u51fa: Length: 11\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u9ad8\u7ea7\u64cd\u4f5c\uff1a</p> </li> <li>\u67e5\u627e\u3001\u66ff\u6362\u3001\u622a\u53d6\u7b49\u3002   C++<pre><code>std::string s = \"Hello World\";\nsize_t pos = s.find(\"World\");     // \u67e5\u627e\u5b50\u4e32\nif (pos != std::string::npos) {\n    std::cout &lt;&lt; \"Found at: \" &lt;&lt; pos &lt;&lt; std::endl; // \u8f93\u51fa: 6\n}\ns.replace(pos, 5, \"C++\");         // \u66ff\u6362\nstd::cout &lt;&lt; s &lt;&lt; std::endl;      // \u8f93\u51fa: Hello C++\nstd::string sub = s.substr(0, 5); // \u622a\u53d6\nstd::cout &lt;&lt; sub &lt;&lt; std::endl;    // \u8f93\u51fa: Hello\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#23","title":"2.3 \u5bf9\u6bd4\u793a\u4f8b","text":"<ul> <li>\u62fc\u63a5\uff1a</li> <li><code>char</code>\uff1a     C<pre><code>char str[20] = \"Hello\";\nstrcat(str, \" World\");\n</code></pre></li> <li> <p><code>string</code>\uff1a     C++<pre><code>std::string s = \"Hello\";\ns += \" World\";\n</code></pre></p> </li> <li> <p>\u957f\u5ea6\uff1a</p> </li> <li><code>char</code>\uff1a<code>strlen(str)</code>\uff08\u4e0d\u542b <code>\\0</code>\uff09\u3002</li> <li><code>string</code>\uff1a<code>s.length()</code> \u6216 <code>s.size()</code>\u3002</li> </ul>"},{"location":"C%2B%2B/06-char/#_3","title":"\u7b2c\u4e09\u90e8\u5206\uff1a\u5185\u5b58\u7ba1\u7406","text":""},{"location":"C%2B%2B/06-char/#31-char","title":"3.1 <code>char</code> \u7684\u5185\u5b58\u7ba1\u7406","text":"<ul> <li>\u56fa\u5b9a\u5927\u5c0f\uff1a</li> <li><code>char</code> \u6570\u7ec4\u7684\u5927\u5c0f\u5728\u5b9a\u4e49\u65f6\u56fa\u5b9a\u3002   C<pre><code>char str[5]; // \u6700\u591a\u5b58 4 \u4e2a\u5b57\u7b26 + '\\0'\nstrcpy(str, \"Hello\"); // \u6ea2\u51fa\uff01\u9700\u8981 6 \u5b57\u8282\n</code></pre></li> <li>\u624b\u52a8\u7ba1\u7406\uff1a</li> <li>\u52a8\u6001\u5206\u914d\u7528 <code>malloc</code> \u6216 <code>new</code>\u3002   C<pre><code>char* str = (char*)malloc(20);\nstrcpy(str, \"Hello\");\nfree(str); // \u624b\u52a8\u91ca\u653e\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#32-string","title":"3.2 <code>string</code> \u7684\u5185\u5b58\u7ba1\u7406","text":"<ul> <li>\u52a8\u6001\u8c03\u6574\uff1a</li> <li><code>string</code> \u81ea\u52a8\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u3002   C++<pre><code>std::string s = \"Hello\";\ns += \" World\"; // \u81ea\u52a8\u6269\u5c55\n</code></pre></li> <li>\u624b\u52a8\u63a7\u5236\uff08\u53ef\u9009\uff09\uff1a</li> <li>\u7528 <code>reserve</code> \u9884\u5206\u914d\u7a7a\u95f4\u63d0\u9ad8\u6027\u80fd\u3002   C++<pre><code>std::string s;\ns.reserve(100); // \u9884\u7559 100 \u5b57\u8282\ns = \"Hello\";\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#33","title":"3.3 \u5185\u5b58\u5bf9\u6bd4","text":"<ul> <li><code>char</code>\uff1a\u9700\u8981\u5f00\u53d1\u8005\u5173\u6ce8\u8fb9\u754c\u548c\u91ca\u653e\u3002</li> <li><code>string</code>\uff1a\u81ea\u52a8\u7ba1\u7406\uff0c\u65e0\u9700\u62c5\u5fc3\u6ea2\u51fa\u6216\u91ca\u653e\u3002</li> </ul>"},{"location":"C%2B%2B/06-char/#_4","title":"\u7b2c\u56db\u90e8\u5206\uff1a\u5b9e\u9645\u5e94\u7528\u573a\u666f","text":""},{"location":"C%2B%2B/06-char/#41-char","title":"4.1 <code>char</code> \u7684\u5178\u578b\u7528\u6cd5","text":"<ul> <li>\u4e0e C \u5e93\u4ea4\u4e92\uff1a   C<pre><code>#include &lt;stdio.h&gt;\nchar str[] = \"Hello\";\nprintf(\"%s\\n\", str);\n</code></pre></li> <li>\u4f4e\u7ea7\u64cd\u4f5c\uff1a   C<pre><code>char buffer[256];\nint i = 0;\nwhile ((buffer[i] = getchar()) != '\\n' &amp;&amp; i &lt; 255) i++;\nbuffer[i] = '\\0';\nprintf(\"Input: %s\\n\", buffer);\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#42-string","title":"4.2 <code>string</code> \u7684\u5178\u578b\u7528\u6cd5","text":"<ul> <li>\u7528\u6237\u8f93\u5165\u5904\u7406\uff1a   C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nint main() {\n    std::string input;\n    std::cout &lt;&lt; \"Enter text: \";\n    std::getline(std::cin, input); // \u652f\u6301\u591a\u8bcd\u8f93\u5165\n    std::cout &lt;&lt; \"You entered: \" &lt;&lt; input &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre></li> <li>\u6587\u4ef6\u8def\u5f84\u64cd\u4f5c\uff1a   C++<pre><code>std::string path = \"/usr/local\";\npath += \"/bin\";\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#43","title":"4.3 \u6df7\u5408\u4f7f\u7528","text":"<ul> <li>\u65e5\u5fd7\u683c\u5f0f\u5316\uff1a   C++<pre><code>#include \"spdlog/spdlog.h\"\nint main() {\n    auto logger = spdlog::stdout_color_mt(\"console\");\n    char c = 'A';\n    std::string s = \"Error code: \";\n    s += c;\n    logger-&gt;error(s);\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#_5","title":"\u7b2c\u4e94\u90e8\u5206\uff1a\u9ad8\u7ea7\u4e3b\u9898","text":""},{"location":"C%2B%2B/06-char/#51-char","title":"5.1 <code>char</code> \u7684\u53d8\u4f53","text":"<ul> <li><code>signed char</code> \u548c <code>unsigned char</code>\uff1a</li> <li><code>signed char</code>\uff1a-128 \u5230 127\u3002</li> <li> <p><code>unsigned char</code>\uff1a0 \u5230 255\u3002   C<pre><code>unsigned char uc = 255;\nprintf(\"%d\\n\", uc); // \u8f93\u51fa: 255\n</code></pre></p> </li> <li> <p><code>const char*</code>\uff1a</p> </li> <li>\u8868\u793a\u53ea\u8bfb\u5b57\u7b26\u4e32\uff0c\u5e38\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u3002   C<pre><code>void print(const char* s) {\n    printf(\"%s\\n\", s);\n}\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#52-string","title":"5.2 <code>string</code> \u7684\u9ad8\u7ea7\u529f\u80fd","text":"<ul> <li>\u8fed\u4ee3\u5668\uff1a   C++<pre><code>std::string s = \"Hello\";\nfor (auto it = s.begin(); it != s.end(); ++it) {\n    std::cout &lt;&lt; *it &lt;&lt; \" \";\n} // \u8f93\u51fa: H e l l o\n</code></pre></li> <li>\u5bb9\u91cf\u7ba1\u7406\uff1a   C++<pre><code>std::string s = \"Hello\";\nstd::cout &lt;&lt; \"Size: \" &lt;&lt; s.size() &lt;&lt; \", Capacity: \" &lt;&lt; s.capacity() &lt;&lt; std::endl;\ns.reserve(50);\nstd::cout &lt;&lt; \"New Capacity: \" &lt;&lt; s.capacity() &lt;&lt; std::endl;\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#_6","title":"\u7b2c\u516d\u90e8\u5206\uff1a\u6ce8\u610f\u4e8b\u9879\u4e0e\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"C%2B%2B/06-char/#61-char","title":"6.1 <code>char</code>","text":"<ul> <li>\u7f13\u51b2\u533a\u6ea2\u51fa\uff1a</li> <li>\u59cb\u7ec8\u786e\u4fdd\u6570\u7ec4\u8db3\u591f\u5927\u3002   C<pre><code>char str[5];\nstrcpy(str, \"Hello\"); // \u5371\u9669\uff01\u6ea2\u51fa\n</code></pre></li> <li>\u7a7a\u5b57\u7b26\uff1a</li> <li>\u624b\u52a8\u6dfb\u52a0 <code>\\0</code>\u3002   C<pre><code>char str[6] = {'H', 'e', 'l', 'l', 'o'}; // \u65e0 '\\0'\uff0c\u4e0d\u662f\u5408\u6cd5\u5b57\u7b26\u4e32\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#62-string","title":"6.2 <code>string</code>","text":"<ul> <li>\u6027\u80fd\uff1a</li> <li>\u5c0f\u5b57\u7b26\u4e32\u64cd\u4f5c\u9891\u7e41\u65f6\uff0c\u907f\u514d\u8fc7\u591a\u62f7\u8d1d\u3002   C++<pre><code>std::string s;\nfor (int i = 0; i &lt; 1000; i++) s += \"a\"; // \u4f4e\u6548\n// \u4f18\u5316\uff1a\ns.reserve(1000);\nfor (int i = 0; i &lt; 1000; i++) s += \"a\";\n</code></pre></li> <li>\u5f02\u5e38\u5b89\u5168\uff1a</li> <li>\u68c0\u67e5\u64cd\u4f5c\u662f\u5426\u6210\u529f\u3002   C++<pre><code>std::string s;\nif (s.empty()) std::cout &lt;&lt; \"Empty string\" &lt;&lt; std::endl;\n</code></pre></li> </ul>"},{"location":"C%2B%2B/06-char/#63-string-charc","title":"6.3 string \u5230 char*\uff08C \u98ce\u683c\u5b57\u7b26\u4e32\uff09","text":"<p>\u65b9\u6cd5\uff1a - \u7528 <code>.c_str()</code>\uff1a\u8fd4\u56de\u53ea\u8bfb\u7684 <code>const char*</code>\u3002 - \u7528 <code>.data()</code>\uff1a\u8fd4\u56de\u5e95\u5c42\u5b57\u7b26\u6570\u7ec4\u7684\u6307\u9488\uff08C++11 \u524d\u662f const char*\uff0c\u4e4b\u540e\u53ef\u4fee\u6539\u4f46\u9700\u8c28\u614e\uff09\u3002 - \u7528 <code>copy</code>\uff1a\u5c06\u5185\u5bb9\u590d\u5236\u5230\u73b0\u6709\u7684 <code>char</code> \u6570\u7ec4\u3002 \u793a\u4f8b\uff1a C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;cstring&gt;\nint main() {\n    std::string s = \"Hello World\";\n\n    // \u65b9\u6cd5 1\uff1ac_str()\n    const char* cstr = s.c_str();\n    std::cout &lt;&lt; \"cstr: \" &lt;&lt; cstr &lt;&lt; std::endl; // \u8f93\u51fa: Hello World\n\n    // \u65b9\u6cd5 2\uff1adata() (\u53ea\u8bfb\u7528\u6cd5)\n    const char* data = s.data();\n    std::cout &lt;&lt; \"data: \" &lt;&lt; data &lt;&lt; std::endl; // \u8f93\u51fa: Hello World\n\n    // \u65b9\u6cd5 3\uff1acopy \u5230 char \u6570\u7ec4\n    char buffer[20];\n    s.copy(buffer, 5, 0); // \u4ece\u4f4d\u7f6e 0 \u590d\u5236 5 \u4e2a\u5b57\u7b26\n    buffer[5] = '\\0';     // \u624b\u52a8\u6dfb\u52a0\u7ed3\u5c3e\n    std::cout &lt;&lt; \"buffer: \" &lt;&lt; buffer &lt;&lt; std::endl; // \u8f93\u51fa: Hello\n\n    return 0;\n}\n</code></pre></p>"},{"location":"C%2B%2B/07-const/","title":"\u4e03 const","text":"<p><code>const</code> \u662f C++ \u4e2d\u975e\u5e38\u91cd\u8981\u7684\u5173\u952e\u5b57\uff0c\u7528\u6765\u8868\u793a\u201c\u5e38\u91cf\u201d\u6216\u201c\u4e0d\u5141\u8bb8\u4fee\u6539\u201d\u3002\u5b83\u53ef\u4ee5\u7528\u4e8e\u53d8\u91cf\u3001\u6307\u9488\u3001\u51fd\u6570\u53c2\u6570\u3001\u51fd\u6570\u8fd4\u56de\u503c\u3001\u6210\u5458\u51fd\u6570\u7b49\uff0c\u5e2e\u52a9\u63d0\u5347\u7a0b\u5e8f\u7684\u5b89\u5168\u6027\u3001\u53ef\u8bfb\u6027\uff0c\u5e76\u652f\u6301\u7f16\u8bd1\u671f\u9519\u8bef\u68c0\u67e5\u3002</p>"},{"location":"C%2B%2B/07-const/#1const","title":"1.const \u7684\u57fa\u672c\u4f5c\u7528","text":"C++<pre><code>const int a = 10;\na = 20;  // \u274c \u9519\u8bef\uff0ca \u662f\u5e38\u91cf\u4e0d\u80fd\u4fee\u6539\n</code></pre>"},{"location":"C%2B%2B/07-const/#2","title":"2. \u7528\u6cd5\u5206\u7c7b\u6c47\u603b","text":"\u7528\u6cd5 \u793a\u4f8b \u542b\u4e49 \u5e38\u91cf\u53d8\u91cf <code>const int a = 5;</code> \u4e0d\u80fd\u4fee\u6539\u7684\u53d8\u91cf \u5e38\u91cf\u6307\u9488 <code>int* const p = &amp;a;</code> \u6307\u9488\u6307\u5411\u4e0d\u80fd\u53d8 \u6307\u5411\u5e38\u91cf\u7684\u6307\u9488 <code>const int* p = &amp;a;</code> \u6307\u9488\u6307\u5411\u7684\u503c\u4e0d\u80fd\u6539 \u5e38\u91cf\u5f15\u7528 <code>void f(const int&amp; x)</code> \u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u4fee\u6539 x \u5e38\u91cf\u6210\u5458\u51fd\u6570 <code>void show() const;</code> \u4fdd\u8bc1\u6210\u5458\u51fd\u6570\u4e0d\u4fee\u6539\u5bf9\u8c61 const\u7c7b\u5bf9\u8c61 <code>const MyClass obj;</code> \u5bf9\u8c61\u4e0d\u53ef\u88ab\u4fee\u6539\uff0c\u53ea\u80fd\u8c03\u7528 const \u51fd\u6570"},{"location":"C%2B%2B/07-const/#3-const","title":"3.\u6307\u9488\u4e2d\u7684 const","text":""},{"location":"C%2B%2B/07-const/#31-const-int-p","title":"3.1 <code>const int* p</code>","text":"<p>\u6307\u5411 \u5e38\u91cf \u7684\u6307\u9488\uff1a\u4e0d\u80fd\u901a\u8fc7 <code>*p</code> \u4fee\u6539\u503c\uff0c\u4f46 <code>p</code> \u672c\u8eab\u53ef\u4ee5\u6307\u5411\u522b\u5904\u3002</p> C++<pre><code>int a = 10;\nint b = 20;\nconst int* p = &amp;a;\n\n*p = 5;     // \u274c \u9519\np = &amp;b;     // \u2705 \u53ef\u4fee\u6539\u6307\u5411\n</code></pre>"},{"location":"C%2B%2B/07-const/#32-int-const-p","title":"3.2 <code>int* const p</code>","text":"<p>\u5e38\u91cf\u6307\u9488\uff1a\u4e0d\u80fd\u4fee\u6539\u6307\u5411\uff0c\u4f46\u53ef\u4ee5\u4fee\u6539\u6240\u6307\u5185\u5bb9\u3002</p> C++<pre><code>int a = 10;\nint* const p = &amp;a;\n\n*p = 20;    // \u2705\np = &amp;b;     // \u274c \u9519\uff0c\u4e0d\u80fd\u6539\u6307\u5411\n</code></pre>"},{"location":"C%2B%2B/07-const/#33-const-int-const-p","title":"3.3 <code>const int* const p</code>","text":"<p>\u6307\u5411\u5e38\u91cf\u7684\u5e38\u91cf\u6307\u9488\uff1a\u4ec0\u4e48\u90fd\u4e0d\u80fd\u6539\u3002</p> C++<pre><code>const int* const p = &amp;a;\n\n*p = 100;   // \u274c\np = &amp;b;     // \u274c\n</code></pre>"},{"location":"C%2B%2B/07-const/#4-const","title":"4. \u51fd\u6570\u53c2\u6570\u4e2d\u7684 const","text":""},{"location":"C%2B%2B/07-const/#41-const","title":"4.1 \u503c\u4f20\u9012 + const\uff08\u6ca1\u5565\u7528\uff09","text":"C++<pre><code>void f(const int x) {\n    // x\u662f\u62f7\u8d1d\u6765\u7684\uff0c\u539f\u672c\u5c31\u4e0d\u80fd\u4fee\u6539\u539f\u53d8\u91cf\n}\n</code></pre>"},{"location":"C%2B%2B/07-const/#42-const","title":"4.2 \u5f15\u7528\u4f20\u9012 + const\uff08\u5f88\u5e38\u7528\uff09","text":"C++<pre><code>void printName(const std::string&amp; name) {\n    std::cout &lt;&lt; name &lt;&lt; std::endl;\n}\n</code></pre> <ul> <li>\u65e2\u907f\u514d\u62f7\u8d1d\uff0c\u53c8\u4fdd\u8bc1\u51fd\u6570\u5185\u90e8\u4e0d\u6539\u5185\u5bb9</li> <li>\u9ad8\u6548\u5b89\u5168\uff0c\u662f\u63a8\u8350\u65b9\u5f0f</li> </ul>"},{"location":"C%2B%2B/07-const/#5-const","title":"5. \u6210\u5458\u51fd\u6570\u4e2d\u7684 const","text":"<p>\u7528\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\u540e\u9762\uff0c\u8868\u793a\u8be5\u51fd\u6570\u4e0d\u4fee\u6539\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\uff08\u9664\u4e86 <code>mutable</code> \u4fee\u9970\u7684\u9664\u5916\uff09\uff1a</p> C++<pre><code>class Student {\n    std::string name;\npublic:\n    std::string getName() const {\n        return name;  // \u2705 \u53ea\u80fd\u8bbf\u95ee const \u6210\u5458\n    }\n\n    void setName(std::string newName) {\n        name = newName;\n    }\n};\n</code></pre> <p>\u53ea\u80fd\u7528 const \u5bf9\u8c61\u8c03\u7528 const \u6210\u5458\u51fd\u6570\u3002</p> C++<pre><code>const Student s;\ns.getName();  // \u2705\ns.setName(\"Tom\"); // \u274c \u62a5\u9519\n</code></pre>"},{"location":"C%2B%2B/07-const/#6","title":"6. \u5e38\u91cf\u5bf9\u8c61 / \u5e38\u91cf\u6210\u5458","text":"C++<pre><code>const Student s;  // \u6574\u4e2a\u5bf9\u8c61\u662f\u53ea\u8bfb\u7684\uff0c\u5e38\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u5e38\u53d8\u91cf\n</code></pre>"},{"location":"C%2B%2B/07-const/#7","title":"7. \u603b\u7ed3","text":"\u5199\u6cd5 \u542b\u4e49 <code>const int x</code> \u53d8\u91cf\u4e0d\u80fd\u6539 <code>int* const p</code> \u6307\u9488\u4e0d\u80fd\u6539 <code>const int* p</code> \u6307\u9488\u6307\u5411\u7684\u503c\u4e0d\u80fd\u6539 <code>const int* const p</code> \u90fd\u4e0d\u80fd\u6539 <code>void func(const T&amp; t)</code> \u4e0d\u4fee\u6539\u4f20\u8fdb\u6765\u7684\u53c2\u6570 <code>void method() const</code> \u4e0d\u4fee\u6539\u5f53\u524d\u5bf9\u8c61\u7684\u4efb\u4f55\u6210\u5458"},{"location":"C%2B%2B/07-const/#conststatic","title":"const/static\u5bf9\u6bd4","text":"<p>static</p> <p>\u4e0d\u8003\u8651\u7c7b\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\u9690\u85cf\uff1a\u6240\u6709\u4e0d\u52a0static\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u5177\u6709\u5168\u5c40\u53ef\u89c1\u6027\uff0c\u53ef\u4ee5\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u4f7f\u7528\uff0c\u52a0\u4e86\u4e4b\u540e\u53ea\u80fd\u5728\u8be5\u6587\u4ef6\u6240\u5728\u7684\u7f16\u8bd1\u6a21\u5757\u4e2d\u4f7f\u7528\uff1b</li> <li>\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3a0\uff0c \u5305\u62ec\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u9759\u6001\u53d8\u91cf\u4e0e\u5c40\u90e8\u9759\u6001\u53d8\u91cf\uff0c\u90fd\u5b58\u5728\u5168\u5c40\u672a\u521d\u59cb\u5316\u533a\uff1b</li> <li>\u9759\u6001\u53d8\u91cf\u5728\u51fd\u6570\u5185\u5b9a\u4e49\uff0c\u59cb\u7ec8\u5b58\u5728\uff0c\u4e14\u53ea\u8fdb\u884c\u4e00\u6b21\u521d\u59cb\u5316\uff0c\u5177\u6709\u8bb0\u5fc6\u6027\uff0c\u5176\u4f5c\u7528\u8303\u56f4\u4e0e\u5c40\u90e8\u53d8\u91cf\u76f8\u540c\uff0c\u51fd\u6570\u9000\u51fa\u540e\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u4e0d\u4f7f\u7528\uff1b</li> </ul> <p>\u8003\u8651\u7c7b\u7684\u60c5\u51b5\uff1a</p> <ul> <li>static\u6210\u5458\u53d8\u91cf\uff1a\u53ea\u4e0e\u7c7b\u5173\u8054\uff0c\u4e0d\u4e0e\u7c7b\u7684\u5bf9\u8c61\u5173\u8054\u3002\u5b9a\u4e49\u65f6\u8981\u5206\u914d\u7a7a\u95f4\uff0c\u4e0d\u80fd\u5728\u7c7b\u58f0\u660e\u4e2d\u521d\u59cb\u5316\uff0c\u5fc5\u987b\u5728\u7c7b\u5b9a\u4e49\u4f53\u5916\u90e8\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u65f6\u4e0d\u9700\u8981\u6807\u793a\u4e3astatic\uff0c \u53ef\u4ee5\u88ab\u975estatic\u6210\u5458\u51fd\u6570\u4efb\u610f\u8bbf\u95ee\uff1b</li> <li>static\u6210\u5458\u51fd\u6570\uff1a\u4e0d\u5177\u6709this\u6307\u9488\uff0c\u65e0\u6cd5\u8bbf\u95ee\u7c7b\u5bf9\u8c61\u548c\u975estatic\u6210\u5458\u53d8\u91cf\u548c\u975estatic\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u88ab\u58f0\u660e\u4e3aconst, \u865a\u51fd\u6570\u548cvolatile\uff1b\u53ef\u4ee5\u88ab\u975estatic\u6210\u5458\u51fd\u6570\u4efb\u610f\u8bbf\u95ee\uff1b</li> </ul> <p>const</p> <p>\u4e0d\u8003\u8651\u7c7b\u7684\u60c5\u51b5\uff1a</p> <ul> <li>const\u5e38\u91cf\u5728\u5b9a\u4e49\u65f6\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4e4b\u540e\u65e0\u6cd5\u66f4\u6539\uff1b</li> <li>const\u5f62\u53c2\u53ef\u4ee5\u63a5\u6536const\u548c\u975econst\u7c7b\u578b\u7684\u5b9e\u53c2</li> </ul> <p>\u8003\u8651\u7c7b\u7684\u60c5\u51b5\uff1a - const\u6210\u5458\u53d8\u91cf\uff1a\u4e0d\u80fd\u5728\u7c7b\u5b9a\u4e49\u5916\u90e8\u521d\u59cb\u5316\uff0c\u53ea\u80fd\u901a\u8fc7\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u5fc5\u987b\u6709\u6784\u9020\u51fd\u6570\uff1b\u4e0d\u540c\u7c7b\u5bf9\u5176const\u6570\u636e\u6210\u5458\u7684\u503c\u53ef\u4ee5\u4e0d\u540c\uff0c\u6240\u6709\u4e0d\u80fd\u5728\u7c7b\u4e2d\u58f0\u660e\u65f6\u521d\u59cb\u5316\uff1b - const\u6210\u5458\u51fd\u6570\uff1aconst\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570\uff1b\u975econst\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\uff1b\u4e0d\u53ef\u4ee5\u6539\u53d8\u975emutable\u6570\u636e\u7684\u503c</p>"},{"location":"C%2B%2B/08-point_reference/","title":"\u516b \u6307\u9488\u4e0e\u5f15\u7528","text":"<p>\u5728 C++ \u4e2d\uff0c\u6307\u9488(Pointer) \u548c \u5f15\u7528(Reference)\u662f\u4e24\u4e2a\u7528\u4e8e\u95f4\u63a5\u8bbf\u95ee\u53d8\u91cf\u7684\u673a\u5236\uff0c\u5b83\u4eec\u6709\u4e00\u4e9b\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u4e5f\u6709\u672c\u8d28\u533a\u522b</p>"},{"location":"C%2B%2B/08-point_reference/#1","title":"1. \u8054\u7cfb","text":"<ul> <li>\u90fd\u53ef\u4ee5\u95f4\u63a5\u8bbf\u95ee\u53d8\u91cf\uff1a\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u6216\u5f15\u7528\u6765\u8bbf\u95ee\u548c\u4fee\u6539\u539f\u59cb\u53d8\u91cf\u7684\u503c\u3002</li> <li>\u90fd\u652f\u6301\u4f20\u9012\u53d8\u91cf\u7684\u5730\u5740\uff1a\u5e38\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u4f20\u9012\uff0c\u907f\u514d\u590d\u5236\uff0c\u652f\u6301\u4fee\u6539\u539f\u59cb\u53d8\u91cf\u3002</li> </ul>"},{"location":"C%2B%2B/08-point_reference/#2","title":"2. \u533a\u522b","text":"\u7279\u6027 \u6307\u9488 (Pointer) \u5f15\u7528 (Reference) \u5b9a\u4e49\u65f6\u662f\u5426\u5fc5\u987b\u521d\u59cb\u5316 \u5426 \u662f\uff08\u5fc5\u987b\u7ed1\u5b9a\u4e00\u4e2a\u53d8\u91cf\uff09 \u662f\u5426\u53ef\u4ee5\u4e3a <code>nullptr</code> \u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u662f\u5426\u53ef\u4ee5\u91cd\u65b0\u7ed1\u5b9a \u53ef\u4ee5\u6307\u5411\u522b\u7684\u53d8\u91cf \u4e0d\u53ef\u4ee5\u66f4\u6539\u5f15\u7528\u7ed1\u5b9a\u7684\u53d8\u91cf \u8bed\u6cd5\u662f\u5426\u9700\u8981\u89e3\u5f15\u7528\u64cd\u4f5c \u9700\u8981\u7528 <code>*</code> \u89e3\u5f15\u7528 \u4e0d\u9700\u8981\uff0c\u50cf\u666e\u901a\u53d8\u91cf\u4e00\u6837\u4f7f\u7528 \u652f\u6301\u8fd0\u7b97 \u6307\u9488\u53ef\u4ee5\u505a\u7b97\u672f\u8fd0\u7b97 \u5f15\u7528\u4e0d\u652f\u6301\u7b97\u672f\u8fd0\u7b97 \u4e3b\u8981\u7528\u9014 \u52a8\u6001\u5185\u5b58\u7ba1\u7406\u3001\u6570\u7ec4\u904d\u5386\u3001\u51fd\u6570\u6307\u9488\u7b49 \u53c2\u6570\u4f20\u9012\u3001\u522b\u540d\u3001\u7b80\u5316\u8bed\u6cd5"},{"location":"C%2B%2B/08-point_reference/#3","title":"3. \u793a\u4f8b\u5bf9\u6bd4","text":""},{"location":"C%2B%2B/08-point_reference/#31","title":"3.1 \u6307\u9488\u793a\u4f8b\uff1a","text":"C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int a = 10;\n    int* p = &amp;a;  // \u5b9a\u4e49\u6307\u9488\u5e76\u6307\u5411 a\n\n    cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; endl;\n    cout &lt;&lt; \"*p = \" &lt;&lt; *p &lt;&lt; endl;\n\n    *p = 20;  // \u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u53d8\u91cf\u503c\n    cout &lt;&lt; \"a after modification = \" &lt;&lt; a &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\ud83d\udfe2 \u8f93\u51fa\uff1a</p> Text Only<pre><code>a = 10\n*p = 10\na after modification = 20\n</code></pre>"},{"location":"C%2B%2B/08-point_reference/#32","title":"3.2 \u5f15\u7528\u793a\u4f8b\uff1a","text":"C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int a = 10;\n    int&amp; ref = a;  // \u5b9a\u4e49\u5f15\u7528\uff0c\u5fc5\u987b\u7acb\u5373\u521d\u59cb\u5316\n\n    cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; endl;\n    cout &lt;&lt; \"ref = \" &lt;&lt; ref &lt;&lt; endl;\n\n    ref = 30;  // \u4fee\u6539\u5f15\u7528\u6240\u7ed1\u5b9a\u7684\u53d8\u91cf\u503c\n    cout &lt;&lt; \"a after modification = \" &lt;&lt; a &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\ud83d\udfe2 \u8f93\u51fa\uff1a</p> Text Only<pre><code>a = 10\nref = 10\na after modification = 30\n</code></pre>"},{"location":"C%2B%2B/08-point_reference/#33","title":"3.3 \u51fd\u6570\u4f20\u53c2\u4e2d\u7684\u533a\u522b","text":"C++<pre><code>void modifyByPointer(int* p) {\n    *p = 100;\n}\n\nvoid modifyByReference(int&amp; r) {\n    r = 200;\n}\n\nint main() {\n    int x = 10;\n    modifyByPointer(&amp;x);   // \u4f20\u5730\u5740\n    cout &lt;&lt; \"x after pointer: \" &lt;&lt; x &lt;&lt; endl;\n\n    modifyByReference(x);  // \u4f20\u5f15\u7528\n    cout &lt;&lt; \"x after reference: \" &lt;&lt; x &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\ud83d\udfe2 \u8f93\u51fa\uff1a</p> Text Only<pre><code>x after pointer: 100\nx after reference: 200\n</code></pre>"},{"location":"C%2B%2B/08-point_reference/#4","title":"4 \u603b\u7ed3","text":"\u4f7f\u7528\u573a\u666f \u63a8\u8350\u65b9\u5f0f \u4fee\u6539\u51fd\u6570\u5916\u90e8\u53d8\u91cf\u503c \u5f15\u7528\uff08\u66f4\u5b89\u5168\uff0c\u8bed\u6cd5\u66f4\u7b80\u6d01\uff09 \u52a8\u6001\u5185\u5b58\u5206\u914d\u3001\u94fe\u8868\u7b49\u9700\u8981\u53ef\u7a7a\u6216\u91cd\u65b0\u7ed1\u5b9a\u6307\u5411 \u6307\u9488 \u63d0\u9ad8\u53ef\u8bfb\u6027\u548c\u51fd\u6570\u63a5\u53e3\u5b89\u5168\u6027 \u5f15\u7528"},{"location":"C%2B%2B/09-type_modify/","title":"\u4e5d \u7c7b\u578b\u4fee\u9970\u7b26","text":"<p>\u7c7b\u578b\u4fee\u9970\u7b26\u7528\u4e8e\u6539\u53d8\u53d8\u91cf\u6216\u51fd\u6570\u7684\u57fa\u672c\u7c7b\u578b\u7684\u542b\u4e49\u4ee5\u53ca\u56db\u79cd\u547d\u540d\u7684\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u7b26</p>"},{"location":"C%2B%2B/09-type_modify/#1-const","title":"1. <code>const</code>","text":"<p><code>const</code> \u662f\u6700\u5e38\u7528\u7684\u4fee\u9970\u7b26\u4e4b\u4e00\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u5bf9\u8c61\u662f\u5e38\u91cf\uff0c\u5176\u503c\u5728\u521d\u59cb\u5316\u540e\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u5177\u4f53\u53ef\u53c2\u8003const</p> <ul> <li> <p>\u4fee\u9970\u53d8\u91cf: \u53d8\u91cf\u7684\u503c\u4e0d\u53ef\u66f4\u6539\u3002</p> C++<pre><code>const int MAX_SIZE = 100;\n// MAX_SIZE = 200; // \u7f16\u8bd1\u9519\u8bef\uff01\n</code></pre> </li> <li> <p>\u4fee\u9970\u6307\u9488:</p> <ul> <li> <p>\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488 (Pointer to const): \u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u53ef\u901a\u8fc7\u8be5\u6307\u9488\u4fee\u6539\uff0c\u4f46\u6307\u9488\u672c\u8eab\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u5730\u5740</p> C++<pre><code>const int a = 10;\nconst int* ptr = &amp;a;\n// *ptr = 20; // \u7f16\u8bd1\u9519\u8bef\uff01\nint b = 20;\nptr = &amp;b; // \u6b63\u786e\uff0c\u6307\u9488\u53ef\u4ee5\u6307\u5411\u522b\u5904\n</code></pre> </li> <li> <p>\u5e38\u91cf\u6307\u9488 (Const pointer): \u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u521d\u59cb\u5316\uff0c\u4e4b\u540e\u4e0d\u80fd\u518d\u6307\u5411\u5176\u4ed6\u5730\u5740\uff0c\u4f46\u5b83\u6307\u5411\u7684\u5185\u5bb9\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u4fee\u6539\uff08\u524d\u63d0\u662f\u5185\u5bb9\u672c\u8eab\u4e0d\u662f\u5e38\u91cf\uff09\u3002</p> C++<pre><code>int a = 10;\nint* const ptr = &amp;a;\n*ptr = 20; // \u6b63\u786e\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9\n// int b = 30;\n// ptr = &amp;b; // \u7f16\u8bd1\u9519\u8bef\uff01\u6307\u9488\u4e0d\u80fd\u6307\u5411\u522b\u5904\n</code></pre> </li> <li> <p>\u6307\u5411\u5e38\u91cf\u7684\u5e38\u91cf\u6307\u9488 (Const pointer to const): \u6307\u9488\u672c\u8eab\u548c\u5b83\u6307\u5411\u7684\u5185\u5bb9\u90fd\u4e0d\u80fd\u4fee\u6539\u3002</p> C++<pre><code>const int a = 10;\nconst int* const ptr = &amp;a;\n// *ptr = 20;    // \u7f16\u8bd1\u9519\u8bef\uff01\n// int b = 30;\n// ptr = &amp;b;    // \u7f16\u8bd1\u9519\u8bef\uff01\n</code></pre> </li> </ul> </li> <li> <p>\u4fee\u9970\u6210\u5458\u51fd\u6570: <code>const</code> \u6210\u5458\u51fd\u6570\u627f\u8bfa\u4e0d\u4f1a\u4fee\u6539\u7c7b\u7684\u4efb\u4f55\u6210\u5458\u53d8\u91cf\uff08\u9664\u975e\u8be5\u6210\u5458\u88ab <code>mutable</code> \u4fee\u9970\uff09\u3002     C++<pre><code>class MyClass {\nprivate:\n    int value;\npublic:\n    int getValue() const {\n        // value = 10; // \u7f16\u8bd1\u9519\u8bef\uff01\u4e0d\u80fd\u5728 const \u6210\u5458\u51fd\u6570\u4e2d\u4fee\u6539\u6210\u5458\u53d8\u91cf\n        return value;\n    }\n};\n</code></pre></p> </li> </ul>"},{"location":"C%2B%2B/09-type_modify/#2-volatile","title":"2. <code>volatile</code> (\u6613\u53d8\u7684)","text":"<p><code>volatile</code> \u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4f1a\u5728\u7a0b\u5e8f\u65e0\u6cd5\u68c0\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u88ab\u6539\u53d8\uff08\u4f8b\u5982\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u6216\u5176\u4ed6\u7ebf\u7a0b\uff09\u3002\u56e0\u6b64\uff0c\u7f16\u8bd1\u5668\u6bcf\u6b21\u8bbf\u95ee\u8be5\u53d8\u91cf\u65f6\u90fd\u5fc5\u987b\u4ece\u5185\u5b58\u4e2d\u91cd\u65b0\u8bfb\u53d6\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u7f13\u5b58\u7684\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002</p> <ul> <li> <p>\u5e38\u89c1\u5e94\u7528:</p> <ul> <li>\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u5171\u4eab\u7684\u53d8\u91cf\u3002</li> <li>\u4e0e\u786c\u4ef6\u4ea4\u4e92\u7684\u5185\u5b58\u6620\u5c04 I/O\u3002</li> <li>\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u4fee\u6539\u7684\u5168\u5c40\u53d8\u91cf\u3002</li> </ul> C++<pre><code>volatile int sharedValue = 0;\n\n// \u7ebf\u7a0b A\nvoid writer() {\n    sharedValue = 123;\n}\n\n// \u7ebf\u7a0b B\nvoid reader() {\n    while (sharedValue == 0) {\n        // \u7b49\u5f85...\n        // volatile \u786e\u4fdd\u6bcf\u6b21\u5faa\u73af\u90fd\u4f1a\u4ece\u5185\u5b58\u91cd\u65b0\u8bfb\u53d6 sharedValue\n    }\n}\n</code></pre> </li> </ul>"},{"location":"C%2B%2B/09-type_modify/#3-mutable","title":"3. <code>mutable</code> (\u53ef\u53d8\u7684)","text":"<p><code>mutable</code> \u5141\u8bb8\u4e00\u4e2a <code>const</code> \u6210\u5458\u51fd\u6570\u4fee\u6539\u7c7b\u7684\u67d0\u4e2a\u6210\u5458\u53d8\u91cf\u3002\u8fd9\u5728\u9700\u8981\u4fdd\u6301\u5bf9\u8c61\u7684\u903b\u8f91\u5e38\u91cf\u6027\uff0c\u4f46\u53c8\u9700\u8981\u4fee\u6539\u67d0\u4e9b\u5185\u90e8\u72b6\u6001\u65f6\u975e\u5e38\u6709\u7528\u3002</p> <ul> <li> <p>\u793a\u4f8b: \u7f13\u5b58\u8ba1\u7b97\u7ed3\u679c\u3002</p> C++<pre><code>class MyData {\nprivate:\n    mutable int cachedValue; // \u5373\u4f7f\u5728 const \u51fd\u6570\u4e2d\u4e5f\u80fd\u4fee\u6539\n    bool cacheValid;\n    int data;\n\npublic:\n    MyData(int d) : data(d), cacheValid(false), cachedValue(0) {}\n\n    int getExpensiveComputation() const {\n        if (cacheValid) {\n            return cachedValue; // \u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\n        }\n        // ... \u8fdb\u884c\u4e00\u4e9b\u590d\u6742\u7684\u8ba1\u7b97 ...\n        cachedValue = data * 10; // \u6b63\u786e\uff01\u53ef\u4ee5\u4fee\u6539 mutable \u6210\u5458\n        // cacheValid = true;  // \u7f16\u8bd1\u9519\u8bef\uff01cacheValid \u4e0d\u662f mutable\n        return cachedValue;\n    }\n};\n</code></pre> <p>\u6ce8\u610f: \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>cacheValid</code> \u4e5f\u5e94\u8be5\u662f <code>mutable</code> \u7684\uff0c\u5426\u5219\u4e5f\u65e0\u6cd5\u5728 <code>const</code> \u51fd\u6570\u4e2d\u4fee\u6539\u3002</p> </li> </ul>"},{"location":"C%2B%2B/09-type_modify/#4-static","title":"4. <code>static</code> (\u9759\u6001\u7684)","text":"<p><code>static</code> \u4fee\u9970\u7b26\u7684\u542b\u4e49\u53d6\u51b3\u4e8e\u5b83\u7684\u4f7f\u7528\u4e0a\u4e0b\u6587\u3002</p> <ul> <li> <p>\u5728\u51fd\u6570\u5185\u90e8: \u53d8\u91cf\u53ea\u4f1a\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u5e76\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u5b58\u5728\u3002\u5b83\u4fdd\u7559\u4e86\u4e0a\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c\u3002</p> C++<pre><code>void counter() {\n    static int count = 0; // \u53ea\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u521d\u59cb\u5316\n    std::cout &lt;&lt; \"Called \" &lt;&lt; ++count &lt;&lt; \" times.\" &lt;&lt; std::endl;\n}\n</code></pre> </li> <li> <p>\u5728\u7c7b\u4e2d:</p> <ul> <li>\u9759\u6001\u6210\u5458\u53d8\u91cf: \u6240\u6709\u7c7b\u7684\u5b9e\u4f8b\u5171\u4eab\u540c\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002\u5b83\u5fc5\u987b\u5728\u7c7b\u5916\u8fdb\u884c\u521d\u59cb\u5316\u3002</li> <li>\u9759\u6001\u6210\u5458\u51fd\u6570: \u53ef\u4ee5\u5728\u6ca1\u6709\u521b\u5efa\u7c7b\u5b9e\u4f8b\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u3002\u5b83\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\u3002</li> </ul> C++<pre><code>class Car {\npublic:\n    static int totalCars; // \u58f0\u660e\u9759\u6001\u6210\u5458\u53d8\u91cf\n    Car() { totalCars++; }\n    static int getTotalCars() { // \u9759\u6001\u6210\u5458\u51fd\u6570\n        return totalCars;\n    }\n};\n\nint Car::totalCars = 0; // \u5728\u7c7b\u5916\u521d\u59cb\u5316\u9759\u6001\u6210\u5458\u53d8\u91cf\n\nint main() {\n    Car c1, c2;\n    std::cout &lt;&lt; Car::getTotalCars() &lt;&lt; std::endl; // \u8f93\u51fa 2\n}\n</code></pre> </li> </ul>"},{"location":"C%2B%2B/10-type_convert/","title":"\u5341 \u7c7b\u578b\u8f6c\u6362","text":"<p>C++ \u63d0\u4f9b\u4e86\u56db\u79cd\u547d\u540d\u7684\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u7b26</p>"},{"location":"C%2B%2B/10-type_convert/#1-static_casttvalue","title":"1. <code>static_cast&lt;T&gt;(value)</code>","text":"<p>\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u8f6c\u6362\uff0c\u7528\u4e8e\u5728\u76f8\u5173\u7684\u7c7b\u578b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff0c\u4f8b\u5982\u6570\u5b57\u7c7b\u578b\u4e4b\u95f4\u3001\u6307\u9488\u7c7b\u578b\u4e4b\u95f4\uff08\u5411\u4e0a\u6216\u5411\u4e0b\u8f6c\u578b\uff09\u3002\u5b83\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u4f46\u4e0d\u63d0\u4f9b\u8fd0\u884c\u65f6\u68c0\u67e5\u3002</p> <ul> <li> <p>\u5e94\u7528:</p> <ul> <li>\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u3002</li> <li>\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u5411\u4e0a\u8f6c\u578b\uff08\u5b50\u7c7b\u6307\u9488\u8f6c\u4e3a\u7236\u7c7b\u6307\u9488\uff0c\u603b\u662f\u5b89\u5168\u7684\uff09\u3002</li> <li>\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u5411\u4e0b\u8f6c\u578b\uff08\u7236\u7c7b\u6307\u9488\u8f6c\u4e3a\u5b50\u7c7b\u6307\u9488\uff0c\u4e0d\u5b89\u5168\uff0c\u9700\u8981\u7a0b\u5e8f\u5458\u4fdd\u8bc1\u8f6c\u6362\u7684\u6b63\u786e\u6027\uff09\u3002</li> </ul> C++<pre><code>double d = 3.14;\nint i = static_cast&lt;int&gt;(d); // double -&gt; int\n\nclass Base {};\nclass Derived : public Base {};\n\nDerived d_obj;\nBase* b_ptr = &amp;d_obj;\n\n// \u5411\u4e0a\u8f6c\u578b (Upcasting) - \u9690\u5f0f\u8f6c\u6362\u901a\u5e38\u4e5f\u53ef\u4ee5\uff0c\u4f46\u663e\u5f0f\u66f4\u6e05\u6670\nBase* b_ptr2 = static_cast&lt;Base*&gt;(&amp;d_obj);\n\n// \u5411\u4e0b\u8f6c\u578b (Downcasting) - \u4e0d\u5b89\u5168\uff01\n// \u53ea\u6709\u5f53 b_ptr \u786e\u5b9a\u6307\u5411\u4e00\u4e2a Derived \u5bf9\u8c61\u65f6\u624d\u5b89\u5168\nDerived* d_ptr = static_cast&lt;Derived*&gt;(b_ptr);\n</code></pre> </li> </ul>"},{"location":"C%2B%2B/10-type_convert/#2-dynamic_casttvalue","title":"2. <code>dynamic_cast&lt;T&gt;(value)</code>","text":"<p>\u4e13\u95e8\u7528\u4e8e\u5904\u7406\u591a\u6001\uff08\u5373\u542b\u6709\u865a\u51fd\u6570\u7684\u7c7b\uff09\u7684\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u5411\u4e0b\u8f6c\u578b\u3002\u5b83\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u5982\u679c\u8f6c\u6362\u4e0d\u5b89\u5168\uff08\u5373\u7236\u7c7b\u6307\u9488\u5e76\u975e\u6307\u5411\u6240\u671f\u671b\u7684\u5b50\u7c7b\u5bf9\u8c61\uff09\uff0c\u5b83\u4f1a\u8fd4\u56de <code>nullptr</code>\uff08\u5bf9\u4e8e\u6307\u9488\uff09\u6216\u629b\u51fa <code>std::bad_cast</code> \u5f02\u5e38\uff08\u5bf9\u4e8e\u5f15\u7528\uff09\u3002</p> <ul> <li> <p>\u5e94\u7528: \u5b89\u5168\u5730\u5c06\u7236\u7c7b\u6307\u9488/\u5f15\u7528\u8f6c\u6362\u4e3a\u5b50\u7c7b\u6307\u9488/\u5f15\u7528\u3002</p> C++<pre><code>class Base { public: virtual ~Base() {} }; // \u5fc5\u987b\u6709\u865a\u51fd\u6570\nclass Derived : public Base {};\nclass Another : public Base {};\n\nBase* b_ptr = new Derived();\nBase* b_ptr2 = new Another();\n\n// \u8f6c\u6362\u6210\u529f\uff0c\u56e0\u4e3a b_ptr \u786e\u5b9e\u6307\u5411 Derived \u5bf9\u8c61\nDerived* d_ptr = dynamic_cast&lt;Derived*&gt;(b_ptr);\nif (d_ptr) {\n    std::cout &lt;&lt; \"Cast to Derived successful.\" &lt;&lt; std::endl;\n}\n\n// \u8f6c\u6362\u5931\u8d25\uff0c\u8fd4\u56de nullptr\uff0c\u56e0\u4e3a b_ptr2 \u6307\u5411 Another \u5bf9\u8c61\nDerived* d_ptr2 = dynamic_cast&lt;Derived*&gt;(b_ptr2);\nif (!d_ptr2) {\n    std::cout &lt;&lt; \"Cast to Derived failed.\" &lt;&lt; std::endl;\n}\n\ndelete b_ptr;\ndelete b_ptr2;\n</code></pre> </li> </ul>"},{"location":"C%2B%2B/10-type_convert/#3-const_casttvalue","title":"3. <code>const_cast&lt;T&gt;(value)</code>","text":"<p>\u7528\u4e8e\u6dfb\u52a0\u6216\u79fb\u9664\u53d8\u91cf\u7684 <code>const</code> \u6216 <code>volatile</code> \u5c5e\u6027\u3002\u8fd9\u662f\u552f\u4e00\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u7684 C++ \u8f6c\u6362\u3002\u6ee5\u7528\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002</p> <ul> <li> <p>\u5e94\u7528: \u5f53\u4f60\u9700\u8981\u8c03\u7528\u4e00\u4e2a\u6ca1\u6709 <code>const</code> \u91cd\u8f7d\u7684\u51fd\u6570\uff0c\u4f46\u4f60\u786e\u5b9a\u8be5\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u65f6\u3002</p> C++<pre><code>void print(char* str) {\n    std::cout &lt;&lt; str &lt;&lt; std::endl;\n}\n\nint main() {\n    const char* my_str = \"Hello, World!\";\n    // print(my_str); // \u7f16\u8bd1\u9519\u8bef\uff01\u4e0d\u80fd\u5c06 const char* \u4f20\u7ed9 char*\n    print(const_cast&lt;char*&gt;(my_str)); // \u6b63\u786e\uff0c\u4f46\u8981\u4fdd\u8bc1 print \u51fd\u6570\u4e0d\u4f1a\u4fee\u6539 str\n}\n</code></pre> <p>\u8b66\u544a: \u5982\u679c\u4f60\u7528 <code>const_cast</code> \u53bb\u6389\u4e86 <code>const</code> \u5c5e\u6027\uff0c\u7136\u540e\u8bd5\u56fe\u4fee\u6539\u4e00\u4e2a\u672c\u8eab\u88ab\u5b9a\u4e49\u4e3a <code>const</code> \u7684\u5bf9\u8c61\uff0c\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\u3002</p> </li> </ul>"},{"location":"C%2B%2B/10-type_convert/#4-reinterpret_casttvalue","title":"4. <code>reinterpret_cast&lt;T&gt;(value)</code>","text":"<p>\u8fd9\u662f\u6700\u5371\u9669\u7684\u8f6c\u6362\uff0c\u5b83\u5141\u8bb8\u4efb\u610f\u6307\u9488\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u751a\u81f3\u53ef\u4ee5\u5c06\u6307\u9488\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5b83\u57fa\u672c\u4e0a\u53ea\u662f\u91cd\u65b0\u89e3\u91ca\u5185\u5b58\u4e2d\u7684\u4f4d\u6a21\u5f0f\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u7c7b\u578b\u68c0\u67e5\u3002</p> <ul> <li> <p>\u5e94\u7528: \u5e95\u5c42\u4ee3\u7801\u3001\u4e0e\u786c\u4ef6\u4ea4\u4e92\u3001\u6216\u8005\u4e00\u4e9b\u975e\u5e38\u89c4\u7684\u8f6c\u6362\u3002\u5e94\u6781\u529b\u907f\u514d\u4f7f\u7528\u3002</p> C++<pre><code>int i = 0x12345678;\nint* p_i = &amp;i;\n\n// \u5c06 int \u6307\u9488\u8f6c\u6362\u4e3a char \u6307\u9488\nchar* p_c = reinterpret_cast&lt;char*&gt;(p_i);\n\n// \u5728\u5c0f\u7aef\u673a\u5668\u4e0a\uff0cp_c[0] \u7684\u503c\u4f1a\u662f 0x78\nstd::cout &lt;&lt; std::hex &lt;&lt; static_cast&lt;int&gt;(p_c[0]) &lt;&lt; std::endl;\n\n// \u5c06\u5730\u5740\u8f6c\u6362\u4e3a\u6574\u6570\nuintptr_t addr = reinterpret_cast&lt;uintptr_t&gt;(p_i);\nstd::cout &lt;&lt; \"Address: \" &lt;&lt; addr &lt;&lt; std::endl;\n</code></pre> </li> </ul>"},{"location":"C%2B%2B/10-type_convert/#5","title":"5. \u603b\u7ed3","text":"\u64cd\u4f5c\u7b26 \u7528\u9014 \u5b89\u5168\u6027 \u63a8\u8350\u7528\u9014 <code>static_cast</code> \u5e38\u89c4\u8f6c\u6362 \u2705 \u5b89\u5168\uff08\u7f16\u8bd1\u671f\u68c0\u67e5\uff09 \u57fa\u672c\u7c7b\u578b\u3001\u7c7b\u5c42\u6b21\u7ed3\u6784\u8f6c\u6362 <code>dynamic_cast</code> RTTI \u8f6c\u6362\uff08\u591a\u6001\uff09 \u2705 \u8fd0\u884c\u65f6\u68c0\u67e5 \u7236\u7c7b\u6307\u9488 \u2192 \u5b50\u7c7b\u6307\u9488 <code>const_cast</code> \u6dfb\u52a0/\u79fb\u9664 const/volatile \u26a0\ufe0f \u7a0d\u4e0d\u5f53\u4f1a\u51fa\u9519 \u53bb\u6389 const \u4fee\u9970 <code>reinterpret_cast</code> \u91cd\u65b0\u89e3\u91ca\u5185\u5b58 \u274c \u5371\u9669 \u6307\u9488\u3001\u5e95\u5c42\u4f4d\u7ea7\u8f6c\u6362\u7b49"},{"location":"C%2B%2B/11-define/","title":"\u5341\u4e00 \u9884\u5904\u7406\u5668\u4e0e\u5b8f\u5b9a\u4e49","text":""},{"location":"C%2B%2B/11-define/#1","title":"1. \u9884\u5904\u7406\u5668","text":"<p>\u9884\u5904\u7406\u5668\u662f \u5728\u7f16\u8bd1\u524d \u5904\u7406\u6e90\u4ee3\u7801\u7684\u7a0b\u5e8f\uff0cC/C++ \u6e90\u4ee3\u7801\u5728\u88ab\u7f16\u8bd1\u4e4b\u524d\uff0c\u4f1a\u5148\u7531\u9884\u5904\u7406\u5668\u8fdb\u884c\u5904\u7406</p>"},{"location":"C%2B%2B/11-define/#11","title":"1.1 \u5e38\u89c1\u9884\u5904\u7406\u6307\u4ee4","text":"\u6307\u4ee4 \u4f5c\u7528 <code>#include</code> \u5f15\u5165\u5934\u6587\u4ef6 <code>#define</code> \u5b9a\u4e49\u5b8f <code>#undef</code> \u53d6\u6d88\u5b8f\u5b9a\u4e49 <code>#ifdef</code> \u5982\u679c\u5b9a\u4e49\u4e86\u5b8f\u5c31\u7f16\u8bd1 <code>#ifndef</code> \u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u5b8f\u5c31\u7f16\u8bd1 <code>#if</code> / <code>#elif</code> / <code>#else</code> / <code>#endif</code> \u6761\u4ef6\u7f16\u8bd1 <code>#pragma</code> \u7f16\u8bd1\u5668\u76f8\u5173\u7684\u63a7\u5236\u6307\u4ee4"},{"location":"C%2B%2B/11-define/#12","title":"1.2 \u6761\u4ef6\u7f16\u8bd1","text":"<p>\u6761\u4ef6\u7f16\u8bd1\uff08conditional compilation\uff09\u5728 C++ \u4e2d\u662f\u975e\u5e38\u5b9e\u7528\u7684\u4e00\u79cd\u7f16\u8bd1\u65f6\u9009\u62e9\u673a\u5236\uff0c\u901a\u5e38\u7528\u4e8e\uff1a</p> <ul> <li>\u8de8\u5e73\u53f0\u7f16\u8bd1</li> <li>\u8c03\u8bd5/\u53d1\u5e03\u6a21\u5f0f\u5207\u6362</li> <li>\u542f\u7528\u6216\u7981\u7528\u7279\u6027</li> <li>\u4e0d\u540c\u786c\u4ef6\u6216\u67b6\u6784\u7684\u5904\u7406</li> </ul>"},{"location":"C%2B%2B/11-define/#121","title":"1.2.1 \u5e38\u89c1\u8bed\u6cd5","text":"C++<pre><code>#ifdef \u5b8f\u540d\n    // \u5982\u679c\u5b9a\u4e49\u4e86\u5b8f\u540d\uff0c\u7f16\u8bd1\u8fd9\u91cc\u7684\u4ee3\u7801\n#endif\n\n#ifndef \u5b8f\u540d\n    // \u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u5b8f\u540d\uff0c\u7f16\u8bd1\u8fd9\u91cc\u7684\u4ee3\u7801\n#endif\n\n#if \u6761\u4ef6\n    // \u6761\u4ef6\u6ee1\u8db3\u624d\u7f16\u8bd1\n#elif \u6761\u4ef6\n    // \u5426\u5219\u5982\u679c...\n#else\n    // \u90fd\u4e0d\u6ee1\u8db3\u65f6\n#endif\n</code></pre>"},{"location":"C%2B%2B/11-define/#2","title":"2. \u5b8f\u5b9a\u4e49","text":""},{"location":"C%2B%2B/11-define/#21","title":"2.1 \u57fa\u672c\u5f62\u5f0f","text":"C++<pre><code>#define PI 3.14159\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b))\n</code></pre> <ul> <li> <p>\u662f \u6587\u672c\u66ff\u6362\uff08\u4e0d\u662f\u53d8\u91cf\uff0c\u4e0d\u5360\u5185\u5b58\uff09</p> </li> <li> <p>\u5b8f\u51fd\u6570\uff08\u5e26\u53c2\u6570\u7684\u5b8f\uff09\u5728\u66ff\u6362\u65f6\u4f1a\u5c55\u5f00\u6210\u4ee3\u7801</p> </li> <li> <p>\u6ca1\u6709\u7c7b\u578b\u68c0\u67e5</p> </li> </ul>"},{"location":"C%2B%2B/11-define/#22-const","title":"2.2 \u5b8f\u548cconst\u7684\u533a\u522b","text":"\u7279\u6027 <code>#define</code> \u5b8f <code>const</code> \u5e38\u91cf \u66ff\u6362\u65b9\u5f0f \u7f16\u8bd1\u524d\u7684\u6587\u672c\u66ff\u6362 \u7f16\u8bd1\u5668\u7ba1\u7406\uff0c\u7c7b\u578b\u5b89\u5168 \u7c7b\u578b\u68c0\u67e5 \u274c \u65e0 \u2705 \u6709 \u8c03\u8bd5\u5668\u53ef\u89c1\u6027 \u274c \u4e0d\u53ef\u89c1 \u2705 \u53ef\u89c1 \u4f5c\u7528\u57df\u63a7\u5236 \u274c \u5168\u5c40 \u2705 \u5c40\u90e8/\u5168\u5c40\u53ef\u9009 \u652f\u6301\u590d\u6742\u7c7b\u578b \u274c \u4e0d\u652f\u6301 \u2705 \u652f\u6301\uff08\u5982\u6570\u7ec4\u3001\u7c7b\uff09 \u63a8\u8350\u7528\u6cd5 \u274c \u4e0d\u63a8\u8350\uff08\u4ec5\u7b80\u5355\u5e38\u91cf\uff09 \u2705 \u63a8\u8350"},{"location":"C%2B%2B/11-define/#3","title":"3. \u5934\u6587\u4ef6\u4fdd\u62a4","text":"<p>\u5982\u679c\u4e00\u4e2a\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\uff0c\u4f1a\u51fa\u73b0 \u91cd\u590d\u5b9a\u4e49 \u9519\u8bef\u3002\u4f8b\u5982\uff1a C++<pre><code>// file1.cpp \u548c file2.cpp \u90fd\u5305\u542b\u4e86 myheader.h\n// main.cpp \u53c8\u540c\u65f6\u5305\u542b\u4e86 file1.cpp \u548c file2.cpp\n</code></pre> \u7f16\u8bd1\u5668\u5c31\u4f1a\u4e24\u6b21\u770b\u5230\u540c\u4e00\u4e2a\u5b9a\u4e49</p> <p>\u2705 \u89e3\u51b3\u529e\u6cd5\uff1a\u4f7f\u7528\u5b8f\u505a\u6761\u4ef6\u7f16\u8bd1</p> C++<pre><code>// myheader.h\n\n#ifndef MYHEADER_H\n#define MYHEADER_H\n\n// \u58f0\u660e\u548c\u5b9a\u4e49\nint add(int a, int b);\n\n#endif // MYHEADER_H\n</code></pre> <p>\u8fd9\u53eb\u505a Include Guard\uff0c\u9632\u6b62\u591a\u6b21\u5305\u542b\u5934\u6587\u4ef6\u3002</p> <p>\u2705 \u7b49\u4ef7\u65b9\u5f0f\uff08\u73b0\u4ee3\u7f16\u8bd1\u5668\u652f\u6301\uff09\uff1a C++<pre><code>#pragma once\n</code></pre> \u8fd9\u884c\u653e\u5728\u5934\u6587\u4ef6\u6700\u4e0a\u65b9\uff0c\u6548\u679c\u4e0e <code>#ifndef/#define/#endif</code> \u7b49\u4ef7\uff0c\u66f4\u7b80\u6d01\uff0c\u4f46\u4e0d\u662f\u6240\u6709\u7f16\u8bd1\u5668\u90fd\u652f\u6301\uff08\u73b0\u4ee3\u7684\u5982 GCC/Clang/MSVC \u90fd\u652f\u6301\uff09</p> <p>\u2705 \u793a\u4f8b\uff1a\u5b8c\u6574\u7684\u5934\u6587\u4ef6\u4fdd\u62a4 + \u5b8f\u5b9a\u4e49 C++<pre><code>// math_utils.h\n#ifndef MATH_UTILS_H\n#define MATH_UTILS_H\n\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b))\n\nint add(int a, int b);\n\n#endif  // MATH_UTILS_H\n</code></pre></p> C++<pre><code>// main.cpp\n#include &lt;iostream&gt;\n#include \"math_utils.h\"\n\nint add(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    std::cout &lt;&lt; MAX(3, 5) &lt;&lt; std::endl;\n    std::cout &lt;&lt; add(3, 5) &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"C%2B%2B/12-multi_thread/","title":"\u5341\u4e8c \u591a\u7ebf\u7a0b\u4e0e\u7ebf\u7a0b\u6c60","text":"<p>\u591a\u7ebf\u7a0b\uff08Multithreading\uff09\u662f\u6307\u5728\u4e00\u4e2a\u8fdb\u7a0b\uff08Process\uff09\u4e2d\u540c\u65f6\u6267\u884c\u591a\u4e2a\u7ebf\u7a0b\uff08Thread\uff09\uff0c\u4ee5\u5b9e\u73b0\u5e76\u53d1\u5904\u7406\u4efb\u52a1\uff0c\u4ece\u800c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\uff0c\u7279\u522b\u9002\u5408\u5904\u7406IO\u5bc6\u96c6\u578b\u6216\u90e8\u5206CPU\u5bc6\u96c6\u578b\u4efb\u52a1\u3002</p>"},{"location":"C%2B%2B/12-multi_thread/#1-vs","title":"1. \u7ebf\u7a0b vs \u8fdb\u7a0b","text":"\u6bd4\u8f83\u9879 \u8fdb\u7a0b\uff08Process\uff09 \u7ebf\u7a0b\uff08Thread\uff09 \u5b9a\u4e49 \u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d CPU\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d \u62e5\u6709\u8d44\u6e90 \u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\u7b49\u8d44\u6e90 \u4e0e\u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90 \u901a\u4fe1\u5f00\u9500 \u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08\u5982\u7ba1\u9053\u3001\u6d88\u606f\u961f\u5217\uff09\u8f83\u590d\u6742 \u7ebf\u7a0b\u95f4\u901a\u4fe1\u7b80\u5355\uff0c\u56e0\u5171\u4eab\u5185\u5b58 \u521b\u5efa\u9500\u6bc1 \u5f00\u9500\u5927 \u5f00\u9500\u5c0f \u5d29\u6e83\u5f71\u54cd \u4e00\u4e2a\u8fdb\u7a0b\u5d29\u6e83\u4e0d\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b \u4e00\u4e2a\u7ebf\u7a0b\u5d29\u6e83\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u5d29\u6e83"},{"location":"C%2B%2B/12-multi_thread/#2-c","title":"2. C++\u591a\u7ebf\u7a0b","text":""},{"location":"C%2B%2B/12-multi_thread/#21","title":"2.1 \u5f15\u5165\u5934\u6587\u4ef6","text":"C++<pre><code>#include &lt;thread&gt;\n</code></pre>"},{"location":"C%2B%2B/12-multi_thread/#22","title":"2.2 \u57fa\u672c\u4f7f\u7528","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\nvoid task() {\n    std::cout &lt;&lt; \"\u7ebf\u7a0bID: \" &lt;&lt; std::this_thread::get_id() &lt;&lt; \"\\n\";\n}\n\nint main() {\n    std::thread t(task);  // \u521b\u5efa\u7ebf\u7a0b\n    t.join();             // \u7b49\u5f85\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\n    return 0;\n}\n</code></pre> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\nusing namespace std;\n\nvoid thread_1()\n{\n    cout&lt;&lt;\"\u5b50\u7ebf\u7a0b1\"&lt;&lt;endl;\n}\n\nvoid thread_2(int x)\n{\n    cout&lt;&lt;\"x:\"&lt;&lt;x&lt;&lt;endl;\n    cout&lt;&lt;\"\u5b50\u7ebf\u7a0b2\"&lt;&lt;endl;\n}\n\nint main()\n{\n  thread first ( thread_1); // \u5f00\u542f\u7ebf\u7a0b\uff0c\u8c03\u7528\uff1athread_1()\n  thread second (thread_2,100); // \u5f00\u542f\u7ebf\u7a0b\uff0c\u8c03\u7528\uff1athread_2(100)\n  //thread third(thread_2,3);//\u5f00\u542f\u7b2c3\u4e2a\u7ebf\u7a0b\uff0c\u5171\u4eabthread_2\u51fd\u6570\u3002\n  std::cout &lt;&lt; \"\u4e3b\u7ebf\u7a0b\\n\";\n\n  first.join(); //\u5fc5\u987b\u8bf4\u660e\u6dfb\u52a0\u7ebf\u7a0b\u7684\u65b9\u5f0f            \n  second.join(); \n  std::cout &lt;&lt; \"\u5b50\u7ebf\u7a0b\u7ed3\u675f.\\n\";//\u5fc5\u987bjoin\u5b8c\u6210\n  return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/12-multi_thread/#3","title":"3. \u7ebf\u7a0b\u5e38\u7528\u65b9\u6cd5","text":"\u65b9\u6cd5 \u8bf4\u660e <code>join()</code> \u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u7b49\u5f85\u8be5\u7ebf\u7a0b\u5b8c\u6210 <code>detach()</code> \u7ebf\u7a0b\u8131\u79bb\uff0c\u540e\u53f0\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u65e0\u9700\u7b49\u5f85 <code>std::this_thread::sleep_for()</code> \u5f53\u524d\u7ebf\u7a0b\u7761\u7720\u4e00\u6bb5\u65f6\u95f4 <code>std::this_thread::get_id()</code> \u83b7\u53d6\u5f53\u524d\u7ebf\u7a0bID"},{"location":"C%2B%2B/12-multi_thread/#31-joindetach","title":"3.1 join\u4e0edetach","text":"<p>\u5f53\u7ebf\u7a0b\u542f\u52a8\u540e\uff0c\u4e00\u5b9a\u8981\u5728\u548c\u7ebf\u7a0b\u76f8\u5173\u8054\u7684thread\u9500\u6bc1\u524d\uff0c\u786e\u5b9a\u4ee5\u4f55\u79cd\u65b9\u5f0f\u7b49\u5f85\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u3002\u6bd4\u5982\u4e0a\u4f8b\u4e2d\u7684join\u3002</p> <ul> <li>detach\u65b9\u5f0f\uff0c\u542f\u52a8\u7684\u7ebf\u7a0b\u81ea\u4e3b\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5f53\u524d\u7684\u4ee3\u7801\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\uff0c\u4e0d\u7b49\u5f85\u65b0\u7ebf\u7a0b\u7ed3\u675f</li> <li>join\u65b9\u5f0f\uff0c\u7b49\u5f85\u542f\u52a8\u7684\u7ebf\u7a0b\u5b8c\u6210\uff0c\u624d\u4f1a\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c</li> </ul> <p>\u53ef\u4ee5\u4f7f\u7528joinable\u5224\u65ad\u662fjoin\u6a21\u5f0f\u8fd8\u662fdetach\u6a21\u5f0f\u3002</p> <p><code>if (myThread.joinable()) foo.join();</code></p>"},{"location":"C%2B%2B/12-multi_thread/#311-join","title":"3.1.1 join\u4e3e\u4f8b","text":"<p>\u4e0b\u9762\u7684\u4ee3\u7801\uff0cjoin\u540e\u9762\u7684\u4ee3\u7801\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u9664\u975e\u5b50\u7ebf\u7a0b\u7ed3\u675f C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\nusing namespace std;\nvoid thread_1()\n{\n  while(1)\n  {\n  //cout&lt;&lt;\"\u5b50\u7ebf\u7a0b1111\"&lt;&lt;endl;\n  }\n}\nvoid thread_2(int x)\n{\n  while(1)\n  {\n  //cout&lt;&lt;\"\u5b50\u7ebf\u7a0b2222\"&lt;&lt;endl;\n  }\n}\nint main()\n{\n    thread first ( thread_1); // \u5f00\u542f\u7ebf\u7a0b\uff0c\u8c03\u7528\uff1athread_1()\n    thread second (thread_2,100); // \u5f00\u542f\u7ebf\u7a0b\uff0c\u8c03\u7528\uff1athread_2(100)\n\n    first.join(); // pauses until first finishes \u8fd9\u4e2a\u64cd\u4f5c\u5b8c\u4e86\u4e4b\u540e\u624d\u80fddestroyed\n    second.join(); // pauses until second finishes//join\u5b8c\u4e86\u4e4b\u540e\uff0c\u624d\u80fd\u5f80\u4e0b\u6267\u884c\u3002\n    while(1)\n    {\n      std::cout &lt;&lt; \"\u4e3b\u7ebf\u7a0b\\n\";\n    }\n    return 0;\n}\n</code></pre></p>"},{"location":"C%2B%2B/12-multi_thread/#312-detach","title":"3.1.2 detach\u4e3e\u4f8b","text":"<p>\u4e0b\u5217\u4ee3\u7801\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u4f1a\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7ed3\u675f\u3002\u5982\u679c\u4e3b\u7ebf\u7a0b\u8fd0\u884c\u7ed3\u675f\uff0c\u7a0b\u5e8f\u5219\u7ed3\u675f C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\nusing namespace std;\n\nvoid thread_1()\n{\n  while(1)\n  {\n      cout&lt;&lt;\"\u5b50\u7ebf\u7a0b1111\"&lt;&lt;endl;\n  }\n}\n\nvoid thread_2(int x)\n{\n    while(1)\n    {\n        cout&lt;&lt;\"\u5b50\u7ebf\u7a0b2222\"&lt;&lt;endl;\n    }\n}\n\nint main()\n{\n    thread first ( thread_1);  // \u5f00\u542f\u7ebf\u7a0b\uff0c\u8c03\u7528\uff1athread_1()\n    thread second (thread_2,100); // \u5f00\u542f\u7ebf\u7a0b\uff0c\u8c03\u7528\uff1athread_2(100)\n\n    first.detach();                \n    second.detach();            \n    for(int i = 0; i &lt; 10; i++)\n    {\n        std::cout &lt;&lt; \"\u4e3b\u7ebf\u7a0b\\n\";\n    }\n    return 0;\n}\n</code></pre></p>"},{"location":"C%2B%2B/12-multi_thread/#32-this_thread","title":"3.2 this_thread","text":"<p><code>std::this_thread</code> \u63d0\u4f9b\u4e86\u5bf9 \u5f53\u524d\u7ebf\u7a0b\u7684\u63a7\u5236\u80fd\u529b\uff0c\u6bd4\u5982\u8ba9\u7ebf\u7a0b\u4f11\u7720\u3001\u83b7\u53d6\u7ebf\u7a0b ID\u3001\u4e3b\u52a8\u8ba9\u51fa\u6267\u884c\u6743\u7b49</p> \u51fd\u6570 \u4f5c\u7528 <code>std::this_thread::sleep_for()</code> \u5f53\u524d\u7ebf\u7a0b\u7761\u4e00\u6bb5\u65f6\u95f4\uff08\u6301\u7eed\u65f6\u95f4\uff09 <code>std::this_thread::sleep_until()</code> \u5f53\u524d\u7ebf\u7a0b\u7761\u5230\u67d0\u4e2a\u65f6\u523b <code>std::this_thread::yield()</code> \u5f53\u524d\u7ebf\u7a0b\u4e3b\u52a8\u8ba9\u51fa CPU \u6267\u884c\u6743 <code>std::this_thread::get_id()</code> \u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684 \u552f\u4e00 ID"},{"location":"C%2B%2B/12-multi_thread/#321-sleep_for","title":"3.2.1 sleep_for","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;chrono&gt;\n\nvoid task() {\n    std::cout &lt;&lt; \"\u4efb\u52a1\u5f00\u59cb...\" &lt;&lt; std::endl;\n    std::this_thread::sleep_for(std::chrono::seconds(2)); // \u7761 2 \u79d2\n    std::cout &lt;&lt; \"\u4efb\u52a1\u7ed3\u675f\uff01\" &lt;&lt; std::endl;\n}\n\nint main() {\n    std::thread t(task);\n    t.join();\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/12-multi_thread/#322-get_id","title":"3.2.2 get_id","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\nvoid show_thread_id() {\n    std::cout &lt;&lt; \"\u5f53\u524d\u7ebf\u7a0b ID: \" &lt;&lt; std::this_thread::get_id() &lt;&lt; std::endl;\n}\n\nint main() {\n    std::thread t1(show_thread_id);\n    std::thread t2(show_thread_id);\n    t1.join();\n    t2.join();\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/12-multi_thread/#323-yield","title":"3.2.3 yield","text":"<p>C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\nvoid busy_task() {\n    for (int i = 0; i &lt; 5; ++i) {\n        std::cout &lt;&lt; \"\u4efb\u52a1\u6b63\u5728\u6267\u884c\uff1a\" &lt;&lt; i &lt;&lt; std::endl;\n        std::this_thread::yield(); // \u8ba9\u51faCPU\uff0c\u8ba9\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\n    }\n}\n\nint main() {\n    std::thread t(busy_task);\n    t.join();\n    return 0;\n}\n</code></pre> <code>yield()</code> \u662f\u4e00\u79cd\u4f18\u5316\u5efa\u8bae\uff0c\u7cfb\u7edf\u53ef\u80fd\u8ba9\u5f53\u524d\u7ebf\u7a0b\u6682\u505c\uff0c\u4e5f\u53ef\u80fd\u5ffd\u7565\uff08\u4e0d\u662f\u5f3a\u5236\u8ba9\u51fa\uff09</p>"},{"location":"C%2B%2B/12-multi_thread/#324-sleep_util","title":"3.2.4 sleep_util","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;chrono&gt;\n\nint main() {\n    using namespace std::chrono;\n    auto target = steady_clock::now() + seconds(3); // 3 \u79d2\u540e\u7684\u65f6\u523b\n    std::cout &lt;&lt; \"\u5f00\u59cb\u7b49\u5f85...\\n\";\n    std::this_thread::sleep_until(target);\n    std::cout &lt;&lt; \"\u65f6\u95f4\u5230\uff01\\n\";\n}\n</code></pre>"},{"location":"C%2B%2B/12-multi_thread/#4","title":"4. \u7ebf\u7a0b\u5b89\u5168\u4e0e\u540c\u6b65","text":"<p>\u591a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u8d44\u6e90\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u7ade\u4e89\uff08data race\uff09\u548c\u4e0d\u786e\u5b9a\u884c\u4e3a\uff0c\u4e3a\u6b64\u9700\u5f15\u5165\u540c\u6b65\u673a\u5236\uff1a</p> \u5de5\u5177 \u4f5c\u7528 <code>std::mutex</code> \u4e92\u65a5\u9501\uff0c\u9632\u6b62\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u8d44\u6e90 <code>std::lock_guard</code> \u81ea\u52a8\u52a0\u9501\u89e3\u9501\uff0cRAII\u98ce\u683c <code>std::unique_lock</code> \u66f4\u7075\u6d3b\u7684\u9501\u7ba1\u7406 <code>std::condition_variable</code> \u6761\u4ef6\u53d8\u91cf\uff0c\u7528\u4e8e\u7ebf\u7a0b\u7b49\u5f85\u548c\u5524\u9192"},{"location":"C%2B%2B/12-multi_thread/#41-mutex","title":"4.1 mutex","text":"<p><code>mutex</code>\uff08\u4e92\u65a5\u9501\uff0c\u5168\u79f0 mutual exclusion\uff09\u662f\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\u7528\u6765 \u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\uff0c\u907f\u514d\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u800c\u9020\u6210\u51b2\u7a81\u6216\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u4e00\u79cd\u673a\u5236</p> <ul> <li>\u4e92\u65a5\u9501\uff1a\u5728\u67d0\u6bb5\u4ee3\u7801\u6267\u884c\u524d\u52a0\u9501\uff08lock\uff09\uff0c\u6267\u884c\u5b8c\u6bd5\u540e\u89e3\u9501\uff08unlock\uff09\u3002</li> <li>\u52a0\u9501\u6210\u529f\u7684\u7ebf\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u8be5\u9501\u88ab\u91ca\u653e\u3002</li> </ul> <p>\u52a0\u9501/\u89e3\u9501\uff1a</p> <ul> <li> <p><code>lock()</code>\uff1a\u5f53\u524d\u7ebf\u7a0b\u5c1d\u8bd5\u83b7\u5f97\u4e92\u65a5\u91cf\uff0c\u82e5\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u9501\u4f4f\uff0c\u5219\u963b\u585e\u7b49\u5f85\u3002</p> </li> <li> <p><code>unlock()</code>\uff1a\u91ca\u653e\u9501\uff0c\u5141\u8bb8\u5176\u4ed6\u7ebf\u7a0b\u8fdb\u5165\u3002</p> </li> </ul> <p>C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;mutex&gt;\n\nstd::mutex mutex; //\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u4e92\u65a5\u91cf\nint counter = 0;\n\nvoid increate(){\n    for (int i =0; i &lt;1000; ++i){\n        mtx.lock();\n        ++counter;\n        mtx.unlock();\n    }\n}\n\nint main(){\n    std::thread t1(increate);\n    std::thread t2(increate);\n    t1.join();\n    t2.join();\n    std::cout &lt;&lt; \"counter = \" &lt;&lt; counter &lt;&lt; std::endl;\n}\n</code></pre> \u7531\u4e8e\u52a0\u9501\u4fdd\u62a4\uff0ccounter\u7684\u7ed3\u679c\u662f2000\uff0c\u4e0d\u4f1a\u51fa\u73b0\u7ade\u4e89\u5bfc\u81f4\u7684\u5c11\u52a0\u3002</p>"},{"location":"C%2B%2B/12-multi_thread/#43-stdlock_guard","title":"4.3 std::lock_guard","text":"<p>\u624b\u52a8<code>lock()</code>/ <code>unlock()</code>\u5bb9\u6613\u5fd8\u8bb0\u91ca\u653e\u9501\uff0cc++\u63a8\u8350\u7528RAII\u5f62\u5f0f\u7684<code>std::lock_guard</code></p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;mutex&gt;\n\nstd::mutex mtx;  // \u5168\u5c40\u4e92\u65a5\u9501\nint counter = 0;\n\nvoid increase() {\n    for (int i = 0; i &lt; 10000; ++i) {\n        std::lock_guard&lt;std::mutex&gt; lock(mtx); // \u81ea\u52a8\u52a0\u9501\u548c\u89e3\u9501\n        ++counter;\n    }\n}// \u79bb\u5f00\u4f5c\u7528\u57df\u81ea\u52a8\u89e3\u9501\n\nint main() {\n    std::thread t1(increase);\n    std::thread t2(increase);\n\n    t1.join();\n    t2.join();\n\n    std::cout &lt;&lt; \"Final counter: \" &lt;&lt; counter &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/12-multi_thread/#44-stdunique_lock","title":"4.4 std::unique_lock","text":"<p><code>std::unique_lock</code>\u4f1a\u5728\u6784\u9020\u65f6\u83b7\u53d6\u4e92\u65a5\u9501\uff0c\u5728\u6790\u6784\u65f6\u81ea\u52a8\u91ca\u653e\u9501\uff0c\u786e\u4fdd\u4e0d\u56e0\u5f02\u5e38\u6216\u63d0\u524dreturn\u5fd8\u8bb0\u89e3\u9501\uff1b\u76f8\u6bd4<code>std::lock_guard</code>\uff0c\u5b83\u7684\u7279\u70b9\u662f\u53ef\u5ef6\u8fdf\u52a0\u9501\u3001\u53ef\u63d0\u524d\u89e3\u9501\uff0c\u53ef\u91cd\u65b0\u52a0\u9501\uff0c\u53ef\u8f6c\u79fb\u6240\u6709\u6743\u3002</p> <p>C++<pre><code>#include &lt;mutex&gt;\nstd::mutex m;\n\n{\n    std::unique_lock&lt;std::mutex&gt; lk(m); // \u9ed8\u8ba4\u7acb\u5373\u52a0\u9501\n} // \u51fa\u4f5c\u7528\u57df\u81ea\u52a8\u89e3\u9501\n</code></pre> | \u6784\u9020\u6a21\u5f0f              | \u8bf4\u660e                                                                        | | ----------------- | ------------------------------------------------------------------------- | | \u9ed8\u8ba4\u6784\u9020\uff08\u9501\u5bf9\u8c61\u65f6\u7acb\u5373 lock\uff09 | <code>std::unique_lock&lt;std::mutex&gt; lk(m);</code>                                     | | \u5ef6\u8fdf\u52a0\u9501              | <code>std::unique_lock&lt;std::mutex&gt; lk(m, std::defer_lock);</code>\uff08\u4e0d\u52a0\u9501\uff0c\u9700\u8981\u624b\u52a8 <code>lock()</code>\uff09 | | \u5c1d\u8bd5\u52a0\u9501              | <code>std::unique_lock&lt;std::mutex&gt; lk(m, std::try_to_lock);</code>\uff08\u975e\u963b\u585e\uff09              | | \u5df2\u52a0\u9501               | <code>std::unique_lock&lt;std::mutex&gt; lk(m, std::adopt_lock);</code>\uff08\u5047\u8bbe\u5916\u90e8\u5df2\u7ecf\u52a0\u9501\uff09          |</p> <p>\u5ef6\u8fdf\u52a0\u9501</p> C++<pre><code>std::unique_lock&lt;std::mutex&gt; lk(m, std::defer_lock);\n// \u505a\u4e00\u4e9b\u65e0\u5173\u5de5\u4f5c\nlk.lock();//\u9700\u8981\u65f6\u518d\u52a0\u9501\n</code></pre> <p>\u53ef\u63d0\u524d\u89e3\u9501\u518d\u52a0\u9501</p> C++<pre><code>std::unique_lock&lt;std::mutex&gt; lk(m);\ndo_work();\nlk.unlock(); // \u63d0\u524d\u91ca\u653e\u9501\ndo_other_work();\nlk.lock(); // \u91cd\u65b0\u52a0\u9501\n</code></pre> <p>\u914d\u5408\u6761\u4ef6\u53d8\u91cf</p> <p><code>std::condition_variable</code>\u9700\u8981<code>std::unique_lock</code>\u800c\u4e0d\u662f<code>lock_guard</code>\uff0c \u56e0\u4e3a\u5b83\u5728<code>wait()</code>\u65f6\u4f1a\u81ea\u52a8\u91ca\u653e\u9501\u5e76\u5728\u5524\u9192\u65f6\u91cd\u65b0\u52a0\u9501</p> C++<pre><code>#include &lt;condition_variable&gt;\n\nstd::mutex mtx;\nstd::condition_variable cv;\nbool ready = false;\n\nvoid worker(){\n    std::unique_lock&lt;std::mutex&gt; lk(m);\n    cv.wait(lk, []{ return ready; }); // \u7b49\u5f85\u76f4\u5230ready \u4e3atrue\n}\n</code></pre> \u7528\u6cd5 \u8bf4\u660e <code>mutex.lock()</code> \u624b\u52a8\u52a0\u9501\uff08\u4e0d\u63a8\u8350\uff09 <code>mutex.unlock()</code> \u624b\u52a8\u89e3\u9501\uff08\u4e0d\u63a8\u8350\uff09 <code>std::lock_guard</code> \u63a8\u8350\u65b9\u5f0f\uff0c\u81ea\u52a8\u52a0\u89e3\u9501 <code>std::unique_lock</code> \u66f4\u7075\u6d3b\uff0c\u53ef\u5ef6\u8fdf\u52a0\u9501\u3001\u63d0\u524d\u89e3\u9501\uff0c\u91cd\u590d\u52a0\u9501 <code>std::try_lock</code> \u975e\u963b\u585e\u52a0\u9501\uff0c\u9501\u5931\u8d25\u7acb\u5373\u8fd4\u56de"},{"location":"C%2B%2B/12-multi_thread/#45-condition_variable","title":"4.5 condition_variable","text":"<p><code>std::condition_variable</code>\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u5728\u67d0\u4e2a\u6761\u4ef6\u6ee1\u8db3\u4e4b\u524d\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u800c\u7531\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6761\u4ef6\u6ee1\u8db3\u65f6\u901a\u77e5\u5b83\u7ee7\u7eed\u6267\u884c\u3002 \u5e38\u7528\u4e8e \u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u578b\u3001\u4efb\u52a1\u8c03\u5ea6 \u7b49\u573a\u666f\u3002</p> <ul> <li> <p><code>std::condition_variable</code>\uff1a\u6761\u4ef6\u53d8\u91cf\u5bf9\u8c61</p> </li> <li> <p><code>std::mutex</code>\uff1a\u4e92\u65a5\u9501\uff0c\u7528\u4e8e\u4fdd\u62a4\u5171\u4eab\u6570\u636e</p> </li> <li> <p><code>wait()</code>\uff1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u76f4\u5230\u6761\u4ef6\u6ee1\u8db3</p> </li> <li> <p><code>notify_one()</code> / <code>notify_all()</code>\uff1a\u5524\u9192\u4e00\u4e2a\u6216\u6240\u6709\u7b49\u5f85\u7ebf\u7a0b</p> </li> </ul> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;mutex&gt;\n#include &lt;condition_variable&gt;\n\nstd::mutex mtx;\nstd::condition_variable cv;\nbool ready = false;\n\nvoid worker() {\n    std::unique_lock&lt;std::mutex&gt; lock(mtx);  // \u4e00\u5b9a\u8981\u7528 unique_lock\n    cv.wait(lock, []{ return ready; });      // \u6761\u4ef6\u4e0d\u6ee1\u8db3\u5c31\u4e00\u76f4\u963b\u585e\n    std::cout &lt;&lt; \"Worker is running!\\n\";\n}\n\nint main() {\n    std::thread t(worker);\n\n    {\n        std::lock_guard&lt;std::mutex&gt; lock(mtx);\n        ready = true;           // \u8bbe\u7f6e\u6761\u4ef6\n    }\n\n    cv.notify_one();            // \u901a\u77e5\u7b49\u5f85\u7684\u7ebf\u7a0b\n    t.join();\n    return 0;\n}\n</code></pre> <p><code>wait</code>\u7684\u4e09\u79cd\u5f62\u5f0f</p> C++<pre><code>cv.wait(lock);  // \u7b49\u5f85 notify\uff0c\u88ab\u5524\u9192\u540e\u8981\u624b\u52a8\u68c0\u67e5\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\uff08\u53ef\u80fd\u865a\u5047\u5524\u9192\uff09\n\ncv.wait(lock, [] { return ready; });  // \u63a8\u8350\u5199\u6cd5\uff0c\u81ea\u52a8\u5faa\u73af\u5224\u65ad\u6761\u4ef6\n\ncv.wait_for(lock, timeout);  // \u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff08\u8d85\u65f6\u81ea\u52a8\u8fd4\u56de\uff09\n</code></pre> <p>\u793a\u4f8b\uff1a\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b C++<pre><code>std::queue&lt;int&gt; data_queue;\nstd::mutex data_mutex;\nstd::condition_variable data_cv;\n\nvoid producer() {\n    for (int i = 0; i &lt; 5; ++i) {\n        {\n            std::lock_guard&lt;std::mutex&gt; lock(data_mutex);\n            data_queue.push(i);\n        }\n        data_cv.notify_one();  // \u901a\u77e5\u6d88\u8d39\u8005\n        std::this_thread::sleep_for(std::chrono::milliseconds(100));\n    }\n}\n\nvoid consumer() {\n    while (true) {\n        std::unique_lock&lt;std::mutex&gt; lock(data_mutex);\n        data_cv.wait(lock, []{ return !data_queue.empty(); }); // \u7b49\u5f85\u975e\u7a7a\n        int val = data_queue.front();\n        data_queue.pop();\n        lock.unlock();\n        std::cout &lt;&lt; \"Consumed: \" &lt;&lt; val &lt;&lt; std::endl;\n        if (val == 4) break;\n    }\n}\n</code></pre></p> \u6ce8\u610f\u70b9 \u8bf4\u660e <code>wait()</code> \u8981\u914d\u5408 <code>std::unique_lock</code> \u4f7f\u7528 \u56e0\u4e3a\u5b83\u9700\u8981\u91ca\u653e\u9501\u5e76\u5728\u5524\u9192\u65f6\u91cd\u65b0\u52a0\u9501 \u8981\u9632\u6b62 \u865a\u5047\u5524\u9192 <code>wait(lock, predicate)</code> \u4f1a\u81ea\u52a8\u5faa\u73af\u5224\u65ad\uff0c\u63a8\u8350\u4f7f\u7528 \u6761\u4ef6\u53d8\u91cf\u672c\u8eab\u4e0d\u4fdd\u5b58\u72b6\u6001 <code>notify_one()</code> \u4e0d\u4f1a\u201c\u8bb0\u4f4f\u201d\u66fe\u7ecf\u8c03\u7528\u8fc7\uff0c\u5982\u679c\u6b64\u65f6\u6ca1\u4eba\u7b49\u5f85\uff0c\u901a\u77e5\u4f1a\u4e22\u5931 \u907f\u514d\u6b7b\u9501 \u4fee\u6539\u6761\u4ef6\u65f6\u5e94\u5148\u52a0\u9501\uff0c\u901a\u77e5\u65f6\u5e94\u89e3\u9501\u6216\u5728\u9501\u5185\u5feb\u901f\u901a\u77e5"},{"location":"C%2B%2B/12-multi_thread/#46-stdatomic","title":"4.6 std::atomic","text":"<p>\u5728 C++ \u4e2d\uff0c<code>std::atomic</code> \u662f\u7528\u4e8e \u591a\u7ebf\u7a0b\u7f16\u7a0b \u4e2d\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u63d0\u4f9b\u4e86\u539f\u5b50\u64cd\u4f5c\u652f\u6301\uff0c\u7528\u4e8e\u907f\u514d\u6570\u636e\u7ade\u4e89\uff08data race\uff09\uff0c\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u6570\u636e\u8bbf\u95ee\u548c\u4fee\u6539</p> <p>\u539f\u5b50\u8bfb\u5199</p> C++<pre><code>std::atomic&lt;int&gt; value(0);\n\nint x = value.load();   // \u539f\u5b50\u8bfb\u53d6\nvalue.store(10);        // \u539f\u5b50\u5199\u5165\n</code></pre> <p>\u539f\u5b50\u52a0\u51cf</p> C++<pre><code>value++;   // \u6216 value.fetch_add(1);\nvalue--;   // \u6216 value.fetch_sub(1);\n</code></pre> <p>CAS\uff08Compare-And-Swap\uff09</p> C++<pre><code>int expected = 5;\nint desired = 10;\nif (value.compare_exchange_strong(expected, desired)) {\n    // \u5f53\u524d value == expected\uff0c\u6210\u529f\u66ff\u6362\u4e3a desired\n} else {\n    // \u66ff\u6362\u5931\u8d25\uff0cexpected \u88ab\u66f4\u65b0\u4e3a\u5f53\u524d value \u7684\u503c\n}\n</code></pre> <p>\u793a\u4f8b\uff1a\u591a\u7ebf\u7a0b\u5b89\u5168\u52a0\u6cd5</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;atomic&gt;\n#include &lt;thread&gt;\n\nstd::atomic&lt;int&gt; counter(0);\n\nvoid increment() {\n    for (int i = 0; i &lt; 1000; ++i) {\n        counter++;\n    }\n}\n\nint main() {\n    std::thread t1(increment);\n    std::thread t2(increment);\n    t1.join();\n    t2.join();\n    std::cout &lt;&lt; \"Counter: \" &lt;&lt; counter &lt;&lt; std::endl;\n}\n</code></pre> <p>\u82e5\u4e0d\u4f7f\u7528 <code>std::atomic</code>\uff0c\u5219\u4f1a\u53d1\u751f\u6570\u636e\u7ade\u4e89\uff0c\u5bfc\u81f4\u8ba1\u6570\u4e0d\u51c6\u786e\u3002</p> <p>\u5e38\u7528\u6210\u5458\u51fd\u6570\uff08\u4ee5 <code>std::atomic&lt;int&gt;</code> \u4e3a\u4f8b\uff09</p> \u51fd\u6570\u540d \u542b\u4e49 <code>load()</code> \u8bfb\u53d6\u5f53\u524d\u503c <code>store(val)</code> \u5199\u5165\u65b0\u503c <code>exchange(val)</code> \u8bbe\u7f6e\u65b0\u503c\u5e76\u8fd4\u56de\u65e7\u503c <code>compare_exchange_strong(expected, desired)</code> \u539f\u5b50\u6bd4\u8f83\u5e76\u66ff\u6362 <code>fetch_add(n)</code> / <code>fetch_sub(n)</code> \u539f\u5b50\u52a0/\u51cf"},{"location":"C%2B%2B/12-multi_thread/#5","title":"5. \u7ebf\u7a0b\u6c60","text":"<p>\u5982\u679c\u4f60\u9891\u7e41\u5730\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\uff0c\u4f1a\u5e26\u6765\u6027\u80fd\u5f00\u9500\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff08Thread Pool\uff09\uff1a \u4e00\u822c\u7ebf\u7a0b\u6c60\u90fd\u4f1a\u6709\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u6784\u6210\uff1a</p> <p>1. \u4efb\u52a1\u961f\u5217</p> <p>\u5b58\u653e\u5f85\u6267\u884c\u7684\u4efb\u52a1\uff0c\u4e00\u822c\u7528<code>std::queue</code>\u548c<code>std::mutex</code>\u4fdd\u62a4</p> <p>2. \u5de5\u4f5c\u7ebf\u7a0b worker threads, \u7ebf\u7a0b\u6c60\u542f\u52a8\u65f6\u521b\u5efa\u7684\u7ebf\u7a0b\u96c6\u5408\uff0c\u5faa\u73af\u4ece\u4efb\u52a1\u961f\u5217\u53d6\u4efb\u52a1\u6267\u884c</p> <p>3. \u540c\u6b65\u673a\u5236 - <code>std::mutex</code> \uff1a \u4fdd\u62a4\u4efb\u52a1\u961f\u5217\u8bfb\u5199\u5b89\u5168 - <code>std::condition_variable</code>\uff1a\u4efb\u52a1\u5230\u6765\u65f6\u901a\u77e5\u7ebf\u7a0b\u6267\u884c</p> <p>4. \u5173\u95ed\u63a7\u5236</p> <p>\u7ebf\u7a0b\u6c60\u6790\u6784\u65f6\u9700\u8981\u5173\u95ed\u6240\u6709\u7ebf\u7a0b\uff08\u8bbe\u7f6e\u505c\u6b62\u6807\u5fd7\uff0c\u5524\u9192\u6240\u6709\u7ebf\u7a0b\uff0cjoin\uff09</p> <p>\u7b80\u6613\u5b9e\u73b0 C++<pre><code>#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;thread&gt;\n#include &lt;mutex&gt;\n#include &lt;condition_variable&gt;\n#include &lt;future&gt;\n#include &lt;functional&gt;\n#include &lt;stdexcept&gt;\n\n\nclass ThreadPool{\n\npublic:\n    explicit ThreadPool(size_t threads):stop(false){\n        for (size_t i = 0; i &lt; threads; ++i){\n            workers.emplace_back([this]{\n                for (;;){\n                    std::function&lt;void()&gt; task;\n                    {\n                        std:unique_lock&lt;std::mutex&gt; lock(this-&gt;queue_mutex);\n                        this-&gt;condition.wait(lock, [this]{\n                            return this-&gt;stop || !this-&gt;tasks.empty();\n                        });\n                        if (this-&gt;stop &amp;&amp; this-&gt;tasks.empty()){\n                            return; // \u7ebf\u7a0b\u9000\u51fa\u6761\u4ef6\n                        }\n                        task = std::move(this-&gt;tasks.front());\n                        this-&gt;tasks.pop();\n                    }\n                    task();\n                }\n            });\n        }\n    }\n    // \u52a0\u4efb\u52a1\n    template&lt;class F, class... Args&gt;\n    auto enqueue(F&amp;&amp;f, Args&amp;&amp;... args)\n        -&gt; std::future&lt;typename std::result_of&lt;F(Args...)&gt;::type&gt;\n    {\n        // \u628a\u51fd\u6570\u548c\u53c2\u6570\u7ed1\u5b9a\u6210\u4e00\u4e2a nullary callable\n        // \u4f7f\u7528 std::bind \u4f1a\u628a\u53c2\u6570\u62f7\u8d1d/\u79fb\u52a8\u5230\u5185\u90e8\u5b58\u50a8\n        typedef typename std::result_of&lt;F(Args...)&gt;::type return_type;\n        auto task = std::make_shared&lt;std::packaged_task&lt;return_type()&gt;&gt;(\n            std::bind(std::forward&lt;F&gt;(f), std::forward&lt;Args&gt;(args)...)\n        );\n\n        std::future&lt;return_type&gt; res = task-&gt;get_future();\n        {\n            std::unique_lock&lt;std::mutex&gt; lock(queue_mutex);\n            if (stop)\n                throw std::runtime_error(\"enqueue on stopped ThreadPool\");\n            tasks.emplace([task](){(*task)();});\n        }\n        condition.notify_one();\n        return res;\n    }\n\n    ~ThreadPool(){\n        {\n            std::unique_lock&lt;std::mutex&gt; lock(queue_mutex);\n            if (stop) return; // \u5df2\u7ecf\u5173\u95ed\n            stop = true;\n        }\n        condition.notify_all();\n        for (std::thread &amp;worker : workers) {\n            if (worker.joinable())\n                worker.join();\n        }\n    }\n\nprivate:\n    std::vector&lt;std::thread&gt; workers; // \u7ebf\u7a0b\u5bb9\u5668\uff0c\u5b58\u50a8\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u5bf9\u8c61\uff0c \u7ebf\u7a0b\u6c60\u91cc\u6709\u591a\u5c11\u7ebf\u7a0b\n    std::queue&lt;std::function&lt;void()&gt;&gt; tasks; // \u4efb\u52a1\u961f\u5217\uff0c\u5b58\u653e\u5f85\u6267\u884c\u4efb\u52a1\uff0c\u5b58\u653e\u7531\u7528\u6237\u63d0\u4ea4\u7684\u4efb\u52a1\uff0c \u7528std::function&lt;void()&gt;\u5305\u88c5\n\n    std::mutex queue_mutex; // \u4fdd\u62a4\u4efb\u52a1\u961f\u5217\u7684\u4e92\u65a5\u9501\n    std::condition_variable condition; // \u6761\u4ef6\u961f\u5217\uff0c\u7528\u4e8e\u7ebf\u7a0b\u7b49\u5f85/ \u5524\u9192\n    bool stop; // \u6807\u5fd7\uff0c\u7ebf\u7a0b\u6c60\u662f\u5426\u505c\u6b62\u8fd0\u884c\n\n};\n</code></pre></p>"},{"location":"C%2B%2B/13-lambda/","title":"lambda\u51fd\u6570","text":"<p>Lambda \u8868\u8fbe\u5f0f\u662f C++11 \u5f15\u5165\u7684\u4e00\u79cd \u8f7b\u91cf\u7ea7\u7684\u533f\u540d\u51fd\u6570\u3002\u628a\u5b83\u5f53\u6210 \u201c\u5199\u5728\u51fd\u6570\u91cc\u7684\u51fd\u6570\u201d\uff0c\u5e38\u7528\u4e8e \u4e34\u65f6\u51fd\u6570\u903b\u8f91\u3001\u56de\u8c03\u51fd\u6570\u3001STL\u7b97\u6cd5\u7b49\u3002</p> <p>\u5f53\u7136\u53ef\u4ee5\uff0c\u4e0b\u9762\u662f C++ Lambda \u8868\u8fbe\u5f0f\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u9002\u5408\u521d\u5b66\u8005\u7406\u89e3\uff1a</p>"},{"location":"C%2B%2B/13-lambda/#1","title":"1. \u57fa\u672c\u8bed\u6cd5","text":"C++<pre><code>[capture](parameter_list) -&gt; return_type {\n    // function body\n}\n</code></pre> <p>\u5176\u4e2d\uff1a</p> \u90e8\u5206 \u8bf4\u660e <code>[capture]</code> \u6355\u83b7\u5916\u90e8\u53d8\u91cf\u65b9\u5f0f <code>(parameter_list)</code> \u53c2\u6570\u5217\u8868\uff08\u5982 <code>(int a, int b)</code>\uff09 <code>-&gt; return_type</code> \u53ef\u9009\uff0c\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b <code>{}</code> \u51fd\u6570\u4f53"},{"location":"C%2B%2B/13-lambda/#2","title":"2. \u57fa\u672c\u7528\u6cd5\u793a\u4f8b","text":""},{"location":"C%2B%2B/13-lambda/#21-lambda","title":"2.1 \u6700\u7b80\u5355\u7684 Lambda","text":"C++<pre><code>auto say_hello = []() {\n    std::cout &lt;&lt; \"Hello, Lambda!\" &lt;&lt; std::endl;\n};\n\nsay_hello();  // \u8c03\u7528\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#22","title":"2.2 \u5e26\u53c2\u6570\u548c\u8fd4\u56de\u503c","text":"C++<pre><code>auto add = [](int a, int b) -&gt; int {\n    return a + b;\n};\n\nstd::cout &lt;&lt; add(3, 4);  // \u8f93\u51fa 7\n</code></pre> <p>\ud83d\udca1 \u8fd4\u56de\u503c\u7c7b\u578b\u53ef\u4ee5\u7701\u7565\uff08\u8ba9\u7f16\u8bd1\u5668\u63a8\u5bfc\uff09\uff1a</p> C++<pre><code>auto add = [](int a, int b) {\n    return a + b;\n};\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#3-capture","title":"3. \u6355\u83b7\u5916\u90e8\u53d8\u91cf\uff08<code>[capture]</code>\uff09","text":""},{"location":"C%2B%2B/13-lambda/#31","title":"3.1 \u6309\u503c\u6355\u83b7 <code>[=]</code>","text":"C++<pre><code>int x = 5;\nauto f = [=]() {\n    std::cout &lt;&lt; x &lt;&lt; std::endl;  // \u8f93\u51fa 5\n};\nf();\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#32","title":"3.2 \u6309\u5f15\u7528\u6355\u83b7 <code>[&amp;]</code>","text":"C++<pre><code>int x = 5;\nauto f = [&amp;]() {\n    x = 10;\n};\nf();\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // \u8f93\u51fa 10\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#33","title":"3.3 \u6df7\u5408\u6355\u83b7","text":"C++<pre><code>int a = 1, b = 2;\nauto f = [a, &amp;b]() {\n    std::cout &lt;&lt; a &lt;&lt; \", \" &lt;&lt; b &lt;&lt; std::endl;\n};\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#4","title":"4. \u5e38\u89c1\u5e94\u7528\u573a\u666f","text":""},{"location":"C%2B%2B/13-lambda/#41-stl","title":"4.1 \u4e0e STL \u7b97\u6cd5\u914d\u5408\u4f7f\u7528","text":"C++<pre><code>std::vector&lt;int&gt; v = {1, 2, 3, 4};\n\nstd::for_each(v.begin(), v.end(), [](int x) {\n    std::cout &lt;&lt; x &lt;&lt; \" \";\n});\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#42","title":"4.2 \u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219","text":"C++<pre><code>std::sort(v.begin(), v.end(), [](int a, int b) {\n    return a &gt; b;  // \u964d\u5e8f\n});\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#43","title":"4.3 \u591a\u7ebf\u7a0b\u51fd\u6570\u4f53","text":"C++<pre><code>#include &lt;thread&gt;\n\nstd::thread t([] {\n    std::cout &lt;&lt; \"Hello from thread\" &lt;&lt; std::endl;\n});\nt.join();\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#5-mutable","title":"5. <code>mutable</code> \u5173\u952e\u5b57","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6309\u503c\u6355\u83b7\u7684\u53d8\u91cf\u662f \u53ea\u8bfb \u7684\u3002\u5982\u679c\u4f60\u60f3\u4fee\u6539\u5b83\u7684\u526f\u672c\uff0c\u9700\u8981\u52a0\u4e0a <code>mutable</code>\uff1a</p> C++<pre><code>int x = 10;\nauto f = [x]() mutable {\n    x += 5;  // \u5141\u8bb8\u4fee\u6539\u526f\u672c\n    std::cout &lt;&lt; x &lt;&lt; std::endl;\n};\nf();  // \u8f93\u51fa 15\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // \u8fd8\u662f 10\uff0c\u539f\u59cb\u53d8\u91cf\u6ca1\u53d8\n</code></pre>"},{"location":"C%2B%2B/13-lambda/#6","title":"6. \u5c0f\u7ed3","text":"\u7279\u6027 \u8bf4\u660e \u652f\u6301\u533f\u540d\u51fd\u6570 \u2705 \u53ef\u4ee5\u6355\u83b7\u5916\u90e8\u53d8\u91cf \u2705\uff08\u6309\u503c/\u5f15\u7528\uff09 \u53ef\u4ee5\u4f5c\u4e3a\u56de\u8c03\u4f7f\u7528 \u2705\uff08\u5982\u7ebf\u7a0b\u3001\u6392\u5e8f\u7b49\uff09 \u652f\u6301\u63a8\u5bfc\u8fd4\u56de\u7c7b\u578b \u2705 \u7c7b\u4f3c\u51fd\u6570\u5bf9\u8c61/\u95ed\u5305 \u2705"},{"location":"C%2B%2B/14-linking/","title":"\u9759\u6001\u7f16\u8bd1\u548c\u52a8\u6001\u7f16\u8bd1","text":"<p>\u9759\u6001\u7f16\u8bd1\u548c\u52a8\u6001\u7f16\u8bd1\u662f\u4e24\u79cd\u5e38\u89c1\u7684\u7a0b\u5e8f\u7f16\u8bd1\u4e0e\u94fe\u63a5\u65b9\u5f0f\uff0c\u5b83\u4eec\u7684\u6838\u5fc3\u533a\u522b\u5728\u4e8e\u4ee3\u7801\u5982\u4f55\u4e0e\u5e93\u8fdb\u884c\u94fe\u63a5\u3001\u4f9d\u8d56\u5e93\u5982\u4f55\u52a0\u8f7d\u3002\u4ee5\u4e0b\u662f\u4e24\u8005\u7684\u533a\u522b\u4e0e\u8054\u7cfb\uff1a</p>"},{"location":"C%2B%2B/14-linking/#1","title":"1. \u533a\u522b","text":"\u65b9\u9762 \u9759\u6001\u7f16\u8bd1\uff08Static Linking\uff09 \u52a8\u6001\u7f16\u8bd1\uff08Dynamic Linking\uff09 \u94fe\u63a5\u65f6\u95f4 \u5728\u7f16\u8bd1\u671f\u95f4\u5c31\u5c06\u6240\u6709\u4f9d\u8d56\u7684\u5e93\u94fe\u63a5\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u518d\u52a0\u8f7d\u52a8\u6001\u5e93\uff08\u5982 <code>.so</code>, <code>.dll</code> \u6587\u4ef6\uff09 \u6587\u4ef6\u4f53\u79ef \u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8f83\u5927\uff0c\u5e93\u4ee3\u7801\u5df2\u7ecf\u6253\u5305\u8fdb\u53bb \u53ef\u6267\u884c\u6587\u4ef6\u8f83\u5c0f\uff0c\u5e93\u4ee3\u7801\u4e0d\u5305\u542b\u5728\u5185 \u8fd0\u884c\u4f9d\u8d56 \u65e0\u9700\u4f9d\u8d56\u5916\u90e8\u5e93\uff0c\u72ec\u7acb\u8fd0\u884c \u9700\u8981\u4f9d\u8d56\u7cfb\u7edf\u4e2d\u5b58\u5728\u5bf9\u5e94\u7684\u52a8\u6001\u5e93 \u5347\u7ea7\u7ef4\u62a4 \u66f4\u65b0\u5e93\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u6574\u4e2a\u7a0b\u5e8f \u52a8\u6001\u5e93\u5347\u7ea7\u540e\u53ef\u4e0d\u9700\u91cd\u65b0\u7f16\u8bd1\u7a0b\u5e8f \u52a0\u8f7d\u6548\u7387 \u542f\u52a8\u901f\u5ea6\u8f83\u5feb\uff08\u65e0\u52a0\u8f7d\u8fc7\u7a0b\uff09 \u542f\u52a8\u65f6\u8981\u52a0\u8f7d\u5e93\uff0c\u7565\u6162\u4e00\u70b9 \u5360\u7528\u5185\u5b58 \u591a\u4e2a\u7a0b\u5e8f\u5404\u81ea\u5360\u7528\u4e00\u4efd\u5e93\u7684\u5185\u5b58 \u591a\u4e2a\u7a0b\u5e8f\u53ef\u5171\u4eab\u4e00\u4efd\u52a8\u6001\u5e93\u5185\u5b58\uff0c\u63d0\u9ad8\u7cfb\u7edf\u8d44\u6e90\u5229\u7528\u6548\u7387 \u79fb\u690d\u6027 \u66f4\u597d\uff0c\u6253\u5305\u65f6\u5df2\u7ecf\u5305\u542b\u6240\u6709\u4f9d\u8d56 \u5dee\u4e00\u4e9b\uff0c\u8fd0\u884c\u73af\u5883\u9700\u8981\u914d\u7f6e\u597d\u5bf9\u5e94\u7684\u52a8\u6001\u5e93"},{"location":"C%2B%2B/14-linking/#11","title":"1.1 \u9759\u6001\u94fe\u63a5\uff1a\u6bcf\u4e2a\u7a0b\u5e8f\u81ea\u5df1\u5360\u4e00\u4efd\u5e93\u7684\u5185\u5b58","text":"<p>\u7f16\u8bd1\u65f6\uff0c\u5c06\u5e93\u4ee3\u7801 \u590d\u5236\u8fdb\u53ef\u6267\u884c\u6587\u4ef6\uff08.exe/.out\uff09 \u4e2d\u3002 \u6bcf\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u65f6\uff0c\u90fd\u6709\u81ea\u5df1\u7684\u90a3\u4e00\u4efd\u5e93\u4ee3\u7801\u548c\u6570\u636e\u3002</p> <p>\u5047\u8bbe\u6709\u4e00\u4e2a\u7a0b\u5e8f A \u548c\u4e00\u4e2a\u7a0b\u5e8f B \u90fd\u4f7f\u7528 libmath.a\uff08\u9759\u6001\u5e93\uff09\uff0c\u7f16\u8bd1\u65f6\uff1a C++<pre><code>gcc a.c libmath.a -o progA\ngcc b.c libmath.a -o progB\n</code></pre> \u7ed3\u679c\u662f <code>progA</code> \u548c <code>progB</code> \u90fd\u5404\u81ea\u5c06 <code>libmath</code> \u7684\u4ee3\u7801\u590d\u5236\u4e86\u4e00\u4efd \u8fd0\u884c\u65f6\uff0cA \u5360\u7528 1 \u4efd <code>libmath</code> \u4ee3\u7801\u6bb5\uff0cB \u4e5f\u5360\u7528 1 \u4efd \u2014\u2014 \u4e24\u4efd\u5185\u5b58\u3002</p>"},{"location":"C%2B%2B/14-linking/#12","title":"1.2 \u52a8\u6001\u94fe\u63a5\uff1a\u591a\u4e2a\u7a0b\u5e8f\u5171\u4eab\u4e00\u4efd\u5e93\u7684\u5185\u5b58","text":"<p>\u7f16\u8bd1\u65f6\u53ea\u8bb0\u5f55\u201c\u9700\u8981\u7684\u5e93\u51fd\u6570\u7b26\u53f7\u201d\uff0c\u4e0d\u590d\u5236\u4ee3\u7801\u3002</p> <p>\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684 \u52a8\u6001\u94fe\u63a5\u5668\uff08\u5982 Linux \u7684 ld.so) \u8d1f\u8d23\u52a0\u8f7d .so\uff08\u6216 .dll\uff09\u6587\u4ef6\u3002</p> <p>\u6240\u6709\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u5e93\u6587\u4ef6\u7684\u5185\u5b58\u6620\u5c04\u3002 \u5047\u8bbe progA \u548c progB \u90fd\u4f7f\u7528 libmath.so\uff08\u52a8\u6001\u5e93\uff09\uff1a C++<pre><code>gcc a.c -lmath -o progA\ngcc b.c -lmath -o progB\n</code></pre> \u8fd0\u884c\u4e24\u4e2a\u7a0b\u5e8f\u540e\uff0c\u7cfb\u7edf\u53d1\u73b0 <code>libmath.so</code> \u5df2\u7ecf\u88ab\u52a0\u8f7d\u4e86\u4e00\u6b21\uff0c\u4e8e\u662f\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u4f1a\u590d\u7528\u5df2\u52a0\u8f7d\u7684\u5185\u5b58\u5730\u5740\u3002</p>"},{"location":"C%2B%2B/14-linking/#2","title":"2. \u8054\u7cfb","text":"<ol> <li>\u76ee\u7684\u76f8\u540c\uff1a\u90fd\u662f\u4e3a\u4e86\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5e93\u6587\u4ef6\uff0c\u8ba9\u7a0b\u5e8f\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u3002</li> <li>\u7f16\u8bd1\u6d41\u7a0b\u7c7b\u4f3c\uff1a\u90fd\u662f\u7ecf\u8fc7\u9884\u5904\u7406\u3001\u7f16\u8bd1\u3001\u6c47\u7f16\u3001\u94fe\u63a5\u8fd9\u51e0\u4e2a\u6b65\u9aa4\uff1b</li> <li>\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\uff1a\u4e00\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u90e8\u5206\u4f7f\u7528\u9759\u6001\u5e93\uff0c\u90e8\u5206\u4f7f\u7528\u52a8\u6001\u5e93\u3002</li> <li>\u7531\u94fe\u63a5\u5668\u63a7\u5236\u884c\u4e3a\uff1a\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u53c2\u6570\u51b3\u5b9a\u662f\u4f7f\u7528 <code>\u9759\u6001\u94fe\u63a5</code> \u8fd8\u662f <code>\u52a8\u6001\u94fe\u63a5</code>\uff0c\u5982\uff1a</li> </ol> Bash<pre><code>gcc main.c -static -o main   # \u5f3a\u5236\u4f7f\u7528\u9759\u6001\u94fe\u63a5\ngcc main.c -o main           # \u9ed8\u8ba4\u4f18\u5148\u52a8\u6001\u94fe\u63a5\n</code></pre>"},{"location":"C%2B%2B/14-linking/#3","title":"3. \u5b9e\u9645\u5e94\u7528\u5bf9\u6bd4","text":"\u573a\u666f \u63a8\u8350\u4f7f\u7528\u65b9\u5f0f \u539f\u56e0 \u5d4c\u5165\u5f0f/\u8de8\u5e73\u53f0\u90e8\u7f72 \u9759\u6001\u7f16\u8bd1 \u53ef\u79fb\u690d\u6027\u5f3a\uff0c\u4f9d\u8d56\u6253\u5305\u5728\u4e00\u8d77 \u684c\u9762/\u670d\u52a1\u5668\u7a0b\u5e8f \u52a8\u6001\u7f16\u8bd1 \u8282\u7701\u7a7a\u95f4\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u5347\u7ea7 \u6027\u80fd\u654f\u611f/\u542f\u52a8\u5feb\u9700\u6c42 \u9759\u6001\u7f16\u8bd1 \u4e0d\u9700\u8981\u8fd0\u884c\u65f6\u52a0\u8f7d\u5e93 \u5b89\u5168\u66f4\u65b0\u9891\u7e41\u7684\u5e93 \u52a8\u6001\u7f16\u8bd1 \u53ea\u9700\u66f4\u65b0\u5e93\u6587\u4ef6\u5373\u53ef\uff0c\u65e0\u9700\u91cd\u65b0\u7f16\u8bd1\u4e3b\u7a0b\u5e8f"},{"location":"C%2B%2B/14-std_function/","title":"<code>std::function&lt;void()&gt;</code>","text":"<p><code>std::function&lt;void()&gt;</code> \u662f C++ \u6807\u51c6\u5e93\u91cc\u975e\u5e38\u91cd\u8981\u4e14\u5b9e\u7528\u7684\u4e00\u4e2a\u6a21\u677f\u7c7b\uff0c\u7528\u4e8e\u5c01\u88c5\u4efb\u4f55\u7b26\u5408\u201c\u65e0\u53c2\u6570\u3001\u65e0\u8fd4\u56de\u503c\u201d\u51fd\u6570\u7b7e\u540d\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u3002\u5b83\u4f7f\u5f97\u4f60\u53ef\u4ee5\u7528\u7edf\u4e00\u7684\u7c7b\u578b\u5b58\u50a8\u3001\u4f20\u9012\u548c\u8c03\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u51fd\u6570\u3001\u51fd\u6570\u5bf9\u8c61\u6216 lambda \u8868\u8fbe\u5f0f\u3002</p>"},{"location":"C%2B%2B/14-std_function/#1","title":"1. \u5b9a\u4e49","text":"<ul> <li><code>std::function&lt;R(Args...)&gt;</code> \u662f\u4e00\u4e2a\u6a21\u677f\u7c7b\uff0c\u8868\u793a\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u53ea\u8981\u5b83\u7684\u51fd\u6570\u7b7e\u540d\u662f <code>R(Args...)</code>\u3002</li> <li>\u5b83\u53ef\u4ee5\u5b58\u50a8\u666e\u901a\u51fd\u6570\u6307\u9488\u3001Lambda\u3001\u51fd\u6570\u5bf9\u8c61\uff08\u91cd\u8f7d\u4e86<code>operator()</code>\u7684\u7c7b\u5bf9\u8c61\uff09\u3001\u7ed1\u5b9a\u8868\u8fbe\u5f0f\uff08<code>std::bind</code>\u7ed3\u679c\uff09\u7b49\u3002</li> <li>\u5b83\u7684\u5e95\u5c42\u5b9e\u73b0\u4f1a\u505a\u7c7b\u578b\u64e6\u9664\uff08type erasure\uff09\uff0c\u8ba9\u4e0d\u540c\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u8868\u73b0\u4e3a\u7edf\u4e00\u7684\u63a5\u53e3\u3002</li> </ul>"},{"location":"C%2B%2B/14-std_function/#2","title":"2. \u5c01\u88c5\u51fd\u6570\u7c7b\u578b","text":"<ul> <li>\u8fd9\u662f <code>std::function</code> \u7684\u4e00\u79cd\u7279\u5316\uff0c\u4ee3\u8868\u5c01\u88c5\u65e0\u53c2\u6570\u3001\u8fd4\u56devoid\u7684\u51fd\u6570\u7c7b\u578b\u3002</li> <li>\u6362\u53e5\u8bdd\u8bf4\uff0c<code>std::function&lt;void()&gt;</code>\u53ef\u4ee5\u5b58\u50a8\u4efb\u4f55\u80fd\u88ab\u8c03\u7528\u4e14\u7b7e\u540d\u4e3a<code>void f()</code>\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u3002</li> </ul>"},{"location":"C%2B%2B/14-std_function/#3","title":"3. \u7528\u9014","text":"<ul> <li>\u5728\u9700\u8981\u7edf\u4e00\u5904\u7406\u4e0d\u540c\u4efb\u52a1\u3001\u56de\u8c03\u6216\u8005\u5f02\u6b65\u64cd\u4f5c\u65f6\u975e\u5e38\u65b9\u4fbf\u3002</li> <li>\u4f60\u4e0d\u9700\u8981\u5173\u5fc3\u5177\u4f53\u4efb\u52a1\u662f\u4ec0\u4e48\uff0c\u53ea\u8981\u8c03\u7528<code>operator()</code>\u5373\u53ef\u6267\u884c\u3002</li> <li>\u5b83\u7684\u7075\u6d3b\u6027\u9002\u5408\u653e\u5165\u4efb\u52a1\u961f\u5217\u3001\u4e8b\u4ef6\u7cfb\u7edf\u3001\u4fe1\u53f7\u69fd\u7b49\u573a\u666f\u3002</li> </ul>"},{"location":"C%2B%2B/14-std_function/#4","title":"4. \u4e3e\u4f8b\u8bf4\u660e","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n\nvoid foo() {\n    std::cout &lt;&lt; \"foo called\\n\";\n}\n\nint main() {\n    // \u5b58\u666e\u901a\u51fd\u6570\n    std::function&lt;void()&gt; f = foo;\n    f(); // \u8f93\u51fa: foo called\n\n    // \u5b58Lambda\u8868\u8fbe\u5f0f\n    f = []() {\n        std::cout &lt;&lt; \"lambda called\\n\";\n    };\n    f(); // \u8f93\u51fa: lambda called\n\n    // \u5b58\u51fd\u6570\u5bf9\u8c61\n    struct Bar {\n        void operator()() const {\n            std::cout &lt;&lt; \"Bar called\\n\";\n        }\n    };\n    f = Bar();\n    f(); // \u8f93\u51fa: Bar called\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/14-std_function/#5-stdfunctionvoid","title":"5. \u7ebf\u7a0b\u6c60\u4e2d <code>std::function&lt;void()&gt;</code> \u7684\u4f5c\u7528","text":"<ul> <li>\u7ebf\u7a0b\u6c60\u4efb\u52a1\u961f\u5217\u901a\u5e38\u5b58\u50a8<code>std::function&lt;void()&gt;</code>\uff0c\u8fd9\u6837\u65e0\u8bba\u63d0\u4ea4\u7684\u4efb\u52a1\u662f\u51fd\u6570\u6307\u9488\u3001Lambda\u8fd8\u662f\u7ed1\u5b9a\u7684\u6210\u5458\u51fd\u6570\uff0c\u90fd\u53ef\u4ee5\u7edf\u4e00\u5b58\u653e\u5e76\u7531\u7ebf\u7a0b\u8c03\u7528\u3002</li> <li>\u7ebf\u7a0b\u53d6\u51fa\u4efb\u52a1\u540e\u53ea\u9700\u8c03\u7528<code>task()</code>\u5373\u53ef\u6267\u884c\u4efb\u52a1\uff0c\u65e0\u9700\u77e5\u9053\u4efb\u52a1\u5177\u4f53\u7c7b\u578b\u3002</li> </ul>"},{"location":"C%2B%2B/14-std_function/#6","title":"6. \u5176\u4ed6\u7b7e\u540d\u51fd\u6570","text":"<p><code>std::function</code> \u4e0d\u4ec5\u80fd\u5305\u88c5\u65e0\u53c2\u65e0\u8fd4\u56de\u7684\u51fd\u6570\uff08\u5982 <code>std::function&lt;void()&gt;</code>\uff09\uff0c\u8fd8\u80fd\u5305\u88c5\u4efb\u610f\u7b7e\u540d\u7684\u51fd\u6570\uff0c\u5305\u62ec\u5e26\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u5404\u79cd\u51fd\u6570\u3002</p> <p>\u5b83\u7684\u6a21\u677f\u53c2\u6570\u662f\u51fd\u6570\u7b7e\u540d\u683c\u5f0f\uff1a</p> C++<pre><code>std::function&lt;ReturnType(ArgTypes...)&gt;\n</code></pre> <ul> <li><code>ReturnType</code> \u662f\u8fd4\u56de\u7c7b\u578b\uff08\u53ef\u4ee5\u662f<code>void</code>\u3001<code>int</code>\u3001<code>std::string</code>\u7b49\uff09</li> <li><code>ArgTypes...</code> \u662f\u53c2\u6570\u7c7b\u578b\u5217\u8868\uff08\u53ef\u4ee5\u662f0\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\uff09</li> </ul> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n#include &lt;string&gt;\n\n// \u65e0\u53c2\u65e0\u8fd4\u56de\nstd::function&lt;void()&gt; f1 = []() {\n    std::cout &lt;&lt; \"Hello World\\n\";\n};\n\n// \u6709\u53c2\u6570\u65e0\u8fd4\u56de\nstd::function&lt;void(int)&gt; f2 = [](int x) {\n    std::cout &lt;&lt; \"Number: \" &lt;&lt; x &lt;&lt; \"\\n\";\n};\n\n// \u6709\u53c2\u6570\u6709\u8fd4\u56de\nstd::function&lt;int(int,int)&gt; f3 = [](int a, int b) {\n    return a + b;\n};\n\n// \u5e26\u590d\u6742\u7c7b\u578b\u53c2\u6570\u548c\u8fd4\u56de\nstd::function&lt;std::string(const std::string&amp;, int)&gt; f4 = [](const std::string&amp; s, int n) {\n    return s + \" number \" + std::to_string(n);\n};\n\nint main() {\n    f1();              // \u8f93\u51fa Hello World\n    f2(42);            // \u8f93\u51fa Number: 42\n    std::cout &lt;&lt; f3(1, 2) &lt;&lt; \"\\n\"; // \u8f93\u51fa 3\n    std::cout &lt;&lt; f4(\"Test\", 7) &lt;&lt; \"\\n\"; // \u8f93\u51fa Test number 7\n}\n</code></pre> <p><code>std::function</code> \u80fd\u5305\u88c5\uff1a</p> <ul> <li>\u666e\u901a\u51fd\u6570\u6307\u9488</li> <li>\u51fd\u6570\u5bf9\u8c61\uff08\u91cd\u8f7d\u4e86<code>operator()</code>\u7684\u7c7b\u5b9e\u4f8b\uff09</li> <li>Lambda\u8868\u8fbe\u5f0f</li> <li><code>std::bind</code>\u751f\u6210\u7684\u7ed1\u5b9a\u8868\u8fbe\u5f0f</li> <li>\u6210\u5458\u51fd\u6570\u6307\u9488\uff08\u9700\u8981\u914d\u5408\u5bf9\u8c61\u5b9e\u4f8b\u8c03\u7528\uff09</li> </ul>"},{"location":"C%2B%2B/15-l_r_value/","title":"\u5de6\u503c\u548c\u53f3\u503c","text":"<p>\u5de6\u503c(value) - \u5de6\u503c\u6307\u7684\u662f\u8868\u8fbe\u5f0f\u7ed3\u675f\u540e\u4f9d\u7136\u6709\u201c\u5185\u5b58\u5730\u5740\u201d\u4e14\u53ef\u4ee5\u88ab\u53d6\u5730\u5740\u7684\u5bf9\u8c61 - \u901a\u5e38\u8868\u793a\u5177\u540d\u53d8\u91cf\u6216\u6301\u4e45\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u80fd\u51fa\u73b0\u5728\u8d4b\u503c\u8bed\u53e5\u7684\u5de6\u8fb9 - \u7b80\u5355\u6765\u8bf4\uff0c\u5de6\u503c\u5c31\u662f\u53ef\u5bfb\u5740\u7684\u5bf9\u8c61</p> <p>\u53f3\u503c(rvalue)</p> <ul> <li>\u53f3\u503c\u662f\u4e0d\u80fd\u53d6\u5730\u5740\u7684\u4e34\u65f6\u503c\u6216\u8005\u7eaf\u503c\u8868\u8fbe\u5f0f</li> <li>\u4ee3\u8868\u7684\u662f\u5c06\u8981\u6d88\u4ea1\u7684\u5bf9\u8c61\u6216\u5b57\u9762\u91cf\uff0c\u4e0d\u5177\u5907\u6301\u4e45\u5b58\u50a8\u5730\u5740\uff0c\u901a\u5e38\u53ea\u80fd\u51fa\u73b0\u5728\u8d4b\u503c\u8bed\u53e5\u53f3\u8fb9</li> <li>\u53f3\u503c\u662f\u4e34\u65f6\u7684\uff0c\u4e0d\u53ef\u5bfb\u5740\u7684 C++<pre><code>int x = 10;       // x \u662f\u5de6\u503c\nint* p = &amp;x;      // \u53ef\u4ee5\u53d6\u5730\u5740\uff0c\u8bf4\u660ex\u662f\u5de6\u503c\uff0c p\u4e5f\u662f\u5de6\u503c\uff0c&amp;x\u662f\u53f3\u503c\n\nint y = x + 5;    // x+5 \u662f\u53f3\u503c\uff0c\u4e0d\u80fd\u53d6\u5730\u5740\n// int* q = &amp;(x + 5); // \u9519\u8bef\uff0c\u4e0d\u80fd\u53d6\u53f3\u503c\u5730\u5740\n\nint&amp; ref = x;     // ref \u662f\u5de6\u503c\u5f15\u7528\uff0c\u5f15\u7528\u5de6\u503c\n</code></pre></li> </ul> \u7279\u5f81 \u5de6\u503c \u53f3\u503c \u662f\u5426\u6709\u5730\u5740 \u6709\u5730\u5740 \u6ca1\u6709\u5730\u5740 \u662f\u5426\u53ef\u4ee5\u53d6\u5730\u5740 \u53ef\u4ee5 \u4e0d\u80fd \u662f\u5426\u53ef\u4ee5\u8d4b\u503c \u53ef\u4ee5\uff08\u901a\u5e38\u5728\u8d4b\u503c\u5de6\u8fb9\uff09 \u4e0d\u80fd\uff08\u8d4b\u503c\u53f3\u8fb9\uff09 \u5178\u578b\u4f8b\u5b50 \u53d8\u91cf\u3001\u51fd\u6570\u8fd4\u56de\u7684\u5de6\u503c\u5f15\u7528 \u5b57\u9762\u91cf\u3001\u8868\u8fbe\u5f0f\u4e34\u65f6\u7ed3\u679c"},{"location":"C%2B%2B/15-l_r_value/#1","title":"1. \u57fa\u7840\u5347\u7ea7","text":"C++<pre><code>int a = 5;           // a \u662f\u5de6\u503c\nint b = 10;          \n(a = b) = 20;        // a = b \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u5de6\u503c\uff08\u8d4b\u503c\u8868\u8fbe\u5f0f\u8fd4\u56de\u5de6\u503c\uff09\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li><code>(a = b)</code> \u8fd4\u56de\u7684\u662f <code>a</code> \u7684\u5f15\u7528\uff0c\u6240\u4ee5\u5b83\u662f\u5de6\u503c\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8d4b\u503c\u3002</li> <li>\u8fd9\u79cd\u7279\u6027\u5728\u4e00\u4e9b\u94fe\u5f0f\u8d4b\u503c\u4e2d\u6709\u7528\uff0c\u6bd4\u5982 <code>x = y = z;</code></li> </ul>"},{"location":"C%2B%2B/15-l_r_value/#2","title":"2. \u81ea\u589e\u81ea\u51cf\u7684\u9677\u9631","text":"C++<pre><code>int x = 5;\n\n++x;     // ++x \u662f\u5de6\u503c\uff0c\u53ef\u4ee5\u53d6\u5730\u5740\nint* p = &amp;++x; // OK\n\nx++;     // x++ \u662f\u53f3\u503c\uff0c\u4e0d\u80fd\u53d6\u5730\u5740\n// int* q = &amp;x++; // \u7f16\u8bd1\u9519\u8bef\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li><code>++x</code> \u662f\u524d\u7f6e\u81ea\u589e\uff0c\u76f4\u63a5\u4fee\u6539\u539f\u53d8\u91cf\uff0c\u8fd4\u56de\u7684\u4ecd\u7136\u662f\u53d8\u91cf\u672c\u8eab\uff08\u5de6\u503c\uff09\u3002</li> <li><code>x++</code> \u662f\u540e\u7f6e\u81ea\u589e\uff0c\u8fd4\u56de\u7684\u662f\u4fee\u6539\u524d\u7684\u4e34\u65f6\u503c\uff08\u53f3\u503c\uff09\u3002</li> </ul>"},{"location":"C%2B%2B/15-l_r_value/#3","title":"3. \u51fd\u6570\u8fd4\u56de\u503c\u7684\u5dee\u5f02","text":"C++<pre><code>int global = 42;\n\nint&amp; get_ref() { return global; } // \u8fd4\u56de\u5de6\u503c\u5f15\u7528\nint  get_val() { return global; } // \u8fd4\u56de\u503c\uff08\u53f3\u503c\uff09\n\nget_ref() = 100;  // OK\uff0cget_ref() \u662f\u5de6\u503c\n// get_val() = 100; // \u7f16\u8bd1\u9519\u8bef\uff0cget_val() \u662f\u53f3\u503c\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li>\u8fd4\u56de\u5de6\u503c\u5f15\u7528\u7684\u51fd\u6570\u8c03\u7528\u662f\u5de6\u503c\u3002</li> <li>\u8fd4\u56de\u666e\u901a\u503c\u7684\u51fd\u6570\u8c03\u7528\u662f\u53f3\u503c\uff08\u9664\u975e\u662f <code>std::move</code> \u5f3a\u5236\u8f6c\u6362\uff09\u3002</li> </ul>"},{"location":"C%2B%2B/15-l_r_value/#4-stdmove","title":"4. <code>std::move</code> \u548c\u53f3\u503c\u5f15\u7528","text":"C++<pre><code>#include &lt;utility&gt;\n#include &lt;string&gt;\n\nstd::string s1 = \"hello\";-------------------\nstd::string s2 = std::move(s1); // std::move(s1) \u662f\u53f3\u503c\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li><code>std::move</code> \u4e0d\u4f1a\u771f\u7684\u79fb\u52a8\uff0c\u5b83\u53ea\u662f\u628a\u4e00\u4e2a\u5de6\u503c\u6807\u8bb0\u6210\u53f3\u503c\uff08<code>static_cast&lt;T&amp;&amp;&gt;</code>\uff09\u3002</li> <li>\u8fd9\u6837\u6784\u9020/\u8d4b\u503c\u8fd0\u7b97\u7b26\u5c31\u4f1a\u9009\u62e9\u53f3\u503c\u5f15\u7528\u7248\u672c\uff0c\u4ece\u800c\u8fdb\u884c\u79fb\u52a8\u8bed\u4e49\u3002</li> </ul> <p><code>\u62f7\u8d1d\u6784\u9020</code> - \u4f1a\u4e3a\u65b0\u5bf9\u8c61 s2 \u5206\u914d\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u628a s1 \u7684\u5185\u5bb9\u9010\u5b57\u8282\u590d\u5236\u8fc7\u53bb\u3002 \u5185\u5b58\u5206\u914d + \u6570\u636e\u590d\u5236\uff0c\u4ee3\u4ef7\u76f8\u5bf9\u5927\u3002 <code>\u79fb\u52a8\u6784\u9020</code> - \u4f1a\u76f4\u63a5\u628a s1 \u5185\u90e8\u7684\u6307\u9488 data_ \u201c\u5077\u201d\u8fc7\u6765\uff0cs1 \u81ea\u8eab\u7684\u6307\u9488\u88ab\u7f6e\u4e3a\u7a7a\uff08\u6216\u6307\u5411\u7a7a\u4e32\uff09\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u590d\u5236\u6570\u636e\uff0c\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u5206\u914d\u5185\u5b58\u3002\u53ea\u662f\u51e0\u4e2a\u6307\u9488\u548c\u6570\u503c\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u5f00\u9500\u6781\u5c0f\u3002</p>"},{"location":"C%2B%2B/15-l_r_value/#5","title":"5. \u5bb9\u5668\u5143\u7d20\u8bbf\u95ee\u7684\u7ec6\u8282","text":"C++<pre><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\nstd::vector&lt;int&gt; v = {1, 2, 3};\n\nv[0] = 42;     // v[0] \u662f\u5de6\u503c\nint* p = &amp;v[1]; // OK\n\n*(v.begin()) = 99; // *(...) \u662f\u5de6\u503c\n\nauto it = v.begin();\n*(it++) = 88;  // \u6ce8\u610f it++ \u662f\u53f3\u503c\uff0c\u4f46 *(it++) \u662f\u5de6\u503c\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li>\u5bb9\u5668\u7684\u4e0b\u6807\u8fd0\u7b97\u7b26 <code>operator[]</code> \u8fd4\u56de\u5143\u7d20\u7684\u5f15\u7528\uff0c\u6240\u4ee5\u662f\u5de6\u503c\u3002</li> <li>\u8fed\u4ee3\u5668\u89e3\u5f15\u7528 <code>*it</code> \u8fd4\u56de\u5143\u7d20\u5f15\u7528\uff0c\u4e5f\u662f\u5de6\u503c\u3002</li> </ul>"},{"location":"C%2B%2B/15-l_r_value/#6","title":"6. \u5de6\u503c\u5f15\u7528&amp;\u53f3\u503c\u5f15\u7528","text":""},{"location":"C%2B%2B/15-l_r_value/#61","title":"6.1 &amp; \u4e0e &amp;&amp; \u5728\u7c7b\u578b\u4e0a\u7684\u542b\u4e49","text":"<p>\u5728 C++ \u4e2d\uff0c<code>&amp;</code> \u548c <code>&amp;&amp;</code> \u51fa\u73b0\u5728\u7c7b\u578b\u58f0\u660e\u91cc\u65f6\uff0c\u662f\u5f15\u7528\u7c7b\u578b\u4fee\u9970\u7b26\uff1a</p> \u7b26\u53f7 \u540d\u79f0 \u4ee3\u8868\u7684\u610f\u601d <code>&amp;</code> \u5de6\u503c\u5f15\u7528\uff08lvalue reference\uff09 \u7ed1\u5b9a\u5230\u53ef\u53d6\u5730\u5740\u7684\u5bf9\u8c61\uff08\u5de6\u503c\uff09 <code>&amp;&amp;</code> \u53f3\u503c\u5f15\u7528\uff08rvalue reference\uff09 \u7ed1\u5b9a\u5230\u4e34\u65f6\u5bf9\u8c61\u6216\u5c06\u4ea1\u503c\uff08\u53f3\u503c\uff09 <p>\u4f8b\u5b50</p> C++<pre><code>int a = 10;\nint&amp;  lref = a;      // \u5de6\u503c\u5f15\u7528\uff0c\u7ed1\u5b9a\u5230\u53d8\u91cf a\nint&amp;&amp; rref = 5;      // \u53f3\u503c\u5f15\u7528\uff0c\u7ed1\u5b9a\u5230\u4e34\u65f6\u503c 5\n\n// int&amp;  x = 5;  // \u274c \u9519\u8bef\uff1a\u5de6\u503c\u5f15\u7528\u4e0d\u80fd\u7ed1\u5b9a\u53f3\u503c\nint&amp;&amp; y = std::move(a); // \u2705 \u53ef\u4ee5\u7528 std::move \u5f3a\u5236\u5c06\u5de6\u503c\u8f6c\u4e3a\u53f3\u503c\u5f15\u7528\n</code></pre>"},{"location":"C%2B%2B/15-l_r_value/#62","title":"6.2 \u5728\u51fd\u6570\u53c2\u6570\u4e0a\u7684\u7279\u6b8a\u89c4\u5219\uff08\u5f15\u7528\u6298\u53e0\uff09","text":"<p>\u5982\u679c\u7528\u6a21\u677f\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6bd4\u5982\uff1a</p> C++<pre><code>template&lt;typename T&gt;\nvoid func(T&amp;&amp; arg);\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>T&amp;&amp;</code> \u5e76\u4e0d\u4e00\u5b9a\u662f\u53f3\u503c\u5f15\u7528\uff01 \u5b83\u662f\u4e07\u80fd\u5f15\u7528\uff08universal reference\uff09\u6216\u8f6c\u53d1\u5f15\u7528\uff08forwarding reference\uff09\u3002</p> <p>\u89c4\u5219\uff1a</p> <ul> <li>\u5982\u679c\u4f20\u7684\u662f\u5de6\u503c\uff0c<code>T</code> \u4f1a\u63a8\u5bfc\u6210\u5de6\u503c\u5f15\u7528\u7c7b\u578b\uff0c<code>T&amp;&amp;</code> \u4f1a\u6298\u53e0\u6210 <code>T&amp;</code>\uff08\u5de6\u503c\u5f15\u7528\uff09\u3002</li> <li>\u5982\u679c\u4f20\u7684\u662f\u53f3\u503c\uff0c<code>T</code> \u4f1a\u63a8\u5bfc\u6210\u666e\u901a\u7c7b\u578b\uff0c<code>T&amp;&amp;</code> \u4fdd\u6301\u53f3\u503c\u5f15\u7528\u3002</li> </ul> <p>\u5f15\u7528\u6298\u53e0\u89c4\u5219\uff1a</p> Text Only<pre><code>T&amp;  &amp;  \u2192 T&amp;\nT&amp;  &amp;&amp; \u2192 T&amp;\nT&amp;&amp; &amp;  \u2192 T&amp;\nT&amp;&amp; &amp;&amp; \u2192 T&amp;&amp;\n</code></pre> <p>\u4f8b\u5b50\uff1a</p> C++<pre><code>template&lt;typename T&gt;\nvoid func(T&amp;&amp; arg) {\n    // arg \u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u5de6\u503c\u5f15\u7528\u6216\u53f3\u503c\u5f15\u7528\n}\n\nint x = 1;\nfunc(x);       // T \u63a8\u5bfc\u4e3a int&amp;\uff0c\u53c2\u6570\u7c7b\u578b\u662f int&amp; &amp;&amp; \u2192 int&amp;\nfunc(2);       // T \u63a8\u5bfc\u4e3a int\uff0c  \u53c2\u6570\u7c7b\u578b\u662f int&amp;&amp;\n</code></pre>"},{"location":"C%2B%2B/15-l_r_value/#63-perfect-forwarding","title":"6.3 \u5b8c\u7f8e\u8f6c\u53d1\uff08Perfect Forwarding\uff09","text":"<p>\u5b8c\u7f8e\u8f6c\u53d1\u7684\u6838\u5fc3\u601d\u60f3\uff1a \u4fdd\u6301\u5b9e\u53c2\u7684\u503c\u7c7b\u522b\uff08\u5de6\u503c/\u53f3\u503c\uff09\u539f\u6837\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u6216\u79fb\u52a8\u3002</p> <p>\u901a\u5e38\u914d\u5408\uff1a</p> <ol> <li>\u4e07\u80fd\u5f15\u7528\u53c2\u6570\uff08<code>T&amp;&amp;</code>\uff09</li> <li><code>std::forward&lt;T&gt;</code> \u4fdd\u7559\u539f\u672c\u7684\u503c\u7c7b\u522b</li> </ol> <p>\u4f8b\u5b50\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;utility&gt; // for std::forward\n\nvoid process(int&amp;  x) { std::cout &lt;&lt; \"\u5de6\u503c\\n\"; }\nvoid process(int&amp;&amp; x) { std::cout &lt;&lt; \"\u53f3\u503c\\n\"; }\n\ntemplate&lt;typename T&gt;\nvoid wrapper(T&amp;&amp; arg) {\n    // \u5b8c\u7f8e\u8f6c\u53d1\uff0c\u4fdd\u7559 arg \u7684\u503c\u7c7b\u522b\uff0c arg \u662f\u5de6\u503c\u53d8\u91cf\u540d\uff0c\u54ea\u6015\u539f\u672c\u662f\u53f3\u503c\u4e5f\u4f1a\u5f53\u6210\u5de6\u503c\n    process(std::forward&lt;T&gt;(arg));\n}\n\nint main() {\n    int a = 10;\n    wrapper(a);    // \u8f93\u51fa: \u5de6\u503c\n    wrapper(5);    // \u8f93\u51fa: \u53f3\u503c\n}\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8981 <code>std::forward</code> \u800c\u4e0d\u662f\u76f4\u63a5\u4f20 <code>arg</code>\uff1f</p> <ul> <li>\u5982\u679c\u76f4\u63a5 <code>process(arg)</code>\uff0c<code>arg</code> \u662f\u4e2a\u547d\u540d\u53d8\u91cf\uff0c\u6c38\u8fdc\u662f\u5de6\u503c\uff0c\u5373\u4f7f\u5b83\u539f\u6765\u662f\u53f3\u503c\u3002</li> <li><code>std::forward&lt;T&gt;(arg)</code> \u4f1a\u5728 T \u662f\u975e\u5f15\u7528\u7c7b\u578b\u65f6\u6062\u590d\u53f3\u503c\u7279\u6027\u3002</li> </ul>"},{"location":"C%2B%2B/16-function_template/","title":"\u51fd\u6570\u6a21\u677f","text":""},{"location":"C%2B%2B/16-function_template/#1-function-template","title":"1. \u666e\u901a\u51fd\u6570\u6a21\u677f (Function Template)","text":"C++<pre><code>template &lt;typename T&gt;\n\u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u540d(T \u53c2\u6570) {\n    // \u51fd\u6570\u4f53\n}\n</code></pre> C++<pre><code>template&lt;class T&gt;\nT add(T a, T b) { return a + b; }\n\nadd(1, 2);      // T \u63a8\u5bfc\u4e3a int\nadd(1.5, 2.5);  // T \u63a8\u5bfc\u4e3a double\n</code></pre>"},{"location":"C%2B%2B/16-function_template/#2-variadic-template","title":"2. \u53ef\u53d8\u53c2\u6570\u6a21\u677f (Variadic Template)","text":"<p><code>class... Args</code> \u8fd9\u79cd\u5199\u6cd5\u662f \u6a21\u677f\u53c2\u6570\u5305\uff0c\u8868\u793a\u8fd9\u91cc\u6709\u4e00\u4e2a\u6570\u91cf\u53ef\u53d8\u7684\u6a21\u677f\u53c2\u6570\u5217\u8868\u3002</p> <ul> <li><code>Args...</code> \u662f\u4e00\u4e2a\u7c7b\u578b\u5217\u8868\uff0c\u6bd4\u5982 <code>(int, double, std::string)</code>\u3002</li> <li>\u548c\u666e\u901a\u6a21\u677f\u53c2\u6570\u4e0d\u540c\uff0c\u5b83\u7684\u6570\u91cf\u53ef\u4ee5\u662f 0 \u4e2a\u30011 \u4e2a\u6216\u591a\u4e2a\u3002</li> <li>\u5bf9\u5e94\u7684\u51fd\u6570\u5f62\u53c2\u90e8\u5206 <code>Args&amp;&amp;... args</code> \u5c31\u662f\u51fd\u6570\u53c2\u6570\u5305\u3002</li> </ul> <p>\u4f8b\u5b50</p> C++<pre><code>template&lt;class... Types&gt;\nvoid printAll(Types... args) {\n    // \u5c55\u5f00\u53c2\u6570\u5305\uff08C++17 \u53ef\u4ee5\u7528 fold expression\uff09\n    int dummy[] = {0, ((std::cout &lt;&lt; args &lt;&lt; \" \"), 0)...};\n}\n\nprintAll(1, \"hi\", 3.14); // Types \u63a8\u5bfc\u4e3a (int, const char*, double)\n</code></pre>"},{"location":"C%2B%2B/16-function_template/#3-forwarding-reference-universal-reference","title":"3. \u8f6c\u53d1\u5f15\u7528 (Forwarding Reference / Universal Reference)","text":"<p>\u5728\u6a21\u677f\u91cc\uff0c\u5982\u679c\u4f60\u5199</p> C++<pre><code>F&amp;&amp; f\nArgs&amp;&amp;... args\n</code></pre> <p>\u5e76\u4e14 <code>F</code> / <code>Args</code> \u662f\u6a21\u677f\u53c2\u6570\uff0c<code>&amp;&amp;</code> \u5c31\u4e0d\u662f\u5355\u7eaf\u7684\u53f3\u503c\u5f15\u7528\uff0c\u800c\u662f\u8f6c\u53d1\u5f15\u7528\uff08C++11 \u5f15\u5165\uff09\u3002</p> <p>\u8f6c\u53d1\u5f15\u7528\u7684\u7279\u70b9\uff1a</p> <ul> <li>\u65e2\u53ef\u4ee5\u7ed1\u5b9a\u5230\u5de6\u503c\uff0c\u4e5f\u53ef\u4ee5\u7ed1\u5b9a\u5230\u53f3\u503c\u3002</li> <li>\u548c <code>std::forward</code> \u914d\u5408\uff0c\u53ef\u4ee5\u4fdd\u6301\u5b9e\u53c2\u7684\u503c\u7c7b\u522b\uff08\u5de6\u503c\u4fdd\u6301\u5de6\u503c\u3001\u53f3\u503c\u4fdd\u6301\u53f3\u503c\uff09\u3002</li> <li>\u7528\u4e8e\u6cdb\u578b\u4ee3\u7801\u4e2d\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002</li> </ul> <p>\u4f8b\u5b50</p> C++<pre><code>template&lt;class T&gt;\nvoid wrapper(T&amp;&amp; x) {\n    func(std::forward&lt;T&gt;(x)); // \u5982\u679c\u662f\u53f3\u503c\uff0c\u79fb\u52a8\u8fc7\u53bb\uff1b\u5982\u679c\u662f\u5de6\u503c\uff0c\u6309\u5f15\u7528\u4f20\u8fc7\u53bb\n}\n\nint a = 10;\nwrapper(a);    // T \u63a8\u5bfc\u4e3a int&amp;\uff0cT&amp;&amp; -&gt; int&amp; &amp;&amp; -&gt; int&amp; \u7ed1\u5b9a\u5de6\u503c\nwrapper(10);   // T \u63a8\u5bfc\u4e3a int\uff0cT&amp;&amp; -&gt; int&amp;&amp; \u7ed1\u5b9a\u53f3\u503c\n</code></pre> <p>\u5728 <code>enqueue</code> \u4e2d\uff1a</p> C++<pre><code>F&amp;&amp; f\nArgs&amp;&amp;... args\n</code></pre> <p>\u8fd9\u6837\u8bbe\u8ba1\u662f\u4e3a\u4e86\u652f\u6301\uff1a</p> <ul> <li><code>pool.enqueue(myFunction, 1, 2)</code></li> <li><code>pool.enqueue([]{ /* lambda */ })</code></li> <li><code>pool.enqueue(std::move(heavyObj))</code></li> </ul> <p>\u5e76\u4e14\u5c3d\u53ef\u80fd\u51cf\u5c11\u62f7\u8d1d\u3002</p>"},{"location":"C%2B%2B/16-function_template/#4-template-argument-deduction","title":"4. \u6a21\u677f\u7c7b\u578b\u63a8\u5bfc (Template Argument Deduction)","text":"<p><code>F</code> \u548c <code>Args...</code> \u7684\u7c7b\u578b\u662f\u5728\u8c03\u7528 <code>enqueue</code> \u65f6\u7531\u7f16\u8bd1\u5668\u63a8\u5bfc\u51fa\u6765\u7684\u3002</p> C++<pre><code>pool.enqueue([](int x){ return x + 1; }, 42);\n</code></pre> <p>\u8fd9\u91cc\u63a8\u5bfc\u8fc7\u7a0b\uff1a</p> <ul> <li><code>F</code> \u2192 <code>lambda</code> \u7684\u5177\u4f53\u7c7b\u578b\uff08\u533f\u540d\u7c7b\u578b\uff0c\u53ea\u6709\u7f16\u8bd1\u5668\u77e5\u9053\uff09\u3002</li> <li><code>Args...</code> \u2192 <code>int</code>\u3002</li> </ul>"},{"location":"C%2B%2B/16-function_template/#5-parameter-pack-expansion","title":"5. \u53c2\u6570\u5305\u5c55\u5f00 (Parameter Pack Expansion)","text":"<p>\u5728\u51fd\u6570\u4f53\u91cc\u7ecf\u5e38\u4f1a\u770b\u5230\uff1a</p> C++<pre><code>std::forward&lt;Args&gt;(args)...\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>...</code> \u662f\u5305\u5c55\u5f00\u8fd0\u7b97\u7b26\uff0c\u5b83\u4f1a\u628a\u53c2\u6570\u5305 <code>Args</code> \u548c <code>args</code> \u6309\u4e00\u4e00\u5bf9\u5e94\u5c55\u5f00\u3002</p> <p>\u5c55\u5f00\u8fc7\u7a0b\u7c7b\u4f3c\uff1a</p> C++<pre><code>std::forward&lt;Arg1&gt;(arg1), std::forward&lt;Arg2&gt;(arg2), ...\n</code></pre> <p>\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4f60\u80fd\u628a\u4e0d\u5b9a\u4e2a\u6570\u7684\u53c2\u6570\u76f4\u63a5\u539f\u5c01\u4e0d\u52a8\u4f20\u7ed9 <code>std::bind</code> \u6216 <code>std::invoke</code>\u3002</p>"},{"location":"C%2B%2B/16-function_template/#6","title":"6. \u7ec4\u5408\u8d77\u6765\u7684\u610f\u4e49","text":"<p>\u7efc\u5408\u6765\u770b\uff1a</p> C++<pre><code>template&lt;class F, class... Args&gt;\n</code></pre> <p>*</p> C++<pre><code>auto enqueue(F&amp;&amp; f, Args&amp;&amp;... args)\n</code></pre> <p>\u5c31\u662f\uff1a</p> <ul> <li>\u6cdb\u578b\uff1a\u53ef\u652f\u6301\u4efb\u610f\u53ef\u8c03\u7528\u5bf9\u8c61\u7c7b\u578b\u3002</li> <li>\u53ef\u53d8\u53c2\u6570\uff1a\u652f\u6301\u4efb\u610f\u6570\u91cf\u548c\u7c7b\u578b\u7684\u53c2\u6570\u4f20\u9012\u7ed9\u8be5\u53ef\u8c03\u7528\u5bf9\u8c61\u3002</li> <li>\u5b8c\u7f8e\u8f6c\u53d1\uff1a\u4fdd\u7559\u53c2\u6570\u7684\u503c\u7c7b\u522b\uff08\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\uff09\u3002</li> <li>\u9ad8\u6269\u5c55\u6027\uff1a\u53ef\u4ee5\u652f\u6301\u666e\u901a\u51fd\u6570\u3001lambda\u3001<code>std::function</code>\u3001\u4eff\u51fd\u6570\u7b49\uff0c\u4e14\u53c2\u6570\u7c7b\u578b\u7075\u6d3b\u3002</li> </ul> <p>\u5982\u679c\u4f60\u613f\u610f\uff0c\u6211\u53ef\u4ee5\u5e2e\u4f60\u753b\u4e00\u5f20\u8c03\u7528\u65f6\u6a21\u677f\u63a8\u5bfc\u7684\u6d41\u7a0b\u56fe\uff0c\u628a <code>F</code>\u3001<code>Args...</code> \u5728 <code>enqueue</code> \u8c03\u7528\u65f6\u662f\u600e\u4e48\u4e00\u6b65\u6b65\u88ab\u63a8\u5bfc\u51fa\u6765\u7684\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48 <code>&amp;&amp;</code> \u4f1a\u53d8\u6210\u8f6c\u53d1\u5f15\u7528\u3002 \u8fd9\u4e2a\u56fe\u4f1a\u6bd4\u6587\u5b57\u66f4\u76f4\u89c2\u3002</p> <p>\u4f60\u60f3\u8ba9\u6211\u753b\u5417\uff1f</p>"},{"location":"C%2B%2B/hdf5/","title":"HDF5","text":"<p>\u5728C\u8bed\u8a00\u4e2d\u8bfb\u53d6HDF5\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528HDF5\u5e93\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u7ba1\u7406\u548c\u5b58\u50a8\u79d1\u5b66\u6570\u636e\u7684\u5f00\u6e90\u8f6f\u4ef6\u5e93</p>"},{"location":"C%2B%2B/hdf5/#1","title":"1.\u524d\u7f6e\u6b65\u9aa4","text":"<p>\u5b89\u88c5HDF5\u5e93: \u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u5b89\u88c5HDF5\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u3002\u4f8b\u5982\uff0c\u5728Ubuntu\u4e0a\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> Bash<pre><code>sudo apt-get install libhdf5-dev\n</code></pre>"},{"location":"C%2B%2B/hdf5/#2","title":"2.\u5305\u542b\u5934\u6587\u4ef6\u548c\u94fe\u63a5\u5e93","text":"<p>\u5728\u7f16\u8bd1\u65f6\u9700\u8981\u5305\u542bHDF5\u5e93\u7684\u5934\u6587\u4ef6\u5e76\u94fe\u63a5\u76f8\u5e94\u7684\u5e93\u3002</p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5934\u6587\u4ef6\u901a\u5e38\u4f4d\u4e8e<code>/usr/include/hdf5/serial</code>/\u6216<code>/usr/local/include/</code>\u76ee\u5f55\u4e0b\u3002\u7f16\u8bd1\u65f6\u9700\u8981\u6307\u5b9a\u8fd9\u4e9b\u8def\u5f84\u3002</p> <p>Bash<pre><code>gcc -o load_database load_database.c -I/usr/include/hdf5/serial -L/usr/lib/aarch64-linux-gnu/hdf5/serial -lhdf5\n</code></pre> \u5176\u4e2d\uff1a * <code>-I</code> \u9009\u9879\u6307\u5b9a\u5934\u6587\u4ef6\u7684\u8def\u5f84\u3002 * <code>-L</code> \u9009\u9879\u6307\u5b9a\u5e93\u6587\u4ef6\u7684\u8def\u5f84\u3002 * <code>-lhdf5</code> \u94fe\u63a5HDF5\u5e93\u3002</p> <p>Note</p> <p>\u8981\u5728VS Code\u4e2d\u4f18\u5148\u4f7f\u7528\u6807\u51c6\u7684HDF5\u5e93\u5934\u6587\u4ef6\u63d0\u4f9b\u7684hdf5.h\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u8bbe\u7f6e\u6b63\u786e\u7684\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c  \u5728<code>.vscode/c_cpp_properties.json</code>\u6dfb\u52a0\u6807\u51c6HDF5\u5e93\u7684\u5934\u6587\u4ef6\u8def\u5f84(\"/usr/include/hdf5/serial\")\u5230<code>includePath</code>\u5217\u8868</p>"},{"location":"C%2B%2B/question/","title":"c++\u5e38\u89c1\u95ee\u9898","text":""},{"location":"C%2B%2B/question/#1-segmentation-fault","title":"1. \u6bb5\u9519\u8bef(Segmentation Fault)\u5e38\u89c1\u539f\u56e0","text":"<p>\u6bb5\u9519\u8bef(Segmentation Fault, \u7b80\u79f0Segfault)\u662f\u7a0b\u5e8f\u8bd5\u56fe\u8bbf\u95ee\u672a\u88ab\u5141\u8bb8\u8bbf\u95ee\u7684\u5185\u5b58\u533a\u57df\u65f6\u53d1\u751f\u7684\u9519\u8bef\u3002\u4ee5\u4e0b\u662f\u53ef\u80fd\u5bfc\u81f4\u6bb5\u9519\u8bef\u7684\u5e38\u89c1\u539f\u56e0\uff1a</p> <p>\u7a7a\u6307\u9488\u89e3\u5f15\u7528 C<pre><code>int *p = NULL;\n*p = 42;  // \u89e3\u5f15\u7528\u7a7a\u6307\u9488\n</code></pre></p> <p>\u8bbf\u95ee\u5df2\u91ca\u653e\u7684\u5185\u5b58 C<pre><code>int *p = malloc(sizeof(int));\nfree(p);\n*p = 10;  // \u8bbf\u95ee\u5df2\u91ca\u653e\u7684\u5185\u5b58\n</code></pre></p> <p>\u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee C<pre><code>int arr[10];\narr[10] = 5;  // \u8d8a\u754c\u8bbf\u95ee\uff0c\u5408\u6cd5\u7d22\u5f15\u662f0-9\n</code></pre></p> <p>\u6808\u6ea2\u51fa C<pre><code>void recursive_func() {\n    recursive_func();  // \u65e0\u9650\u9012\u5f52\u5bfc\u81f4\u6808\u6ea2\u51fa\n}\n</code></pre></p> <p>\u4fee\u6539\u5b57\u7b26\u4e32\u5e38\u91cf C<pre><code>char *str = \"constant string\";\nstr[0] = 'C';  // \u5c1d\u8bd5\u4fee\u6539\u53ea\u8bfb\u5185\u5b58\u533a\u57df\n</code></pre></p> <p>\u9519\u8bef\u7684\u6307\u9488\u8fd0\u7b97 C<pre><code>int arr[10];\nint *p = arr - 1;  // \u975e\u6cd5\u7684\u6307\u9488\u8fd0\u7b97\n*p = 0;\n</code></pre></p> <p>\u9519\u8bef\u7684\u7c7b\u578b\u8f6c\u6362 C<pre><code>int num = 10;\nchar *p = (char *)num;  // \u9519\u8bef\u7684\u7c7b\u578b\u8f6c\u6362\n*p = 'a';\n</code></pre></p> <p>\u591a\u7ebf\u7a0b\u7ade\u4e89\u6761\u4ef6 \u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u5185\u5b58\u533a\u57df\uff0c\u53ef\u80fd\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\u3002</p> <p>\u8c03\u8bd5\u6bb5\u9519\u8bef\u7684\u5de5\u5177\u548c\u65b9\u6cd5</p> <ol> <li> <p>gdb\uff1aGNU\u8c03\u8bd5\u5668\uff0c\u53ef\u4ee5\u5b9a\u4f4d\u6bb5\u9519\u8bef\u53d1\u751f\u7684\u4f4d\u7f6e    Text Only<pre><code>gcc -g program.c -o program\ngdb ./program\n</code></pre></p> </li> <li> <p>valgrind\uff1a\u5185\u5b58\u8c03\u8bd5\u5de5\u5177    Text Only<pre><code>valgrind ./program\n</code></pre></p> </li> <li> <p>\u6838\u5fc3\u8f6c\u50a8\u6587\u4ef6\uff1a\u5206\u6790\u7a0b\u5e8f\u5d29\u6e83\u65f6\u7684\u5185\u5b58\u72b6\u6001    Text Only<pre><code>ulimit -c unlimited\n./program  # \u5d29\u6e83\u540e\u751f\u6210core\u6587\u4ef6\ngdb program core\n</code></pre></p> </li> <li> <p>\u6253\u5370\u8c03\u8bd5\uff1a\u5728\u5173\u952e\u4f4d\u7f6e\u6dfb\u52a0\u6253\u5370\u8bed\u53e5</p> </li> </ol> <p>\u9884\u9632\u6bb5\u9519\u8bef\u7684\u6700\u4f73\u5b9e\u8df5\u5305\u62ec\uff1a\u59cb\u7ec8\u521d\u59cb\u5316\u6307\u9488\u3001\u68c0\u67e5\u5185\u5b58\u5206\u914d\u662f\u5426\u6210\u529f\u3001\u907f\u514d\u8d8a\u754c\u8bbf\u95ee\u3001\u8c28\u614e\u4f7f\u7528\u6307\u9488\u8fd0\u7b97\u7b49\u3002</p>"},{"location":"C%2B%2B/question/#2","title":"2. \u667a\u80fd\u6307\u9488\u5982\u4f55\u514b\u670d\u88f8\u6307\u9488\u7684\u95ee\u9898","text":"<p>\u667a\u80fd\u6307\u9488\u662fC++\u4e2d\u7ba1\u7406\u52a8\u6001\u5185\u5b58\u7684RAII(\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316)\u5bf9\u8c61\uff0c\u5b83\u4eec\u514b\u670d\u4e86\u88f8\u6307\u9488\u7684\u8bb8\u591a\u5e38\u89c1\u95ee\u9898\uff1a</p>"},{"location":"C%2B%2B/question/#21","title":"2.1 \u5185\u5b58\u6cc4\u6f0f\u95ee\u9898","text":"<p>\u88f8\u6307\u9488\u95ee\u9898\uff1a\u9700\u8981\u624b\u52a8<code>delete</code>\uff0c\u5bb9\u6613\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58 C++<pre><code>void func() {\n    int* p = new int(10);\n    // \u5982\u679c\u8fd9\u91cc\u629b\u51fa\u5f02\u5e38\u6216\u5fd8\u8bb0delete\uff0c\u5c31\u4f1a\u5185\u5b58\u6cc4\u6f0f\n    // delete p;\n}\n</code></pre></p> <p>\u667a\u80fd\u6307\u9488\u89e3\u51b3\uff1a\u81ea\u52a8\u91ca\u653e\u5185\u5b58 C++<pre><code>void func() {\n    std::unique_ptr&lt;int&gt; p(new int(10));\n    // \u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u81ea\u52a8\u91ca\u653e\n}\n</code></pre></p>"},{"location":"C%2B%2B/question/#22","title":"2.2 \u60ac\u5782\u6307\u9488\u95ee\u9898","text":"<p>\u88f8\u6307\u9488\u95ee\u9898\uff1a\u8bbf\u95ee\u5df2\u91ca\u653e\u7684\u5185\u5b58 C++<pre><code>int* p = new int(10);\ndelete p;\n*p = 20; // \u672a\u5b9a\u4e49\u884c\u4e3a\n</code></pre></p> <p>\u667a\u80fd\u6307\u9488\u89e3\u51b3\uff1a - <code>unique_ptr</code>\uff1a\u72ec\u5360\u6240\u6709\u6743\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0\u60ac\u5782\u6307\u9488 - <code>shared_ptr</code>\uff1a\u5f15\u7528\u8ba1\u6570\uff0c\u6700\u540e\u4e00\u4e2a\u5f15\u7528\u6d88\u5931\u65f6\u624d\u91ca\u653e - <code>weak_ptr</code>\uff1a\u4e0d\u589e\u52a0\u5f15\u7528\u8ba1\u6570\uff0c\u53ef\u68c0\u6d4b\u5bf9\u8c61\u662f\u5426\u5df2\u88ab\u91ca\u653e</p>"},{"location":"C%2B%2B/question/#23","title":"2.3 \u6240\u6709\u6743\u4e0d\u660e\u786e\u95ee\u9898","text":"<p>\u88f8\u6307\u9488\u95ee\u9898\uff1a\u65e0\u6cd5\u660e\u786e\u8c01\u8d1f\u8d23\u91ca\u653e\u5185\u5b58 C++<pre><code>int* create() { return new int(10); }\nvoid consume(int* p) { delete p; }\n\nint* p = create();\n// \u8c01\u8d1f\u8d23delete\uff1f\u4e0d\u6e05\u695a\n</code></pre></p> <p>\u667a\u80fd\u6307\u9488\u89e3\u51b3\uff1a\u660e\u786e\u6240\u6709\u6743\u8bed\u4e49 C++<pre><code>std::unique_ptr&lt;int&gt; create() { return std::make_unique&lt;int&gt;(10); }\n// \u6240\u6709\u6743\u8f6c\u79fb\u660e\u786e\nvoid consume(std::unique_ptr&lt;int&gt; p) {}\n\nauto p = create();\nconsume(std::move(p)); // \u660e\u786e\u7684\u6240\u6709\u6743\u8f6c\u79fb\n</code></pre></p>"},{"location":"C%2B%2B/question/#24","title":"2.4 \u5f02\u5e38\u5b89\u5168\u95ee\u9898","text":"<p>\u88f8\u6307\u9488\u95ee\u9898\uff1a\u5f02\u5e38\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f C++<pre><code>void func() {\n    int* p = new int(10);\n    some_function_that_may_throw(); // \u5982\u679c\u629b\u51fa\u5f02\u5e38\n    delete p; // \u8fd9\u884c\u4e0d\u4f1a\u6267\u884c\n}\n</code></pre></p> <p>\u667a\u80fd\u6307\u9488\u89e3\u51b3\uff1a\u5f02\u5e38\u5b89\u5168 C++<pre><code>void func() {\n    auto p = std::make_unique&lt;int&gt;(10);\n    some_function_that_may_throw(); // \u5373\u4f7f\u629b\u51fa\u5f02\u5e38\n    // p\u4e5f\u4f1a\u88ab\u6b63\u786e\u91ca\u653e\n}\n</code></pre></p>"},{"location":"C%2B%2B/question/#25","title":"2.5 \u591a\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898","text":"<p>\u88f8\u6307\u9488\u95ee\u9898\uff1a\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u96be\u4ee5\u5b89\u5168\u5171\u4eab\u6570\u636e C++<pre><code>int* shared_data = new int(0);\n\n// \u7ebf\u7a0b1\n*shared_data = 42;\n\n// \u7ebf\u7a0b2\nint val = *shared_data; // \u6570\u636e\u7ade\u4e89\n</code></pre></p> <p>\u667a\u80fd\u6307\u9488\u89e3\u51b3\uff1a C++<pre><code>auto shared_data = std::make_shared&lt;int&gt;(0);\n\n// \u7ebf\u7a0b\u5b89\u5168\u53d6\u51b3\u4e8e\u5982\u4f55\u4f7f\u7528\uff0c\u4f46shared_ptr\u672c\u8eab\u4fdd\u8bc1\u5f15\u7528\u8ba1\u6570\u539f\u5b50\u64cd\u4f5c\n// \u7ed3\u5408mutex\u53ef\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u8bbf\u95ee\n</code></pre></p>"},{"location":"C%2B%2B/question/#_1","title":"\u4e3b\u8981\u667a\u80fd\u6307\u9488\u7c7b\u578b\u53ca\u5176\u7528\u9014","text":"<ol> <li><code>unique_ptr</code>\uff1a</li> <li>\u72ec\u5360\u6240\u6709\u6743</li> <li>\u8f7b\u91cf\u7ea7\uff0c\u96f6\u5f00\u9500</li> <li> <p>\u4e0d\u53ef\u590d\u5236\uff0c\u53ea\u80fd\u79fb\u52a8</p> </li> <li> <p><code>shared_ptr</code>\uff1a</p> </li> <li>\u5171\u4eab\u6240\u6709\u6743</li> <li>\u5f15\u7528\u8ba1\u6570</li> <li> <p>\u53ef\u590d\u5236\uff0c\u8f83\u91cd\u7684\u5f00\u9500</p> </li> <li> <p><code>weak_ptr</code>\uff1a</p> </li> <li>\u4e0d\u589e\u52a0\u5f15\u7528\u8ba1\u6570</li> <li>\u89e3\u51b3shared_ptr\u5faa\u73af\u5f15\u7528\u95ee\u9898</li> <li>\u5fc5\u987b\u8f6c\u6362\u4e3ashared_ptr\u624d\u80fd\u8bbf\u95ee\u5bf9\u8c61</li> </ol> <p>\u667a\u80fd\u6307\u9488\u901a\u8fc7\u81ea\u52a8\u5316\u5185\u5b58\u7ba1\u7406\u548c\u660e\u786e\u6240\u6709\u6743\u8bed\u4e49\uff0c\u5927\u5927\u51cf\u5c11\u4e86C++\u4e2d\u4e0e\u88f8\u6307\u9488\u76f8\u5173\u7684\u5e38\u89c1\u9519\u8bef\uff0c\u662f\u73b0\u4ee3C++\u5185\u5b58\u7ba1\u7406\u7684\u9996\u9009\u65b9\u5f0f\u3002</p>"},{"location":"C%2B%2B/question/#3-nullnullptr","title":"3. NULL\u548cnullptr","text":"\u6bd4\u8f83\u9879 <code>nullptr</code> <code>NULL</code> \u7c7b\u578b <code>std::nullptr_t</code> \u5b8f\uff08\u901a\u5e38\u662f <code>0</code> \u6216 <code>((void*)0)</code>\uff09 \u662f\u5426\u7c7b\u578b\u5b89\u5168 \u2705 \u7c7b\u578b\u5b89\u5168 \u274c \u53ef\u80fd\u4e0e\u6574\u578b\u6df7\u6dc6 C++11 \u5f15\u5165 \u2705 \u274c\uff08C/C++\u90fd\u6709\uff09 \u63a8\u8350\u7a0b\u5ea6 \u2705 \u63a8\u8350\uff08\u73b0\u4ee3 C++\uff09 \u274c \u4e0d\u63a8\u8350\uff08\u5df2\u8fc7\u65f6\uff09 C++<pre><code>void func(int);\nvoid func(void*);\n\nfunc(NULL);     // \u8c03\u7528 func(int)?  func(void*)? \u7f16\u8bd1\u5668\u53ef\u80fd\u6b67\u4e49\nfunc(nullptr);  // \u660e\u786e\u8c03\u7528 func(void*)\n</code></pre> <p>\u26a0\ufe0f NULL \u7684\u95ee\u9898</p> <p>\u5728 C++ \u4e2d <code>NULL</code> \u901a\u5e38\u662f <code>#define NULL 0</code>\uff0c\u5373\u5b83\u662f <code>int</code> \u7c7b\u578b\uff0c\u56e0\u6b64\u4f1a\u51fa\u73b0\u51fd\u6570\u91cd\u8f7d\u6b67\u4e49\u3002</p> <p>\u4e3a\u4ec0\u4e48 <code>nullptr</code> \u66f4\u597d</p> <ol> <li><code>nullptr</code> \u662f\u4e00\u4e2a\u771f\u6b63\u7684\u201c\u7a7a\u6307\u9488\u201d\u7c7b\u578b</li> </ol> C++<pre><code>std::nullptr_t np = nullptr;  // OK\nint i = nullptr;              // \u274c \u9519\u8bef\uff1a\u4e0d\u80fd\u5c06 nullptr \u8d4b\u503c\u7ed9 int\n</code></pre> <ol> <li><code>nullptr</code> \u4e0d\u4f1a\u548c\u6574\u578b\u51b2\u7a81</li> </ol> C++<pre><code>void foo(int x);\nvoid foo(char* p);\n\nfoo(0);        // \u8c03\u7528 foo(int)\nfoo(NULL);     // \u8c03\u7528 foo(int)\uff0c\u5bb9\u6613\u8bef\u5224\nfoo(nullptr);  // \u8c03\u7528 foo(char*)\uff0c\u5b89\u5168\n</code></pre> \u573a\u666f \u63a8\u8350\u505a\u6cd5 C++11 \u53ca\u4ee5\u540e \u4f7f\u7528 <code>nullptr</code> \u66ff\u4ee3 <code>NULL</code> \u4e0e C \u5e93\u63a5\u53e3 \u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528 <code>NULL</code>\uff08\u517c\u5bb9\uff09 \u5224\u65ad\u6307\u9488\u662f\u5426\u4e3a\u7a7a <code>if (ptr == nullptr)</code>\uff0c\u4e0d\u8981\u5199 <code>if (ptr == NULL)</code> <p>\u5982\u4f60\u7528\u7684\u662f C++11 \u53ca\u4ee5\u4e0a\u7248\u672c\uff08\u5efa\u8bae\u9ed8\u8ba4\u4f7f\u7528\uff09\uff0c\u8bf7\u907f\u514d\u4f7f\u7528 <code>NULL</code>\uff0c\u7edf\u4e00\u7528 <code>nullptr</code>\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e8c\u4e49\u6027\u548c\u7c7b\u578b\u9519\u8bef</p>"},{"location":"C%2B%2B/question/#4","title":"4. \u6307\u9488\u5bf9\u6bd4","text":"<p>\u8fd9\u4e09\u4e2a\u770b\u8d77\u6765\u5f88\u76f8\u4f3c\u7684 C/C++ \u58f0\u660e\uff1a</p> C++<pre><code>int *p[10];\nint (*p)[10];\nint *p(int);\n</code></pre> <p>\u8bed\u6cd5\u7ed3\u6784\u4e0d\u4e00\u6837\uff0c\u542b\u4e49\u5b8c\u5168\u4e0d\u540c\u3002\u4e0b\u9762\u6211\u9010\u4e2a\u4e3a\u4f60\u6e05\u6670\u89e3\u91ca\u3002</p>"},{"location":"C%2B%2B/question/#41-int-p10","title":"4.1 <code>int *p[10];</code>","text":"<p><code>p</code> \u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u6709 10 \u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f <code>int*</code> \u7c7b\u578b\uff08\u5373\u6307\u5411 int \u7684\u6307\u9488\uff09\u3002</p> Text Only<pre><code>p: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500 ... \u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 int*       \u2502 int*       \u2502          \u2502 int*       \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     p[0]        p[1]                     p[9]\n</code></pre> C++<pre><code>int a = 1, b = 2;\nint *p[10];     // \u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f int*\np[0] = &amp;a;\np[1] = &amp;b;\n</code></pre>"},{"location":"C%2B%2B/question/#42-int-p10","title":"4.2 <code>int (*p)[10];</code>","text":"<p><code>p</code> \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5305\u542b 10 \u4e2a <code>int</code> \u5143\u7d20\u7684\u6570\u7ec4\u3002</p> Text Only<pre><code>p \u2500\u2500\u25ba [ int, int, int, ..., int ]  // \u957f\u5ea6\u4e3a10\u7684\u6570\u7ec4\n</code></pre>"},{"location":"C%2B%2B/question/#_2","title":"\u4e3e\u4f8b\u4f7f\u7528\uff1a","text":"C++<pre><code>int arr[10];\nint (*p)[10];   // p \u662f\u4e00\u4e2a\u6307\u5411 int[10] \u7684\u6307\u9488\np = &amp;arr;       // \u6ce8\u610f\uff1a\u53d6\u5730\u5740\u65f6\u8981\u53d6\u6574\u4e2a\u6570\u7ec4\u7684\u5730\u5740\n</code></pre> <p>\u8fd9\u79cd\u5199\u6cd5\u901a\u5e38\u7528\u4e8e\u4e8c\u7ef4\u6570\u7ec4\u3001\u4f20\u9012\u6570\u7ec4\u5f15\u7528\u7b49\u573a\u666f\u3002</p>"},{"location":"C%2B%2B/question/#43-int-pint","title":"4.3 <code>int *p(int);</code>","text":"<p><code>p</code> \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a <code>int</code> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a <code>int*</code> \u7c7b\u578b\u7684\u503c\u3002</p> C++<pre><code>int* p(int x) {\n    static int val = x;\n    return &amp;val;\n}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u662f\u51fd\u6570\u58f0\u660e\uff1a</p> C++<pre><code>int *p(int);  // \u58f0\u660e\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de int* \u7c7b\u578b\n</code></pre>"},{"location":"C%2B%2B/question/#44-int-pint","title":"4.4 <code>int (*p)(int)</code>","text":"<p><code>p</code> \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u4e00\u4e2a <code>int</code> \u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a <code>int</code> \u7c7b\u578b\u7684\u503c\u3002</p> <ol> <li>\u5148\u770b <code>p</code>\uff1a\u5b83\u88ab <code>(*p)</code> \u5305\u88f9 \u2192 <code>p</code> \u662f\u6307\u9488</li> <li>\u7136\u540e\u770b\u5916\u9762\u7684 <code>(int)</code> \u2192 \u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u4ee5 <code>int</code> \u4e3a\u53c2\u6570\u7684\u51fd\u6570</li> <li>\u6700\u5de6\u8fb9 <code>int</code> \u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b</li> </ol> <p>\u6240\u4ee5\u6574\u4f53\u610f\u601d\uff1a</p> Text Only<pre><code>p \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff1a\u6307\u5411\u4e00\u4e2a (int) \u2192 int \u7684\u51fd\u6570\n</code></pre> <p>C++<pre><code>int add_one(int x) {\n    return x + 1;\n}\n</code></pre> C++<pre><code>int (*p)(int);  // \u58f0\u660e\u51fd\u6570\u6307\u9488\np = add_one;    // \u6307\u5411\u51fd\u6570\n</code></pre></p> C++<pre><code>int result = p(10);      // \u548c\u8c03\u7528\u51fd\u6570\u4e00\u6837\n// \u6216\u8005 (*p)(10);         // \u4e5f\u662f\u5408\u6cd5\u5199\u6cd5\n</code></pre> <p>\u51fd\u6570\u6307\u9488\u5728\u5b9e\u9645\u7528\u9014</p> <ul> <li>\u56de\u8c03\u51fd\u6570\uff08\u5982 sort \u6bd4\u8f83\u5668\uff09</li> <li>\u63a5\u53e3\u51fd\u6570\u6620\u5c04</li> <li>\u52a8\u6001\u9009\u62e9\u7b97\u6cd5\uff08\u7b56\u7565\u6a21\u5f0f\uff09</li> <li>\u4e8b\u4ef6\u5904\u7406\u673a\u5236</li> </ul> \u58f0\u660e \u542b\u4e49 <code>int *p[10];</code> \u6570\u7ec4\uff1a\u5305\u542b 10 \u4e2a\u6307\u5411 <code>int</code> \u7684\u6307\u9488 <code>int (*p)[10];</code> \u6307\u9488\uff1a\u6307\u5411\u4e00\u4e2a <code>int[10]</code> \u7684\u6570\u7ec4 <code>int *p(int);</code> \u51fd\u6570\uff1a\u63a5\u53d7\u4e00\u4e2a <code>int</code> \u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a <code>int*</code> <code>int (*p)(int);</code> \u51fd\u6570\u6307\u9488\uff1a<code>p</code> \u662f\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a\u63a5\u53d7 <code>int</code> \u53c2\u6570\u3001\u8fd4\u56de <code>int</code> \u7684\u51fd\u6570"},{"location":"C%2B%2B/question/#_3","title":"\ud83d\udd27\u8bb0\u5fc6\u5c0f\u6280\u5de7","text":"\u89c4\u5219\u8bf4\u660e \u793a\u4f8b <code>[]</code> \u4f18\u5148\u7ea7\u6bd4 <code>*</code> \u9ad8 \u2192 <code>int *p[10]</code> \u662f\u6570\u7ec4\uff0c\u4e0d\u662f\u6307\u9488 \u2705 <code>()</code> \u5305\u4f4f <code>*</code> \u53ef\u4ee5\u6539\u53d8\u7ed3\u5408\u987a\u5e8f \u2192 <code>(*p)[10]</code> \u662f\u6307\u9488\uff0c\u6307\u5411\u6570\u7ec4 \u2705 <code>p(int)</code> \u8bf4\u660e\u662f\u4e2a\u51fd\u6570 <code>int *p(int)</code> \u662f\u51fd\u6570\uff0c\u8fd4\u56de <code>int*</code> <code>(*p)(int)</code> \u8868\u793a\u51fd\u6570\u6307\u9488 <code>p</code> \u662f\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8fd4\u56de <code>int</code>"},{"location":"C%2B%2B/question/#5-cc","title":"5. c++/C\u7684\u533a\u522b","text":"<ul> <li>c++\u4e2dnew/delete\u662f\u5bf9\u5185\u5b58\u5206\u914d\u7684\u8fd0\u7b97\u7b26\uff0c \u53d6\u4ee3\u4e86C\u4e2d\u7684malloc/free\uff1b</li> <li>\u6807\u51c6C++\u4e2d\u7684\u5b57\u7b26\u4e32\u53d6\u4ee3\u4e86C\u51fd\u6570\u5e93\u5934\u6587\u4ef6\u4e2d\u5b57\u7b26\u6570\u7ec4\u5904\u7406\u51fd\u6570\uff0cC\u4e2d\u6ca1\u6709\u5b57\u7b26\u4e32\u7c7b\u578b\uff1b</li> <li>C++\u4e2d\u7528\u6765\u505a\u63a7\u5236\u8f93\u5165\u8f93\u51fa\u7684iostream\u7c7b\u5e93\u53d6\u4ee3\u4e86\u6807\u51c6C\u4e2d\u7684stdio\u51fd\u6570\u5e93\uff1b</li> <li>c++\u4e2d\u7684try/catch/throw\u5f02\u5e38\u5904\u7406\u673a\u5236\u53d6\u4ee3\u4e86C\u4e2d\u7684setjmp()\u548congjmp()\u51fd\u6570\uff1b</li> <li>\u5728c++\u4e2d\uff0c\u5141\u8bb8\u6709\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c \u4e0d\u8fc7\u5b83\u4eec\u7684\u53c2\u6570\u7c7b\u578b\u4e0d\u80fd\u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u6837\u8fd9\u4e9b\u51fd\u6570\u53ef\u4ee5\u533a\u522b\u5f00\u6765\uff0c\u800c\u8fd9\u4e9bC\u8bed\u8a00\u4e2d\u4e8b\u4e0d\u5141\u8bb8\u7684\uff0c \u4e5f\u5c31\u662fC++\u53ef\u4ee5\u91cd\u8f7d\uff0c C\u8bed\u8a00\u4e0d\u5141\u8bb8\uff1b</li> <li>c++\u8bed\u8a00\u4e2d\uff0c\u5141\u8bb8\u53d8\u91cf\u5b9a\u4e49\u8bed\u53e5\u5728\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u53ea\u8981\u662f\u5728\u4f7f\u7528\u5b83\u4e4b\u524d\u5c31\u53ef\u4ee5\uff1bc\u8bed\u8a00\u4e2d\uff0c\u5fc5\u987b\u8981\u5728\u51fd\u6570\u5f00\u5934\u90e8\u5206\uff0c\u800c\u4e14C++\u4e0d\u5141\u8bb8\u91cd\u590d\u5b9a\u4e49\u53d8\u91cf\uff0c C\u8bed\u8a00\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\uff1b</li> <li>\u5728c++\u4e2d\uff0c\u9664\u4e86\u503c\u548c\u6307\u9488\u4e4b\u5916\uff0c\u65b0\u589e\u4e86\u5f15\u7528\u3002\u5f15\u7528\u578b\u53d8\u91cf\u662f\u5176\u4ed6\u53d8\u91cf\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4ed6\u4eec\u53ea\u662f\u540d\u5b57\u4e0d\u76f8\u540c\uff0c\u5176\u4ed6\u90fd\u662f\u76f8\u540c\u7684\uff1b</li> <li>c++\u76f8\u5bf9\u4e8ec\u589e\u52a0\u4e86\u4e00\u4e9b\u5173\u952e\u5b57\uff0c \u5982\uff1abool, using, dynamic_cast, namespace\u7b49\uff1b</li> </ul>"},{"location":"C%2B%2B/question/#6-externc","title":"6. <code>extern\"C\"</code>\u7528\u6cd5","text":"<p><code>extern \"C\"</code> \u662f C++ \u4e2d\u7684\u4e00\u4e2a\u8bed\u8a00\u8fde\u63a5\u89c4\u8303\u58f0\u660e\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3 C++ \u4e0e C \u8bed\u8a00\u6df7\u7f16\u65f6\u7684\u94fe\u63a5\u517c\u5bb9\u6027\u95ee\u9898\u3002 \u5b83\u544a\u8bc9\u7f16\u8bd1\u5668\uff1a\u6309\u7167 C \u8bed\u8a00\u7684\u65b9\u5f0f\u6765\u5904\u7406\u88ab\u5305\u88f9\u7684\u51fd\u6570\u6216\u53d8\u91cf\u540d\uff0c\u4e0d\u8fdb\u884c C++ \u540d\u5b57\u4fee\u9970\uff08name mangling\uff09\u3002</p> <p>\u9632\u6b62 C++ \u7f16\u8bd1\u5668\u5bf9\u51fd\u6570\u540d\u8fdb\u884c\u91cd\u6574\uff08name mangling\uff09\uff0c\u4f7f\u5f97 C++ \u80fd\u8c03\u7528 C \u7f16\u8bd1\u7684\u51fd\u6570\uff0c\u6216\u8ba9 C \u80fd\u8c03\u7528 C++ \u7684\u51fd\u6570\u3002</p> <p>\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a C++ \u51fd\u6570\uff1a</p> C++<pre><code>int add(int a, int b);\n</code></pre> <p>\u5728 C++ \u7f16\u8bd1\u540e\uff0c\u51fd\u6570\u540d\u53ef\u80fd\u53d8\u6210\u8fd9\u6837\uff1a</p> C++<pre><code>_add_int_int__FiT1  // \u4e3e\u4f8b\uff0c\u56e0\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\u540d\u5b57\u4f1a\u53d8\u5316\n</code></pre> <p>\u800c C \u8bed\u8a00\u4e2d\u4e0d\u505a\u8fd9\u79cd\u5904\u7406\uff0c\u51fd\u6570\u540d\u5c31\u7b80\u5355\u662f <code>add</code>\u3002</p>"},{"location":"C%2B%2B/question/#61-c","title":"6.1 \u58f0\u660e\u4e00\u4e2a C \u98ce\u683c\u7684\u5916\u90e8\u51fd\u6570","text":"C++<pre><code>extern \"C\" int add(int a, int b);\n</code></pre> <p>\u544a\u8bc9 C++ \u7f16\u8bd1\u5668\uff1a<code>add</code> \u662f\u4e00\u4e2a C \u98ce\u683c\u7684\u51fd\u6570\uff0c\u4e0d\u8981\u505a name mangling\u3002</p>"},{"location":"C%2B%2B/question/#62-c","title":"6.2 \u5728\u5934\u6587\u4ef6\u4e2d\u5305\u88f9 C \u63a5\u53e3\uff08\u63a8\u8350\u5199\u6cd5\uff09","text":"C++<pre><code>// mylib.h\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nvoid c_function();  // \u58f0\u660e\u7684\u51fd\u6570\u5c06\u4f7f\u7528 C \u94fe\u63a5\u89c4\u5219\n\n#ifdef __cplusplus\n}\n#endif\n</code></pre> <p>\u2705 \u8fd9\u6837\u53ef\u4ee5\u8ba9 <code>.h</code> \u5934\u6587\u4ef6\u540c\u65f6\u88ab C \u548c C++ \u5305\u542b\uff0c\u5b89\u5168\u901a\u7528\u3002</p> <p>\u5047\u8bbe\u6709\u4e00\u4e2a C \u6587\u4ef6\uff1a</p> C<pre><code>// foo.c\n#include &lt;stdio.h&gt;\n\nvoid hello() {\n    printf(\"Hello from C\\n\");\n}\n</code></pre> <p>\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff1a</p> C<pre><code>// foo.h\n#ifndef FOO_H\n#define FOO_H\n\nvoid hello();\n\n#endif\n</code></pre> <p>\u7136\u540e\u5728 C++ \u4e2d\u8c03\u7528\uff1a</p> C++<pre><code>// main.cpp\nextern \"C\" {\n#include \"foo.h\"\n}\n\nint main() {\n    hello();\n    return 0;\n}\n</code></pre> C++<pre><code>extern \"C\" class MyClass {};  // \u274c \u9519\u8bef\uff0c\u7c7b\u4e0d\u80fd extern \"C\"\n</code></pre>"},{"location":"C%2B%2B/question/#7","title":"7. \u91ce\u6307\u9488\u548c\u60ac\u7a7a\u6307\u9488","text":"<p>\u91ce\u6307\u9488\uff1a\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u8fc7\u7684\u6307\u9488</p> <p>C++<pre><code>int main(){\n   int *p;\n   std::cout &lt;&lt; *p &lt;&lt; std::endl; // \u672a\u521d\u59cb\u5316\u8fc7\u5c31\u88ab\u4f7f\u7528\n   return 0;\n}\n</code></pre> \u56e0\u6b64\uff0c\u4e3a\u4e86\u9632\u6b62\u51fa\u9519\uff0c\u5bf9\u4e8e\u6307\u9488\u521d\u59cb\u5316\u65f6\u90fd\u662f\u8d4b\u503c\u4e3anullptr\uff0c\u8fd9\u6837\u5728\u4f7f\u7528\u65f6\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u76f4\u63a5\u62a5\u9519\uff0c\u4ea7\u751f\u975e\u6cd5\u5185\u5b58\u8bbf\u95ee\uff1b</p> <p>\u60ac\u7a7a\u6307\u9488\uff1a \u6307\u9488\u6700\u521d\u6307\u5411\u7684\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u4e86\u7684\u4e00\u79cd\u6307\u9488</p> <p>C++<pre><code>int main()\n{\n   int *p = nullptr;\n   int *p2 = new int(0);\n   p = p2;\n   delete p2;\n   return 0;\n}\n</code></pre> \u6b64\u65f6 p \u548cp2\u5c31\u662f\u60ac\u7a7a\u6307\u9488\uff0c\u6307\u5411\u7684\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\uff0c\u7ee7\u7eed\u4f7f\u7528\u8fd9\u4fe9\u6307\u9488\uff0c\u884c\u4e3a\u4e0d\u53ef\u9884\u6599\u3002\u9700\u8981\u8bbe\u7f6e<code>p=p2=nullptr</code>\uff0c\u6b64\u65f6\u518d\u4f7f\u7528\uff0c\u7f16\u8bd1\u5668\u4f1a\u76f4\u63a5\u62a5\u9519\u3002\u907f\u514d\u91ce\u6307\u9488\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u60ac\u7a7a\u6307\u9488\u6bd4\u8f83\u9ebb\u70e6\u3002c++\u5f15\u5165\u4e86\u667a\u80fd\u6307\u9488\uff0c\u672c\u8d28\u5c31\u662f\u907f\u514d\u60ac\u7a7a\u6307\u9488\u7684\u4ea7\u751f</p>"},{"location":"C%2B%2B/question/#8","title":"8. \u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d","text":"<p>\u6d45\u62f7\u8d1d</p> <p>\u6d45\u62f7\u8d1d\u53ea\u662f\u62f7\u8d1d\u7684\u4e00\u4e2a\u6307\u9488\uff0c\u5e76\u6ca1\u6709\u65b0\u5f00\u8f9f\u4e00\u4e2a\u5730\u5740\uff0c\u62f7\u8d1d\u7684\u6307\u9488\u548c\u539f\u6765\u7684\u6307\u9488\u6307\u5411\u7684\u540c\u4e00\u5757\u5730\u5740\uff0c\u5982\u679c\u539f\u6765\u7684\u6307\u9488\u6240\u6307\u5411\u7684\u8d44\u6e90\u91ca\u653e\u4e86\uff0c\u90a3\u4e48\u518d\u91ca\u653e\u6d45\u62f7\u8d1d\u7684\u6307\u9488\u8d44\u6e90\u5c31\u4f1a\u51fa\u73b0\u9519\u8bef\u3002</p> <p>\u6df1\u62f7\u8d1d</p> <p>\u6df1\u62f7\u8d1d\u4e0d\u4ec5\u62f7\u8d1d\u503c\uff0c\u8fd8\u5f00\u8f9f\u51fa\u4e00\u5757\u65b0\u7684\u7a7a\u95f4\u7528\u6765\u5b58\u653e\u65b0\u7684\u503c\uff0c\u5373\u4f7f\u539f\u6765\u7684\u5bf9\u8c61\u88ab\u6790\u6784\uff0c\u91ca\u653e\u7684\u5185\u5b58\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u5230\u6df1\u62f7\u8d1d\u7684\u503c\u3002\u5728\u81ea\u5df1\u5b9e\u73b0\u62f7\u8d1d\u8d4b\u503c\u65f6\uff0c\u5982\u679c\u6709\u6307\u9488\u53d8\u91cf\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u6df1\u62f7\u8d1d</p> C++<pre><code>#include&lt;iostream&gt;\n#include&lt;string&gt;\nusing namespace std;\n\nclass Student\n{\nprivate:\n      int num;\n      char* name;\npublic:\n      Student()\n      {\n         name = new char(20);\n         cout &lt;&lt; \"Student\" &lt;&lt; endl;\n      };\n      ~Student()\n      {\n         cout &lt;&lt; \"~Student\"&lt;&lt;endl;\n         delete name;\n         name = NULL;\n      };\n      Student(const Student &amp;s){//\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n         // \u6d45\u62f7\u8d1d\uff0c\u5f53\u5bf9\u8c61\u7684name\u548c\u4f20\u5165\u5bf9\u8c61\u7684name \u6307\u5411\u76f8\u540c\u7684\u5730\u5740\n         name = s.name;\n         // \u6df1\u62f7\u8d1d\n         //name = new char(20);\n         //memcpy(name, s.name, strlen(s.name));\n         cout &lt;&lt; \"copy Student\" &lt;&lt; endl;\n      };\n\n};\n\nint main(){\n\n   {\n      Student s1;\n      Student s2(s1); //\u590d\u5236\u5bf9\u8c61\n\n   }\n   return 0;\n}\n</code></pre> <p>\u6d45\u62f7\u8d1d\u5728\u5bf9\u8c61\u7684\u62f7\u8d1d\u521b\u5efa\u65f6\u5b58\u5728\u98ce\u9669\uff0c\u5373\u88ab\u62f7\u8d1d\u7684\u5bf9\u8c61\u6790\u6784\u91ca\u653e\u8d44\u6e90\u540e\uff0c\u62f7\u8d1d\u5bf9\u8c61\u6790\u6784\u65f6\u518d\u6b21\u91ca\u653e\u4e00\u4e2a\u5df2\u7ecf\u91ca\u653e\u7684\u8d44\u6e90\uff0c\u6df1\u62f7\u8d1d\u7684\u7ed3\u679c\u662f\u4e24\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5404\u81ea\u6210\u5458\u5730\u5740\u4e0d\u540c\u3002</p>"},{"location":"C%2B%2B/question/#9c","title":"9.c++\u7684\u5f02\u5e38\u5904\u7406\u65b9\u6cd5","text":"<p>\u5e38\u6709\u7684\u5f02\u5e38\u6709\uff1a - \u6570\u7ec4\u4e0b\u6807\u8d8a\u754c - \u9664\u6cd5\u8ba1\u7b97\u65f6\u9664\u6570\u4e3a0 - \u52a8\u6001\u5206\u914d\u7a7a\u95f4\u4e0d\u8db3</p>"},{"location":"C%2B%2B/question/#91-trythrowcatch","title":"9.1 try/throw/catch\u5173\u952e\u5b57","text":"\u5173\u952e\u5b57 \u4f5c\u7528 <code>try</code> \u5b9a\u4e49\u4e00\u4e2a\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\u5757\u3002\u5fc5\u987b\u548c <code>catch</code> \u642d\u914d\u4f7f\u7528\u3002 <code>throw</code> \u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u53ef\u4ee5\u662f\u5185\u5efa\u7c7b\u578b\u6216\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002 <code>catch</code> \u6355\u83b7\u5f02\u5e38\uff0c\u5e76\u5b9a\u4e49\u5982\u4f55\u5904\u7406\u8be5\u5f02\u5e38\u3002 <p>cpp\u4e2d\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\u4e3b\u8981\u4f7f\u7528try, throw\u548ccatch\u4e09\u4e2a\u5173\u952e\u5b57\uff0c\u5176\u5728\u7a0b\u5e8f\u4e2d\u7684\u7528\u6cd5\u5982\u4e0b\uff1a C++<pre><code>#include&lt;iostream&gt;\nuusing namespace std;\n\nint main()\n{\n   double m = 1, n = 0;\n   try{\n      cout &lt;&lt;\"before dividing\" &lt;&lt; endl;\n      if (n == 0)\n      {\n         throw -1; // \u629b\u51faint\u578b\u5f02\u5e38\n      }\n      else if (m == 0){\n         throw -1.0; //\u629b\u51fadouble\u578b\u5f02\u5e38\n      }\n      else{\n         cout &lt;&lt; m / n &lt;&lt; endl;\n      }\n      cout &lt;&lt; \"after dividing\" &lt;&lt; endl;\n   }\n   catch (double d){\n      cout &lt;&lt; \"catch (double)\" &lt;&lt; d &lt;&lt; endl;\n   }\n   catch (...){\n      cout &lt;&lt; \"catch (...)\" &lt;&lt; endl;\n   }\n   cout &lt;&lt; \"finish\" &lt;&lt; endl;\n   return 0;\n}\n</code></pre></p>"},{"location":"C%2B%2B/question/#10","title":"10 \u9759\u6001\u53d8\u91cf\u4ec0\u4e48\u65f6\u5019\u521d\u59cb\u5316","text":"<ol> <li>\u521d\u59cb\u5316\u53ea\u6709\u4e00\u6b21\uff0c\u4f46\u662f\u53ef\u4ee5\u591a\u6b21\u8d4b\u503c\uff0c\u5728\u4e3b\u7a0b\u5e8f\u4e4b\u524d\uff0c\u7f16\u8bd1\u5668\u5df2\u7ecf\u4e3a\u5176\u5206\u914d\u597d\u4e86\u5185\u5b58</li> <li>\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u4e00\u6837\uff0c\u6570\u636e\u90fd\u5b58\u653e\u5728\u5168\u5c40\u533a\u57df\uff0c\u6240\u4ee5\u5728\u4e3b\u7a0b\u5e8f\u4e4b\u524d\uff0c\u7f16\u8bd1\u5668\u5df2\u7ecf\u4e3a\u5176\u5206\u914d\u597d\u4e86\u5185\u5b58\uff0c\u4f46\u662fC\u548cC++\u4e2d\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u521d\u59cb\u5316\u8282\u70b9\u53c8\u6709\u70b9\u4e0d\u4e00\u6837\u3002\u5728C\u4e2d\uff0c\u521d\u59cb\u5316\u53d1\u751f\u5728\u4ee3\u7801\u6267\u884c\u4e4b\u524d\uff0c\u7f16\u8bd1\u9636\u6bb5\u5206\u914d\u597d\u5185\u5b58\u4e4b\u540e\uff0c\u5c31\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\u3002\u6240\u4ee5\u6211\u4eec\u770b\u5230\u5728C\u8bed\u8a00\u4e2d\u65e0\u6cd5\u4f7f\u7528\u53d8\u91cf\u5bf9\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\uff0c\u53d8\u91cf\u6240\u5904\u7684\u5168\u5c40\u5185\u5b58\u4f1a\u88ab\u5168\u5c40\u56de\u6536\uff1b</li> <li>\u800c\u5728C++\u4e2d\uff0c\u5728\u6267\u884c\u76f8\u5173\u4ee3\u7801\u65f6\u624d\u4f1a\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u662f\u7531\u4e8eC++\u5f15\u5165\u5bf9\u8c61\u540e\uff0c\u8981\u8fdb\u884c\u521d\u59cb\u5316\u6267\u884c\u76f8\u5e94\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u5728\u6784\u9020\u51fd\u6570\u6216\u6790\u6784\u51fd\u6570\u4e2d\u7ecf\u5e38\u4f1a\u9700\u8981\u8fdb\u884c\u67d0\u4e9b\u7a0b\u5e8f\u4e2d\u9700\u8981\u8fdb\u884c\u7684\u7279\u5b9a\u64cd\u4f5c\uff0c\u5e76\u975e\u7b80\u5355\u7684\u5206\u914d\u5185\u5b58\uff0c\u6240\u4ee5C++\u6807\u51c6\u5b9a\u4e3a\u5168\u5c40\u6216\u9759\u6001\u5bf9\u8c61\u662f\u6709\u9996\u6b21\u7528\u5230\u65f6\u624d\u4f1a\u8fdb\u884c\u6784\u9020\uff0c\u6240\u4ee5\u5728C++\u4e2d\u662f\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u5bf9\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff1b</li> </ol>"},{"location":"C%2B%2B/question/#11-mallocrealloccalloc","title":"11 malloc/realloc/calloc\u7684\u533a\u522b","text":"<p>malloc</p> C++<pre><code>void* malloc(unsigned int num_size);\nint *p = malloc(20 * sizeof(int)); // \u7533\u8bf720\u4e2aint\u7c7b\u578b\u7684\u7a7a\u95f4\n</code></pre> <p>calloc</p> C++<pre><code>void* calloc(size_t n, size_t size);\nint *p = calloc(20, sizeof(int)); \n</code></pre> <p>\u7701\u53bb\u4e86\u4eba\u4e3a\u7a7a\u95f4\u8ba1\u7b97\uff0cmalloc\u7533\u8bf7\u7684\u7a7a\u95f4\u7684\u503c\u662f\u968f\u673a\u7684\uff0c calloc\u7533\u8bf7\u7684\u7a7a\u95f4\u7684\u503c\u662f\u521d\u59cb\u5316\u4e3a0\u7684\uff1b</p> <p>realloc</p> <p>C++<pre><code>void realloc(void *p,  size_t new_size);\n</code></pre> \u7ed9\u52a8\u6001\u5206\u914d\u7684\u7a7a\u95f4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u7528\u4e8e\u6269\u5145\u5bb9\u91cf</p>"},{"location":"C%2B%2B/read/","title":"\u8bfb\u53d6\u6587\u4ef6","text":""},{"location":"C%2B%2B/read/#1-c","title":"1. C\u8bed\u8a00\u8bfb\u53d6\u6587\u4ef6","text":"<p>C\u4e3b\u8981\u4f7f\u7528<code>fopen</code>\uff0c <code>fread</code>\uff0c <code>fgets</code>\uff0c <code>fscanf</code>\u7b49\u51fd\u6570\u8fdb\u884c\u6587\u4ef6\u8bfb\u53d6</p>"},{"location":"C%2B%2B/read/#11","title":"1.1 \u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nunsigned char* read_binary_file(const char* filename, size_t* file_size)\n{\n    FILE* fp = fopen(filename, \"rb\");\n    if (fp == NULL)\n    {\n        printf(\"Failed to open file: %s\\n\", filename);\n        return NULL;\n    }\n\n    fseek(fp, 0, SEEK_END); // \u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\n    *file_size = ftell(fp); // \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\n    rewind(fp); // \u56de\u5230\u6587\u4ef6\u5f00\u5934\n\n    unsigned char* buffer = (unsinged char* )malloc(*file_size);\n\n    if(!buffer)\n    {\n        printf(\"Memory allocation failed\\n\");\n        fclose(fp);\n        return NULL;\n    }\n\n    if (fread(buffer, 1, *file_size, fp) != *file_size)\n    {\n        printf(\"failed to read file\\n\");\n        free(buffer);\n        fclose(fp);\n        return NULL;\n    }\n    fclose(fp);\n    return buffer; //\u8fd4\u56de\u6587\u4ef6\u5185\u5bb9\n}\n</code></pre> <p><code>size_t fread(void *ptr, size_t size, size_t count, FILE *stream);</code> \u53c2\u6570\u8bf4\u660e - <code>ptr</code>\uff1a\u6307\u5411\u8981\u5b58\u50a8\u8bfb\u53d6\u6570\u636e\u7684\u7f13\u51b2\u533a\uff08\u901a\u5e38\u662f <code>char*</code> \u6216 <code>unsigned char*</code>\uff09\u3002 - <code>size</code>\uff1a\u6bcf\u4e2a\u6570\u636e\u9879\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002 - <code>count</code>\uff1a\u8981\u8bfb\u53d6\u7684\u6570\u636e\u9879\u4e2a\u6570\u3002 - <code>stream</code>\uff1a\u6307\u5411 <code>FILE*</code> \u6587\u4ef6\u6d41\u3002 \u8fd4\u56de\u503c \u8fd4\u56de\u6210\u529f\u8bfb\u53d6\u7684\u6570\u636e\u9879\u4e2a\u6570\uff08count\uff09\u3002 \u5982\u679c \u8bfb\u53d6\u6570\u91cf\u5c0f\u4e8e count\uff0c\u53ef\u80fd\u662f \u6587\u4ef6\u7ed3\u675f \u6216 \u8bfb\u53d6\u51fa\u9519\u3002</p>"},{"location":"C%2B%2B/read/#12","title":"1.2 \u9010\u884c\u8bfb\u53d6\u6587\u672c\u6587\u4ef6","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid read_text_file(const char* filename)\n{\n    FILE* fp = fopen(filename, \"r\");\n    if (fp ==NULL)\n    {\n        printf(\"Failed to open file:%s\\n\", filename);\n        return;\n    }\n    char buffer[256]; // \u7f13\u51b2\u533a\n    while(fgets(buffer, sizeof(buffer), fp))\n    {\n        printf(\"%s\", buffer);\n    }\n    fclose(fp);\n}\n</code></pre>"},{"location":"C%2B%2B/read/#13","title":"1.3 \u9010\u5b57\u7b26\u8bfb\u53d6","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid read_file_char_by_char(const char* filename)\n{\n    FILE* fp = fopen(filename, \"r\");\n    if (fp == NULL)\n    {\n        printf(\"Failed to open file: %s\\n\", filename);\n        return;\n    }\n    int ch;\n    while((ch = fgetc(fp)) != EOF){\n        putchar(ch);\n    }\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/00-make/","title":"\u96f6 CMake&amp;make&amp;Makefile","text":""},{"location":"C%2B%2B/vscode/00-make/#1-make","title":"\ud83d\udd27 1. make","text":"<ul> <li><code>make</code> \u662f\u4e00\u4e2a \u81ea\u52a8\u5316\u6784\u5efa\u5de5\u5177\u3002</li> <li> <p>\u5b83\u8bfb\u53d6\u540d\u4e3a Makefile \u7684\u6587\u4ef6\uff0c\u6839\u636e\u91cc\u9762\u7684\u89c4\u5219\u6765\uff1a</p> </li> <li> <p>\u7f16\u8bd1\u6e90\u4ee3\u7801 <code>.cpp</code></p> </li> <li>\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6 <code>.out</code></li> </ul>"},{"location":"C%2B%2B/vscode/00-make/#_1","title":"\u2705 \u4e3e\u4f8b\uff1a","text":"Bash<pre><code>make\n</code></pre> <p>\u4f1a\u81ea\u52a8\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 <code>Makefile</code> \u6587\u4ef6\uff0c\u5e76\u6267\u884c\u91cc\u9762\u7684\u89c4\u5219\u3002</p>"},{"location":"C%2B%2B/vscode/00-make/#2-makefile","title":"\ud83d\udcc4 2. Makefile","text":"<ul> <li><code>Makefile</code> \u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u91cc\u9762\u5199\u7740 \u201c\u600e\u4e48\u7f16\u8bd1\u3001\u94fe\u63a5\u7a0b\u5e8f\u7684\u6b65\u9aa4\u201d\u3002</li> </ul>"},{"location":"C%2B%2B/vscode/00-make/#makefile","title":"\u2705 \u4e00\u4e2a\u6700\u7b80\u5355\u7684 Makefile\uff1a","text":"Makefile<pre><code>main: main.o math.o\n    g++ -o main main.o math.o\n\nmain.o: main.cpp\n    g++ -c main.cpp\n\nmath.o: math.cpp\n    g++ -c math.cpp\n\nclean:\n    rm -f *.o main\n</code></pre> <p>\u4f60\u53ef\u4ee5\u5728\u7ec8\u7aef\u8fd0\u884c\uff1a</p> Bash<pre><code>make        # \u9ed8\u8ba4\u6784\u5efa main\nmake clean  # \u6e05\u7406\u4e34\u65f6\u6587\u4ef6\n</code></pre>"},{"location":"C%2B%2B/vscode/00-make/#3-cmake","title":"\ud83c\udfd7\ufe0f 3. CMake","text":"<ul> <li><code>CMake</code> \u662f\u4e00\u4e2a \u8de8\u5e73\u53f0\u7684\u81ea\u52a8\u5316\u6784\u5efa\u7cfb\u7edf\u751f\u6210\u5668\u3002</li> <li>\u5b83\u4f1a\u8bfb\u53d6\u4e00\u4e2a\u53eb <code>CMakeLists.txt</code> \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u81ea\u52a8\u751f\u6210 Makefile \u6216\u5176\u4ed6\u6784\u5efa\u7cfb\u7edf\u7684\u5de5\u7a0b\u6587\u4ef6\uff08\u5982 Visual Studio \u5de5\u7a0b\uff09\u3002</li> <li>\u4f60\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u5957\u914d\u7f6e\uff08<code>CMakeLists.txt</code>\uff09\uff0cCMake \u4f1a\u5e2e\u4f60\u9002\u914d\u4e0d\u540c\u7cfb\u7edf\u3001\u4e0d\u540c\u7f16\u8bd1\u5668\u3002</li> </ul>"},{"location":"C%2B%2B/vscode/00-make/#cmakeliststxt","title":"\u2705 \u793a\u4f8b <code>CMakeLists.txt</code>\uff1a","text":"CMake<pre><code>cmake_minimum_required(VERSION 3.10)\nproject(MyApp)\n\nset(CMAKE_CXX_STANDARD 17)\n\nadd_executable(main main.cpp math.cpp)\n</code></pre>"},{"location":"C%2B%2B/vscode/00-make/#_2","title":"\u2705 \u4f7f\u7528\u6d41\u7a0b\uff1a","text":"Bash<pre><code>mkdir build\ncd build\ncmake ..       # \u751f\u6210 Makefile\nmake           # \u7f16\u8bd1\n</code></pre>"},{"location":"C%2B%2B/vscode/00-make/#4","title":"\u2705 4. \u603b\u7ed3\uff1a\u4e09\u8005\u533a\u522b\u4e0e\u8054\u7cfb","text":"\u540d\u79f0 \u7c7b\u578b \u4f5c\u7528 <code>make</code> \u5de5\u5177 \u8bfb\u53d6 Makefile\uff0c\u6267\u884c\u7f16\u8bd1 <code>Makefile</code> \u6587\u4ef6 \u5199\u660e\u7f16\u8bd1\u89c4\u5219 <code>CMake</code> \u5de5\u5177 \u81ea\u52a8\u751f\u6210 Makefile\uff08\u6216\u5176\u4ed6\u6784\u5efa\u7cfb\u7edf\u5de5\u7a0b\uff09"},{"location":"C%2B%2B/vscode/00-make/#_3","title":"\ud83d\ude80 \u56fe\u793a\u7406\u89e3\uff1a","text":"Text Only<pre><code>\u4f60\u5199\u7684 CMakeLists.txt\n         \u2193\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502 CMake  \u2502 \u2190 \u8d1f\u8d23\u8bfb\u53d6\u914d\u7f6e\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2193 \u751f\u6210\n      Makefile\uff08\u6216 Ninja \u7b49\uff09\n         \u2193\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502 make   \u2502 \u2190 \u8d1f\u8d23\u6267\u884c\u7f16\u8bd1\u52a8\u4f5c\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2193\n     \u7f16\u8bd1\u540e\u7684\u7a0b\u5e8f\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/","title":"\u4e00 Linux\u4e2d\u7f16\u8bd1C++","text":""},{"location":"C%2B%2B/vscode/01-g%2B%2B/#1-gcc","title":"1. GCC\u6982\u8ff0","text":"<p>GCC\uff08GNU Compiler Collection\uff0cGNU\u7f16\u8bd1\u5668\u5957\u4ef6\uff09\u662f\u7531GNU\u5f00\u53d1\u7684\u7f16\u7a0b\u8bed\u8a00\u8bd1\u5668\u3002\u800cGCC\u4e0b\u9762\u6709\u4e24\u4e2a\u6bd4\u8f83\u5e38\u7528\u7684\u5de5\u5177\u5c31\u662fgcc(GUN C Compiler)\u548cg++(GUN C++ Compiler)\uff0c\u5373C\u8bed\u8a00\u7f16\u8bd1\u5668\u548cC++\u7f16\u8bd1\u5668\u3002\u4eba\u4eec\u901a\u5e38\u7528gcc\u7f16\u8bd1\u7eafC\u4ee3\u7801\uff0c\u7528g++\u7f16\u8bd1C++\u4ee3\u7801\u3002\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7528\u76f4\u63a5\u7528g++\u7f16\u8bd1C\u6216\u8005C++\u4ee3\u7801\uff0c\u672c\u6587\u6211\u4eec\u5b66\u4e60\u600e\u6837\u4f7f\u7528g++\u3002 </p> <ul> <li>GCC \u7f16\u8bd1\u5668\u652f\u6301\u7f16\u8bd1 Go\u3001Object-C\u3001Object-C ++\u3001Fortran\u3001Ada\u3001BRIG\uff08HSAIL\uff09\u7b49\u7a0b\u5e8f\uff1b</li> <li>Linux \u5f00\u53d1 C/C++ \u4e00\u5b9a\u8981\u719f\u6089 GCC\uff1b</li> <li>VSCode \u662f\u901a\u8fc7\u8c03\u7528 GCC \u7f16\u8bd1\u5668\u6765\u5b9e\u73b0 C/C++\u7684\u7f16\u8bd1\u5de5\u4f5c\u7684\u3002</li> </ul> <p>\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u5b89\u88c5<code>g++</code>\u7f16\u8bd1\u5de5\u5177\uff0c\u5982\u4e0b\u547d\u4ee4</p> Bash<pre><code>sudo apt install -y g++\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#2-g","title":"2. g++\u7f16\u8bd1\u8fc7\u7a0b","text":"<p>\u4f7f\u7528 <code>g++</code> \u7f16\u8bd1C++\u6e90\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 \u5373\u53ef\u5b8c\u6210\u7f16\u8bd1C++\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u5e76\u4e14\u76f4\u63a5\u4ea7\u751f\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6</p> Bash<pre><code># \u7f16\u8bd1test.cpp \u6587\u4ef6\uff0c\u5728 Linux \u4e0b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u540d\u4e3a a.out \u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\ng++ test.cpp\n</code></pre> <p>\u5b9e\u9645\u4e0a\uff0c\u4e0a\u9762\u7684\u4e00\u6b65\u7f16\u8bd1\u6307\u4ee4\u5305\u542b\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u8fc7\u7a0b</p> <p>\u7b2c\u4e00\u6b65\uff1a\u9884\u5904\u7406 Pre-processing\uff0c\u751f\u6210.i \u6587\u4ef6</p> Bash<pre><code># -E \u9009\u9879\u6307\u793a\u7f16\u8bd1\u5668\u4ec5\u5bf9\u8f93\u5165\u6587\u4ef6\u8fdb\u884c\u9884\u7f16\u8bd1\ng++ -E test.cpp -o testr.i\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff1a\u7f16\u8bd1-Compiling\uff0c\u751f\u6210.s \u6587\u4ef6</p> Bash<pre><code># -S \u7f16\u8bd1\u9009\u9879\u544a\u8bc9 g++ \u5728\u4e3a c++ \u4ee3\u7801\u4ea7\u751f\u4e86\u6c47\u7f16\u8bed\u8a00\u6587\u4ef6\u540e\u505c\u6b62\u7f16\u8bd1\n# g++ \u4ea7\u751f\u7684\u6c47\u7f16\u8bed\u8a00\u6587\u4ef6\u7684\u7f3a\u7701\u6269\u5c55\u540d\u662f .s\ng++ -S test.i -o test.s\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff1a\u6c47\u7f16-Assembing\uff0c\u751f\u6210.o \u6587\u4ef6</p> Bash<pre><code># -c \u9009\u9879\u544a\u8bc9 g++ \u4ec5\u628a\u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u673a\u5668\u8bed\u8a00\u7684\u76ee\u6807\u4ee3\u7801\n# \u7f3a\u7701\u65f6 g++ \u5efa\u7acb\u7684\u76ee\u6807\u4ee3\u7801\u6587\u4ef6\u6709\u4e00\u4e2a .o \u7684\u6269\u5c55\u540d\ng++ -c test.s -o test.o\n</code></pre> <p>\u7b2c\u56db\u6b65\uff1a\u94fe\u63a5-Lingking\uff0c\u751f\u6210 bin \u4e8c\u8fdb\u5236\u6587\u4ef6</p> Bash<pre><code># -o \u7f16\u8bd1\u9009\u9879\u6765\u4e3a\u5c06\u4ea7\u751f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6307\u5b9a\u6587\u4ef6\u540d\uff0c\u5982\u679c\u4e0d\u4f7f\u7528-o\u53c2\u6570\uff0c\u5728Linux\u4e0b\u9ed8\u8ba4\u8f93\u51fa\u540d\u4e3a a.out \u7684\u53ef\u6267\u884c\u6587\u4ef6\ng++ test.o -o test\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#3-g","title":"3. g++\u91cd\u8981\u7f16\u8bd1\u53c2\u6570","text":""},{"location":"C%2B%2B/vscode/01-g%2B%2B/#31","title":"3.1. \u7f16\u8bd1\u5e26\u8c03\u8bd5\u4fe1\u606f\u7684\u53ef\u6267\u884c\u6587\u4ef6","text":"<p><code>-g</code> \u9009\u9879\u544a\u8bc9GCC\u4ea7\u751f\u80fd\u88ab GNU\u8c03\u8bd5\u5668(DGB) \u4f7f\u7528\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u4ee5\u8c03\u8bd5\u7a0b\u5e8f</p> Bash<pre><code># \u4ea7\u751f\u5e26\u8c03\u8bd5\u4fe1\u606f\u7684\u53ef\u6267\u884c\u6587\u4ef6test\ng++ -g test.cpp -o test\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#32","title":"3.2. \u4f18\u5316\u6e90\u4ee3\u7801","text":"<p>\u6240\u8c13\u4f18\u5316\uff0c\u662f\u6307\u5982\u7701\u7565\u4ee3\u7801\u4e2d\u4ece\u6765\u672a\u4f7f\u7528\u8fc7\u7684\u53d8\u91cf\u3001\u76f4\u63a5\u5e38\u91cf\u8868\u8fbe\u5f0f\u7528\u7ed3\u679c\u66ff\u4ee3\u7b49\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u4f1a\u7f29\u51cf\u76ee\u6807\u6587\u4ef6\u6240\u542b\u7684\u4ee3\u7801\uff0c\u63d0\u9ad8\u6700\u7ec8\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8fd0\u884c\u6548\u7387\u3002</p> <p><code>O</code> \u53c2\u6570\u544a\u8bc9 g++ \u5bf9\u6e90\u4ee3\u7801\u8fdb\u884c\u57fa\u672c\u4f18\u5316\u3002\u8fd9\u4e9b\u4f18\u5316\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u4f7f\u7a0b\u5e8f\u6267\u884c\u5f97\u66f4\u5feb\uff0c\u5e38\u7528\u4f18\u5316\u7ea7\u522b\u5982\u4e0b\uff1a</p> <p><code>-O</code>: \u540c\u65f6\u51cf\u5c11\u4ee3\u7801\u7684\u957f\u5ea6\u548c\u6267\u884c\u65f6\u95f4\uff0c\u5176\u6548\u679c\u7b49\u4ef7\u4e8e <code>-O1</code></p> <p><code>-O0</code>: \u8868\u793a\u4e0d\u505a\u4f18\u5316</p> <p><code>-O1</code>: \u8868\u793a\u9ed8\u8ba4\u4f18\u5316</p> <p><code>-O2</code>: \u544a\u8bc9 g++ \u4ea7\u751f\u5c3d\u53ef\u80fd\u5c0f\u548c\u5c3d\u53ef\u80fd\u5feb\u7684\u4ee3\u7801\u3002\u9664\u4e86\u5b8c\u6210<code>-O1</code> \u7684\u4f18\u5316\u4e4b\u5916\uff0c\u8fd8\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u8c03\u6574\u5de5\u4f5c\uff0c\u5982\u6307\u4ee4\u8c03\u6574\u7b49</p> <p><code>-O3</code>: \u5305\u62ec\u5faa\u73af\u5c55\u5f00\u548c\u5176\u4ed6\u4e00\u4e9b\u4e0e\u5904\u7406\u6027\u76f8\u5173\u7684\u4f18\u5316\u5de5\u4f5c\uff0c\u9009\u9879\u5c06\u4f7f\u7f16\u8bd1\u7684\u901f\u5ea6\u6bd4 <code>-O</code> \u6162\uff0c\u4f46\u901a\u5e38\u4ea7\u751f\u7684\u4ee3\u7801\u6267\u884c\u901f\u5ea6\u4f1a\u66f4\u5feb\u3002</p> Bash<pre><code># \u4f7f\u7528 -O2 \u4f18\u5316\u6e90\u4ee3\u7801\uff0c\u5e76\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u3002\ng++ -O2 test.cpp\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#321","title":"3.2.1 \u6e90\u4ee3\u7801\u4f18\u5316\u793a\u4f8b","text":"<p>\u521b\u5efa\u4e00\u4e2a\u6548\u7387\u4f4e\u4e0b\u7684\u4ee3\u7801\u6587\u4ef6 <code>src/01_basic/inefficency.cpp</code> \uff0c\u6dfb\u52a0\u4ee5\u4e0bC++\u6e90\u4ee3\u7801</p> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n    unsigned long int counter;\n    unsigned long int result;\n    unsigned long int temp;\n    unsigned long int five;\n\n    for (counter = 0; counter &lt; 2009 * 2009 * 100 / 4 + 2010 ; counter += (10-6)/4)\n    {\n        temp = counter/1979;\n        for (int i = 0; i &lt; 20; i++)\n        {\n            // \u6bcf\u6b21\u5faa\u73af\u90fd\u4f1a\u8fdb\u884c\u4e00\u6b21\u65e0\u7528\u7684 \u590d\u6742\u7684\u8fd0\u7b97\n            five = 200 * 200 / 8000;\n            result = counter;\n        }\n    }\n\n    cout &lt;&lt; \"result = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u5148\u4f7f\u7528\u76f4\u63a5\u7f16\u8bd1\u7684\u65b9\u5f0f\u751f\u6210<code>without_o.out</code>\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5982\u4e0b\u547d\u4ee4</p> Bash<pre><code># \u4ee3\u7801\u65e0\u4f18\u5316\ng++ inefficency.cpp -o without_o.out\n</code></pre> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u4f7f\u7528\u4f18\u5316\u540e\u7684\u7f16\u8bd1\u65b9\u5f0f\uff0c\u751f\u6210<code>with_o.out</code>\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5982\u4e0b\u547d\u4ee4</p> Bash<pre><code># \u4f7f\u7528-O2\u7ea7\u522b\u7684\u4ee3\u7801\u4f18\u5316\ng++ inefficency.cpp -O2 -o with_o.out\n</code></pre> <p>\u540e\u6267\u884c\u4e24\u79cd\u65b9\u5f0f\u7f16\u8bd1\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b49\u5f85\u65f6\u95f4\u77e5\u9053 \u6ca1\u6709\u7f16\u8bd1\u4f18\u5316\u7684 <code>without_o.out</code> \u6267\u884c\u65f6\u95f4\u660e\u663e\u5927\u4e8e <code>with_o.out</code>\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>time</code> \u547d\u4ee4\u8ba1\u7b97\u6267\u884c\u7a0b\u5e8f\u6240\u9700\u7684\u65f6\u95f4\uff0c\u53ef\u4ee5\u770b\u5230\u660e\u663e\u7684\u65f6\u95f4\u533a\u522b\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u603b\u7ed3\uff1a\u52a0\u4e0a -O \u4f18\u5316\u53c2\u6570\u540e\uff08\u6211\u4eec\u4e00\u822c\u4f7f\u7528 -O2\uff09\uff0c\u7f16\u8bd1\u5668\u4f1a\u5e2e\u6211\u4eec\u4f18\u5316\u4f4e\u6548\u7387\u7684\u4ee3\u7801\u3002\u4ece\u800c\u63d0\u9ad8\u6700\u7ec8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002</p>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#33","title":"3.3. \u6307\u5b9a\u5e93\u6587\u4ef6","text":"<p>\u5728 g++ \u5de5\u5177\u4e2d\uff0c <code>-l</code> \u6216\u8005 <code>-L</code> \u6307\u5b9a\u5e93\u6587\u4ef6\uff0c|(\u5927\u5199i) \u6307\u5b9a\u5e93\u6587\u4ef6\u8def\u5f84</p> <p>-l \u53c2\u6570\uff08\u5c0f\u5199L\uff09\u5c31\u662f\u7528\u6765\u6307\u5b9a\u7a0b\u5e8f\u8981\u94fe\u63a5\u7684\u5e93\uff0c-l \u53c2\u6570\u7d27\u63a5\u7740\u5c31\u662f\u5e93\u540d\uff0c\u5728<code>/lib</code>\u3001<code>/usr/lib</code>\u3001<code>/usr/local/lib</code>\u91cc\u7684\u5e93\u76f4\u63a5\u8c03\u7528 -l \u53c2\u6570\u5c31\u80fd\u94fe\u63a5\uff0c\u8fd9\u4e09\u4e2a\u5e93\u76ee\u5f55\u6211\u4eec\u5728\u4e0b\u6587\u4e2d\u53eb\u505a\u7cfb\u7edf\u5e93\u76ee\u5f55</p> Bash<pre><code># \u94fe\u63a5 glog\u5e93 \u7f16\u8bd1\ng++ -lglog test.cpp\n</code></pre> <p>\u5982\u679c\u5e93\u6587\u4ef6\u6ca1\u6709\u653e\u5728\u7cfb\u7edf\u5e93\u76ee\u5f55\u4e2d\uff0c\u9700\u8981\u4f7f\u7528-L \u53c2\u6570\uff08\u5927\u5199l\uff09\u6307\u5b9a\u5e93\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c-L \u53c2\u6570\u8ddf\u7740\u7684\u662f\u5e93\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u540d</p> Bash<pre><code># \u94fe\u63a5 mytest\u5e93\u3002libmytest.so \u5728 ~/lib\u76ee\u5f55\u4e0b\ng++ -L~/lib -lmytest test.cpp\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#34-i","title":"3.4. <code>-I</code> \u6307\u5b9a\u5934\u6587\u4ef6\u641c\u7d22\u76ee\u5f55","text":"<p><code>/usr/include</code> \u4e00\u822c\u4e0d\u7528\u6307\u5b9a\uff0cgcc \u77e5\u9053\u53bb\u90a3\u91cc\u627e\uff0c\u4f46\u662f\u5982\u679c\u5934\u6587\u4ef6\u4e0d\u5728 <code>/usr/include</code> \u91cc\u6211\u4eec\u5c31\u8981\u7528 <code>-I</code> \u53c2\u6570\u6307\u5b9a\u4e86\uff0c\u6bd4\u5982\u5934\u6587\u4ef6\u653e\u5728 <code>/myinclude</code>\u76ee\u5f55\u91cc\uff0c\u90a3\u7f16\u8bd1\u547d\u4ee4\u884c\u5c31\u8981\u52a0\u4e0a <code>-I/myinclude</code> \u53c2\u6570\uff0c\u5982\u679c\u4e0d\u52a0\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a <code>xxx.h: No such file or directory</code> \u7684\u9519\u8bef\u3002<code>-I</code> \u53c2\u6570\u53ef\u4ee5\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u3002</p> Bash<pre><code># \u7f16\u8bd1\u4ee3\u7801\u65f6\uff0c\u6307\u5b9a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684myinclude\u76ee\u5f55\u4f5c\u4e3a\u5934\u6587\u4ef6\u76ee\u5f55\ng++ -I/myinclde test.cpp\n</code></pre> <p>demo \u5047\u8bbe\u4f60\u7528\u4e00\u4e2a\u56fe\u50cf\u5e93 <code>libimageproc.so</code>\uff0c\u5e76\u4e14\u6709\u5934\u6587\u4ef6 <code>imageproc.h</code>\uff1a</p> <p>\u4f60\u7528 <code>#include \"imageproc.h\"</code> \u6765\u8c03\u7528\u91cc\u9762\u7684\u51fd\u6570\u3002</p> <p>\u4f60\u9700\u8981\u7528 <code>-limageproc</code> \u6765\u544a\u8bc9\u7f16\u8bd1\u5668\u4f60\u8981\u94fe\u63a5\u8fd9\u4e2a\u5e93\uff08\u4f1a\u67e5\u627e <code>libimageproc.so</code>\uff09\u3002</p> <p>\u5982\u679c\u8fd9\u4e2a\u5e93\u4e0d\u5728\u9ed8\u8ba4\u76ee\u5f55\uff08\u5982<code>/usr/lib</code>\uff09\uff0c\u8fd8\u9700\u8981\u7528 -L&lt;\u8def\u5f84&gt; \u6307\u660e\u5e93\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\u3002</p> Bash<pre><code>g++ main.cpp -I/path/to/headers -L/path/to/libs -limageproc -o main\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#35-wall","title":"3.5. <code>-Wall</code> \u6253\u5370\u8b66\u544a\u4fe1\u606f","text":"Bash<pre><code>\u6253\u5370\u51fagcc\u63d0\u4f9b\u7684\u8b66\u544a\u4fe1\u606f\ng++ -Wall test.cpp\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#36-w","title":"3.6. <code>-w</code> \u5173\u95ed\u8b66\u544a\u4fe1\u606f","text":"<p>\u5728\u4f7f\u7528\u9ad8\u7248\u672c\u7684C++\u6807\u51c6\u8fdb\u884c\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u4ee3\u7801\u5199\u7684\u4e0d\u89c4\u8303\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u5b9a\u4e49\u53d8\u91cf\u4f46\u662f\u4e0d\u4f7f\u7528\uff0cg++\u5c06\u4f1a\u63d0\u793a\u5bf9\u5e94\u7684\u8b66\u544a\u4fe1\u606f\u3002\u4f46\u53ef\u4ee5\u4f7f\u7528<code>-w</code>\u5173\u95ed\u8fd9\u4e9b\u8b66\u544a</p> Bash<pre><code># \u5173\u95ed\u6240\u6709\u8b66\u544a\u4fe1\u606f\ng++ -w test.cpp\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#37-std","title":"3.7. \u4f7f\u7528<code>-std</code>\u8bbe\u7f6e\u7f16\u8bd1\u6807\u51c6","text":"Bash<pre><code># \u4f7f\u7528 c++11 \u6807\u51c6\u7f16\u8bd1 test.cpp\ng++ -std=c++11 test.cpp\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#38-o","title":"3.8. <code>-o</code>(\u5c0f\u5199) \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d","text":"Bash<pre><code># \u6307\u5b9a\u5373\u5c06\u4ea7\u751f\u7684\u6587\u4ef6\u540d\u4e3a test\ng++ test.cpp -o test\n</code></pre>"},{"location":"C%2B%2B/vscode/01-g%2B%2B/#39-d","title":"3.9. <code>-D</code> \u5b9a\u4e49\u5b8f","text":"<p>\u4e3a\u4e86\u6f14\u793a\u5b8f\u7684\u4f5c\u7528\uff0c\u521b\u5efa\u6e90\u7801\u6587\u4ef6 <code>gcc_02_test/test.cpp</code> \uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0bC++\u6e90\u4ee3\u7801</p> C++<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    // \u6839\u636e\u662f\u5426\u5b58\u5728 DEBUG \u8fdb\u884c\u903b\u8f91\u5904\u7406\n    #ifdef DEBUG\n        printf(\"DEBUG LOG\\n\");\n    #endif\n        printf(\"in\\n\");\n    return 0;\n}\n</code></pre> <p>\u4f7f\u7528 <code>g++ -DDEBUG test.cpp</code> \u7f16\u8bd1\u7684\u540c\u65f6\u5b9a\u4e49<code>DEBUG</code>\u5b8f\uff0c\u6267\u884c\u7f16\u8bd1\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u770b\u5230 \"DEBUG LOG\" \u88ab\u8f93\u51fa\u3002\u539f\u56e0\u662f\u6211\u4eec\u4f7f\u7528<code>-DDEBUG</code> \u53c2\u6570\u5b9a\u4e49 <code>DEBUG</code> \u5b8f\uff0c\u5728\u6267\u884c\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u68c0\u6d4b\u5230\u4e86 <code>DEBUG</code> \u5b8f\u7684\u5b58\u5728\uff0c\u5e76\u6267\u884c\u4e86\u5bf9\u5e94\u7684\u903b\u8f91\u3002</p>"},{"location":"C%2B%2B/vscode/02-compile/","title":"\u4e8c Linux C++\u547d\u4ee4\u884c\u7f16\u8bd1","text":""},{"location":"C%2B%2B/vscode/02-compile/#1","title":"1. \u51c6\u5907\u6e90\u4ee3\u7801","text":"<p>\u5728\u4e00\u4e2a\u5de5\u4f5c\u76ee\u5f55\u4e2d\u521b\u5efa\u4ee5\u4e0b\u4ee3\u7801\u6587\u4ef6\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u56fe</p> <p></p> <p>\u4ee3\u7801\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p><code>swap.h</code>\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6e90\u7801\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86C++\u5934\u90e8\u4fe1\u606f</p> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n</code></pre> <p><code>swap.cpp</code>\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u6211\u4eec\u5c06\u5728\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528\u7684C++\u4ee3\u7801</p> C++<pre><code>#include \"swap.h\"\n\nvoid swap(int &amp;a, int &amp;b)\n{\n    int temp;\n    temp = a;\n    a = b;\n    b = temp;\n}\n</code></pre> <p><code>main.cpp</code>\u6587\u4ef6\uff0c\u8fd9\u662f\u4e3b\u51fd\u6570\u6587\u4ef6\uff0c\u51fd\u6570\u8c03\u7528\u7684\u5165\u53e3</p> C++<pre><code>#include &lt;iostream&gt;\n#include \"swap.h\"\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n    int val1 = 10;\n    int val2 = 20;\n\n    cout &lt;&lt; \" Before swap:\" &lt;&lt; endl;\n    cout &lt;&lt; \" val1:\" &lt;&lt; val1 &lt;&lt; endl;\n    cout &lt;&lt; \" val2:\" &lt;&lt; val2 &lt;&lt; endl;\n\n    swap(val1, val2);\n\n    cout &lt;&lt; \" After swap:\" &lt;&lt; endl;\n    cout &lt;&lt; \" val1:\" &lt;&lt; val1 &lt;&lt; endl;\n    cout &lt;&lt; \" val2:\" &lt;&lt; val2 &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/02-compile/#2","title":"2. \u7f16\u8bd1\u5b9e\u6218","text":""},{"location":"C%2B%2B/vscode/02-compile/#21","title":"2.1. \u5f15\u5165\u76ee\u5f55\u8fdb\u884c\u7f16\u8bd1","text":"<p>\u76f4\u63a5\u7f16\u8bd1</p> Bash<pre><code>g++ main.cpp src/swap.cpp\n</code></pre> <p>\u6b64\u65f6\u4f1a\u770b\u5230\u5982\u4e0b\u56fe\u7684\u9519\u8bef</p> <p></p> <p>\u8fd9\u662f\u56e0\u4e3a g++ \u627e\u4e0d\u5230<code>include</code>\u76ee\u5f55\u4e0b\u7684<code>swap.h</code> \u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528<code>-I</code>\u53c2\u6570\u5c06<code>include</code>\u76ee\u5f55\u5305\u542b\u8fdb\u6765\uff0c\u5982\u4e0b\u547d\u4ee4</p> Bash<pre><code>g++ main.cpp src/swap.cpp -Iinclude\n</code></pre> <p>\u8fd9\u65f6\u5019\u4ee3\u7801\u5c31\u53ef\u4ee5\u987a\u4fbf\u901a\u8fc7\u7f16\u8bd1\u4e86\u3002</p>"},{"location":"C%2B%2B/vscode/02-compile/#22-wall-std","title":"2.2. \u4f7f\u7528-Wall\u3001-std \u53c2\u6570\u8fdb\u884c\u7f16\u8bd1","text":"<p><code>-Wall</code> \u4ee3\u8868\u7a0b\u5e8f\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u8f93\u51fa\u8b66\u544a\u4fe1\u606f\uff0c<code>-std</code>\u4ee3\u8868\u4f7f\u7528\u7279\u5b9a\u7684 c++\u6807\u51c6 \u8fdb\u884c\u7f16\u8bd1\uff0c\u5982\u4e0b\u547d\u4ee4</p> Bash<pre><code># \u4f7f\u7528c++11\u6807\u51c6\u8fdb\u884c\u7f16\u8bd1\uff0c\u5e76\u4e14\u4f7f\u7528-Wall\u53c2\u6570\ng++ main.cpp src/swap.cpp -Iinclude -Wall -std=c++11 -o a.out\n</code></pre> <p>\u6b64\u65f6\u6211\u4eec\u770b\u5230\uff0c\u8fd8\u662f\u80fd\u6b63\u5e38\u7f16\u8bd1\uff0c\u4e5f\u6ca1\u6709\u8f93\u51fa\u8b66\u544a\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6b63\u5e38\u6267\u884c<code>a.out</code>\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u4ee3\u7801\u662f\u7b26\u5408<code>c++11</code>\u6807\u51c6\u7684\uff0c\u4e3a\u4e86\u6f14\u793a\u4e00\u4e2a\u8b66\u544a\uff0c\u6211\u4eec\u5728<code>main.cpp</code>\u4e2d\u52a0\u4e00\u884c\u4ee3\u7801\u3002\u5982\u4e0b</p> C++<pre><code>#include &lt;iostream&gt;\n#include \"swap.h\"\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n    int val1 = 10;\n    int val2 = 20;\n    // \u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u4f46\u662f\u4e0d\u4f7f\u7528\n    double d = 0.0;\n\n    cout &lt;&lt; \" Before swap:\" &lt;&lt; endl;\n    cout &lt;&lt; \" val1:\" &lt;&lt; val1 &lt;&lt; endl;\n    cout &lt;&lt; \" val2:\" &lt;&lt; val2 &lt;&lt; endl;\n\n    swap(val1, val2);\n\n    cout &lt;&lt; \" After swap:\" &lt;&lt; endl;\n    cout &lt;&lt; \" val1:\" &lt;&lt; val1 &lt;&lt; endl;\n    cout &lt;&lt; \" val2:\" &lt;&lt; val2 &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u628a\u8f93\u51fa\u6587\u4ef6\u6539\u4e3a<code>b.out</code>\uff0c\u518d\u6b21\u6267\u884c\u7f16\u8bd1\uff0c\u5982\u4e0b\u547d\u4ee4</p> Bash<pre><code>g++ main.cpp src/swap.cpp -Iinclude -Wall -std=c++11 -o b.out\n</code></pre> <p>\u6b64\u65f6\u51fa\u73b0\u5982\u4e0b\u56fe\u8b66\u544a</p> <p></p> <p>\u56e0\u4e3a\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u4e0d\u4f7f\u7528\uff0c\u662f\u4e0d\u7b26\u5408<code>c++11</code>\u7684\u6807\u51c6\u7684\uff0c\u4f46\u4e0d\u662f\u9519\u8bef\uff0c<code>b.out</code>\u4e5f\u80fd\u6b63\u5e38\u6267\u884c\u3002</p>"},{"location":"C%2B%2B/vscode/02-compile/#23","title":"2.3. \u751f\u6210\u5e93\u6587\u4ef6","text":"<p>\u6211\u4eec\u5148\u5220\u9664\u5728 2 \u4e2d\u4f1a\u8fdb\u884c\u8b66\u544a\u7684\u4ee3\u7801</p>"},{"location":"C%2B%2B/vscode/02-compile/#231","title":"2.3.1. \u94fe\u63a5\u9759\u6001\u5e93\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6","text":"Bash<pre><code># \u5148\u8fdb\u5165src\u76ee\u5f55\ncd  src\n# \u6c47\u7f16\u751f\u6210swap.o \u6587\u4ef6\ng++ swap.cpp -c -I../include\n# \u751f\u6210\u9759\u6001\u5e93libSwap.o\nar rs libswap.a swap.o\n# \u56de\u5230\u4ee3\u7801\u6839\u76ee\u5f55\uff0c\u8c03\u7528\u9759\u6001\u94fe\u63a5\u5e93\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\ng++ main.cpp -lswap -Lsrc -Iinclude -o static_main\n</code></pre>"},{"location":"C%2B%2B/vscode/02-compile/#232","title":"2.3.2. \u94fe\u63a5\u52a8\u6001\u5e93\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6","text":"Bash<pre><code># \u8fdb\u5165src\u76ee\u5f55\ncd  src\n# \u751f\u6210\u52a8\u6001\u94fe\u5e93\u6587\u4ef6libswap.so\ng++ swap.cpp -I../include -fPIC -shared -o libswap.so\n# \u4e0a\u9762\u7684\u6307\u4ee4\u7b49\u4ef7\u4e8e\u4e0b\u9762\u4e24\u6761\u6307\u4ee4\n# gcc swap -I../include -c -fPIC\n# gcc -shared -o libswap.so swap.o\n\n# \u56de\u5230\u4e0a\u7ea7\u76ee\u5f55\ncd ..\n# \u94fe\u63a5\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 dyna_main\ng++ main.cpp -Iinclude -lswap -Lsrc -o dyna_main\n</code></pre>"},{"location":"C%2B%2B/vscode/02-compile/#233","title":"2.3.3. \u9759\u6001\u5e93\u548c\u52a8\u6001\u5e93\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u533a\u522b","text":"<ul> <li>\u9759\u6001\u5e93\u5728\u6253\u5305\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5c06\u9759\u6001\u5e93\u5305\u542b\u8fdb\u6765</li> <li>\u52a8\u6001\u5e93\u5219\u5728\u6253\u5305\u65f6\u4e0d\u6253\u5305\u5e93\u6587\u4ef6\uff0c\u800c\u5728\u8fd0\u884c\u65f6\u518d\u628a\u52a8\u6001\u5e93\u6587\u4ef6\u5f15\u8fdb\u6765</li> </ul> <p>\u6240\u4ee5\u6211\u4eec\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u9759\u6001\u5e93\u6587\u4ef6\u6253\u5305\u7684\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u3002\u800c\u7528\u52a8\u6001\u5e93\u7f16\u8bd1\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u76f4\u63a5\u8fd0\u884c\u4f1a\u62a5\u9519\uff0c\u662f\u56e0\u4e3a\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\u5728\u6211\u4eec\u7684\u4ee3\u7801\u76ee\u5f55\uff0c\u5e76\u4e0d\u5728\u7cfb\u7edf\u7684\u5e93\u641c\u7d22\u76ee\u5f55\u3002\u5982\u679c\u8981\u8fd0\u884c\u52a8\u6001\u94fe\u63a5\u5e93\u6253\u5305\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6307\u5b9a\u7a0b\u5e8f\u8fd0\u884c\u4f9d\u8d56\u7684\u5e93\u76ee\u5f55\u3002</p> <p>\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u547d\u4ee4\u5982\u4e0b\uff1a</p> <p>\u8fd0\u884c\u9759\u6001\u6253\u5305\u7684\u53ef\u6267\u884c\u6587\u4ef6</p> Bash<pre><code># \u8fd0\u884c\u9759\u6001\u6253\u5305\u7684\u53ef\u6267\u884c\u6587\u4ef6\n./static_main\n</code></pre> <p>\u8fd0\u884c\u52a8\u6001\u94fe\u63a5\u5e93\u6253\u5305\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6</p> Bash<pre><code># \u8fd0\u884c\u52a8\u6001\u6253\u5305\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u9700\u8981\u8bbe\u7f6e LD_LIBRARY_PATH \u53d8\u91cf\uff0c\u53d8\u91cf\u503c\u662f\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\u6240\u5728\u76ee\u5f55\nLD_LIBRARY_PATH=src ./dyna_main\n</code></pre>"},{"location":"C%2B%2B/vscode/03-dbg/","title":"\u4e09 GDB\u8c03\u8bd5\u5668","text":""},{"location":"C%2B%2B/vscode/03-dbg/#1","title":"1. \u6982\u8ff0","text":"<ul> <li> <p>GDB(GNU Debugger) \u662f\u4e00\u4e2a\u7528\u6765\u8c03\u8bd5 C/C++ \u7a0b\u5e8f\u7684\u529f\u80fd\u7684\u8c03\u8bd5\u5668\uff0c\u662fLinux\u7cfb\u7edf\u5f00\u53d1C/C++\u6700\u5e38\u7528\u7684\u8c03\u8bd5\u5668</p> </li> <li> <p>\u7a0b\u5e8f\u5458\u53ef\u4ee5\u4f7f\u7528GDB\u6765\u8ddf\u8e2a\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4ece\u800c\u51cf\u5c11\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\u91cf</p> </li> <li> <p>Linux\u5f00\u53d1C/C++\u4e00\u5b9a\u8981\u719f\u6089GDB</p> </li> <li> <p>VScode\u662f\u901a\u8fc7\u8c03\u7528GDB\u8c03\u8bd5\u5668\u6765\u5b9e\u73b0\u5de5\u4f5c\u7684</p> </li> </ul> <p>Windows\u4e2d\uff0c\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u5982VS\uff0cVC\u7b49\u5df2\u7ecf\u5185\u5d4c\u4e86\u76f8\u5e94\u7684\u8c03\u8bd5\u5668</p> <p>GDB\u7684\u4e3b\u8981\u529f\u80fd\uff1a</p> <ul> <li>\u8bbe\u7f6e\u65ad\u70b9\uff08\u65ad\u70b9\u53ef\u4ee5\u662f\u6761\u4ef6\u8868\u8fbe\u5f0f\uff09</li> <li>\u4f7f\u7a0b\u5e8f\u5728\u6307\u5b9a\u7684\u4ee3\u7801\u4e0a\u6682\u505c\u6267\u884c\uff0c\u4fbf\u4e8e\u89c2\u5bdf</li> <li>\u5355\u6b65\u6267\u884c\u7a0b\u5e8f\uff0c\u4fbf\u4e8e\u8c03\u8bd5</li> <li>\u67e5\u770b\u7a0b\u5e8f\u4e2d\u53d8\u91cf\u503c\u7684\u53d8\u5316</li> <li>\u52a8\u6001\u6539\u53d8\u7a0b\u5e8f\u7684\u6267\u884c\u73af\u5883</li> <li>\u5206\u6790\u5d29\u6e83\u7a0b\u5e8f\u4ea7\u751f\u7684core\u6587\u4ef6</li> </ul>"},{"location":"C%2B%2B/vscode/03-dbg/#2","title":"2. \u5e38\u7528\u8c03\u8bd5\u547d\u4ee4\u53c2\u6570","text":"<p>\u8c03\u8bd5\u5f00\u59cb\uff1a\u6267\u884c<code>gdb [exefilename]</code>\uff0c\u8fdb\u5165gdb\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u5176\u4e2d<code>exfilename</code>\u4e3a\u8981\u8c03\u8bd5\u7684\u6267\u884c\u6587\u4ef6\u540d\uff0c\u4ee5\u4e0b\u547d\u4ee4\u540e\u62ec\u53f7\u5185\u4e3a\u547d\u4ee4\u7684\u7b80\u5316\u4f7f\u7528\uff0c\u6bd4\u5982 <code>run(r)</code>\uff0c\u76f4\u63a5\u8f93\u5165\u547d\u4ee4 <code>r</code> \u5c31\u4ee3\u8868\u547d\u4ee4 <code>run</code></p> Bash<pre><code>help(h) #\u67e5\u770b\u547d\u4ee4\u5e2e\u52a9\uff0c\u5177\u4f53\u547d\u4ee4\u67e5\u8be2\u5728gdb \u4e2d\u8f93\u5165help + \u547d\u4ee4\nrun(r) #\u91cd\u65b0\u5f00\u59cb\u8fd0\u884c\u6587\u4ef6\uff08run-text:\u52a0\u8f7d\u6587\u672c\u6587\u4ef6\uff0crun-bin:\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\nstart(s) #\u5355\u6b65\u6267\u884c\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u505c\u5728\u7b2c\u4e00\u884c\u6267\u884c\u8bed\u53e5\nlist(l) #\u67e5\u770b\u6e90\u4ee3\u7801\uff08list-n\u4ece\u7b2cn\u884c\u5f00\u59cb\u67e5\u770b\u4ee3\u7801\u3002list+\u51fd\u6570\u540d\uff1a\u67e5\u770b\u5177\u4f53\u51fd\u6570\uff09\nset #\u8bbe\u7f6e\u53d8\u91cf\u7684\u503c\nnext(n) #\u5355\u6b65\u8c03\u8bd5\uff08\u9010\u8fc7\u7a0b\uff0c\u51fd\u6570\u76f4\u63a5\u6267\u884c\uff09\nstep(s) #\u5355\u6b65\u8c03\u8bd5\uff08\u9010\u8bed\u53e5\uff0c\u8df3\u5165\u81ea\u5b9a\u4e49\u51fd\u6570\u5185\u90e8\u6267\u884c\uff09\nbacktrace(bt) #\u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u6808\u5e27\u548c\u5c42\u7ea7\u5173\u7cfb\nframe(f) #\u5207\u6362\u51fd\u6570\u7684\u6808\u5e27\ninfo(i) #\u67e5\u770b\u51fd\u6570\u5185\u90e8\u5c40\u90e8\u53d8\u91cf\u7684\u6570\u503c\nfinish #\u7ed3\u675f\u5f53\u524d\u51fd\u6570\uff0c\u8fd4\u56de\u5230\u51fd\u6570\u8c03\u7528\u70b9\ncontinue(c) #\u7ee7\u7eed\u6267\u884c\nprint(p) #\u6253\u5370\u503c\u53ca\u5730\u5740\nquit(q) #\u9000\u51fagdb\nbreak + num(b) #\u5728\u67d0\u884c\u8fbe\u65ad\u70b9\ninfo + breakpoints #\u67e5\u770b\u5f53\u524d\u8bbe\u7f6e\u7684\u6240\u6709\u65ad\u70b9\ndelete + breakpoints num(d) #\u5220\u9664\u7b2cnum\u4e2a\u65ad\u70b9\ndisplay #\u8ddf\u8e2a\u67e5\u770b\u5177\u4f53\u7684\u53d8\u91cf\u503c\nundisplay #\u53d6\u6d88\u8ddf\u8e2a\u89c2\u5bdf\u53d8\u91cf\nwatch #\u88ab\u8bbe\u7f6e\u89c2\u5bdf\u70b9\u7684\u53d8\u91cf\u53d1\u751f\u4fee\u6539\u65f6\uff0c\u6253\u5370\u663e\u793a\ni watch #\u663e\u793a\u89c2\u5bdf\u70b9\nenable breakpoints #\u542f\u7528\u65ad\u70b9\ndisable breakpoints #\u7981\u7528\u65ad\u70b9\nx #\u67e5\u770b\u5185\u5b58x/20xw \u663e\u793a20\u4e2a\u5355\u5143\uff0c16\u8fdb\u5236\uff0c4\u4e2a\u5b57\u8282\u6ca1\u5355\u5143\nrun argv[1] argv[2] #\u8c03\u8bd5\u547d\u4ee4\u4f20\u53c2\nset follow-fork-mode child #Makefile\u9879\u76ee\u7ba1\u7406\uff0c\u9009\u62e9\u8ddf\u8e2a\u7236\u5b50\u8fdb\u7a0b\uff08fork\uff09\n</code></pre> <ol> <li>\u7f16\u8bd1\u6e90\u4ee3\u7801\u65f6\u9700\u8981\u52a0\u4e0a <code>-g</code> \uff0c\u4ea7\u751f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u624d\u80fd\u7528 <code>gdb</code> \u8fdb\u884c\u8c03\u8bd5\uff0c\u4f8b\u5982\uff1a<code>gcc -g main.cpp -o main</code></li> <li>\u56de\u8f66\u952e\uff1a\u91cd\u590d\u4e0a\u4e00\u6761\u547d\u4ee4</li> </ol>"},{"location":"C%2B%2B/vscode/04-debug/","title":"\u56db Linux C++\u547d\u4ee4\u884c\u8c03\u8bd5","text":""},{"location":"C%2B%2B/vscode/04-debug/#1","title":"1. \u51c6\u5907\u4ee3\u7801","text":"<p>\u521b\u5efa\u4e00\u4e2aC++\u6e90\u4ee3\u7801\u6587\u4ef6 <code>src/04_debug/sum.cpp</code>\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801</p> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n    int N = 100;\n    int sum = 0;\n    int i = 1;\n\n    while(i &lt;= N){\n        sum = sum + i;\n        i = i + 1;\n    }\n\n    cout &lt;&lt; \"sum = \" &lt;&lt; sum &lt;&lt;endl;\n    cout &lt;&lt; \"The program is over \" &lt;&lt;endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/04-debug/#2","title":"2. \u8fdb\u5165\u8c03\u8bd5\u6a21\u5f0f","text":"<p>\u5728\u8fdb\u5165\u8c03\u8bd5\u6a21\u5f0f\u4e4b\u524d\uff0c\u5148\u7f16\u8bd1\u6e90\u4ee3\u7801\uff0c\u5982\u4e0b\u8fc7\u7a0b\u3002</p> <p>\u666e\u901a\u7f16\u8bd1\u65b9\u5f0f</p> Bash<pre><code>g++ sum.cpp -o no_g.out\n</code></pre> <p>\u7f16\u8bd1\u51fa\u7528\u4e8e\u8c03\u8bd5\u7684\u53ef\u6267\u884c\u6587\u4ef6</p> Bash<pre><code>g++ -g sum.cpp -o yes_g.out\n</code></pre> <p>\u4f7f\u7528<code>gdb</code>\u547d\u4ee4\u8fdb\u884c\u8c03\u8bd5\uff0c\u5982\u679c\u6211\u4eec\u8c03\u8bd5 <code>no_g.out</code> \uff0c\u5c06\u4f1a\u63d0\u793a\u4e00\u4e0b\u56fe\u9519\u8bef</p> <p></p> <p>\u56e0\u4e3a<code>no_g.out</code>\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e0d\u5305\u542b\u7528\u4e8e\u8c03\u8bd5\u7684\u4fe1\u606f\uff0c\u8f93\u5165<code>quit</code>\u518d\u6309\u56de\u8f66\u5373\u53ef\uff0c\u901a\u8fc7<code>gdb yes_g.out</code>\u6307\u4ee4\u6267\u884c\u5305\u542b\u8c03\u8bd5\u4fe1\u606f\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa</p> <p></p> <p>\u6b64\u65f6\u53ef\u4ee5\u6b63\u5e38\u8fdb\u5165\u8c03\u8bd5</p>"},{"location":"C%2B%2B/vscode/04-debug/#3","title":"3. \u8c03\u8bd5\u8fc7\u7a0b","text":"<p>\u76f4\u63a5\u6267\u884c</p> Bash<pre><code>run\n</code></pre> <p>\u6216\u8005\u4f7f\u7528\u7b80\u5199<code>r</code>\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u56fe</p> <p></p> <p>\u5728\u7b2c11\u884c\u6253\u65ad\u70b9</p> Bash<pre><code>break 11\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u56fe</p> <p></p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7b80\u5199\u7684\u65b9\u5f0f\uff0c\u5728\u7b2c12\u884c\u6253\u65ad\u70b9</p> Bash<pre><code>b 12\n</code></pre> <p>\u7ed3\u679c\u5982\u4e0b\u56fe</p> <p></p> <p>\u4f7f\u7528<code>info break</code>\u6307\u4ee4\u6216\u8005\u6307\u4ee4\u7b80\u5199<code>i b</code>\u67e5\u770b\u5f53\u524d\u7684\u65ad\u70b9\uff0c\u5982\u4e0b\u56fe\u7ed3\u679c</p> <p></p> <p>\u4f7f\u7528<code>run</code>\u6307\u4ee4\u6216\u8005<code>r</code>\u6307\u4ee4\u6267\u884c\u7a0b\u5e8f\uff0c\u6b64\u65f6\u547d\u4e2d\u4e86\u7b2c11\u884c\u65ad\u70b9\uff0c\u5982\u4e0b\u56fe\u5185\u5bb9</p> <p></p> <p>\u6b64\u65f6\u53ef\u4ee5\u67e5\u770b\u53d8\u91cf\u7684\u503c\uff0c\u5982\u67e5\u770bi\u7684\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>print i</code>\u6216\u8005<code>p i</code>\u6307\u4ee4\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u4f7f\u7528<code>p N</code> \u67e5\u770bN\u7684\u503c\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u6b64\u65f6\u7a0b\u5e8f\u6267\u884c\u5230\u7b2c11\u884c\u5904\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u7ee7\u7eed\u6267\u884c\uff0c\u8f93\u5165<code>continue</code>\u6307\u4ee4\u5e76\u6309\u56de\u8f66\u5373\u53ef\uff0c\u7a0b\u5e8f\u5c06\u6267\u884c\u5230\u4ee3\u7801\u7684\u7b2c12\u884c\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u56e0\u4e3a\u6211\u4eec\u662f\u5728<code>while</code>\u5faa\u73af\u4f53\u5185\uff0c<code>i</code>\u7684\u503c\u5c06\u4e0d\u65ad\u53d8\u5316\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u8ddf\u4e2d<code>i</code>\u503c\u7684\u53d8\u5316\uff0c\u9700\u8981\u8f93\u5165<code>display i</code>\u6307\u4ee4\u5373\u53ef\uff0c\u518d\u8f93\u5165<code>continue</code>\u6307\u4ee4\u8ba9\u7a0b\u5e8f\u5355\u6b65\u6267\u884c\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u901a\u8fc7\u5faa\u73af\uff0c\u53c8\u56de\u5230\u4e86\u7b2c\u4e00\u4e2a\u65ad\u70b9\uff0c\u6b64\u65f6<code>i</code>\u7684\u503c\u5df2\u7ecf\u53d8\u6210\u4e862\u3002\u5728gdb\u8c03\u8bd5\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u53ea\u6309\u56de\u8f66\u952e\uff0cgdb\u5c06\u6267\u884c\u6211\u4eec\u6700\u540e\u4e00\u6b21\u8f93\u5165\u7684\u6307\u4ee4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e00\u76f4\u6309\u56de\u8f66\u952e\u7ee7\u7eed\u8ba9\u7a0b\u5e8f\u5355\u6b65\u6267\u884c\u3002</p> <p>\u5f53\u65ad\u70b9\u6267\u884c\u90fd\u67d0\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u60f3\u8981\u67e5\u770b\u65ad\u70b9\u9644\u8fd1\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u6267\u884c<code>list</code>\u6307\u4ee4\u8fdb\u884c\u67e5\u770b\uff0c\u5982\u4e0b\u56fe</p> <p></p>"},{"location":"C%2B%2B/vscode/05-cmake/","title":"\u4e94 CMake\u7684\u8bed\u6cd5\u7279\u6027\u4e0e\u5e38\u7528\u53d8\u91cf","text":""},{"location":"C%2B%2B/vscode/05-cmake/#1","title":"1. \u6982\u8ff0","text":"<ul> <li> <p>Cmake (Cross Platform Make) \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u7f16\u8bd1\u5de5\u5177\uff0c\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u8bed\u53e5\u6765\u63cf\u8ff0\u8de8\u5e73\u53f0\u7684\u7f16\u8bd1\u8fc7\u7a0b</p> </li> <li> <p>CMake\u5df2\u7ecf\u6210\u4e3a\u4e86\u5927\u90e8\u5206C++\u5f00\u6e90\u9879\u76ee\u7684\u9996\u8981\u7f16\u8bd1\u5de5\u5177</p> </li> </ul> <p>\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u8bd1\u5de5\u5177\uff0c\u6bd4\u5982 windows \u4e2d\u4f7f\u7528 Visual Studio \u7684\u5f00\u53d1\u5957\u4ef6\uff0c mac \u4e2d\u4f7f\u7528 xcode \u5f00\u53d1\u5957\u4ef6\uff0cLinux \u4e2d\u4f7f\u7528 Makefile \u7ed3\u5408 g++ \u7f16\u8bd1\uff0c\u90a3\u5982\u679c\u6211\u4eec\u4f7f\u7528 cmake \u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\u8de8\u5e73\u53f0\u7684\u95ee\u9898\u3002</p>"},{"location":"C%2B%2B/vscode/05-cmake/#2-cmake","title":"2. cmake \u57fa\u7840\u77e5\u8bc6","text":""},{"location":"C%2B%2B/vscode/05-cmake/#21-cmake","title":"2.1. cmake \u7684\u57fa\u672c\u8bed\u6cd5\u7279\u6027","text":"Bash<pre><code>\u6307\u4ee4\u540d\u79f0(\u53c2\u65701 \u53c2\u65702)\n</code></pre> <p>\u53c2\u6570\u4f7f\u7528\u5c0f\u62ec\u53f7\u5305\u88f9\u8d77\u6765\uff0c\u53c2\u6570\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u6216\u8005\u5206\u53f7\u9694\u5f00\u3002cmake\u7684\u6307\u4ee4\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u4f46\u662f\u53c2\u6570\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5982\u4e0b\u793a\u4f8b</p> C++<pre><code>set(HELLO hello.cpp)\nadd_executable(hello main.cpp hello.cpp)\nADD_EXECUTABLE(hello main.cpp ${HELLO})\n</code></pre> <p>cmake\u6307\u4ee4\u7684\u53d8\u91cf\u4f7f\u7528 <code>${\u53d8\u91cf}</code> \u7684\u5f62\u5f0f\u8bfb\u53d6\u53d8\u91cf\uff0c\u4f46\u5728 IF \u903b\u8f91\u5224\u65ad\u4e2d\uff0c\u76f4\u63a5\u8f93\u5165\u53d8\u91cf\u540d\u79f0\u5373\u53ef\uff0c\u5982\u4e0a\u9762\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684 <code>HELLO</code></p>"},{"location":"C%2B%2B/vscode/05-cmake/#22-cmake","title":"2.2. cmake\u7684\u91cd\u8981\u6307\u4ee4\u548c\u5e38\u7528\u53d8\u91cf","text":"<ul> <li><code>cmake_minimum_required</code> : \u6307\u5b9acmake\u6700\u5c0f\u7248\u672c\u8981\u6c42</li> </ul> Bash<pre><code># \u6307\u5b9acmake\u6700\u5c0f\u7248\u672c\u8981\u6c42\u4e3a 2.8.3\ncmake_minimum_required(VERSION 2.8.3)\n</code></pre> <ul> <li><code>project</code> : \u5b9a\u4e49\u5de5\u7a0b\u540d\u79f0\uff0c\u5e76\u53ef\u4ee5\u6307\u5b9a\u5de5\u7a0b\u53ef\u652f\u6301\u7684\u8bed\u8a00\uff0c\u8bed\u6cd5\u683c\u5f0f\u4e3a <code>project(\u9879\u76ee\u57df\u540d \u8bed\u8a00)</code>\uff0c\u5982\u4e0b\u793a\u4f8b</li> </ul> Bash<pre><code># \u6307\u5b9a\u5de5\u7a0b\u7684\u540d\u79f0\u4e3aHELLO\nproject(HELLO)\n</code></pre> <ul> <li><code>set</code> : \u663e\u793a\u5b9a\u4e49\u53d8\u91cf</li> </ul> Bash<pre><code># \u5b9a\u4e49SRC \u53d8\u91cf\u503c\u4e3a\uff1a hello.cpp main.cpp\nset(SRC hello.cpp main.cpp)\n</code></pre> <ul> <li><code>include_directories</code> : \u5411\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u591a\u4e2a\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u76f8\u5f53\u4e8e\u6307\u5b9a <code>g++</code> \u7684 <code>-I</code> \u53c2\u6570</li> </ul> Bash<pre><code># \u5c06 /usr/include \u548c ./include \u8def\u5f84\u6dfb\u52a0\u5230\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\u4e2d\ninclude_directories(/usr/include ./include)\n</code></pre> <ul> <li><code>link_directories</code> : \u5411\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u591a\u4e2a\u5e93\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u76f8\u5f53\u4e8e <code>g++</code> \u7684 <code>-L</code> \u53c2\u6570</li> </ul> Bash<pre><code># \u5c06 /usr/lib \u548c ./lib \u8def\u5f84\u6dfb\u52a0\u5230\u5e93\u6587\u4ef6\u641c\u7d22\u8def\u5f84\u4e2d\nlink_directories(/usr/lib ./lib)\n</code></pre> <ul> <li><code>add_library</code> : \u751f\u6210\u5e93\u6587\u4ef6</li> </ul> Bash<pre><code># \u901a\u8fc7\u53d8\u91cfSRC\u751f\u6210hello.so \u5171\u4eab\u5e93\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u586b SHARED \u6216 STATIC \u6216 MOUDLE\nadd_library(hello SHARED ${SRC})\n</code></pre> <ul> <li><code>add_compile_options</code> : \u6dfb\u52a0\u7f16\u8bd1\u53c2\u6570</li> </ul> Bash<pre><code># \u6dfb\u52a0\u7f16\u8bd1\u53c2\u6570 -Wall -std=c++11 \u4ee5\u53ca -o2\nadd_compile_options(-Wall -std=c++11 -o2)\n</code></pre> <ul> <li><code>add_excutable</code> : \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6</li> </ul> Bash<pre><code># \u7f16\u8bd1 main.cpp \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 main\nadd_excutable(main main.cpp)\n</code></pre> <ul> <li><code>target_link_libraries</code> : \u4e3a\u76ee\u6807\u53ef\u6267\u884c\u6587\u4ef6\u6dfb\u52a0\u9700\u8981\u7684\u5171\u4eab\u5e93</li> </ul> Bash<pre><code># \u5c06hello\u52a8\u6001\u5e93\u6587\u4ef6\u94fe\u63a5\u5230\u53ef\u6267\u884c\u6587\u4ef6main\ntarget_link_libraries(main hello)\n</code></pre> <ul> <li><code>add_subdirectory</code> : \u5411\u5f53\u524d\u5de5\u7a0b\u6dfb\u52a0\u5b58\u653e\u6e90\u6587\u4ef6\u7684\u5b50\u76ee\u5f55\uff0c\u5e76\u53ef\u4ee5\u6307\u5b9a\u4e2d\u95f4\u4e8c\u8fdb\u5236\u548c\u76ee\u6807\u4e8c\u8fdb\u5236\u5b58\u653e\u7684\u4f4d\u7f6e</li> </ul> Bash<pre><code># \u6dfb\u52a0src\u5b50\u76ee\u5f55\uff0csrc\u4e2d\u9700\u8981\u6709\u4e00\u4e2a CMakeLists.txt\nadd_subdirectory(src)\n</code></pre> <ul> <li><code>aux_source_directory</code> : \u53d1\u73b0\u4e00\u4e2a\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u5e76\u5c06\u5217\u8868\u5b58\u50a8\u5728\u4e00\u4e2a\u53d8\u91cf\u4e2d\uff0c\u8fd9\u4e2a\u6307\u4ee4\u4e34\u65f6\u88ab\u7528\u6765\u81ea\u52a8\u6784\u5efa\u6e90\u6587\u4ef6\u5217\u8868\u3002</li> </ul> Bash<pre><code># \u5b9a\u4e49 SRC \u53d8\u91cf\uff0c\u5176\u503c\u4e3a\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\naux_source_directory(. SRC)\n# \u7f16\u8bd1SRC \u53d8\u91cf\u4e0b\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u751f\u6210 mian \u53ef\u6267\u884c\u6587\u4ef6\nadd_excutable(main ${SRC)\n</code></pre>"},{"location":"C%2B%2B/vscode/05-cmake/#23-cmake","title":"2.3. Cmake \u5e38\u7528\u53d8\u91cf","text":"<ul> <li><code>CMAKE_FLAGS</code> : gcc \u7f16\u8bd1\u9009\u9879</li> <li><code>CMAKE_CXX_FLAGS</code> : g++ \u7f16\u8bd1\u9009\u9879</li> </ul> Bash<pre><code># \u5728 CMAKE_CXX_FLAGS \u7f16\u8bd1\u9009\u9879\u540e\u8ffd\u52a0 -std=c++11\nset(CMAKE_CXX_FLAGS \"{CMAKE_CXX_FLAGS} -std=c++11\")\n</code></pre> <ul> <li><code>CMAKE_BUILD_TYPE</code> : \u7f16\u8bd1\u7c7b\u578b(Debug\uff0cRelease)</li> </ul> Bash<pre><code># \u8bbe\u5b9a\u7f16\u8bd1\u7c7b\u578b\u4e3a debug \uff0c\u8c03\u8bd5\u65f6\u9700\u8981\u9009\u62e9 debug \nset(CMAKE_BUILD_TYPE Debug)\n# \u8bbe\u5b9a\u7f16\u8bd1\u7c7b\u578b\u4e3arelease\uff0c\u53d1\u5e03\u65f6\u9700\u8981\u9009\u62e9 release\nset(CMAKE_BUILD_TYPE Release)\n</code></pre> <ul> <li> <p><code>CMAKE_BINARY_DIR</code>\u3001<code>PROJECT_BINARY_DIR</code>\u3001<code>&lt;projectname&gt;_BINARY_DIR</code></p> </li> <li> <p>\u8fd9\u4e09\u4e2a\u53d8\u91cf\u6307\u4ee3\u7684\u5185\u5bb9\u662f\u4e00\u81f4\u7684</p> </li> <li>\u5982\u679c\u662f in binary build \uff0c\u6307\u7684\u5c31\u662f\u5de5\u7a0b\u9876\u7ea7\u76ee\u5f55</li> <li>\u5982\u679c\u662f out-of-binary \u7f16\u8bd1\uff0c\u6307\u7684\u662f\u5de5\u7a0b\u7f16\u8bd1\u53d1\u751f\u7684\u76ee\u5f55</li> <li> <p>PROJECT_BINARY_DIR \u8ddf\u5176\u4ed6\u6307\u4ee4\u7a0d\u6709\u533a\u522b\uff0c\u4f46\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4ed6\u4eec\u662f\u4e00\u81f4\u7684</p> </li> <li> <p><code>CMAKE_SOURCE_DIR</code>\u3001<code>PROJECT_SOURCE_DIR</code>\u3001<code>&lt;projectname&gt;_SOURCE_DIR</code></p> </li> <li> <p>\u8fd9\u4e09\u4e2a\u53d8\u91cf\u6307\u4ee3\u7684\u5185\u5bb9\u662f\u4e00\u81f4\u7684\uff0c\u4e0d\u8bba\u91c7\u7528\u4f55\u79cd\u7f16\u8bd1\u65b9\u5f0f\uff0c\u90fd\u662f\u5de5\u7a0b\u7ecf\u5c42\u76ee\u5f55</p> </li> <li>\u5982\u679c\u662f in source build \uff0c\u8ddf CMAKE_BINARY_DIR \u53d8\u91cf\u4e00\u81f4</li> <li> <p>PROJECT_SOURCE_DIR \u8ddf\u5176\u4ed6\u6307\u4ee4\u7a0d\u6709\u533a\u522b\uff0c\u4f46\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4ed6\u4eec\u662f\u4e00\u81f4\u7684</p> </li> <li> <p><code>CMAKE_C_COMPILE</code> : \u6307\u5b9aC\u7f16\u8bd1\u5668</p> </li> <li> <p><code>CMAKE_CXX_COMPILE</code> : \u6307\u5b9aC++\u7f16\u8bd1\u5668</p> </li> <li> <p><code>EXECUTABLE_OUT_PATH</code> : \u53ef\u6267\u884c\u6587\u4ef6\u8f93\u51fa\u7684\u5b58\u653e\u8def\u5f84</p> </li> <li> <p><code>LIBRARY_OUTOUT_PATH</code> : \u5e93\u6587\u4ef6\u8f93\u51fa\u7684\u5b58\u653e\u8def\u5f84</p> </li> </ul>"},{"location":"C%2B%2B/vscode/06-cmake-compile-step/","title":"\u516d CMake\u7f16\u8bd1\u6d41\u7a0b","text":""},{"location":"C%2B%2B/vscode/06-cmake-compile-step/#1","title":"1. \u6982\u8ff0","text":"<p>CMake\u9879\u76ee\u7684\u4e3b\u8981\u76ee\u5f55\u5b58\u5728\u4e00\u4e2a <code>CMakeLists.txt</code> \u6587\u4ef6</p> <p>\u6211\u4eec\u6709\u4e24\u79cd\u5f53\u65f6\u8bbe\u7f6e\u7f16\u8bd1\u89c4\u5219</p> <ul> <li>\u5305\u542b\u6e90\u6587\u4ef6\u7684\u5b50\u6587\u4ef6\u5939\u5305\u542b <code>CMakeLists.txt</code> \u6587\u4ef6\uff0c\u4e3b\u76ee\u5f55\u7684 <code>CMakeLists.txt</code> \u901a\u8fc7 <code>add_subdirectory</code> \u6dfb\u52a0\u5b50\u76ee\u5f55\u5373\u53ef</li> <li>\u5305\u542b\u6e90\u6587\u4ef6\u7684\u5b50\u6587\u4ef6\u5939\u672a\u5305\u542b <code>CMakeLists.txt</code> \u6587\u4ef6\uff0c\u5b50\u76ee\u5f55\u7f16\u8bd1\u89c4\u5219\u4f53\u73b0\u5728\u4e3b\u76ee\u5f55\u7684 <code>CMakeLists.txt</code> \u6587\u4ef6</li> </ul>"},{"location":"C%2B%2B/vscode/06-cmake-compile-step/#2","title":"2. \u7f16\u8bd1\u6d41\u7a0b","text":"<p>\u5728 Linux \u5e73\u53f0\u4e0b\u4f7f\u7528 CMake \u6784\u5efa C/C++ \u5de5\u7a0b\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u7f16\u5199 <code>CMakeLists.txt</code> \u89c4\u5219</li> <li>\u6267\u884c <code>cmake $PATH</code> \u751f\u6210 <code>Makefile</code>(PATH \u662fCMakeLists.txt \u6240\u5728\u7684\u9876\u5c42\u76ee\u5f55)</li> <li>\u6267\u884c <code>make</code> \u8fdb\u884c\u7f16\u8bd1</li> </ul>"},{"location":"C%2B%2B/vscode/06-cmake-compile-step/#3-cmake","title":"3. CMake\u7684\u4e24\u79cd\u6784\u5efa\u65b9\u5f0f","text":""},{"location":"C%2B%2B/vscode/06-cmake-compile-step/#31-in-source-build","title":"3.1. \u5185\u90e8\u6784\u5efa (in-source build) : \u4e0d\u63a8\u8350\u4f7f\u7528","text":"<p>\u5185\u90e8\u6784\u5efa\u4f1a\u4ea7\u751f\u5f88\u591a\u4e2d\u95f4\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5e76\u4e0d\u662f\u6211\u4eec\u6700\u7ec8\u60f3\u8981\u7684\uff0c\u548c\u5de5\u7a0b\u6e90\u4ee3\u7801\u6587\u4ef6\u653e\u5728\u4e00\u8d77\u4f1a\u663e\u5f97\u6742\u4e71\u65e0\u7ae0\u3002</p> <p>\u5185\u90e8\u6784\u5efa\u793a\u4f8b</p> Bash<pre><code># \u5728\u9879\u76ee\u6e90\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528  cmake \u6307\u4ee4\u89e3\u6790 CMakeLists.txt \uff0c\u751f\u6210 Makefile \u548c\u5176\u4ed6\u6587\u4ef6\ncmake .\n# \u6267\u884c make \u547d\u4ee4\uff0c\u751f\u6210 target\nmake\n</code></pre>"},{"location":"C%2B%2B/vscode/06-cmake-compile-step/#32-out-of-source-build","title":"3.2. \u5916\u90e8\u6784\u5efa (out-of-source build) :   \u63a8\u8350\u4f7f\u7528","text":"<p>\u5c06\u7f16\u8bd1\u7684\u76ee\u5f55\u548c\u6e90\u4ee3\u7801\u76ee\u5f55\u533a\u5206\u5f00\u6765\uff0c\u653e\u5728\u4e0d\u540c\u76ee\u5f55\u4e2d</p> <p>\u5916\u90e8\u7f16\u8bd1\u793a\u4f8b</p> Bash<pre><code># 1. \u5728\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa build \u6587\u4ef6\u5939\nmkdir build\n# 2. \u8fdb\u5165build\u76ee\u5f55\ncd build\n# 3. \u89e3\u6790\u4e0a\u7ea7\u76ee\u5f55\u7684 CMakeLists.txt \uff0c\u751f\u6210 Makefile \u548c\u5176\u4ed6\u6587\u4ef6\ncmake ..\n# 4. \u6267\u884c make \uff0c\u751f\u6210 target\nmake\n</code></pre>"},{"location":"C%2B%2B/vscode/07-cmake-compile/","title":"\u4e03 CMake\u9879\u76ee\u7f16\u8bd1\u5b9e\u6218","text":""},{"location":"C%2B%2B/vscode/07-cmake-compile/#1","title":"1. \u51c6\u5907\u6e90\u4ee3\u7801","text":"<p>\u6211\u4eec\u51c6\u5907\u4e24\u4efd\u6e90\u4ee3\u7801\uff0c\u4e00\u662f\u6700\u7b80\u5355\u7684 <code>helleworld</code> \u7a0b\u5e8f\uff0c\u4e8c\u662f\u5305\u542b\u591a\u6587\u4ef6\u7684\u4e00\u4e2a\u7b80\u5355\u9879\u76ee</p>"},{"location":"C%2B%2B/vscode/07-cmake-compile/#11-helloworld","title":"1.1. \u51c6\u5907 <code>helloworld</code> \u7a0b\u5e8f","text":"<p>\u6211\u4eec\u5728 <code>src/07_cmake/helloworld</code> \u4e2d\u521b\u5efa <code>helloworld.cpp</code> \u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9</p> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n    cout &lt;&lt; \"hello world !\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/07-cmake-compile/#12","title":"1.2. \u51c6\u5907\u4e00\u4e2a\u591a\u6587\u4ef6\u9879\u76ee","text":"<p>\u5728\u672c\u7cfb\u5217\u7684\u7b2c2\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 C++ \u9879\u76ee\uff0c\u6211\u4eec\u73b0\u5728\u76f4\u63a5\u628a\u6e90\u4ee3\u7801\u62f7\u8d1d\u4e00\u4efd\u5230 <code>src/07_cmake/project</code> \u76ee\u5f55\u4e2d\uff0c\u4ee3\u7801\u7ed3\u6784\u5982\u4e0b\u5982\u6240\u793a</p> <p></p> <p>\u4ee3\u7801\u7ec6\u8282\u5982\u4e0b</p> <p><code>include/swap.h</code> \u6587\u4ef6</p> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n</code></pre> <p><code>src/swap.cpp</code> \u6587\u4ef6</p> C++<pre><code>#include \"swap.h\"\n\nvoid swap(int &amp;a, int &amp;b)\n{\n    int temp;\n    temp = a;\n    a = b;\n    b = temp;\n}\n</code></pre> <p><code>main.cpp</code> \u6587\u4ef6</p> C++<pre><code>#include &lt;iostream&gt;\n#include \"swap.h\"\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n    int val1 = 10;\n    int val2 = 20;\n\n    cout &lt;&lt; \" Before swap:\" &lt;&lt; endl;\n    cout &lt;&lt; \" val1:\" &lt;&lt; val1 &lt;&lt; endl;\n    cout &lt;&lt; \" val2:\" &lt;&lt; val2 &lt;&lt; endl;\n\n    swap(val1, val2);\n\n    cout &lt;&lt; \" After swap:\" &lt;&lt; endl;\n    cout &lt;&lt; \" val1:\" &lt;&lt; val1 &lt;&lt; endl;\n    cout &lt;&lt; \" val2:\" &lt;&lt; val2 &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/07-cmake-compile/#2","title":"2. \u7f16\u8bd1\u8fc7\u7a0b","text":""},{"location":"C%2B%2B/vscode/07-cmake-compile/#21-helloworld","title":"2.1. \u7f16\u8bd1 <code>helloworld</code> \u7a0b\u5e8f","text":"<ul> <li>\u5185\u90e8\u6784\u5efa</li> </ul> <p>\u5148\u6267\u884c <code>cd src/07_cmake/helloworld</code> \u547d\u4ee4\u8fdb\u5165\u6211\u4eec\u7684\u9879\u76ee\u76ee\u5f55\uff0c\u521b\u5efa cmake \u914d\u7f6e\u6587\u4ef6 <code>CMakeLists.txt</code>\uff0c\u5b9a\u4e49\u7f16\u8bd1\u53c2\u6570\u5982\u4e0b\u5185\u5bb9</p> Bash<pre><code># \u6307\u5b9acmake\u6700\u4f4e\u7248\u672c\ncmake_minimum_required(VERSION 3.0)\n# \u6307\u5b9a\u9879\u76ee\u540d\u79f0\u4e3a HELLOWORLD\nproject(HELLOWORLD)\n# \u7f16\u8bd1\u6e90\u4ee3\u7801\u6587\u4ef6 helloword.cpp\uff0c\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 helloworld_cmake.out\nadd_executable(helloworld_cmake.out helloworld.cpp)\n</code></pre> <p>\u5728\u5f53\u524d\u76ee\u5f55\u4f7f\u7528 <code>cmake .</code> \u6307\u4ee4\u53bb\u89e3\u6790 <code>CMakeLists.txt</code>\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u56fe\u7684\u63d0\u793a\u8fc7\u7a0b</p> <p></p> <p>\u6307\u4ee4\u6267\u884c\u7ed3\u675f\u540e\uff0c\u4ea7\u751f\u5f88\u591a\u4e34\u65f6\u6587\u4ef6\u7684\u540c\u65f6\uff0c\u5e76\u4ea7\u751f\u4e86 <code>Makefile</code> \u6587\u4ef6\u3002\u5b9e\u9645\u4e0a\uff0c<code>cmake</code> \u7684\u4f5c\u7528\u5c31\u662f\u7b80\u5316\u751f\u6210 <code>Makefile</code> \u7684\u8fc7\u7a0b\uff0c\u6709\u4e86 <code>Makefile</code>\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>make</code> \u6307\u4ee4\u6267\u884c\u7f16\u8bd1\u4e86\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u6307\u4ee4\u6267\u884c\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6 <code>helloworld_cmake.out</code></p> <ul> <li>\u5916\u90e8\u6784\u5efa</li> </ul> <p>\u4f7f\u7528\u5185\u90e8\u6784\u5efa\u7684\u65b9\u5f0f\u5728\u6e90\u7801\u76ee\u5f55\u4e0b\u4ea7\u751f\u4e86\u5f88\u591a\u65e0\u7528\u7684\u4e34\u65f6\u6587\u4ef6\uff0c\u4f7f\u5f97\u6211\u4eec\u7684\u6e90\u7801\u76ee\u5f55\u6742\u4e71\u65e0\u7ae0\uff0c\u66f4\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u4f7f\u7528\u5916\u90e8\u6784\u5efa\u3002\u4e0b\u9762\u6211\u4eec\u4f7f\u7528\u5916\u90e8\u5efa\u6784\u7684\u65b9\u5f0f \u7f16\u8bd1\u6e90\u4ee3\u7801\uff0c\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u6b65\u9aa4</p> <p>\u5728\u4e0a\u9762\u7684\u5185\u90e8\u6784\u5efa\u4e2d\uff0c\u4ea7\u751f\u4e86\u5f88\u591a\u4e34\u65f6\u6587\u4ef6\uff0c\u6211\u4eec\u73b0\u5728\u6e90\u7801\u76ee\u5f55\u4e2d\u53ea\u9700\u8981\u4fdd\u7559 <code>helloworld.cpp</code> \u548c <code>CMakeLists.txt</code> \u6587\u4ef6\uff0c\u5220\u9664\u6389\u5176\u4ed6\u6587\u4ef6\u3002\u518d\u521b\u5efa <code>build</code>\u76ee\u5f55\uff0c\u5982\u4e0b\u6307\u4ee4</p> Bash<pre><code># \u65b0\u5efabuild\u76ee\u5f55\nmkdir build\n# \u8fdb\u5165build\u76ee\u5f55\ncd build\n</code></pre> <p>\u73b0\u5728\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u5982\u6240\u793a</p> <p></p> <p>\u6211\u4eec\u5728 <code>build</code> \u76ee\u5f55\u4e2d\u8fdb\u884c\u7f16\u8bd1\uff0c\u800c\u6e90\u4ee3\u7801\u5728\u4e0a\u4e00\u7ea7\u76ee\u5f55\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 <code>..</code> \u6307\u5411\u4e0a\u7ea7\u76ee\u5f55\uff0c\u5e76\u6267\u884c <code>CMakeLists.txt</code> \u7684\u89e3\u6790\uff0c\u5982\u4e0b\u547d\u4ee4</p> Bash<pre><code>cmake ..\n</code></pre> <p>\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\u56fe\u6240\u793a</p> <p></p> <p>\u6b64\u65f6\uff0c\u6240\u6709\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u95f4\u6587\u4ef6\u90fd\u5728 <code>build</code> \u76ee\u5f55\u4e2d\uff0c\u6211\u4eec\u5728\u4f7f\u7528 <code>make</code> \u547d\u4ee4\u7f16\u8bd1\u51fa\u6700\u540e\u7684 \u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5982\u4e0b\u5982</p> <p></p> <p>\u6700\u7ec8\u4ea7\u751f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u5728 <code>build</code> \u76ee\u5f55\u4e2d\u3002</p>"},{"location":"C%2B%2B/vscode/07-cmake-compile/#22-project","title":"2.2. \u7f16\u8bd1 <code>project</code> \u9879\u76ee","text":"<p>\u5728 <code>src/07_cmake/project</code> \u76ee\u5f55\u4e0b\uff0c\u662f\u4e00\u4e2a\u5305\u542b\u591a\u6587\u4ef6\u7684\u7b80\u5355\u7684 C++ \u9879\u76ee\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4f7f\u7528 <code>cmake</code> \u5bf9\u9879\u76ee\u8fdb\u884c\u7f16\u8bd1\u3002</p> <p>\u65b0\u5efa cmake \u7684\u914d\u7f6e\u6587\u4ef6 <code>src/07_cmake/project/CMakeLists.txt</code> \uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9</p> Bash<pre><code># \u6307\u5b9a\u6700\u4f4ecmake\u7248\u672c\ncmake_minimum_required(VERSION 3.0)\n# \u6307\u5b9a\u9879\u76ee\u540d\u79f0\u4e3a SWAP \nproject(SWAP)\n# \u5f15\u5165\u5934\u6587\u4ef6\u76ee\u5f55\ninclude_directories(include)\n# \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(main_cmake.out main.cpp src/swap.cpp)\n</code></pre> <p>\u4e3a\u4e86\u66f4\u597d\u7684\u7ba1\u7406\u6e90\u4ee3\u7801\uff0c\u6211\u4eec\u4f7f\u7528\u5916\u90e8\u7f16\u8bd1\u7684\u65b9\u5f0f\u5bf9\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u5982\u4e0b\u547d\u4ee4</p> Bash<pre><code># \u521b\u5efa\u7f16\u8bd1\u4e34\u65f6\u76ee\u5f55\nmkdir build\n# \u8fdb\u5165\u7f16\u8bd1\u4e34\u65f6\u76ee\u5f55\ncd build\n# \u89e3\u6790 cmake \u914d\u7f6e\u6587\u4ef6\u751f\u6210 Makefile\ncmake ..\n# \u7f16\u8bd1 \nmake\n</code></pre> <p>\u6700\u7ec8\uff0c\u5728 <code>build</code> \u76ee\u5f55\u4e2d\u751f\u6210\u4e86\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6 <code>main_cmake.out</code>\u3002</p>"},{"location":"C%2B%2B/vscode/08-vscode-debug/","title":"\u516b VSCode\u4e2d\u8c03\u8bd5C++\u7a0b\u5e8f","text":""},{"location":"C%2B%2B/vscode/08-vscode-debug/#1","title":"1. \u6982\u8ff0","text":"<p>VSCode \u662f\u76ee\u524d\u6700\u70ed\u95e8\u7684IDE\u4e4b\u4e00\uff0c\u5728\u672c\u8282\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u600e\u6837\u5728 VSCode \u4e2d\u8fdb\u884c C++ \u7a0b\u5e8f\u7684\u8c03\u8bd5\u3002\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u9700\u8981\u901a\u8fc7 VSCode\u5b98\u7f51\u4e0b\u8f7d\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684\u6700\u65b0\u7248\u672c\uff0c\u5e76\u5b89\u88c5\u5230\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u3002</p> <p>\u8fd9\u7bc7\u6587\u7ae0\u5e76\u4e0d\u4f1a\u6d89\u53ca VSCode \u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa\u9879\u76ee\u3001\u5b89\u88c5\u63d2\u4ef6\u3001\u8bbe\u7f6e \u7b49\u7b49\u7684\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u8fd8\u4e0d\u719f\u6089 VSCode \uff0c\u5efa\u8bae\u5148\u4e86\u89e3 VSCode \u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\u3002\u4f46\u5982\u679c\u4f60\u4e4b\u524d\u6ca1\u6709\u4f7f\u7528 CSCode \u800c\u662f\u4f7f\u7528\u5176\u4ed6\u7684\u5f00\u53d1\u5de5\u5177\uff0cVSCode \u5bf9\u4f60\u6765\u8bf4\u4e0a\u624b\u4e5f\u4f1a\u5f88\u5feb\u3002 </p>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#2","title":"2. \u51c6\u5907\u6e90\u4ee3\u7801","text":"<p>\u4f7f\u7528 <code>src/08_demo</code> \u76ee\u5f55\u4f5c\u4e3a\u6e90\u7801\u76ee\u5f55\uff0c\u5e76\u6dfb\u52a0\u5982\u4e0b\u56fe\u7684\u6587\u4ef6</p> <p></p> <p>\u8be5\u7a0b\u5e8f\u6a21\u62df\u4e86\u4e00\u4e2a\u58eb\u5175\u7528\u67aa\u88c5\u5b50\u5f39\uff0c\u5e76\u8fdb\u884c\u5c04\u51fb\u7684\u7a0b\u5e8f\u3002\u76f8\u5173\u6e90\u7801\u5185\u5bb9\u4ee5\u53cacmake\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b</p>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#21-includegunh","title":"2.1. <code>include/Gun.h</code> \u6587\u4ef6","text":"C++<pre><code>#pragma once\n#include &lt;string&gt;\n\nclass Gun\n{\nprivate:\n    int _bullet_count;\n    std::string _type;\n\npublic:\n    Gun(std::string type)\n    {\n        this-&gt;_bullet_count = 0;\n        this-&gt;_type = type;\n    }\n\n    void addBullet(int bullet_num);\n    bool shoot();\n};\n</code></pre>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#22-includesoliderh","title":"2.2. <code>include/Solider.h</code> \u6587\u4ef6","text":"C++<pre><code>#pragma once\n#include &lt;string&gt;\n#include \"Gun.h\"\n\nclass Solider\n{\nprivate:\n    std::string _name;\n    Gun *_ptr_gun;\n\npublic:\n    Solider(std::string name);\n    ~Solider();\n    void addGun(Gun *ptr_gun);\n    void addBullectToGun(int num);\n    bool fire();\n};\n</code></pre>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#23-srcguncpp","title":"2.3. <code>src/Gun.cpp</code> \u6587\u4ef6","text":"C++<pre><code>#include \"Gun.h\"\n#include \"iostream\"\nusing namespace std;\n\nvoid Gun::addBullet(int bullet_num)\n{\n    this-&gt;_bullet_count += bullet_num;\n}\n\nbool Gun::shoot()\n{\n    if (this-&gt;_bullet_count &lt;= 0)\n    {\n        cout &lt;&lt; \"There is no bullet!\" &lt;&lt; endl;\n        return false;\n    }\n\n    this-&gt;_bullet_count -= 1;\n    cout &lt;&lt; \"shoot success\" &lt;&lt; endl;\n    return true;\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#24-srcsolidercpp","title":"2.4. <code>src/Solider.cpp</code> \u6587\u4ef6","text":"C++<pre><code>#include \"Solider.h\"\n\nSolider::Solider(std::string name)\n{\n    this-&gt;_name = name;\n    this-&gt;_ptr_gun = nullptr;\n}\n\nvoid Solider::addGun(Gun *ptr_gun)\n{\n    this-&gt;_ptr_gun = ptr_gun;\n}\n\nvoid Solider::addBullectToGun(int num)\n{\n    this-&gt;_ptr_gun-&gt;addBullet(num);\n}\n\nbool Solider::fire()\n{\n    return this-&gt;_ptr_gun-&gt;shoot();\n}\n\nSolider::~Solider()\n{\n    if (this-&gt;_ptr_gun == nullptr)\n    {\n        return;\n    }\n    delete this-&gt;_ptr_gun;\n    this-&gt;_ptr_gun = nullptr;\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#25-maincpp","title":"2.5. <code>main.cpp</code> \u6587\u4ef6","text":"C++<pre><code>#include \"Gun.h\"\n#include \"Solider.h\"\n\nvoid test()\n{\n    Solider sanduo(\"xusanduo\");\n    sanduo.addGun(new Gun(\"AK47\"));\n    sanduo.addBullectToGun(20);\n    sanduo.fire();\n}\n\nint main(int argc, char const *argv[])\n{\n    test();\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#26-cmakeliststxt","title":"2.6. <code>CMakeLists.txt</code> \u6587\u4ef6","text":"Text Only<pre><code># \u6307\u5b9acmake\u7248\u672c\ncmake_minimum_required(VERSION 3.0)\n# \u8bbe\u7f6e\u9879\u76ee\u540d\u79f0\nproject(SOLIDERFIRE)\n# \u6dfb\u52a0\u7f16\u8bd1\u53c2\u6570\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g -O2 -Wall\")\n# \u8bbe\u7f6e\u4ee3\u7801\u6784\u5efa\u7ea7\u522b\u4e3a Debug \u65b9\u5f0f\nset(CMAKE_BUILD_TYPE Debug)\n# \u5305\u542b\u76ee\u5f55\ninclude_directories(${CMAKE_SOURCE_DIR}/include)\n# \u7f16\u8bd1\nadd_executable(a.out main.cpp src/Gun.cpp src/Solider.cpp)\n</code></pre>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#3-vscode","title":"3. \u5b89\u88c5VSCode\u63d2\u4ef6","text":""},{"location":"C%2B%2B/vscode/08-vscode-debug/#31-cc","title":"3.1. <code>C/C++</code> \u63d2\u4ef6","text":"<p>\u8be5\u63d2\u4ef6\u652f\u6301 C/C++ \u4ee3\u7801\u7684\u63d0\u793a\u3001C++\u7a0b\u5e8f\u8c03\u8bd5 \u4ee5\u53ca C++\u6e90\u7801\u7684\u9605\u8bfb\uff0c\u662f VSCode \u7684\u5b98\u65b9\u63d2\u4ef6</p> <p>\u63d2\u4ef6\u5730\u5740: https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools</p> <p></p>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#32-cmake","title":"3.2. <code>CMake</code> \u63d2\u4ef6","text":"<p>\u8be5\u63d2\u4ef6\u652f\u6301 CMake \u914d\u7f6e\u6587\u4ef6\u7684\u9ad8\u4eae\u4ee3\u7801\u3001\u8bed\u6cd5\u63d0\u793a</p> <p>\u63d2\u4ef6\u5730\u5740: https://marketplace.visualstudio.com/items?itemName=twxs.cmake</p> <p></p>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#33-cmake-tools","title":"3.3. <code>CMake Tools</code> \u63d2\u4ef6","text":"<p>\u8be5\u63d2\u4ef6\u4e5f\u662f VSCode \u7684\u5b98\u65b9\u63d2\u4ef6\uff0c\u63d0\u4f9b CMake \u5de5\u5177\u76f8\u5173\u529f\u80fd\u7684\u652f\u6301</p> <p>\u63d2\u4ef6\u5730\u5740: https://marketplace.visualstudio.com/items?itemName=ms-vscode.cmake-tools</p> <p></p>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#4","title":"4. \u914d\u7f6e\u8c03\u8bd5","text":""},{"location":"C%2B%2B/vscode/08-vscode-debug/#41","title":"4.1. \u521b\u5efa\u8c03\u8bd5\u914d\u7f6e\u6587\u4ef6","text":"<p>\u51c6\u5907\u597d\u6e90\u4ee3\u7801\u5e76\u4e14\u5b89\u88c5\u597d\u63d2\u4ef6\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u5f00 VSCode \u7684 \u8c03\u8bd5(debug) \u83dc\u5355\u680f\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u901a\u8fc7\u70b9\u51fb\u56fe\u793a\u4e2d\u7684\u83dc\u5355\u521b\u5efa VSCode \u7684C++\u8c03\u8bd5(debug)\u914d\u7f6e\u6587\u4ef6\uff0c\u6b64\u65f6\u5728 <code>.vscode</code> \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>launch.json</code> \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u8be5\u6587\u4ef6\u5b9a\u4e49debug \u76f8\u5173\u914d\u7f6e\uff0c\u9ed8\u8ba4\u7684\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b</p> JSON<pre><code>{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"(gdb) \u542f\u52a8\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"\u8f93\u5165\u7a0b\u5e8f\u540d\u79f0\uff0c\u4f8b\u5982 ${workspaceFolder}/a.out\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${fileDirname}\",\n            \"environment\": [],\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#42","title":"4.2. \u5173\u952e\u53c2\u6570\uff1a","text":"<p><code>program</code>: \u8be5\u914d\u7f6e\u7684\u503c\u6307\u5411\u5e26\u8c03\u8bd5\u4fe1\u606f\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u3002\u6211\u4eec\u6700\u7ec8\u5c06\u7f16\u8bd1\u751f\u6210\u7684\u7a0b\u5e8f\u653e\u5728 <code>build</code> \u76ee\u5f55\u4e2d\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u586b\u5199 <code>${workspaceFolder}/build/a.out</code>\u3002</p> <p><code>preLaunchTask</code>: \u8be5\u53c2\u6570\u5b9a\u4e49\u8c03\u8bd5\u5668\u542f\u52a8\u4e4b\u524d\u7684\u6267\u884c\u4efb\u52a1\u3002\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e2d\u5e76\u4e0d\u5305\u542b\u8be5\u53c2\u6570\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6dfb\u52a0\uff0c\u7528\u4e8e\u81ea\u52a8\u7f16\u8bd1\u53d8\u66f4\u540e\u7684 C++ \u4ee3\u7801\u3002</p>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#43","title":"4.3. \u521b\u5efa\u4efb\u52a1\u6587\u4ef6","text":"<p>\u901a\u8fc7 <code>terminal</code> -&gt; <code>Configure Default Build Task</code> \u83dc\u5355\uff0c\u5e76\u9009\u62e9 <code>Create tasks.json file from template</code> -&gt; <code>Others</code> \u9009\u9879\u521b\u5efa\u4efb\u52a1\u914d\u7f6e\u6587\u4ef6\uff0c\u6587\u4ef6\u521b\u5efa\u4f4d\u7f6e\u4e3a <code>.vscode/tasks.json</code>\uff0c\u9ed8\u8ba4\u914d\u7f6e\u5185\u5bb9\u5982\u4e0b</p> JSON<pre><code>{\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"echo\",\n            \"type\": \"shell\",\n            \"command\": \"echo Hello\"\n        }\n    ]\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u5c06\u4efb\u52a1\u914d\u7f6e\u6587\u4ef6\u4fee\u6539\u4e3a\u5982\u4e0b\u5185\u5bb9</p> JSON<pre><code>{\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    \"version\": \"2.0.0\",\n    \"options\": {\n        \"cwd\": \"${workspaceFolder}/build\"\n    },\n    \"tasks\": [\n        {\n            \"type\": \"shell\",\n            \"label\": \"cmake\",\n            \"command\": \"cmake\",\n            \"args\": [\n                \"..\"\n            ]\n        },\n        {\n            \"label\": \"make\",\n            \"group\": {\n                \"kind\": \"build\",\n                \"isDefault\": true\n            },\n            \"command\": \"make\",\n            \"args\": []\n        },\n        {\n            \"label\": \"build\",\n            \"dependsOrder\": \"sequence\",\n            \"dependsOn\": [\n                \"cmake\",\n                \"make\"\n            ]\n        }\n    ],\n}\n</code></pre> <p>\u5728\u4ee5\u4e0a\u7684\u4efb\u52a1\u914d\u7f6e\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e09\u4e2a\u4efb\u52a1\u3002\u9996\u5148\u662f\u5b9a\u4e49\u4e86 <code>cmake</code> \u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5176\u6b21\u662f\u5b9a\u4e49 <code>make</code> \u7f16\u8bd1\u6307\u4ee4\uff0c\u518d\u5b9a\u4e49 <code>build</code> \u4efb\u52a1\u53bb\u5305\u542b\u9884\u7f16\u8bd1\u548c\u7f16\u8bd1\u8fd9\u4e24\u4e2a\u6b65\u9aa4\u3002\u6700\u7ec8\u4fee\u6539<code>launch.json</code> \u6587\u4ef6\u5982\u4e0b\u5185\u5bb9</p> JSON<pre><code>{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"(gdb) \u542f\u52a8\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/build/a.out\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${fileDirname}\",\n            \"environment\": [],\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ],\n            \"preLaunchTask\": \"build\"\n        }\n    ]\n}\n</code></pre> <p>\u6b64\u65f6\uff0cVSCode \u7684\u81ea\u52a8\u5316 debug \u5df2\u7ecf\u5b8c\u6210\u914d\u7f6e\uff0c\u8981\u6ce8\u610f\u7684\u662f <code>program</code> \u914d\u7f6e\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u8def\u5f84\u8981\u548c <code>CMakeLists.txt</code> \u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u7a0b\u5e8f \u8f93\u51fa\u8def\u5f84\u4e00\u81f4\u3002\u540c\u65f6\uff0c<code>preLaunchTask</code> \u914d\u7f6e\u7684\u503c\u8981\u548c <code>taks.json</code> \u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u4efb\u52a1\u6807\u8bc6\u4e00\u81f4\u3002</p>"},{"location":"C%2B%2B/vscode/08-vscode-debug/#5","title":"5. \u8c03\u8bd5\u8fc7\u7a0b","text":"<p>\u6211\u4eec\u5728\u7b2c4\u6b65\u9aa4\u914d\u7f6e\u597d\u81ea\u52a8\u5316\u7f16\u8bd1\u4e4b\u540e\uff0c\u73b0\u5728\u6211\u4eec\u5728\u7a0b\u5e8f\u6267\u884c\u7684<code>mian</code> \u51fd\u6570\u91cc\u6dfb\u52a0\u5982\u4e0b\u4e00\u884c\u4ee3\u7801\u6765\u9a8c\u8bc1\u7ed3\u679c</p> C++<pre><code>std::cout &lt;&lt; \"this is a test stating\" &lt;&lt; std::endl;\n</code></pre> <p>\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86C++\u6807\u51c6\u8f93\u51fa\u51fd\u6570\uff0c\u6240\u4ee5\u540c\u65f6\u8981\u5728\u6587\u4ef6\u5934\u90e8\u5f15\u5165 <code>iostream</code>\uff0c\u5982\u4e0b\u4ee3\u7801</p> C++<pre><code>#include \"iostream\"\n</code></pre> <p>\u540c\u65f6\u5728\u8fd9\u884c\u4ee3\u7801\u7684\u4e0b\u4e00\u884c\u6253\u4e00\u4e2a\u65ad\u70b9\uff0c\u518d\u6309\u952e\u76d8\u4e0a\u7684 <code>F5</code> \u952e\uff0c\u6b64\u65f6\u81ea\u52a8\u8fdb\u5165\u4e86\u8c03\u8bd5\u6a21\u5f0f\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u5728 VSCode \u7684\u8c03\u8bd5\u5305\u542b\u4e86 \u4ee5\u4e0b\u51e0\u4e2a\u529f\u80fd\u6309\u952e\uff1a</p> <ul> <li> <p>Continue(F5): \u6267\u884c\u5230\u65ad\u70b9\u4f1a\u505c\u6b62</p> </li> <li> <p>Step Into(F11): \u8fdb\u5165\u5b50\u51fd\u6570\uff0c\u5355\u6b65\u6267\u884c</p> </li> <li> <p>Step Out(Shift + F11): \u8d8a\u8fc7\u5b50\u51fd\u6570</p> </li> <li> <p>Step Over(F10): \u5982\u679c\u5df2\u7ecf\u8fdb\u5165\u4e86\u5b50\u51fd\u6570\uff0c\u8d8a\u51fa\u6b64\u5b50\u51fd\u6570</p> </li> <li> <p>Restart(Ctrl + Shift + F5): \u91cd\u542f\u8c03\u8bd5</p> </li> <li> <p>Sop(Shift + F5): \u505c\u6b62\u8c03\u8bd5</p> </li> </ul>"},{"location":"C%2B%2B/vscode/a1-vscode-compile/","title":"\u4e5d \u9644\u5f55","text":"<p>vscode\u901a\u8fc7tasks.json\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c \u56e0\u6b64\u5b9e\u73b0\u7684\u529f\u80fd\u5c31\u662f[[01-g++]]\uff0c [[02-compile]]\u4e2d\u7f16\u8bd1\u7684\u6b65\u9aa4</p> <p>\u901a\u8fc7\u7ec8\u7aef-&gt; \u914d\u7f6e\u4efb\u52a1 -&gt; \u521b\u5efatasks.json</p> <p>\u4e0b\u9762\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a  * \u4f7f\u7528g++\u7f16\u8bd1\u53ef\u6267\u884c\u6587\u4ef6 * \u4f7f\u7528cmake\u7f16\u8bd1\u53ef\u6267\u884c\u6587\u4ef6</p>"},{"location":"C%2B%2B/vscode/a1-vscode-compile/#g","title":"\u4f7f\u7528g++\u7f16\u8bd1\u53ef\u6267\u884c\u6587\u4ef6","text":"<p>JSON<pre><code>// tasks.json\n{\n    // https://code.visualstudio.com/docs/editor/tasks\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"Build\",  // \u4efb\u52a1\u7684\u540d\u5b57\u53ebBuild\uff0c\u6ce8\u610f\u662f\u5927\u5c0f\u5199\u533a\u5206\u7684\uff0c\u7b49\u4f1a\u5728launch\u4e2d\u8c03\u7528\u8fd9\u4e2a\u540d\u5b57\n            \"type\": \"shell\",  // \u4efb\u52a1\u6267\u884c\u7684\u662fshell\u547d\u4ee4\uff0c\u4e5f\u53ef\u4ee5\u662f\n            \"command\": \"g++\", // \u547d\u4ee4\u662fg++\n            \"args\": [\n                \"'-Wall'\",\n                \"'-std=c++17'\",  //\u4f7f\u7528c++17\u6807\u51c6\u7f16\u8bd1\n                \"'${file}'\", //\u5f53\u524d\u6587\u4ef6\u540d\n                \"-o\", //\u5bf9\u8c61\u540d\uff0c\u4e0d\u8fdb\u884c\u7f16\u8bd1\u4f18\u5316\n                \"'${fileBasenameNoExtension}.out'\",  //\u5f53\u524d\u6587\u4ef6\u540d\uff08\u53bb\u6389\u6269\u5c55\u540d\uff09\n            ],\n          // \u6240\u4ee5\u4ee5\u4e0a\u90e8\u5206\uff0c\u5c31\u662f\u5728shell\u4e2d\u6267\u884c\uff08\u5047\u8bbe\u6587\u4ef6\u540d\u4e3afilename.cpp\uff09\n          // g++ filename.cpp -o filename.exe\n            \"group\": { \n                \"kind\": \"build\",\n                \"isDefault\": true   \n                // \u4efb\u52a1\u5206\u7ec4\uff0c\u56e0\u4e3a\u662ftasks\u800c\u4e0d\u662ftask\uff0c\u610f\u5473\u7740\u53ef\u4ee5\u8fde\u7740\u6267\u884c\u5f88\u591a\u4efb\u52a1\n                // \u5728build\u7ec4\u7684\u4efb\u52a1\u4eec\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728Command Palette(F1) \u8f93\u5165run build task\u6765\u8fd0\u884c\n                // \u5f53\u7136\uff0c\u5982\u679c\u4efb\u52a1\u5206\u7ec4\u662ftest\uff0c\u4f60\u5c31\u53ef\u4ee5\u7528run test task\u6765\u8fd0\u884c \n            },\n            \"problemMatcher\": [\n                \"$gcc\" // \u4f7f\u7528gcc\u6355\u83b7\u9519\u8bef\n            ],\n        }\n    ]\n}\n</code></pre> \u4e0a\u9762tasks.json\u76f8\u5f53\u4e8e\u547d\u4ee4<code>g++ -Wall -std=c++17 file.cpp -o a.out</code> \u53ef\u4ee5\u901a\u8fc7vscode\u4e2d<code>\u7ec8\u7aef-&gt; \u8fd0\u884c\u751f\u6210\u4efb\u52a1</code>\u6216\u8005<code>ctrl + shift + B</code>\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6</p>"},{"location":"C%2B%2B/vscode/a1-vscode-compile/#cmake","title":"\u4f7f\u7528cmake\u7f16\u8bd1\u53ef\u6267\u884c\u6587\u4ef6","text":"<p>\u4e5f\u662f\u901a\u8fc7\u914d\u7f6etasks.json\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\uff0c \u4e0eg++\u4e0d\u540c\uff0c \u9700\u8981\u8bbe\u7f6e\u6210cmake\u7f16\u8bd1\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6b65\u9aa4\u3002</p> Bash<pre><code># \u5728\u9879\u76ee\u6e90\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528  cmake \u6307\u4ee4\u89e3\u6790 CMakeLists.txt \uff0c\u751f\u6210 Makefile \u548c\u5176\u4ed6\u6587\u4ef6\ncmake .\n# \u6267\u884c make \u547d\u4ee4\uff0c\u751f\u6210 target\nmake\n</code></pre> JSON<pre><code>{\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    \"version\": \"2.0.0\",\n    \"options\": {\n        \"cwd\": \"${workspaceFolder}/build\"\n    },\n    \"tasks\": [\n        {\n            \"type\": \"shell\",\n            \"label\": \"cmake\",\n            \"command\": \"cmake\",\n            \"args\": [\n                \"..\"\n            ]\n        },\n        {\n            \"label\": \"make\",\n            \"group\": {\n                \"kind\": \"build\",\n                \"isDefault\": true\n            },\n            \"command\": \"make\",\n            \"args\": []\n        },\n        {\n            \"label\": \"build\",\n            \"dependsOrder\": \"sequence\",\n            \"dependsOn\": [\n                \"cmake\",\n                \"make\"\n            ]\n        }\n    ],\n}\n</code></pre>"},{"location":"C%2B%2B/vscode/a1-vscode-compile/#launchjson","title":"\u5229\u7528launch.json\u6587\u4ef6\u8fdb\u884c\u8c03\u8bd5","text":"<p>\u65e0\u8bba\u662fg++\u6216\u8005cmake\uff0c \u901a\u8fc7\u5efa\u7acb\u5bf9\u5e94\u7684tasks.json\u6587\u4ef6\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c \u90fd\u91c7\u7528gdb\u8fdb\u884c\u8c03\u8bd5\uff0c \u4e0b\u9762\u662f\u5177\u4f53\u7684launch.json\u4e2d\u7684\u5185\u5bb9 JSON<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"C++ Launch\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/yolo\", // \u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${workspaceFolder}\",\n            \"environment\": [],\n            \"externalConsole\": true,\n            \"MIMode\": \"gdb\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"Enable pretty-printing for gdb\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ],\n            \"preLaunchTask\": \"build\",\n            \"miDebuggerPath\": \"/usr/bin/gdb\" // gdb \u8c03\u8bd5\u5668\u7684\u8def\u5f84\n        }\n    ]\n}\n</code></pre></p>"},{"location":"C%2B%2B/vscode/a1-vscode-compile/#_2","title":"\u9884\u5b9a\u4e49\u53d8\u91cf","text":"<p>\u652f\u6301\u4e0b\u9762\u7684\u9884\u5b9a\u4e49\u53d8\u91cf:</p> <ul> <li>${workspaceFolder}\u00a0- \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55(\u6839\u76ee\u5f55)</li> <li>${workspaceFolderBasename}\u00a0- \u5f53\u524d\u6587\u4ef6\u7684\u7236\u76ee\u5f55</li> <li>${file}\u00a0- \u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\u540d(\u5b8c\u6574\u8def\u5f84)</li> <li>${relativeFile}\u00a0- \u5f53\u524d\u6839\u76ee\u5f55\u5230\u5f53\u524d\u6253\u5f00\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84(\u5305\u62ec\u6587\u4ef6\u540d)</li> <li>${relativeFileDirname}\u00a0- \u5f53\u524d\u6839\u76ee\u5f55\u5230\u5f53\u524d\u6253\u5f00\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84(\u4e0d\u5305\u62ec\u6587\u4ef6\u540d)</li> <li>${fileBasename}\u00a0- \u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\u540d(\u5305\u62ec\u6269\u5c55\u540d)</li> <li>${fileBasenameNoExtension}\u00a0- \u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\u540d(\u4e0d\u5305\u62ec\u6269\u5c55\u540d)</li> <li>${fileDirname}\u00a0- \u5f53\u524d\u6253\u5f00\u6587\u4ef6\u7684\u76ee\u5f55</li> <li>${fileExtname}\u00a0- \u5f53\u524d\u6253\u5f00\u6587\u4ef6\u7684\u6269\u5c55\u540d</li> <li>${cwd}\u00a0- \u542f\u52a8\u65f6task\u5de5\u4f5c\u7684\u76ee\u5f55</li> <li>${lineNumber}\u00a0- \u5f53\u524d\u6fc0\u6d3b\u6587\u4ef6\u6240\u9009\u884c</li> <li>${selectedText}\u00a0- \u5f53\u524d\u6fc0\u6d3b\u6587\u4ef6\u4e2d\u6240\u9009\u62e9\u7684\u6587\u672c</li> <li>${execPath}\u00a0- vscode\u6267\u884c\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55</li> <li>${defaultBuildTask}\u00a0- \u9ed8\u8ba4\u7f16\u8bd1\u4efb\u52a1(build task)\u7684\u540d\u5b57</li> </ul>"},{"location":"C%2B%2B/vscode/a1-vscode-compile/#_3","title":"\u9884\u5b9a\u4e49\u53d8\u91cf\u793a\u4f8b:","text":"<p>\u5047\u8bbe\u4f60\u6ee1\u8db3\u4ee5\u4e0b\u7684\u6761\u4ef6</p> <ol> <li>\u4e00\u4e2a\u6587\u4ef6\u00a0<code>/home/your-username/your-project/folder/file.ext</code>\u00a0\u5728\u4f60\u7684\u7f16\u8f91\u5668\u4e2d\u6253\u5f00;</li> <li>\u4e00\u4e2a\u76ee\u5f55\u00a0<code>/home/your-username/your-project</code>\u00a0\u4f5c\u4e3a\u4f60\u7684\u6839\u76ee\u5f55.</li> </ol> <p>\u4e0b\u9762\u7684\u9884\u5b9a\u4e49\u53d8\u91cf\u5219\u4ee3\u8868:</p> <ul> <li>${workspaceFolder}\u00a0-\u00a0<code>/home/your-username/your-project</code></li> <li>${workspaceFolderBasename}\u00a0-\u00a0<code>your-project</code></li> <li>${file}\u00a0-\u00a0<code>/home/your-username/your-project/folder/file.ext</code></li> <li>${relativeFile}\u00a0-\u00a0<code>folder/file.ext</code></li> <li>${relativeFileDirname}\u00a0-\u00a0<code>folder</code></li> <li>${fileBasename}\u00a0-\u00a0<code>file.ext</code></li> <li>${fileBasenameNoExtension}\u00a0-\u00a0<code>file</code></li> <li>${fileDirname}\u00a0-\u00a0<code>/home/your-username/your-project/folder</code></li> <li>${fileExtname}\u00a0-\u00a0<code>.ext</code></li> <li>${lineNumber}\u00a0- \u5149\u6807\u6240\u5728\u884c</li> <li>${selectedText}\u00a0- \u7f16\u8f91\u5668\u4e2d\u6240\u9009\u62e9\u7684\u6587\u672c</li> <li>${execPath}\u00a0- Code.exe\u7684\u4f4d\u7f6e</li> </ul> <p>Tip: vscode\u7684\u667a\u80fd\u63d0\u793a\u4f1a\u5728<code>tasks.json</code>\u548c<code>launch.json</code>\u00a0\u63d0\u793a\u6240\u6709\u652f\u6301\u7684\u9884\u5b9a\u4e49\u53d8\u91cf.</p>"},{"location":"GIT/01-git/","title":"Git \u57fa\u7840","text":""},{"location":"GIT/01-git/#1-git","title":"1. Git \u57fa\u7840\u6982\u5ff5","text":"<ol> <li> <p>Git \u662f\u4ec0\u4e48\uff1f</p> <ul> <li>Git \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u5f00\u53d1\u8005\u8ddf\u8e2a\u6587\u4ef6\u7684\u53d8\u5316\uff0c\u534f\u540c\u5de5\u4f5c\u4ee5\u53ca\u7ba1\u7406\u591a\u4e2a\u7248\u672c\u7684\u4ee3\u7801\u3002</li> <li> <p>\u5e38\u89c1\u7684\u672f\u8bed</p> </li> <li> <p>Repository (\u4ed3\u5e93)\uff1a\u4fdd\u5b58\u9879\u76ee\u6587\u4ef6\u53ca\u7248\u672c\u5386\u53f2\u8bb0\u5f55\u7684\u5730\u65b9\u3002</p> </li> <li>Commit\uff1a\u8bb0\u5f55\u5bf9\u6587\u4ef6\u7684\u4fee\u6539\u3002</li> <li>Branch (\u5206\u652f)\uff1a\u4e0d\u540c\u7684\u5de5\u4f5c\u7ebf\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5206\u652f\u4e0a\u5e76\u884c\u5f00\u53d1\u3002</li> <li>Merge (\u5408\u5e76)\uff1a\u5c06\u4e24\u4e2a\u5206\u652f\u7684\u4ee3\u7801\u5408\u5e76\u5230\u4e00\u8d77\u3002</li> <li>Clone (\u514b\u9686)\uff1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5185\u5bb9\u590d\u5236\u5230\u672c\u5730\u3002</li> <li>Push\uff1a\u5c06\u672c\u5730\u7684\u66f4\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u3002</li> <li>Pull\uff1a\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u6700\u65b0\u7684\u66f4\u6539\u3002</li> </ul> </li> </ol>"},{"location":"GIT/01-git/#2-git","title":"2. \u5b89\u88c5 Git","text":"<ol> <li> <p>\u5728 Linux \u4e0a\u5b89\u88c5 Git</p> Bash<pre><code>sudo apt update\nsudo apt install git\n</code></pre> </li> <li> <p>\u5728 Windows \u4e0a\u5b89\u88c5 Git</p> <ul> <li>\u8bbf\u95ee Git \u5b98\u7f51\uff1ahttps://git-scm.com/download/win\uff0c\u4e0b\u8f7d\u5e76\u5b89\u88c5\u3002</li> <li>\u5728 macOS \u4e0a\u5b89\u88c5 Git</li> </ul> Bash<pre><code>brew install git\n</code></pre> </li> </ol>"},{"location":"GIT/01-git/#3-git","title":"3. \u914d\u7f6e Git","text":"<ol> <li> <p>\u8bbe\u7f6e\u7528\u6237\u540d\u548c\u90ae\u7bb1 \u914d\u7f6e Git \u7684\u7528\u6237\u540d\u548c\u90ae\u7bb1\u662f\u5fc5\u9700\u7684\uff0c\u8fd9\u4e9b\u4fe1\u606f\u4f1a\u663e\u793a\u5728\u4f60\u7684\u6bcf\u4e2a\u63d0\u4ea4\u8bb0\u5f55\u4e2d\u3002</p> Bash<pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"youremail@example.com\"\n</code></pre> </li> <li> <p>\u67e5\u770b\u914d\u7f6e</p> Bash<pre><code>git config --list\n</code></pre> </li> <li> <p>\u66f4\u6539\u914d\u7f6e \u53ef\u4ee5\u901a\u8fc7 <code>--global</code> \u53c2\u6570\u8bbe\u7f6e\u5168\u5c40\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u672c\u5730\u914d\u7f6e\uff1a</p> Bash<pre><code>git config user.name \"New Name\"\ngit config user.email \"newemail@example.com\"\n</code></pre> </li> </ol>"},{"location":"GIT/01-git/#4","title":"4. \u521b\u5efa\u548c\u7ba1\u7406\u4ed3\u5e93","text":"<ol> <li> <p>\u521d\u59cb\u5316\u672c\u5730\u4ed3\u5e93 \u5982\u679c\u4f60\u60f3\u5728\u4e00\u4e2a\u5df2\u6709\u6587\u4ef6\u5939\u4e2d\u4f7f\u7528 Git\uff0c\u9996\u5148\u9700\u8981\u521d\u59cb\u5316 Git \u4ed3\u5e93\uff1a</p> Bash<pre><code>git init\n</code></pre> </li> <li> <p>\u514b\u9686\u8fdc\u7a0b\u4ed3\u5e93 \u4f7f\u7528 <code>git clone</code> \u547d\u4ee4\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u526f\u672c\uff1a</p> Bash<pre><code>git clone https://github.com/username/repository.git\n</code></pre> </li> <li> <p>\u67e5\u770b\u4ed3\u5e93\u72b6\u6001 \u67e5\u770b\u5f53\u524d\u4ed3\u5e93\u7684\u72b6\u6001\uff1a</p> Bash<pre><code>git status\n</code></pre> </li> </ol>"},{"location":"GIT/01-git/#5","title":"5. \u57fa\u672c\u64cd\u4f5c","text":"<ol> <li> <p>\u6dfb\u52a0\u6587\u4ef6\u5230\u6682\u5b58\u533a \u5c06\u6587\u4ef6\u7684\u4fee\u6539\u6dfb\u52a0\u5230 Git \u7684\u6682\u5b58\u533a\uff1a</p> Bash<pre><code>git add &lt;file_name&gt;    # \u6dfb\u52a0\u5355\u4e2a\u6587\u4ef6\ngit add .              # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u66f4\u6539\u8fc7\u7684\u6587\u4ef6\n</code></pre> </li> <li> <p>\u63d0\u4ea4\u66f4\u6539 \u63d0\u4ea4\u5df2\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u7684\u66f4\u6539\uff1a</p> Bash<pre><code>git commit -m \"Your commit message\"\n</code></pre> </li> <li> <p>\u67e5\u770b\u63d0\u4ea4\u5386\u53f2 \u67e5\u770b\u63d0\u4ea4\u7684\u65e5\u5fd7\u8bb0\u5f55\uff1a</p> Bash<pre><code>git log\n</code></pre> </li> <li> <p>\u67e5\u770b\u6587\u4ef6\u7684\u4fee\u6539 \u67e5\u770b\u6587\u4ef6\u4fee\u6539\u7684\u8be6\u7ec6\u5185\u5bb9\uff1a</p> Bash<pre><code>git diff\n</code></pre> </li> <li> <p>\u64a4\u9500\u66f4\u6539 \u64a4\u9500\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u66f4\u6539\uff1a</p> Bash<pre><code>git store # \u4fee\u6539\u4e86\u5de5\u4f5c\u533a\uff0c\u4f46\u8fd8\u6ca1\u6709\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff08\u4f7f\u7528 `git add`\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 `git restore` \u6765\u6062\u590d\u6587\u4ef6\u5230\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684\u72b6\u6001\ngit reset # \u64a4\u9500\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\uff0c\u4e22\u5f03\u6682\u5b58\u533a\u7684\u4fee\u6539\uff0c\u4fdd\u7559\u5728\u5de5\u4f5c\u533a\ngit reset --soft HEAD~1 # \u64a4\u9500\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\uff0c\u4f46\u4fdd\u7559\u4fee\u6539\u5728\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\ngit reset --mixed HEAD~1 # \u64a4\u9500\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\uff0c\u4e22\u5f03\u6682\u5b58\u533a\u7684\u4fee\u6539\uff0c\u4fdd\u7559\u5728\u5de5\u4f5c\u533a\ngit reset --hard HEAD~1 # \u5b8c\u5168\u64a4\u9500\u6700\u8fd1\u7684\u63d0\u4ea4\u5e76\u4e22\u5f03\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u4fee\u6539\n</code></pre> </li> <li> <p>\u64a4\u9500\u66f4\u6539 \u64a4\u9500\u63a8\u9001\u7684\u63d0\u4ea4\uff1a     Bash<pre><code>git reset --hard &lt;commit_hash&gt;   # \u91cd\u7f6e\u5230\u6307\u5b9a\u63d0\u4ea4\ngit push origin &lt;branch_name&gt; --force   # \u5f3a\u5236\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93,\u5f3a\u5236\u63a8\u9001\uff08`--force`\uff09\u4f1a\u8986\u76d6\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5386\u53f2\n</code></pre></p> </li> <li> <p>\u5220\u9664\u6587\u4ef6 \u5220\u9664\u6587\u4ef6\u5e76\u63d0\u4ea4\u5220\u9664\u64cd\u4f5c\uff1a</p> Bash<pre><code>git rm &lt;file_name&gt;\ngit commit -m \"Remove file\"\n</code></pre> </li> </ol>"},{"location":"GIT/01-git/#6","title":"6. \u5206\u652f\u7ba1\u7406","text":"<ol> <li> <p>\u67e5\u770b\u73b0\u6709\u5206\u652f</p> Bash<pre><code>git branch\n</code></pre> </li> <li> <p>\u521b\u5efa\u65b0\u5206\u652f \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f\uff1a</p> Bash<pre><code>git branch &lt;branch_name&gt;      # \u521b\u5efa\u5206\u652f\ngit checkout &lt;branch_name&gt;    # \u5207\u6362\u5206\u652f\n</code></pre> </li> <li> <p>\u521b\u5efa\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f \u521b\u5efa\u5e76\u540c\u65f6\u5207\u6362\u5230\u65b0\u5206\u652f\uff1a</p> <p>Bash<pre><code>git checkout -b &lt;branch_name&gt;\n</code></pre> \u5982\u679c\u8fdc\u7a0b\u5206\u652f\u800c\u672c\u5730\u6ca1\u6709\u8be5\u5206\u652f\uff0c\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u5728\u672c\u5730\u521b\u5efa<code>branch_name</code>\u5206\u652f\uff0c\u5e76\u8ffd\u8e2a\u8fdc\u7a0b<code>origin/branch_name</code> Bash<pre><code>git checkout -b &lt;branch_name&gt; origin/&lt;branch_name&gt;\n</code></pre></p> </li> <li> <p>\u5408\u5e76\u5206\u652f \u5c06\u5f53\u524d\u5206\u652f\u4e0e\u76ee\u6807\u5206\u652f\u5408\u5e76\uff1a</p> Bash<pre><code>git merge &lt;branch_name&gt;\n</code></pre> </li> <li> <p>\u5220\u9664\u5206\u652f \u5220\u9664\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u5206\u652f\uff1a</p> <p>Bash<pre><code>git branch -d &lt;branch_name&gt;  # \u5220\u9664\u672c\u5730\u5206\u652f\ngit push origin --delete &lt;branch_name&gt;  # \u5220\u9664\u8fdc\u7a0b\u5206\u652f\n</code></pre> 6. \u6e05\u7406\u672c\u5730\u7f13\u5b58\u5f15\u7528 git \u672c\u5730\u4fdd\u7559\u4e86\u8fdc\u7a0b\u5206\u652f\u7684\u7f13\u5b58\u5f15\u7528\uff0c\u672c\u5730\u9700\u8981\u5237\u65b0 Bash<pre><code>git remote prune origin\n</code></pre></p> </li> </ol>"},{"location":"GIT/01-git/#7","title":"7. \u8fdc\u7a0b\u4ed3\u5e93\u64cd\u4f5c","text":"<ol> <li> <p>\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93 \u67e5\u770b\u914d\u7f6e\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\uff1a</p> Bash<pre><code>git remote -v\n</code></pre> </li> <li> <p>\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93 \u5c06\u8fdc\u7a0b\u4ed3\u5e93\u6dfb\u52a0\u5230\u672c\u5730\u4ed3\u5e93\uff1a</p> Bash<pre><code>git remote add origin &lt;remote_repository_url&gt;\n</code></pre> </li> <li> <p>\u63a8\u9001\u66f4\u6539 \u5c06\u672c\u5730\u5206\u652f\u7684\u66f4\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a</p> Bash<pre><code>git push origin &lt;branch_name&gt;\n</code></pre> </li> <li> <p>\u62c9\u53d6\u8fdc\u7a0b\u66f4\u6539 \u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u6700\u65b0\u7684\u66f4\u6539\uff1a</p> Bash<pre><code>git pull origin &lt;branch_name&gt;\n</code></pre> </li> <li> <p>\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u83b7\u53d6\u6700\u65b0\u7684\u66f4\u6539 \u83b7\u53d6\u6700\u65b0\u66f4\u6539\u4f46\u4e0d\u5408\u5e76\u5230\u672c\u5730\u5206\u652f\uff1a</p> <p>Bash<pre><code>git fetch origin\n</code></pre> 6. \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93 \uff1a</p> Bash<pre><code>git remote remove origin\n</code></pre> </li> </ol>"},{"location":"GIT/01-git/#8","title":"8. \u5de5\u4f5c\u6d41","text":""},{"location":"GIT/01-git/#81-git","title":"8.1 Git \u5e38\u89c1\u5de5\u4f5c\u6d41","text":"<ul> <li>\u96c6\u4e2d\u5f0f\u5de5\u4f5c\u6d41\uff1a\u6240\u6709\u5f00\u53d1\u8005\u5c06\u4ee3\u7801\u63a8\u9001\u5230\u4e00\u4e2a\u516c\u5171\u4ed3\u5e93\uff0c\u6bcf\u4e2a\u4eba\u5728\u81ea\u5df1\u7684\u672c\u5730\u673a\u5668\u4e0a\u5de5\u4f5c\u3002</li> <li>\u529f\u80fd\u5206\u652f\u5de5\u4f5c\u6d41\uff1a\u6bcf\u4e2a\u65b0\u529f\u80fd\u90fd\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u5206\u652f\u4e0a\u5f00\u53d1\uff0c\u5f00\u53d1\u5b8c\u6210\u540e\u5408\u5e76\u56de\u4e3b\u5206\u652f\u3002</li> <li>Gitflow \u5de5\u4f5c\u6d41\uff1a\u5c06\u5f00\u53d1\u5206\u6210\u591a\u4e2a\u9636\u6bb5\uff0c\u5982 <code>feature</code>\u3001<code>develop</code>\u3001<code>release</code> \u548c <code>hotfix</code> \u7b49\u3002</li> </ul>"},{"location":"GIT/01-git/#82-pull-request","title":"8.2 Pull Request \u6d41\u7a0b","text":"<ul> <li> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u8fdb\u884c\u5f00\u53d1\u3002</li> </ol> </li> <li> <ol> <li>\u5b8c\u6210\u5f00\u53d1\u540e\uff0c\u63d0\u4ea4\u66f4\u6539\u5e76\u63a8\u9001\u5230\u8fdc\u7a0b\u5206\u652f\u3002</li> </ol> </li> <li> <ol> <li>\u5728 GitHub \u7b49\u5e73\u53f0\u4e0a\u521b\u5efa Pull Request\uff08PR\uff09\u3002</li> </ol> </li> <li> <ol> <li>\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5\u3001\u6d4b\u8bd5\u7b49\uff0c\u6700\u7ec8\u5408\u5e76\u5230\u4e3b\u5206\u652f\u3002</li> </ol> </li> </ul>"},{"location":"GIT/01-git/#9-git","title":"9. Git \u9ad8\u7ea7\u547d\u4ee4","text":"<ol> <li> <p>Git stash</p> <ul> <li> <p>\u5c06\u5f53\u524d\u7684\u66f4\u6539\u6682\u65f6\u4fdd\u5b58\u8d77\u6765\uff0c\u4fbf\u4e8e\u5207\u6362\u5206\u652f\u7b49\u64cd\u4f5c\uff1a</p> Bash<pre><code>git stash\ngit stash pop   # \u6062\u590d\u66f4\u6539\n</code></pre> </li> </ul> </li> <li> <p>Git rebase</p> <ul> <li> <p>\u5c06\u4e00\u4e2a\u5206\u652f\u7684\u66f4\u6539\u5408\u5e76\u5230\u53e6\u4e00\u4e2a\u5206\u652f\uff0c\u901a\u5e38\u7528\u4e8e\u4fdd\u6301\u63d0\u4ea4\u5386\u53f2\u7684\u6574\u6d01\uff1a</p> Bash<pre><code>git rebase &lt;branch_name&gt;\n</code></pre> </li> </ul> </li> <li> <p>Git cherry-pick</p> <ul> <li> <p>\u9009\u62e9\u6027\u5730\u5c06\u67d0\u4e2a\u63d0\u4ea4\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f\uff1a</p> Bash<pre><code>git cherry-pick &lt;commit_hash&gt;\n</code></pre> </li> </ul> </li> <li> <p>Git tag</p> <ul> <li> <p>\u521b\u5efa\u6807\u7b7e\u6765\u6807\u8bb0\u91cd\u8981\u7684\u63d0\u4ea4\uff08\u5982\u53d1\u5e03\u7248\u672c\uff09\uff1a</p> Bash<pre><code>git tag -a v1.0 -m \"Release version 1.0\"\n</code></pre> </li> </ul> </li> </ol>"},{"location":"GIT/01-git/#10-git","title":"10. Git \u914d\u7f6e\u548c\u4f18\u5316","text":"<ol> <li> <p>\u8bbe\u7f6e\u522b\u540d \u4f60\u53ef\u4ee5\u4e3a\u5e38\u7528\u7684 Git \u547d\u4ee4\u521b\u5efa\u522b\u540d\uff0c\u7b80\u5316\u64cd\u4f5c\uff1a</p> Bash<pre><code>git config --global alias.co checkout\ngit config --global alias.br branch\ngit config --global alias.ci commit\n</code></pre> </li> <li> <p>\u5ffd\u7565\u6587\u4ef6 \u4f7f\u7528 <code>.gitignore</code> \u6587\u4ef6\u6765\u5ffd\u7565\u67d0\u4e9b\u4e0d\u9700\u8981\u7248\u672c\u63a7\u5236\u7684\u6587\u4ef6\uff1a</p> Bash<pre><code>echo \"*.log\" &gt;&gt; .gitignore\n</code></pre> </li> </ol>"},{"location":"GIT/02-git_lfs/","title":"Git LFS","text":"<p>Git LFS\uff08Large File Storage\uff09\u662fGit\u7684\u6269\u5c55\uff0c\u4e13\u95e8\u7528\u4e8e\u5904\u7406\u5927\u6587\u4ef6\uff08\u5982\u56fe\u50cf\u3001\u89c6\u9891\u3001\u5927\u578b\u6570\u636e\u96c6\u7b49\uff09\u3002\u4f7f\u7528Git LFS\uff0c\u53ef\u4ee5\u907f\u514d\u5c06\u5927\u6587\u4ef6\u76f4\u63a5\u5b58\u50a8\u5728Git\u4ed3\u5e93\u4e2d\uff0c\u800c\u662f\u5c06\u5176\u5b58\u50a8\u5728\u5916\u90e8\u5b58\u50a8\u7cfb\u7edf\u4e2d\uff0c\u4ec5\u5c06\u5176\u6307\u9488\u5b58\u50a8\u5728Git\u4ed3\u5e93\u4e2d\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u548c\u6548\u7387\u3002</p> <p>\u4ee5\u4e0b\u662f\u4f7f\u7528Git LFS\u7684\u8be6\u7ec6\u6b65\u9aa4\uff1a</p>"},{"location":"GIT/02-git_lfs/#1-git-lfs","title":"1. \u5b89\u88c5Git LFS","text":"Bash<pre><code>sudo apt-get update\nsudo apt-get install git-lfs\n</code></pre>"},{"location":"GIT/02-git_lfs/#2-git-lfs","title":"2. \u521d\u59cb\u5316Git LFS","text":"Bash<pre><code>git lfs install\n</code></pre> <p>\u8fd9\u5c06\u4f1a\u5728\u7cfb\u7edf\u4e0a\u542f\u52a8Git LFS, \u5e76\u4fee\u6539git \u914d\u7f6e\uff0c\u4ee5\u4fbf\u5728\u65b0\u5efa\u4ed3\u5e93\u4e2d\u4f7f\u7528git lfs</p>"},{"location":"GIT/02-git_lfs/#3","title":"3. \u8ddf\u8e2a\u5927\u6587\u4ef6","text":"<p>\u4f7f\u7528 <code>git lfs track</code> \u547d\u4ee4\u6765\u6307\u5b9a\u9700\u8981\u4f7f\u7528<code>Git LFS</code>\u5b58\u50a8\u7684\u6587\u4ef6\u7c7b\u578b\u6216\u5177\u4f53\u6587\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u8981\u8ddf\u8e2a\u6240\u6709\u7684PNG\u6587\u4ef6\uff0c\u53ef\u4ee5\u8fd0\u884c\uff1a</p> <p>Bash<pre><code>git lfs track \"*.png\"\n</code></pre> \u8fd9\u5c06\u4f1a\u521b\u5efa\u6216\u66f4\u65b0\u4e00\u4e2a\u540d\u4e3a .gitattributes \u7684\u6587\u4ef6\uff0c\u544a\u8bc9Git LFS\u8ddf\u8e2a\u6240\u6709\u7b26\u5408\u8be5\u6a21\u5f0f\u7684\u6587\u4ef6\u3002</p>"},{"location":"GIT/02-git_lfs/#4","title":"4. \u6dfb\u52a0\u5e76\u63d0\u4ea4\u6587\u4ef6","text":"<p>\u6dfb\u52a0\u60f3\u8981\u8ddf\u8e2a\u7684\u5927\u6587\u4ef6\u5230\u4ed3\u5e93\uff0c\u5e76\u50cf\u5e73\u65f6\u4e00\u6837\u63d0\u4ea4\uff1a Bash<pre><code>git add .\ngit commit -m \"Add large files with Git LFS\"\n</code></pre></p>"},{"location":"GIT/02-git_lfs/#5","title":"5. \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93","text":"<p>\u50cf\u5e73\u65f6\u4e00\u6837\u5c06\u66f4\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a</p> Bash<pre><code>git push origin main\n</code></pre>"},{"location":"GIT/02-git_lfs/#6-lfs","title":"6. \u514b\u9686\u548c\u62c9\u53d6\u5305\u542bLFS\u6587\u4ef6\u7684\u4ed3\u5e93","text":"<p>\u5f53\u4f60\u6216\u5176\u4ed6\u4eba\u514b\u9686\u5305\u542bLFS\u6587\u4ef6\u7684\u4ed3\u5e93\u65f6\uff0cGit LFS\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u5927\u6587\u4ef6\uff1a Bash<pre><code>git clone &lt;repository-url&gt;\n</code></pre> \u5982\u679c\u4ed3\u5e93\u5df2\u7ecf\u88ab\u514b\u9686\uff0c\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u62c9\u53d6\u5e76\u4e0b\u8f7dLFS\u6587\u4ef6\uff1a Bash<pre><code>git lfs pull\n</code></pre></p>"},{"location":"GIT/02-git_lfs/#7-lfs","title":"7. \u7ba1\u7406LFS\u6587\u4ef6","text":"<p>\u67e5\u770bLFS\u6587\u4ef6\u72b6\u6001\uff1a\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u54ea\u4e9b\u6587\u4ef6\u88abGit LFS\u8ddf\u8e2a\uff1a Bash<pre><code>git lfs ls-files\n</code></pre></p> <p>\u53d6\u6d88\u8ddf\u8e2a\u6587\u4ef6\uff1a\u5982\u679c\u4f60\u4e0d\u518d\u9700\u8981\u8ddf\u8e2a\u67d0\u4e9b\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a Bash<pre><code>git lfs untrack \"*.png\"\n</code></pre> \u8fd9\u5c06\u4ece <code>.gitattributes</code> \u6587\u4ef6\u4e2d\u79fb\u9664\u5bf9\u8fd9\u4e9b\u6587\u4ef6\u7684\u8ddf\u8e2a\u3002</p>"},{"location":"IMAGE_PROCESS/01-img0/","title":"\u6210\u50cf\u57fa\u7840","text":""},{"location":"IMAGE_PROCESS/01-img0/#1","title":"1. \u4e16\u754c\u3001\u76f8\u673a\u3001\u56fe\u50cf\u548c\u50cf\u7d20\u5750\u6807\u8f6c\u6362","text":""},{"location":"IMAGE_PROCESS/01-img0/#11","title":"1.1 \u5750\u6807\u7cfb\u51e0\u4f55\u5173\u7cfb","text":"<p>\u56fe\u50cf\u5904\u7406\u4e2d\u6d89\u53ca\u5230\u4ee5\u4e0b\u56db\u4e2a\u5750\u6807\u7cfb\uff1a \\(O_w - X_wY_wZ_w\\) : \u4e16\u754c\u5750\u6807\u7cfb\uff0c \u63cf\u8ff0\u76f8\u673a\u4f4d\u7f6e\uff0c \u5355\u4f4d\uff1a m \\(O_c - X_cY_cZ_c\\): \u76f8\u673a\u5750\u6807\u7cfb\uff0c \u5149\u5fc3\u4e3a\u539f\u70b9\uff0c\u5355\u4f4d\uff1a m \\(O_{xy}\\): \u56fe\u50cf\u5750\u6807\u7cfb\uff0c\u5149\u5fc3\u4e3a\u56fe\u50cf\u4e2d\u70b9\uff0c\u5355\u4f4d\uff1a mm \\(uv\\): \u50cf\u7d20\u5750\u6807\u7cfb\uff0c\u539f\u70b9\u4e3a\u56fe\u50cf\u5de6\u4e0a\u89d2\uff0c\u5355\u4f4d: pixel \\(P\\): \u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684\u4e00\u70b9\uff0c\u5373\u4e3a\u751f\u6d3b\u4e2d\u771f\u5b9e\u7684\u4e00\u70b9\uff1b \\(p\\): \u70b9P\u5728\u56fe\u50cf\u4e2d\u7684\u6210\u50cf\u70b9\uff0c\u5728\u56fe\u50cf\u5750\u6807\u7cfb\u4e2d\u7684\u5750\u6807\u4e3a\\((x, y)\\), \u5728\u50cf\u7d20\u5750\u6807\u7cfb\u4e2d\u7684\u5750\u6807\u4e3a\\((u, v)\\) * \\(f\\)\uff1a\u76f8\u673a\u7126\u8ddd\uff0c\u7b49\u4e8e\\(o\\)\u4e0e\\(O_c\\)\u7684\u8ddd\u79bb\uff0c\\(f = ||o - O_c||\\) </p>"},{"location":"IMAGE_PROCESS/01-img0/#12","title":"1.2 \u4e16\u754c\u3001\u76f8\u673a\u5750\u6807\u7cfb\u8f6c\u6362","text":"<p>\u4ece\u4e16\u754c\u5750\u6807\u7cfb\u53d8\u6362\u5230\u76f8\u673a\u5750\u6807\u7cfb\u5c5e\u4e8e\u521a\u4f53\u53d8\u6362\uff1a \u5373\u7269\u4f53\u4e0d\u4f1a\u53d1\u751f\u5f62\u53d8\uff0c\u53ea\u9700\u8981\u8fdb\u884c\u65cb\u8f6c\u548c\u5e73\u79fb\u3002 \\(R\\): \u8868\u793a\u65cb\u8f6c\u77e9\u9635 \\(T\\): \u8868\u793a\u5e73\u79fb\u77e9\u9635\uff1b</p> <p>\\(\\left[\\begin{array}{c}X_c \\\\ Y_c \\\\ Z_c\\end{array}\\right]=R\\left[\\begin{array}{l}X_w \\\\ Y_w \\\\ Z_w\\end{array}\\right]+T\\)</p> <p>\u4ee5\u9f50\u6b21\u5750\u6807\u8868\u793a\uff1a \\(\\left[\\begin{array}{c}X_c \\\\ Y_c \\\\ Z_c \\\\ 1\\end{array}\\right]=\\left[\\begin{array}{cc}R_{3 \\times 3} &amp; T_{3 \\times 1} \\\\ 0 &amp; 1\\end{array}\\right]\\left[\\begin{array}{c}X_w \\\\ Y_w \\\\ Z_w \\\\ 1\\end{array}\\right]\\)</p>"},{"location":"IMAGE_PROCESS/01-img0/#13","title":"1.3 \u76f8\u673a\u3001\u56fe\u50cf\u5750\u6807\u7cfb\u8f6c\u6362","text":"<p>\u4ece\u76f8\u673a\u5750\u6807\u7cfb\u5230\u56fe\u50cf\u5750\u6807\u7cfb\u662f\u4ece3D\u8f6c\u6362\u52302D, \u5c5e\u4e8e\u900f\u89c6\u6295\u5f71\u5173\u7cfb\uff0c\u4ee5\u4e0b\u662f\u63a8\u5bfc\u8fc7\u7a0b\uff1a</p> \\[ \\begin{aligned} &amp; \\triangle A B O_c \\sim \\triangle o C O_c \\\\ &amp; \\triangle P B O_c \\sim \\triangle p C O_c \\end{aligned} \\] \\[ \\begin{gathered} \\frac{A B}{o C}=\\frac{A O_c}{o O_c}=\\frac{P B}{p C}=\\frac{X_c}{x}=\\frac{Z_c}{f}=\\frac{Y_c}{y} \\\\ x=f \\frac{X_c}{Z_c}, y=f\\frac{Y_c}{Z_c} \\\\ Z_c\\left[\\begin{array}{l} x \\\\ y \\\\ 1 \\end{array}\\right]=\\left[\\begin{array}{llll} f &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{array}\\right]\\left[\\begin{array}{c} X_c \\\\ Y_c \\\\ Z_c \\\\ 1 \\end{array}\\right] \\end{gathered} \\] <p>\u5f88\u660e\u663e\uff0c\\(Z_c\\)\u662f\u7a7a\u95f4\u70b9\\(P\\)\u7684\u6df1\u5ea6\u4fe1\u606f\u3002\u6b64\u65f6\uff0c\u6295\u5f71\u70b9\\(p\\)\u7684\u5355\u4f4d\u8fd8\u662fmm\uff0c \u5e76\u4e0d\u662f\u50cf\u7d20pixel,\u9700\u8981\u8fdb\u4e00\u6b65\u8f6c\u6362\u5230\u50cf\u7d20\u5750\u6807\u7cfb\u3002</p>"},{"location":"IMAGE_PROCESS/01-img0/#14","title":"1.4 \u56fe\u50cf\u3001\u50cf\u7d20\u5750\u6807\u7cfb\u8f6c\u6362","text":"<p>\u50cf\u7d20\u5750\u6807\u7cfb\u548c\u56fe\u50cf\u5750\u6807\u7cfb\u90fd\u5728\u6210\u50cf\u5e73\u9762\u4e0a\uff0c\u53ea\u662f\u5404\u81ea\u7684\u539f\u70b9\u548c\u5ea6\u91cf\u5355\u4f4d\u4e0d\u4e00\u6837\u3002 - \u56fe\u50cf\u5750\u6807\u7cfb\u7684\u539f\u70b9\u4e3a\u76f8\u673a\u5149\u8f74\u4e0e\u6210\u50cf\u5e73\u9762\u7684\u4ea4\u70b9\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u6210\u50cf\u5e73\u9762\u7684\u4e2d\u5fc3\u3002\u56fe\u50cf\u5750\u6807\u7cfb\u7684\u5355\u4f4d\u662fmm, \u662f\u7269\u7406\u5355\u4f4d\uff0c\u662f\u8fde\u7eed\u7684\uff1b - \u50cf\u7d20\u5750\u6807\u7cfb\u7684\u539f\u70b9\u4e3a\u5de6\u4e0a\u89d2\uff0c\u5355\u4f4dPixel\uff0c\u662f\u79bb\u6563\u7684\uff1b \u4e24\u8005\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u5982\u4e0b:</p> <p></p> <p>\\(\\begin{aligned} &amp; u=\\frac{x}{d x}+u_0 \\\\ &amp; v=\\frac{y}{d y}+v_0\\end{aligned}\\)</p> <p>\u5176\u4e2d\uff0c\\(dx\\)\uff0c\\(dy\\)\uff0c\u4ee3\u8868\u4e86\u6bcf\u4e2a\u50cf\u7d20\u7684\u5b9e\u9645\u4e16\u754c\u4e2d\u7684\u7269\u7406\u8ddd\u79bb\uff0c\u5f53\u7136\u8fd9\u662f\u76f8\u673a\u7684\u56fa\u6709\u53c2\u6570\uff1b</p> <p>\u56fe\u50cf\u5750\u6807\u7cfb\u4e0e\u50cf\u7d20\u5750\u6807\u7cfb\u4e4b\u95f4\u6d89\u53ca\u4e24\u70b9\uff1a \u5ea6\u91cf\u5355\u4f4d\u548c\u5750\u6807\u7cfb\u539f\u70b9\u7684\u8f6c\u6362</p> <p>\u4ee5\u9f50\u6b21\u5750\u6807\u5f62\u5f0f\u8868\u793a\u4e3a\uff1a</p> \\[ \\left[\\begin{array}{c} u \\\\ v \\\\ 1 \\end{array}\\right]=\\left[\\begin{array}{ccc} \\frac{1}{d x} &amp; 0 &amp; u_0 \\\\ 0 &amp; \\frac{1}{d y} &amp; v_0 \\\\ 0 &amp; 0 &amp; 1 \\end{array}\\right]\\left[\\begin{array}{c} x \\\\ y \\\\ 1 \\end{array}\\right] \\] <p>\u6700\u540e\u603b\u7ed3\u4e3a\uff1a $$ \\begin{aligned} Z_c \\left[ \\begin{array}{c} u \\ v \\ 1 \\end{array} \\right] &amp;= \\left[ \\begin{array}{ccc} \\frac{1}{d_x} &amp; 0 &amp; u_0 \\ 0 &amp; \\frac{1}{d_y} &amp; v_0 \\ 0 &amp; 0 &amp; 1 \\end{array} \\right] \\left[ \\begin{array}{ccc} f &amp; 0 &amp; 0 \\ 0 &amp; f &amp; 0 \\ 0 &amp; 0 &amp; 1 \\end{array} \\right]  \\left[ \\begin{array}{cc} R_{3 \\times 3} &amp; T_{3 \\times 1} \\ 0 &amp; 1 \\end{array} \\right] \\left[ \\begin{array}{c} X_w \\ Y_w \\ Z_w \\ 1 \\end{array} \\right] \\ &amp;= \\left[ \\begin{array}{ccc} f_x &amp; 0 &amp; u_0 \\ 0 &amp; f_y &amp; v_0 \\ 0 &amp; 0 &amp; 1 \\end{array} \\right] \\left[ \\begin{array}{cc} R_{3 \\times 3} &amp; T_{3 \\times 1} \\ 0 &amp; 1 \\end{array} \\right] \\left[ \\begin{array}{c} X_w \\ Y_w \\ Z_w \\ 1 \\end{array} \\right] \\end{aligned} $$ \u524d\u8005\u4e3a\u76f8\u673a\u5185\u53c2\uff0c \u540e\u8005\u4e3a\u76f8\u673a\u5916\u53c2</p> <p>\\(Z_c\\)\u662f\u6df1\u5ea6\u4fe1\u606f\uff0c\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5750\u6807\u70b9\uff0c\u53ef\u4ee5\u5728\u56fe\u50cf\u4e2d\u627e\u5230\u4e00\u4e2a\u5bf9\u5e94\u7684\u50cf\u7d20\u70b9\uff0c\u4f46\u662f\uff0c\u901a\u8fc7\u56fe\u50cf\u4e2d\u7684\u4e00\u4e2a\u70b9\u627e\u5230\u5b83\u5728\u7a7a\u95f4\u4e2d\u5bf9\u5e94\u7684\u70b9\u5f88\u96be\uff0c\u56e0\u4e3a\\(Z_c\\)\u6df1\u5ea6\u4fe1\u606f\u672a\u77e5\u3002</p> <p>Note</p> <p>\\(f_x\\), \\(f_y\\) \u662f\u76f8\u673a\u5185\u53c2\u4e2d\u7684\u4e24\u4e2a\u53c2\u6570\uff0c\u4f46\u5e76\u4e0d\u5177\u5907\u7269\u7406\u542b\u4e49\uff0c\u53ea\u662f\u8ba4\u4e3a\u5b9a\u4e49\u7684</p>"},{"location":"IMAGE_PROCESS/01-img0/#2","title":"2. \u89c6\u573a\u89d2","text":"<p>\u89c6\u573a\u89d2\uff08FOV\uff09\u662f\u6307\u76f8\u673a\uff08\u6216\u4eba\u773c\u3001\u955c\u5934\uff09\u80fd\u201c\u770b\u5230\u201d\u7684\u7a7a\u95f4\u89d2\u5ea6\u8303\u56f4\u3002</p> <p>\u5bf9\u4e8e\u900f\u89c6\u6295\u5f71\u7cfb\u7edf\uff08\u9488\u5b54\u76f8\u673a\u6a21\u578b\uff09\uff1a</p> \\[FOV = 2 \\cdot \\arctan\\left(\\frac{\\text{\u4f20\u611f\u5668\u5c3a\u5bf8}}{2 \\cdot \\text{\u7126\u8ddd}}\\right)\\] <p>\u8fd8\u53ef\u4ee5\u6c42\u89e3\u672a\u77e5\u53c2\u6570</p> <ul> <li>\u5df2\u77e5\u7126\u8ddd\u548c\u4f20\u611f\u5668\u5c3a\u5bf8\uff0c\u6c42\u89e3\u89c6\u573a\u89d2</li> <li>\u5df2\u77e5\u7126\u8ddd\u548c\u89c6\u573a\u89d2\uff0c\u6c42\u89e3\u4f20\u611f\u5668\u5c3a\u5bf8</li> <li>\u5df2\u77e5\u89c6\u573a\u89d2\u548c\u4f20\u611f\u5668\u5c3a\u5bf8\uff0c\u6c42\u89e3\u7126\u8ddd</li> </ul> <p>\u53ef\u4ee5\u770b\u5230\uff1a\u7126\u8ddd\u8d8a\u77ed \u2192 \u770b\u5f97\u8d8a\u201c\u5e7f\u201d\uff1b\u4f20\u611f\u5668\u8d8a\u5927 \u2192 \u4e5f\u8d8a\u201c\u5e7f\u201d</p>"},{"location":"IMAGE_PROCESS/01-img0/#21","title":"2.1 \u89c6\u573a\u89d2\u8ba1\u7b97","text":"<ul> <li>\u7269\u7406\u5c3a\u5bf8\u8ba1\u7b97</li> <li>\u76f8\u673a\u5185\u53c2\u8ba1\u7b97</li> </ul> Python<pre><code>import math\n\n# \u7269\u7406\u5c3a\u5bf8\u8ba1\u7b97\nsensor_w = 5.65  # mm\nsensor_h = 3.18  # mm\nfocal = 5.0      # \u7126\u8ddd 5mm\n\nhfov = 2 * math.degrees(math.atan(sensor_w / (2 * focal)))\nvfov = 2 * math.degrees(math.atan(sensor_h / (2 * focal)))\n\nprint(f\"HFOV: {hfov:.2f}\u00b0\")\nprint(f\"VFOV: {vfov:.2f}\u00b0\")\n\n########\n# \u76f8\u673a\u5185\u53c2\u8ba1\u7b97\nHFOV = 2 * arctan( img_width / (2 * fx) )\n</code></pre>"},{"location":"IMAGE_PROCESS/01-img0/#3","title":"3. \u7269\u7406\u7126\u8ddd\u4e0e\u50cf\u7d20\u7126\u8ddd","text":"<p>\u50cf\u7d20\u7126\u8ddd <code>fx</code> :</p> \\[f_x = \\frac{f_{\\text{mm}} \\cdot w_{\\text{px}}}{Sensor_{\\text{mm}}}\\] <p>\u5176\u4e2d\uff1a</p> <ul> <li> <p>\\(f_{\\text{mm}}\\)\uff1a\u7269\u7406\u7126\u8ddd\uff08\u5355\u4f4d\uff1amm\uff09</p> </li> <li> <p>\\(Sensor_{\\text{mm}}\\)\uff1a\u4f20\u611f\u5668\u7684\u5b9e\u9645\u7269\u7406\u5bbd\u5ea6\uff08\u5355\u4f4d\uff1amm\uff09</p> </li> <li> <p>\\(w_{\\text{px}}\\)\uff1a\u56fe\u50cf\u5bbd\u5ea6\uff08\u5355\u4f4d\uff1a\u50cf\u7d20\uff09</p> </li> </ul>"},{"location":"IMAGE_PROCESS/01-img0/#4","title":"4. \u5206\u8fa8\u7387\u5f71\u54cd","text":"<p>\u5047\u5982\u5207\u6362\u6444\u50cf\u5934\u7684\u8f93\u51fa\u5206\u8fa8\u7387\uff0csensor\u7684\u7269\u7406\u5c3a\u5bf8\uff0c\u955c\u5934\u7684\u7126\u8ddd\uff0c\u89c6\u573a\u89d2\u90fd\u4e0d\u4f1a\u6539\u53d8\uff0c\u76f8\u673a\u7684\u5185\u53c2\uff08\u5c24\u5176\u662f fx\u3001fy\u3001cx\u3001cy\uff09\u4f1a\u8fdb\u884c\u89c4\u5f8b\u6027\u7684\u53d8\u5316</p> <p>Python<pre><code># w1\u4e3a\u539f\u59cb\u5206\u8fa8\u7387\uff0cw2\u4e3a\u53d8\u5316\u540e\u7684\u5206\u8fa8\u7387\nscale_x = w2 / w1\nscale_y = h2 / h1\n\nfx2 = fx1 * scale_x\nfy2 = fy1 * scale_y\ncx2 = cx1 * scale_x\ncy2 = cy1 * scale_y\n</code></pre> \u4f46\u662f\u5982\u679c\u4e0d\u662f\u7f29\u653e\uff0c\u800c\u662f\u88c1\u526a\uff0c\u4e5f\u5c31\u662f\u8bf4\u5206\u8fa8\u7387\u4e0d\u662f\u6309\u539f\u59cb\u5206\u8fa8\u7387\u6210\u500d\u53d8\u5316\uff0c\u90a3\u76f8\u673a\u5185\u53c2\u4e0d\u80fd\u76f4\u63a5\u6309\u6bd4\u4f8b\u63a8\u7b97    </p>"},{"location":"IMAGE_PROCESS/01-img0/#5","title":"5. \u611f\u5149\u9762\u79ef","text":"<p>\u611f\u5149\u9762\u79ef = \u56fe\u50cf\u4f20\u611f\u5668\u7684\u7269\u7406\u5c3a\u5bf8</p> <ul> <li>\u5b83\u662f CMOS/CCD \u56fe\u50cf\u4f20\u611f\u5668\u4e2d\u5b9e\u9645\u611f\u5149\u7684\u533a\u57df\u5927\u5c0f\u3002</li> <li>\u901a\u5e38\u5355\u4f4d\u662f\u82f1\u5bf8\uff0c\u5982 1/2.3\"\u30011/2.5\"\u30011/1.8\"\u30011\" \u7b49\uff08\u6ce8\u610f\uff1a\u8fd9\u662f\u201c\u7c7b\u6bd4\u5355\u4f4d\u201d\uff0c\u4e0d\u662f\u5b9e\u5b9e\u5728\u5728\u7684\u82f1\u5bf8\uff09\u3002</li> <li>\u5bf9\u5e94\u771f\u5b9e\u7684\u5bbd\u5ea6\u00d7\u9ad8\u5ea6\uff0c\u6bd4\u5982\uff1a</li> </ul> \u6807\u79f0\u5c3a\u5bf8 \u5bf9\u89d2\u7ebf\uff08\u7ea6\uff09 \u5b9e\u9645\u611f\u5149\u5c3a\u5bf8\uff08W \u00d7 H\uff09 \u611f\u5149\u9762\u79ef\uff08\u7ea6\uff09 1/3\" 6.0 mm 4.8 mm \u00d7 3.6 mm 17.3 mm\u00b2 1/2.9\" 6.2 mm 5.0 mm \u00d7 3.7 mm 18.5 mm\u00b2 1/2.8\" 6.4 mm 5.35 mm \u00d7 3.0 mm 19.6 mm\u00b2 1/2.7\" 6.6 mm 5.37 mm \u00d7 4.04 mm \u2248 21.7 mm\u00b2 1/2.5\" 7.2 mm 5.76 mm \u00d7 4.29 mm \u2248 24.7 mm\u00b2 1/2.3\" 7.7 mm 6.3 mm \u00d7 4.7 mm \u2248 29.6 mm\u00b2 1/1.8\" 9.0 mm 7.2 mm \u00d7 5.4 mm \u2248 38.9 mm\u00b2 1/1.7\" 9.5 mm 7.6 mm \u00d7 5.7 mm \u2248 43.3 mm\u00b2 1\" 16.0 mm 12.8 mm \u00d7 9.6 mm \u2248 122.9 mm\u00b2 <p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u50cf\u7d20\u662f\u89c4\u5219\u5747\u5300\u6392\u5217\u5728\u611f\u5149\u9762\u79ef\u4e0a\u7684,\u6bcf\u4e2a\u50cf\u7d20\u5360\u636e\u611f\u5149\u5668\u4ef6\u4e0a\u7684\u4e00\u4e2a\u201c\u5fae\u5c0f\u533a\u57df\u201d\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684 \u201c\u5355\u4f4d\u50cf\u7d20\u5c3a\u5bf8\u201d\uff0c\u6bd4\u5982 1.4\u03bcm \u00d7 1.4\u03bcm\uff1b\u611f\u5149\u9762\u79ef = \u50cf\u7d20\u603b\u6570 \u00d7 \u5355\u4e2a\u50cf\u7d20\u9762\u79ef\uff08\u5927\u81f4\u53ef\u8fd9\u4e48\u4f30\u7b97\uff09\u3002</p> \u573a\u666f \u611f\u5149\u9762\u79ef \u50cf\u7d20\u6570 \u5355\u4e2a\u50cf\u7d20\u9762\u79ef \u610f\u5473\u7740\u4ec0\u4e48 A: \u5c0f\u5e95 + \u9ad8\u50cf\u7d20 \u5c0f \u591a \u5c0f \u50cf\u7d20\u5bc6\u96c6\uff0c\u4f46\u8fdb\u5149\u5c11\uff0c\u6613\u566a\u58f0 B: \u5927\u5e95 + \u4f4e\u50cf\u7d20 \u5927 \u5c11 \u5927 \u6bcf\u4e2a\u50cf\u7d20\u8fdb\u5149\u591a\uff0c\u4f4e\u7167\u8868\u73b0\u597d C: \u5927\u5e95 + \u9ad8\u50cf\u7d20 \u5927 \u591a \u9002\u4e2d \u517c\u987e\u5206\u8fa8\u7387\u548c\u611f\u5149\u80fd\u529b\uff0c\u4f46\u6210\u672c\u9ad8 <p>\u955c\u5934\u7684\u201c\u611f\u5149\u9762\u79ef\u201d</p> <p>\u5176\u5b9e\u8bf4\u7684\u662f\u955c\u5934\u7684\u201c\u6210\u50cf\u5708\u76f4\u5f84\u201d\uff0c\u4e5f\u53eb\u5149\u5b66\u50cf\u573a\u5927\u5c0f\uff1a</p> <ul> <li>\u6bcf\u9897\u955c\u5934\u90fd\u6709\u4e00\u4e2a\u6700\u5927\u6295\u5f71\u56fe\u50cf\u5708\uff0c\u5355\u4f4d\u4e5f\u662f mm\uff1b</li> <li>\u4e00\u822c\u955c\u5934\u7684\u201c\u611f\u5149\u9762\u79ef\u201d \u2265 \u4f20\u611f\u5668\u7684\u611f\u5149\u5bf9\u89d2\u7ebf\uff0c\u5426\u5219\u56fe\u50cf\u8fb9\u7f18\u4f1a\u201c\u9ed1\u8fb9\u201d\u3001\u201c\u6697\u89d2\u201d\u3002</li> </ul> <p>\u955c\u5934\u548c\u4f20\u611f\u5668\u7684\u9002\u914d\u5173\u7cfb</p> \u955c\u5934\u6210\u50cf\u5708 vs \u4f20\u611f\u5668\u611f\u5149\u9762\u79ef \u9002\u914d\u6548\u679c \u2705 \u955c\u5934\u50cf\u5708 \u2265 \u611f\u5149\u9762\u79ef \u6b63\u5e38\uff0c\u753b\u9762\u4e0d\u88c1\u526a\u65e0\u6697\u89d2 \u26a0\ufe0f \u955c\u5934\u50cf\u5708 &lt; \u611f\u5149\u9762\u79ef \u9ed1\u8fb9\u3001\u6697\u89d2\u3001\u56fe\u50cf\u53d8\u5f62\uff08\u4e25\u91cd\u4e0d\u5339\u914d\uff09 \ud83d\udd04 \u955c\u5934\u50cf\u5708 \u226b \u611f\u5149\u9762\u79ef \u753b\u9762\u88c1\u526a\uff0c\u89c6\u89d2\u53d8\u5c0f\uff0c\u76f8\u5f53\u4e8e\u201c\u653e\u5927\u201d\u6548\u679c\uff08\u7b49\u6548\u7126\u8ddd\u53d8\u957f\uff09"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/","title":"\u65e0\u4eba\u673a\u5b9a\u4f4d\u6570\u636e\u96c6\u5236\u4f5c","text":"<p>\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u6b65\u9aa4\uff1a </p> <ul> <li> <p>\u901a\u8fc7ODM\u5c06\u62cd\u6444\u7684\u56fe\u50cf\u8f6c\u6362\u6210\u6b63\u5c04\u5730\u56fe  </p> </li> <li> <p>\u901a\u8fc7QGIS\u5c06\u6b63\u5c04\u5730\u56fe\u4e0e\u8c37\u6b4c\u5730\u56fe\u5bf9\u9f50  </p> </li> <li> <p>\u901a\u8fc7python\u5c06\u5bf9\u9f50\u540e\u7684\u5730\u56fe\u8fdb\u884c\u88c1\u526a   </p> </li> </ul>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#odm","title":"ODM","text":"<p>OpenDroneMap (ODM) \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u8f6f\u4ef6\u9879\u76ee\uff0c\u7528\u4e8e\u5904\u7406\u4ece\u65e0\u4eba\u673a\u83b7\u53d6\u7684\u56fe\u50cf\u6570\u636e\uff0c\u5e76\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u5730\u7406\u7a7a\u95f4\u4fe1\u606f\u4ea7\u54c1\u3002\u4ee5\u4e0b\u662f\u5bf9 OpenDroneMap \u7684\u8be6\u7ec6\u4ecb\u7ecd\uff1a * \u56fe\u50cf\u62fc\u63a5\uff08Orthophoto Generation\uff09\uff1a         ODM \u80fd\u591f\u5c06\u65e0\u4eba\u673a\u62cd\u6444\u7684\u91cd\u53e0\u56fe\u50cf\u62fc\u63a5\u6210\u9ad8\u5206\u8fa8\u7387\u7684\u6b63\u5c04\u5f71\u50cf\uff08orthophoto\uff09</p> <ul> <li> <p>\u4e09\u7ef4\u6a21\u578b\u91cd\u5efa\uff083D Reconstruction\uff09\uff1a         \u5c06\u4e8c\u7ef4\u56fe\u50cf\u8f6c\u6362\u4e3a\u4e09\u7ef4\u6a21\u578b\uff0c\u5305\u62ec\u70b9\u4e91\u3001\u7f51\u683c\u548c\u7eb9\u7406\u6a21\u578b</p> </li> <li> <p>\u6570\u5b57\u8868\u9762\u6a21\u578b\uff08DSM\uff09\u548c\u6570\u5b57\u9ad8\u7a0b\u6a21\u578b\uff08DEM\uff09\u751f\u6210\uff1a         ODM \u53ef\u4ee5\u751f\u6210 DSM \u548c DEM\uff0c\u5206\u522b\u8868\u793a\u5730\u8868\u7269\u4f53\u548c\u5730\u5f62\u7684\u9ad8\u7a0b\u6570\u636e\u3002</p> </li> <li> <p>\u591a\u5149\u8c31\u548c\u70ed\u6210\u50cf\u6570\u636e\u5904\u7406\uff1a         \u9664\u4e86\u53ef\u89c1\u5149\u56fe\u50cf\uff0cODM \u8fd8\u652f\u6301\u591a\u5149\u8c31\u548c\u70ed\u6210\u50cf\u6570\u636e\u7684\u5904\u7406\u3002</p> </li> </ul> <p>ODM\u9879\u76eegithub\u5730\u5740\uff1ahttps://github.com/OpenDroneMap/ODM ODM\u9879\u76ee\u6587\u6863\uff1ahttps://docs.opendronemap.org/</p>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#1","title":"1.\u5feb\u901f\u5f00\u59cb","text":"<p>\u4f7f\u7528docker\u8fd0\u884cODM, \u9996\u5148\u62c9\u53d6\u955c\u50cf <code>sudo docker pull opendronemap/opendronemap</code> , \u6b64\u955c\u50cf\u5df2\u5f03\u7528</p> <p>\u62c9\u53d6\u955c\u50cf Bash<pre><code>sudo docker pull opendronemap/odm\n</code></pre></p> <p>Note</p> <p>\u62c9\u53d6\u8fd9\u4e2a\u955c\u50cf\u9700\u8981\u4ee3\u7406\u670d\u52a1\u5668</p> <p>Bash<pre><code>xujg@xujg-ps:~$ sudo docker images\nREPOSITORY                  TAG       IMAGE ID       CREATED        SIZE\nopendronemap/odm            latest    e3d462eb2c32   26 hours ago   1.61GB\nhello-world                 latest    feb5d9fea6a5   2 years ago    13.3kB\nopendronemap/opendronemap   latest    8c89143494c7   5 years ago    3.04GB\n</code></pre> \u793a\u4f8b\u6570\u636e\u96c6\u5728\uff1a  https://github.com/OpenDroneMap/odm_data </p> <p>\u4f8b\u5982pull aukerman\u6570\u636e\u96c6 \u5728\u4ed3\u5e93\u6839\u76ee\u5f55\u4e0b\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a Bash<pre><code>sudo docker run -it --rm \\\n    -v \"$(pwd)/images:/code/images\" \\\n    -v \"$(pwd)/odm_orthophoto:/code/odm_orthophoto\" \\\n    -v \"$(pwd)/odm_texturing:/code/odm_texturing\" \\\n    opendronemap/opendronemap\n</code></pre></p>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#2","title":"2.\u8f93\u5165\u6570\u636e","text":"<p>\u65e0\u4eba\u673a\u62cd\u6444\u7684\u91cd\u53e0\u56fe\u50cf\u3002\u8fd9\u4e9b\u56fe\u50cf\u53ef\u4ee5\u662f\u666e\u901a\u7684\u53ef\u89c1\u5149\u56fe\u50cf\u3001\u591a\u5149\u8c31\u56fe\u50cf\u6216\u70ed\u6210\u50cf\u56fe\u50cf\u3002\u56fe\u50cf\u5e94\u5177\u6709\u8db3\u591f\u7684\u91cd\u53e0\u5ea6\uff0c\u901a\u5e38\u5efa\u8bae 60-80% \u7684\u524d\u5411\u91cd\u53e0\uff08\u6cbf\u98de\u884c\u65b9\u5411\uff09\u548c\u4fa7\u5411\u91cd\u53e0\uff08\u5782\u76f4\u4e8e\u98de\u884c\u65b9\u5411\uff09\u3002</p>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#3","title":"3.\u8f93\u51fa\u6570\u636e","text":"<p>\u6b63\u5c04\u5f71\u50cf (Orthophoto)\uff1a</p> Text Only<pre><code>\u9ad8\u5206\u8fa8\u7387\u3001\u5730\u7406\u6821\u6b63\u540e\u7684\u6b63\u5c04\u5f71\u50cf\uff0c\u901a\u5e38\u4ee5 GeoTIFF \u683c\u5f0f\u5b58\u50a8\u3002\n</code></pre> <p>\u4e09\u7ef4\u6a21\u578b (3D Model)\uff1a</p> Text Only<pre><code>\u5305\u62ec\u70b9\u4e91\uff08Point Cloud\uff09\u3001\u7f51\u683c\u6a21\u578b\uff08Mesh\uff09\u548c\u7eb9\u7406\u6a21\u578b\uff08Textured Model\uff09\uff0c\u901a\u5e38\u4ee5 .obj \u6216 .ply \u683c\u5f0f\u5b58\u50a8\u3002\n</code></pre> <p>\u6570\u5b57\u8868\u9762\u6a21\u578b (DSM) \u548c \u6570\u5b57\u9ad8\u7a0b\u6a21\u578b (DEM)\uff1a</p> Text Only<pre><code>\u8868\u793a\u5730\u8868\u548c\u5730\u5f62\u7684\u9ad8\u7a0b\u6570\u636e\uff0c\u901a\u5e38\u4ee5 GeoTIFF \u683c\u5f0f\u5b58\u50a8\u3002\n</code></pre> <p>Danger</p> <p>\u5982\u679c\u8f93\u5165\u56fe\u50cf\u6570\u636e\u6ca1\u6709EXIF\u4fe1\u606f\uff0c \u5219\u9700\u8981\u52a0\u5730\u7406\u4fe1\u606f\uff0c \u5426\u5219\u8868\u9762\u7eb9\u7406\u6620\u5c04\uff0c\u6570\u5b57\u9ad8\u7a0b\u6a21\u578b\uff0c\u6b63\u5c04\u56fe\u50cf\u90fd\u6ca1\u529e\u6cd5\u5f97\u5230</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u52a0\u5165<code>geo.txt</code>(\u5730\u7406\u4fe1\u606f)\uff0c \u6b64\u65f6ODM\u4f1a\u81ea\u52a8\u68c0\u6d4b\u5230\u5b83\uff0c\u5982\u679c\u5b83\u6709\u5176\u4ed6\u540d\u79f0\uff0c\u5219\u9700\u8981\u6307\u5b9a \u683c\u5f0f\u5982\u4e0b\uff1a Text Only<pre><code>EPSG:4326\nstamp66284.jpg 116.3104629517 38.1277542114 115.0\nstamp27289.jpg 116.2984924316 38.1408538818 115.0\nstamp56536.jpg 116.292350769 38.1299972534 114.0\n</code></pre></p> <p>\u6267\u884cODM\u547d\u4ee4\u793a\u4f8b\uff1a Bash<pre><code>sudo docker run -it --rm     \\\n-v \"/home/xujg/code/project:/datasets\"      \\\nopendronemap/odm     /datasets\n</code></pre></p> <p>\u8f93\u51fa\uff1a Text Only<pre><code>\u8be5\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u7ed3\u679c\u5c06\u6309\u5982\u4e0b\u65b9\u5f0f\u7ec4\u7ec7\uff1a\n\n|-- images/\n    |-- img-1234.jpg\n    |-- ...\n|-- opensfm/\n    |-- see mapillary/opensfm repository for more info\n|-- odm_meshing/\n    |-- odm_mesh.ply                    # A 3D mesh\n|-- odm_texturing/\n    |-- odm_textured_model.obj          # Textured mesh\n    |-- odm_textured_model_geo.obj      # Georeferenced textured mesh\n|-- odm_georeferencing/\n    |-- odm_georeferenced_model.laz     # LAZ format point cloud\n|-- odm_orthophoto/\n    |-- odm_orthophoto.tif              # Orthophoto GeoTiff\n</code></pre></p>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#_2","title":"\u5c06\u6b63\u5c04\u5f71\u50cf\u4e0e\u8c37\u6b4c\u5730\u56fe\u5bf9\u9f50","text":"<p>\u4f7f\u7528QGIS\u7b49GIS\u8f6f\u4ef6\uff0c\u5c06\u6b63\u5c04\u5f71\u50cf\u4e0e\u8c37\u6b4c\u5730\u56fe\u5bf9\u9f50\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u6b65\u9aa4\uff1a</p>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#1qgis","title":"1.\u5b89\u88c5QGIS","text":"<p>\u4e0b\u8f7d\u94fe\u63a5https://www.qgis.org/en/site/forusers/alldownloads.html#debian-ubuntu </p> <p>\u4f7f\u7528\u6559\u7a0b: https://www.osgeo.cn/qgisdoc/docs/user_manual/index.html</p>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#2_1","title":"2.\u5bfc\u5165\u6b63\u5c04\u5f71\u50cf","text":"<p>\u6253\u5f00QGIS</p> <ul> <li>\u70b9\u51fb\u201c\u56fe\u5c42\u201d-&gt;\u201c\u6dfb\u52a0\u56fe\u5c42\u201d-&gt;\u201c\u6dfb\u52a0\u6805\u683c\u56fe\u5c42\u201d\u3002</li> <li>\u9009\u62e9\u6b63\u5c04\u5f71\u50cf\u6587\u4ef6\uff08\u5982 odm_orthophoto.tif\uff09\u5e76\u70b9\u51fb\u201c\u6253\u5f00\u201d\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#_3","title":"\u6dfb\u52a0\u8c37\u6b4c\u5730\u56fe\u5e95\u56fe","text":"<ul> <li>\u5728QGIS\u4e2d\uff0c\u70b9\u51fb\u201c\u63d2\u4ef6\u201d-&gt;\u201c\u7ba1\u7406\u548c\u5b89\u88c5\u63d2\u4ef6\u201d\u3002</li> <li>\u641c\u7d22\u5e76\u5b89\u88c5\u201cQuickMapServices\u201d\u63d2\u4ef6\u3002</li> <li>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u201cWeb\u201d-&gt;\u201cQuickMapServices\u201d-&gt;\u201cOSM\u201d-&gt;\u201cGoogle\u201d-&gt;\u201cGoogle Satellite\u201d\u3002</li> </ul> <p>\u5982\u679cOSM\u4e2d\u6ca1\u6709Google\uff0c \u53ef\u4ee5\u70b9\u51fbOSM\u4e2d\u7684setting-&gt;More services\u8fdb\u884c\u4e0b\u8f7d</p>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#_4","title":"\u53ef\u4ee5\u5207\u6362\u6210\u4e2d\u6587\uff0c\u5e76\u8bbe\u7f6e\u4ee3\u7406\u670d\u52a1\u5668","text":""},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#3_1","title":"3.\u5bf9\u9f50\u6b63\u5c04\u5f71\u50cf","text":""},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#geo-tiff","title":"\u8bbe\u7f6e\u7a7a\u95f4\u5206\u8fa8\u7387\u53ca\u91cd\u6295\u5f71Geo-TIFF\u6587\u4ef6","text":"<ul> <li>\u53f3\u952e\u8be5\u6587\u4ef6-&gt; \u6253\u5f00\u5c5e\u6027 -&gt; \u4fe1\u606f -&gt; \u67e5\u770b\u5750\u6807\u53c2\u8003\u7cfbCRS </li> <li>\u6805\u683c-&gt; \u6295\u5f71 -&gt; \u53d8\u5f62\uff08\u91cd\u6295\u5f71\uff1a</li> <li>\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\uff0c\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a<ul> <li>Input Layer\uff08\u8f93\u5165\u56fe\u5c42\uff09\uff1a\u9009\u62e9\u4f60\u7684\u6805\u683c\u56fe\u5c42</li> <li>Source CRS\uff08\u6e90CRS\uff09\uff1a\u9009\u62e9\u5f53\u524d\u6805\u683c\u6570\u636e\u7684CRS</li> <li>Target CRS\uff08\u76ee\u6807CRS\uff09\uff1a\u9009\u62e9EPSG:3857</li> <li>Resampling method\uff08\u91cd\u91c7\u6837\u65b9\u6cd5\uff09\uff1a\u9009\u62e9\u9002\u5408\u4f60\u7684\u6570\u636e\u7684\u91cd\u91c7\u6837\u65b9\u6cd5\uff08\u4f8b\u5982\uff0cBilinear \u6216 Cubic\uff09</li> <li>\u8f93\u51fa\u6587\u4ef6\u5206\u8fa8\u7387\u9009\u62e9\uff1a1.00000</li> <li>Output file\uff08\u8f93\u51fa\u6587\u4ef6\uff09\uff1a\u9009\u62e9\u4fdd\u5b58\u91cd\u6295\u5f71\u6805\u683c\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d</li> </ul> </li> </ul> <p>Note</p> <p>\u4f7f\u7528gdalinfo\u67e5\u770bGeotiff\u6587\u4ef6\u7684\u4fe1\u606f <code>gdalinfo yourfile.tif</code></p>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#4googlegeotiff","title":"4.\u5bfc\u51fagoogle\u5730\u56fe\u4e3aGeoTIFF\u683c\u5f0f","text":"<ul> <li>\u9009\u62e9<code>google</code>\u5730\u56fe\u56fe\u5c42\uff0c\u53f3\u952e\u5bfc\u51fa\uff0c \u53e6\u5b58\u4e3a</li> <li>\u4e0d\u521b\u5efa<code>VRT</code></li> <li>\u586b\u5199\u6587\u4ef6\u540d</li> <li>CRS: <code>EPSG:3857 - WGS  84</code></li> <li>\u8303\u56f4\u9009\u62e9\u4e0e\u91cd\u91c7\u6837\u6295\u5f71\u76f8\u540c\u7684\u5927\u5c0f</li> <li>\u5206\u8fa8\u7387\u4e0e\u91cd\u6295\u5f71\u8bbe\u7f6e\u4e00\u81f4\uff0c\u4f8b\u5982\u90fd\u4e3a1\uff0c \u6b64\u65f6\u8f93\u51fa\u7684<code>google.tiff</code>\u7a7a\u95f4\u5206\u8fa8\u7387\u53ca\u5c3a\u5bf8\u4e0e\u6b63\u5c04\u5f71\u50cf\u7684\u5747\u4e00\u81f4</li> </ul>"},{"location":"IMAGE_PROCESS/02-OpenDroneMap/#_5","title":"\u5730\u56fe\u88c1\u526a","text":"<p>\u5728\u5bfc\u51fa\u7684<code>Geotiff</code>\u4e2d\uff0c<code>odm_orthophoto.tif</code>\u548c<code>google.tif</code>\u8bbe\u7f6e\u4e86\u76f8\u540c\u7684\u7a7a\u95f4\u5206\u8fa8\u7387(1m/pt)\uff0c \u5c3a\u5bf8\u5927\u5c0f\u4e5f\u76f8\u540c</p> <p>\u4f7f\u7528python\u8fdb\u884c\u4ee5\u4e0b\u5904\u7406\uff1a  </p> <ul> <li> <p>1.\u6cbf<code>odm_orthophoto.tif</code>\u6587\u4ef6\u88c1\u526a\uff0c \u50cf\u7d20\u5927\u5c0f\u4e3a\\(512\\times512\\)\uff0c \u6b65\u957f\u4e3a32  </p> </li> <li> <p>2.\u5750\u6807\u91c7\u7528\\(512\\times512\\)\u5b50\u56fe\u4e2d\u5fc3\u70b9\u7684\u4f4d\u7f6e\u5750\u6807\uff0c\u5e76\u5c06<code>EPSG:3857</code>\u8f6c\u6362\u4e3a<code>UTM</code>\u5750\u6807  </p> </li> <li> <p>3.\u91c7\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u5bf9<code>google.tif</code>\u6587\u4ef6\u8fdb\u884c\u88c1\u526a  </p> </li> <li> <p>4.\u6570\u636e\u7b5b\u9009\u53ca\u6e05\u6d17  </p> </li> </ul>"},{"location":"IMAGE_PROCESS/03-reprojection/","title":"\u900f\u5c04\u53d8\u6362\u4e0e\u91cd\u6295\u5f71","text":""},{"location":"IMAGE_PROCESS/03-reprojection/#_2","title":"\u900f\u5c04\u53d8\u6362","text":"<p>\u900f\u5c04\u53d8\u6362\u662f\u6307\u57282D\u56fe\u50cf\u4e2d\u5c06\u4e00\u4e2a\u5e73\u9762\u53d8\u6362\u5230\u53e6\u4e00\u4e2a\u5e73\u9762\u7684\u8fc7\u7a0b\u3002\u8fd9\u79cd\u53d8\u6362\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a3x3\u7684\u77e9\u9635\u6765\u8868\u793a\uff0c\u9002\u7528\u4e8e\u56db\u4e2a\u70b9\u7684\u5339\u914d\u3002\u8fd9\u79cd\u53d8\u6362\u5e38\u7528\u4e8e\u56fe\u50cf\u914d\u51c6\u3001\u56fe\u50cf\u62fc\u63a5\u7b49\u5e94\u7528\u573a\u666f\u3002\u900f\u5c04\u53d8\u6362\u53ef\u4ee5\u5904\u7406\u65cb\u8f6c\u3001\u7f29\u653e\u3001\u5e73\u79fb\u4ee5\u53ca\u900f\u89c6\u53d8\u5f62\u3002</p> <p>\u900f\u5c04\u53d8\u6362\u53ef\u4ee5\u8868\u793a\u4e3a\u5982\u4e0b\u5f62\u5f0f\uff1a</p> <p>\\(\\begin{pmatrix} x' \\\\ y' \\\\ w' \\end{pmatrix} = \\begin{pmatrix} h_{11} &amp; h_{12} &amp; h_{13} \\\\ h_{21} &amp; h_{22} &amp; h_{23} \\\\ h_{31} &amp; h_{32} &amp; h_{33} \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\\\ 1 \\end{pmatrix}\\)</p> <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\((x, y)\\) \u662f\u539f\u56fe\u50cf\u4e2d\u7684\u70b9\u3002</li> <li>\\((x', y')\\) \u662f\u76ee\u6807\u56fe\u50cf\u4e2d\u7684\u70b9\u3002</li> <li>\\(H\\) \u662f 3x3 \u7684\u900f\u5c04\u53d8\u6362\u77e9\u9635\uff0c\u5305\u542b9\u4e2a\u53c2\u6570 \\(h_{ij}\\)\u3002</li> <li>\\(w'\\) \u662f\u4e00\u4e2a\u5f52\u4e00\u5316\u56e0\u5b50\u3002</li> </ul> <p>\u4e3a\u4e86\u5f97\u5230\u6700\u7ec8\u7684\u56fe\u50cf\u5750\u6807 \\((x', y')\\)\uff0c\u9700\u8981\u8fdb\u884c\u5f52\u4e00\u5316\uff1a</p> <p>\\(x' = \\frac{h_{11}x + h_{12}y + h_{13}}{h_{31}x + h_{32}y + h_{33}}\\) \uff0c\\(y' = \\frac{h_{21}x + h_{22}y + h_{23}}{h_{31}x + h_{32}y + h_{33}}\\)</p>"},{"location":"IMAGE_PROCESS/03-reprojection/#_3","title":"\u6c42\u89e3\u900f\u5c04\u53d8\u6362\u77e9\u9635","text":"<p>\u4e3a\u4e86\u8ba1\u7b97\u900f\u5c04\u53d8\u6362\u77e9\u9635 \\(H\\)\uff0c\u6211\u4eec\u9700\u8981\u81f3\u5c11\u56db\u5bf9\u5bf9\u5e94\u70b9 \\((x_i, y_i)\\) \u548c \\((x'_i, y'_i)\\)\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e9b\u70b9\u6765\u6c42\u89e3 \\(H\\)\u3002\u4e0b\u9762\u662f\u6c42\u89e3 \\(H\\) \u7684\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u6784\u5efa\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1a \u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u70b9 \\((x_i, y_i)\\) \u548c \\((x'_i, y'_i)\\)\uff0c\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u7ebf\u6027\u65b9\u7a0b\uff1a</p> <p>\\(\\begin{cases} h_{11}x_i + h_{12}y_i + h_{13} - h_{31}x_ix'_i - h_{32}y_ix'_i - h_{33}x'_i = 0 \\\\ h_{21}x_i + h_{22}y_i + h_{23} - h_{31}x_iy'_i - h_{32}y_iy'_i - h_{33}y'_i = 0 \\end{cases}\\) 2.  \u6784\u5efa\u77e9\u9635\u65b9\u7a0b\uff1a \u5c06\u4e0a\u9762\u7684\u65b9\u7a0b\u7ec4\u8f6c\u6362\u4e3a\u77e9\u9635\u5f62\u5f0f \\(A\\vec{h} = 0\\)\uff0c\u5176\u4e2d \\(A\\) \u662f 2n x 9 \u7684\u77e9\u9635\uff0c\\(\\vec{h}\\) \u662f\u5305\u542b \\(h_{ij}\\) \u7684\u5217\u5411\u91cf\uff1a</p> <p>\\(A = \\begin{pmatrix} x_1 &amp; y_1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; -x_1x'_1 &amp; -y_1x'_1 &amp; -x'_1 \\\\ 0 &amp; 0 &amp; 0 &amp; x_1 &amp; y_1 &amp; 1 &amp; -x_1y'_1 &amp; -y_1y'_1 &amp; -y'_1 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ x_n &amp; y_n &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; -x_nx'_n &amp; -y_nx'_n &amp; -x'_n \\\\ 0 &amp; 0 &amp; 0 &amp; x_n &amp; y_n &amp; 1 &amp; -x_ny'_n &amp; -y_ny'_n &amp; -y'_n \\end{pmatrix}\\) 3.  \u6c42\u89e3\u65b9\u7a0b\uff1a \u4f7f\u7528\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\u6c42\u89e3 \\(A\\vec{h} = 0\\) \u7684\u6700\u5c0f\u4e8c\u4e58\u89e3\u3002</p> </li> </ol> <p>\u4ee5\u4e0b\u9762\u4ee3\u7801\u4e3e\u4f8b Python<pre><code>import cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u751f\u6210\u4e00\u4e2a\u793a\u4f8b\u56fe\u50cf (640x512)\uff0c\u53ef\u4ee5\u66ff\u6362\u4e3a\u5b9e\u9645\u56fe\u50cf\u8bfb\u53d6\nimage = np.zeros((512, 640, 3), dtype=np.uint8)\ncv2.rectangle(image, (150, 100), (500, 400), (255, 255, 255), -1)  # \u753b\u4e00\u4e2a\u767d\u8272\u77e9\u5f62\n\n# \u5b9a\u4e49\u539f\u56fe\u50cf\u4e2d\u7684\u56db\u4e2a\u70b9\uff08\u4f8b\u5982\uff0c\u77e9\u5f62\u7684\u56db\u4e2a\u89d2\uff09\npts_src = np.array([[150, 100], [500, 100], [500, 400], [150, 400]])\n\n# \u5b9a\u4e49\u76ee\u6807\u56fe\u50cf\u4e2d\u7684\u56db\u4e2a\u70b9\uff08\u5c06\u77e9\u5f62\u53d8\u5f62\u4e3a\u4efb\u610f\u56db\u8fb9\u5f62\uff09\npts_dst = np.array([[100, 50], [540, 80], [500, 460], [140, 480]])\n\n# \u8ba1\u7b97\u900f\u5c04\u53d8\u6362\u77e9\u9635\nh, status = cv2.findHomography(pts_src, pts_dst)\n\n# \u4f7f\u7528\u900f\u5c04\u53d8\u6362\u77e9\u9635\u5bf9\u56fe\u50cf\u8fdb\u884c\u53d8\u6362\nim_out = cv2.warpPerspective(image, h, (640, 512))\n\n# \u663e\u793a\u539f\u56fe\u50cf\u548c\u53d8\u6362\u540e\u7684\u56fe\u50cf\nplt.figure(figsize=(12, 6))\nplt.subplot(121)\nplt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))\nplt.title('Original Image')\n\nplt.subplot(122)\nplt.imshow(cv2.cvtColor(im_out, cv2.COLOR_BGR2RGB))\nplt.title('Warped Image')\n\nplt.show()\n</code></pre></p> <p></p>"},{"location":"IMAGE_PROCESS/03-reprojection/#_4","title":"\u91cd\u6295\u5f71","text":"<p>\u91cd\u6295\u5f71\u5219\u662f\u6307\u5c06\u4e09\u7ef4\u70b9\u901a\u8fc7\u6295\u5f71\u77e9\u9635\u6295\u5f71\u5230\u4e8c\u7ef4\u56fe\u50cf\u5e73\u9762\u4e0a\u3002\u5b83\u6307\u7684\u662f\u5c06\u4e09\u7ef4\u4e16\u754c\u7684\u70b9\u91cd\u65b0\u6620\u5c04\u5230\u4e8c\u7ef4\u56fe\u50cf\u5e73\u9762\u4e0a\u7684\u8fc7\u7a0b\u3002\u8fd9\u5728\u7acb\u4f53\u89c6\u89c9\u3001\u56fe\u50cf\u62fc\u63a5\u548c3D\u91cd\u5efa\u4e2d\u975e\u5e38\u5e38\u89c1\u3002</p>"},{"location":"IMAGE_PROCESS/03-reprojection/#_5","title":"\u91cd\u6295\u5f71\u7684\u8fc7\u7a0b","text":"<p>\u91cd\u6295\u5f71\u7684\u8fc7\u7a0b\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a * 3D\u70b9\u5750\u6807\u53d8\u6362\u5230\u76f8\u673a\u5750\u6807\u7cfb\uff1a\u5c06\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u76843D\u70b9\u8f6c\u6362\u5230\u76f8\u673a\u5750\u6807\u7cfb  </p> <ul> <li> <p>\u901a\u8fc7\u76f8\u673a\u6295\u5f71\u52302D\u5e73\u9762\uff1a\u4f7f\u7528\u76f8\u673a\u7684\u5185\u53c2\u77e9\u9635\u5c063D\u70b9\u6295\u5f71\u52302D\u56fe\u50cf\u5e73\u9762  </p> </li> <li> <p>\u8003\u8651\u900f\u89c6\u53d8\u6362\u548c\u7578\u53d8\uff1a\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u8fd8\u9700\u8981\u8003\u8651\u900f\u89c6\u53d8\u6362\u548c\u76f8\u673a\u955c\u5934\u7684\u7578\u53d8  </p> </li> </ul>"},{"location":"IMAGE_PROCESS/03-reprojection/#1","title":"1. \u76f8\u673a\u6295\u5f71\u77e9\u9635\u8ba1\u7b97","text":"<p>\u76f8\u673a\u6295\u5f71\u77e9\u9635 \ud835\udc43\u662f\u901a\u8fc7\u76f8\u673a\u5185\u53c2\u77e9\u9635 \ud835\udc3e\u548c\u5916\u53c2\uff08\u65cb\u8f6c\u77e9\u9635\ud835\udc45\u548c\u5e73\u79fb\u5411\u91cf \ud835\udc61\u8ba1\u7b97\u5f97\u5230\u7684\u3002</p>"},{"location":"IMAGE_PROCESS/03-reprojection/#_6","title":"\u76f8\u673a\u5185\u53c2\u77e9\u9635","text":"\\[ K = \\begin{pmatrix}     f_x &amp; 0 &amp; c_x \\\\ 0 &amp; f_y &amp; c_y \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"IMAGE_PROCESS/03-reprojection/#r","title":"\u65cb\u8f6c\u77e9\u9635 \\( R \\):","text":"<p>\u65cb\u8f6c\u77e9\u9635 \\( R \\) \u662f\u7531\u4e09\u4e2a\u65cb\u8f6c\u77e9\u9635\uff08\u7ed5 Z \u8f74\u7684\u504f\u822a\u89d2 \\( \\theta_z \\)\uff0c\u7ed5 Y \u8f74\u7684\u4fef\u4ef0\u89d2 \\( \\theta_y \\)\uff0c\u7ed5 X \u8f74\u7684\u6eda\u8f6c\u89d2 \\( \\theta_x \\)\uff09\u7ec4\u6210\u7684\uff1a  </p> \\[ R = R_z(\\theta_z) \\cdot R_y(\\theta_y) \\cdot R_x(\\theta_x) \\] <p>\u5176\u4e2d\uff1a  </p> \\[ R_z(\\theta_z) = \\begin{pmatrix} \\cos(\\theta_z) &amp; -\\sin(\\theta_z) &amp; 0 \\\\ \\sin(\\theta_z) &amp; \\cos(\\theta_z) &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] \\[ R_y(\\theta_y) = \\begin{pmatrix} \\cos(\\theta_y) &amp; 0 &amp; \\sin(\\theta_y) \\\\ 0 &amp; 1 &amp; 0 \\\\ -\\sin(\\theta_y) &amp; 0 &amp; \\cos(\\theta_y) \\end{pmatrix} \\] \\[ R_x(\\theta_x) = \\begin{pmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; \\cos(\\theta_x) &amp; -\\sin(\\theta_x) \\\\ 0 &amp; \\sin(\\theta_x) &amp; \\cos(\\theta_x) \\end{pmatrix} \\]"},{"location":"IMAGE_PROCESS/03-reprojection/#t","title":"\u5e73\u79fb\u5411\u91cf \\( t \\):","text":"\\[ t = \\begin{pmatrix} t_x \\\\ t_y \\\\ t_z \\end{pmatrix} \\]"},{"location":"IMAGE_PROCESS/03-reprojection/#p","title":"\u6295\u5f71\u77e9\u9635 \\( P \\):","text":"\\[ P = K \\cdot [R | t] \\]"},{"location":"IMAGE_PROCESS/03-reprojection/#2","title":"2. \u56fe\u50cf\u5750\u6807\u5230\u5730\u9762\u5750\u6807\u7684\u8f6c\u6362","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u56fe\u50cf\u50cf\u7d20\u5750\u6807 \\( (u, v) \\)\uff0c\u53ef\u4ee5\u8ba1\u7b97\u5176\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684\u4e09\u7ef4\u70b9 \\( (X, Y, Z) \\)\uff1a  </p> \\[ \\begin{pmatrix} X \\\\ Y \\\\ Z \\\\ 1 \\end{pmatrix} = P_{\\text{inv}} \\cdot \\begin{pmatrix} u \\\\ v \\\\ 1 \\end{pmatrix} \\] <p>\u5176\u4e2d \\( P_{\\text{inv}} \\) \u662f\u6295\u5f71\u77e9\u9635\u7684\u4f2a\u9006\u77e9\u9635\u3002</p>"},{"location":"IMAGE_PROCESS/03-reprojection/#3","title":"3. \u4f7f\u7528\u5730\u9762\u9ad8\u7a0b\u8fdb\u884c\u5f52\u4e00\u5316","text":"<p>\u5047\u8bbe\u5730\u9762\u9ad8\u7a0b\u4e3a \\( Z = H \\)\uff0c\u5219\uff1a  </p> \\[ \\begin{pmatrix} X' \\\\ Y' \\\\ H \\\\ 1 \\end{pmatrix} = \\frac{H}{Z} \\cdot \\begin{pmatrix} X \\\\ Y \\\\ Z \\\\ 1 \\end{pmatrix} \\]"},{"location":"IMAGE_PROCESS/03-reprojection/#4","title":"4. \u5730\u9762\u5750\u6807\u6620\u5c04\u5230\u6b63\u5c04\u56fe\u50cf","text":"<p>\u5c06\u5730\u9762\u5750\u6807 \\( (X', Y') \\) \u6620\u5c04\u5230\u6b63\u5c04\u56fe\u50cf\u5750\u6807 \\( (u', v') \\)\uff1a  </p> \\[ u' = \\frac{X'}{\\Delta X} + u_0 \\] \\[ v' = \\frac{Y'}{\\Delta Y} + v_0 \\] <p>\u5176\u4e2d \\( \\Delta X \\) \u548c \\( \\Delta Y \\) \u662f\u5730\u9762\u5750\u6807\u5230\u50cf\u7d20\u5750\u6807\u7684\u6bd4\u4f8b\u56e0\u5b50\uff0c\\( (u_0, v_0) \\) \u662f\u6b63\u5c04\u56fe\u50cf\u7684\u4e2d\u5fc3\u5750\u6807\u3002</p>"},{"location":"IMAGE_PROCESS/04-ord/","title":"\u503e\u659c\u56fe\u50cf\u53d8\u6362\u6b63\u5c04\u56fe\u50cf","text":""},{"location":"IMAGE_PROCESS/04-ord/#_2","title":"\u65b9\u6cd5\u4e00","text":"<ol> <li> <p>\u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635 \u6839\u636e\u4fef\u4ef0\u89d2(pitch)\uff0c\u504f\u822a\u89d2(yaw)\uff0c\u6eda\u8f6c\u89d2(roll)\u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635\u3002</p> </li> <li> <p>\u5b9a\u4e49\u539f\u56fe\u50cf\u4e2d\u7684\u56db\u4e2a\u70b9 \u5b9a\u4e49\u56fe\u50cf\u56db\u4e2a\u89d2\u70b9\u7684\u5750\u6807\uff0c\u5982 \\((0, 0)\\)\u3001\\((width-1, 0)\\)\u3001\\((width-1, height-1)\\) \u548c \\((0, height-1)\\)\u3002</p> </li> <li> <p>\u8ba1\u7b97\u76ee\u6807\u56fe\u50cf\u7684\u56db\u4e2a\u70b9 \u901a\u8fc7\u65cb\u8f6c\u77e9\u9635\u8ba1\u7b97\u76ee\u6807\u56fe\u50cf\u7684\u56db\u4e2a\u70b9\u3002</p> <ul> <li>\u5c06\u6e90\u70b9\u5750\u6807\u4e2d\u5fc3\u5316\uff08\u53ef\u4ee5\u8003\u8651\u76f8\u673a\u5185\u53c2\u7684\u5f71\u54cd\uff09\uff0c\u5e94\u7528\u65cb\u8f6c\u77e9\u9635\uff0c\u518d\u6062\u590d\u5230\u539f\u59cb\u4f4d\u7f6e\u3002</li> <li>\u7531\u4e8e\u70b9\u662f2D\u70b9\uff0c\u4e0d\u4f7f\u7528\u65cb\u8f6c\u77e9\u9635\u7684\u6700\u540e\u4e00\u5217\u3002</li> <li>\u8ba1\u7b97\u900f\u5c04\u77e9\u9635 \u4f7f\u7528 <code>cv2.getPerspectiveTransform</code> \u901a\u8fc7\u539f\u56fe\u50cf\u548c\u76ee\u6807\u56fe\u50cf\u7684\u56db\u4e2a\u70b9\u8ba1\u7b97\u900f\u5c04\u77e9\u9635\u3002</li> </ul> </li> <li> <p>\u5e94\u7528\u900f\u5c04\u77e9\u9635 \u4f7f\u7528 <code>cv2.warpPerspective</code> \u5c06\u900f\u5c04\u77e9\u9635\u5e94\u7528\u5230\u539f\u56fe\u50cf\uff0c\u4ee5\u5f97\u5230\u76ee\u6807\u56fe\u50cf\u3002</p> </li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a Python<pre><code>import cv2\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n\ncamera_parameters = {\n    \"width\": 640,\n    \"height\": 512,\n    \"focal_x\": 0.8645801943826472,\n    \"focal_y\": 0.8645801943826472,\n    \"c_x\": -0.005689562165298415,\n    \"c_y\": -0.0037807145404085553,\n    \"k1\": -0.2967016615133813,\n    \"k2\": 0.08663139457756042,\n    \"p1\": 0.0008407777901525121,\n    \"p2\": 8.959107030007158e-05,\n    \"k3\": 0.023342862058067047\n}\n\nK = np.array([[camera_parameters[\"focal_x\"] * camera_parameters[\"width\"], 0, (camera_parameters[\"c_x\"] + 0.5) * camera_parameters[\"width\"]],\n              [0, camera_parameters[\"focal_y\"] * camera_parameters[\"height\"], (camera_parameters[\"c_y\"] + 0.5) * camera_parameters[\"height\"]],\n              [0, 0, 1]])\n\n\n\ndef euler_to_rotation_matrix(roll, pitch, yaw):\n    \"\"\"\n    Convert Euler angles to a rotation matrix.\n    \"\"\"\n    R_x = np.array([[1, 0, 0],\n                    [0, np.cos(roll), -np.sin(roll)],\n                    [0, np.sin(roll), np.cos(roll)]])\n\n    R_y = np.array([[np.cos(pitch), 0, np.sin(pitch)],\n                    [0, 1, 0],\n                    [-np.sin(pitch), 0, np.cos(pitch)]])\n\n    R_z = np.array([[np.cos(yaw), -np.sin(yaw), 0],\n                    [np.sin(yaw), np.cos(yaw), 0],\n                    [0, 0, 1]])\n\n    R = np.dot(R_z, np.dot(R_y, R_x))\n    return R\n\n\ndef adjust_image(image_path, roll, pitch, yaw):\n    \"\"\"\n    Adjust the image to orthographic view using the given roll, pitch, and yaw angles.\n    \"\"\"\n    # Read the image\n    image = cv2.imread(image_path)\n\n    # Image dimensions\n    height, width = image.shape[:2]\n\n    # Get the rotation matrix\n    R = euler_to_rotation_matrix(roll, pitch, yaw)\n\n    # Define the source points (four corners of the image)\n    src_points = np.array([[0, 0],\n                           [width - 1, 0],\n                           [width - 1, height - 1],\n                           [0, height - 1]], dtype='float32')\n\n    # Apply the rotation to the source points\n    centered_src_points = src_points - np.array([K[0][2], K[1][2]])\n\n    # Apply the rotation to the centered points\n    rotated_points = np.dot(centered_src_points, R[:2, :2].T)\n\n    # Restore the points back to the original image coordinates\n    dst_points = rotated_points + np.array([K[0][2], K[1][2]])\n    dst_points = dst_points.astype('float32')\n\n    # \u8ba1\u7b97\u900f\u89c6\u53d8\u6362\u77e9\u9635\n    matrix = cv2.getPerspectiveTransform(src_points, dst_points)\n\n\n    # Apply the perspective transformation\n    adjusted_image = cv2.warpPerspective(image, matrix, (width, height))\n\n    return adjusted_image\n\n# Example usage\nimage_path = '@437100@4221736@0.585299@-0.101259@0.638664@374.0050048828@37275@.jpg'\nyaw, pitch, roll = np.float32(image_path.split(\"@\")[3]), np.float32(image_path.split(\"@\")[4]), np.float32(image_path.split(\"@\")[5])\nadjusted_image = adjust_image(image_path, roll, pitch, yaw)\n\n# Read the original image\noriginal_image = cv2.imread(image_path)\n\n# Concatenate the original and adjusted images horizontally\nconcatenated_image = np.concatenate((original_image, adjusted_image), axis=1)\n\n# Convert the image from BGR to RGB for displaying using matplotlib\nconcatenated_image_rgb = cv2.cvtColor(concatenated_image, cv2.COLOR_BGR2RGB)\n\n# Display the concatenated image\nplt.figure(figsize=(10, 5))\nplt.imshow(concatenated_image_rgb)\nplt.axis('off')\nplt.title('Original and Adjusted Images')\nplt.show()\n</code></pre></p> <p></p>"},{"location":"IMAGE_PROCESS/04-ord/#_3","title":"\u65b9\u6cd5\u4e8c","text":"<ol> <li> <p>\u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635 \u6839\u636e\u4fef\u4ef0\u89d2(pitch)\uff0c\u504f\u822a\u89d2(yaw)\uff0c\u6eda\u8f6c\u89d2(roll)\u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635\u3002</p> </li> <li> <p>\u8ba1\u7b97\u900f\u5c04\u53d8\u6362\u77e9\u9635 \u8ba1\u7b97\u900f\u5c04\u53d8\u6362\u77e9\u9635  <code>H = np.dot(A2, np.dot(T, np.dot(R, A1)))</code>\u3002</p> <ul> <li><code>A1</code>\uff1a2D \u5230 3D \u6295\u5f71\u77e9\u9635\u3002</li> <li><code>RX</code>, <code>RY</code>, <code>RZ</code>\uff1a\u5206\u522b\u7ed5 X\u3001Y\u3001Z \u8f74\u7684\u65cb\u8f6c\u77e9\u9635\u3002</li> <li><code>R</code>\uff1a\u7ec4\u5408\u7684\u65cb\u8f6c\u77e9\u9635\u3002</li> <li><code>T</code>\uff1a\u5e73\u79fb\u77e9\u9635\u3002</li> <li><code>A2</code>\uff1a3D \u5230 2D \u6295\u5f71\u77e9\u9635\u3002</li> <li>\u5e94\u7528\u900f\u5c04\u77e9\u9635 \u4f7f\u7528 <code>cv2.warpPerspective</code> \u5c06\u900f\u5c04\u77e9\u9635\u5e94\u7528\u5230\u539f\u56fe\u50cf\uff0c\u4ee5\u5f97\u5230\u76ee\u6807\u56fe\u50cf\u3002</li> </ul> </li> </ol> <p>Python<pre><code>import numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n\n# Reference:\n#     1.        : http://stackoverflow.com/questions/17087446/how-to-calculate-perspective-transform-for-opencv-from-rotation-angles\n#     2.        : http://jepsonsblog.blogspot.tw/2012/11/rotation-in-3d-using-opencvs.html\n\n\ncamera_parameters = {\n    \"width\": 640,\n    \"height\": 512,\n    \"focal_x\": 0.8645801943826472,\n    \"focal_y\": 0.8645801943826472,\n    \"c_x\": -0.005689562165298415,\n    \"c_y\": -0.0037807145404085553,\n    \"k1\": -0.2967016615133813,\n    \"k2\": 0.08663139457756042,\n    \"p1\": 0.0008407777901525121,\n    \"p2\": 8.959107030007158e-05,\n    \"k3\": 0.023342862058067047\n}\n\nclass ImageTransformer(object):\n    \"\"\" Perspective transformation class for image\n        with shape (height, width, #channels) \"\"\"\n\n    def __init__(self, image_path, shape = None):\n        self.image_path = image_path\n        self.image = cv2.imread(image_path)\n\n        self.height = self.image.shape[0]\n        self.width = self.image.shape[1]\n        self.num_channels = self.image.shape[2]\n\n\n    \"\"\" Wrapper of Rotating a Image \"\"\"\n    def rotate_along_axis(self, rtheta=0, rphi=0, rgamma=0, dx=0, dy=0, dz=0):\n\n        # Get ideal focal length on z axis\n        # NOTE: Change this section to other axis if needed\n        d = np.sqrt(self.height**2 + self.width**2)\n        self.focal = d / (2 * np.sin(rgamma) if np.sin(rgamma) != 0 else 1)\n        dz = self.focal\n\n        # Get projection matrix\n        mat = self.get_M(rtheta, rphi, rgamma, dx, dy, dz)\n\n        return cv2.warpPerspective(self.image.copy(), mat, (self.width, self.height))\n\n\n    \"\"\" Get Perspective Projection Matrix \"\"\"\n    def get_M(self, theta, phi, gamma, dx, dy, dz):\n\n        w = self.width\n        h = self.height\n        f = self.focal\n\n        c_x = (camera_parameters[\"c_x\"] + 0.5) * camera_parameters[\"width\"]\n        c_y = (camera_parameters[\"c_y\"] + 0.5) * camera_parameters[\"height\"]\n        f_x = camera_parameters[\"focal_x\"] * camera_parameters[\"width\"]\n        f_y = camera_parameters[\"focal_y\"] * camera_parameters[\"height\"]\n\n        # Projection 2D -&gt; 3D matrix\n        A1 = np.array([ [1, 0, -c_x],\n                        [0, 1, -c_y],\n                        [0, 0, 1],\n                        [0, 0, 1]])\n\n        # Rotation matrices around the X, Y, and Z axis\n        RX = np.array([ [1, 0, 0, 0],\n                        [0, np.cos(theta), -np.sin(theta), 0],\n                        [0, np.sin(theta), np.cos(theta), 0],\n                        [0, 0, 0, 1]])\n\n        RY = np.array([ [np.cos(phi), 0, -np.sin(phi), 0],\n                        [0, 1, 0, 0],\n                        [np.sin(phi), 0, np.cos(phi), 0],\n                        [0, 0, 0, 1]])\n\n        RZ = np.array([ [np.cos(gamma), -np.sin(gamma), 0, 0],\n                        [np.sin(gamma), np.cos(gamma), 0, 0],\n                        [0, 0, 1, 0],\n                        [0, 0, 0, 1]])\n\n        # Composed rotation matrix with (RX, RY, RZ)\n        R = np.dot(np.dot(RX, RY), RZ)\n\n        T = np.array([  [1, 0, 0, dx],\n                [0, 1, 0, dy],\n                [0, 0, 1, dz],\n                [0, 0, 0, 1]])\n        # Projection 3D -&gt; 2D matrix\n        A2 = np.array([ [f, 0, c_x, 0],\n                        [0, f, c_y, 0],\n                        [0, 0, 1, 0]])\n\n        # Final transformation matrix\n        return np.dot(A2, np.dot(T, np.dot(R, A1)))\n\nimg_path = '@437100@4221736@0.585299@-0.101259@0.638664@374.0050048828@37275@.jpg'\nimage = cv2.imread(img_path)\nyaw, pitch, roll = np.float32(img_path.split(\"@\")[3]), np.float32(img_path.split(\"@\")[4]), np.float32(img_path.split(\"@\")[5])\n\nit = ImageTransformer(img_path)\nrotated_img = it.rotate_along_axis(rtheta=roll, rphi=pitch, rgamma=yaw)\nplt.figure(figsize=(12, 6))\nplt.subplot(121)\nplt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))\nplt.title('Original Image')\n\nplt.subplot(122)\nplt.imshow(cv2.cvtColor(rotated_img, cv2.COLOR_BGR2RGB))\nplt.title('Orthophoto')\n\nplt.show()\n</code></pre> </p>"},{"location":"IMAGE_PROCESS/06-stitch/","title":"\u56fe\u50cf\u62fc\u63a5\u7b97\u6cd5","text":"<p>\u57fa\u4e8e OpenCV \u63d0\u4f9b\u7684 \u56fe\u50cf\u62fc\u63a5\uff08Image Stitching\uff09\u529f\u80fd\u6765\u5408\u6210\u591a\u5f20\u56fe\u50cf\uff0c\u751f\u6210\u4e00\u5f20\u5927\u5c3a\u5bf8\u7684\u62fc\u63a5\u56fe\u50cf\uff0c\u901a\u5e38\u7528\u4e8e\u521b\u5efa\u5168\u666f\u56fe\u50cf\u6216\u5927\u56fe\u50cf\u7684\u62fc\u63a5\u3002\u5b83\u7684\u4e3b\u8981\u6d41\u7a0b\u5305\u62ec\u56fe\u50cf\u52a0\u8f7d\u3001\u62fc\u63a5\u3001\u663e\u793a\u548c\u4fdd\u5b58</p>"},{"location":"IMAGE_PROCESS/06-stitch/#1-load_images","title":"1. \u56fe\u50cf\u52a0\u8f7d (<code>load_images</code>)","text":"<p>Python<pre><code>def load_images(image_paths):\n    images = [cv2.imread(image_path) for image_path in image_paths]    \n    return images\n</code></pre> - \u8be5\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u56fe\u50cf\u8def\u5f84\u5217\u8868 <code>image_paths</code>\uff0c\u7136\u540e\u4f7f\u7528 OpenCV \u7684 <code>cv2.imread()</code> \u51fd\u6570\u52a0\u8f7d\u6bcf\u5f20\u56fe\u50cf\u5e76\u5b58\u50a8\u5728\u5217\u8868\u4e2d\u3002 - \u6bcf\u4e2a\u8def\u5f84\u5bf9\u5e94\u4e00\u5f20\u56fe\u50cf\uff0c\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u56fe\u50cf\u6570\u636e\u7684\u5217\u8868\u3002</p>"},{"location":"IMAGE_PROCESS/06-stitch/#2-stitch_images","title":"2. \u56fe\u50cf\u62fc\u63a5 (<code>stitch_images</code>)","text":"<p>Python<pre><code>def stitch_images(images):\n    # \u521b\u5efa\u4e00\u4e2a\u56fe\u50cf\u62fc\u63a5\u5668     \n    stitcher = cv2.Stitcher_create()     \n    # \u62fc\u63a5\u56fe\u50cf     \n    status, result = stitcher.stitch(images)\n    if status != cv2.Stitcher_OK:         \n        print(\"\u62fc\u63a5\u5931\u8d25\uff01\")         \n        return None     \n    return result\n</code></pre> - <code>cv2.Stitcher_create()</code>\uff1a\u521b\u5efa\u4e00\u4e2a\u56fe\u50cf\u62fc\u63a5\u5668\u5bf9\u8c61\uff0c\u7528\u4e8e\u6267\u884c\u62fc\u63a5\u64cd\u4f5c\u3002\u8be5\u62fc\u63a5\u5668\u4f1a\u81ea\u52a8\u9009\u62e9\u5408\u9002\u7684\u62fc\u63a5\u7b97\u6cd5\uff0c\u901a\u5e38\u4f7f\u7528\u57fa\u4e8e\u7279\u5f81\u5339\u914d\u7684\u7b97\u6cd5\uff08\u5982 SIFT\u3001SURF \u6216 ORB\uff09\u6765\u5bf9\u9f50\u56fe\u50cf\u3002</p> <ul> <li> <p><code>stitcher.stitch(images)</code>\uff1a\u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u56fe\u50cf\u5217\u8868 <code>images</code>\uff0c\u5e76\u5c06\u8fd9\u4e9b\u56fe\u50cf\u62fc\u63a5\u6210\u4e00\u5f20\u5168\u666f\u56fe\u50cf\u3002\u5b83\u8fd4\u56de\u4e24\u4e2a\u503c\uff1a</p> <ul> <li><code>status</code>\uff1a\u62fc\u63a5\u7684\u72b6\u6001\u3002\u5982\u679c <code>status</code> \u662f <code>cv2.Stitcher_OK</code>\uff0c\u5219\u8868\u793a\u62fc\u63a5\u6210\u529f\uff0c\u5426\u5219\u8868\u793a\u62fc\u63a5\u5931\u8d25\u3002</li> <li><code>result</code>\uff1a\u62fc\u63a5\u540e\u7684\u56fe\u50cf\u3002</li> <li>\u5982\u679c\u62fc\u63a5\u5931\u8d25\uff0c\u8fd4\u56de <code>None</code>\u3002</li> </ul> </li> </ul> <p>\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a</p> Python<pre><code>import cv2\nimport numpy as np\nimport os\n\n# \u8bfb\u53d6\u56fe\u50cf\ndef load_images(image_paths):\n    images = [cv2.imread(image_path) for image_path in image_paths]\n    return images\n\n# \u56fe\u50cf\u62fc\u63a5\u51fd\u6570\ndef stitch_images(images):\n    # \u521b\u5efa\u4e00\u4e2a\u56fe\u50cf\u62fc\u63a5\u5668\n    stitcher = cv2.Stitcher_create()\n    # \u62fc\u63a5\u56fe\u50cf\n    status, result = stitcher.stitch(images)\n\n    if status != cv2.Stitcher_OK:\n        print(\"\u62fc\u63a5\u5931\u8d25\uff01\")\n        return None\n    return result\n\n# \u663e\u793a\u56fe\u50cf\ndef display_image(image, window_name='Stitched Image'):\n    cv2.imshow(window_name, image)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n\n# \u4fdd\u5b58\u62fc\u63a5\u540e\u7684\u56fe\u50cf\ndef save_image(image, output_path):\n    cv2.imwrite(output_path, image)\n\n# \u4e3b\u51fd\u6570\ndef main():\n    # \u8bbe\u7f6e\u8981\u62fc\u63a5\u7684\u56fe\u50cf\u8def\u5f84\n    input_root = '/home/xujg/code/image_pre_process/sample_case/case2/concat_input'\n    imgs_list = os.listdir(input_root)\n    image_paths = [os.path.join(input_root, img_list) for img_list in imgs_list]\n\n    # \u52a0\u8f7d\u56fe\u50cf\n    images = load_images(image_paths)\n\n    # \u62fc\u63a5\u56fe\u50cf\n    stitched_image = stitch_images(images)\n\n    if stitched_image is not None:\n        # \u663e\u793a\u62fc\u63a5\u540e\u7684\u56fe\u50cf\n        display_image(stitched_image, 'Stitched Image')\n\n        # \u4fdd\u5b58\u62fc\u63a5\u540e\u7684\u56fe\u50cf\n        save_image(stitched_image, 'stitched_output5.jpg')\n    else:\n        print(\"\u56fe\u50cf\u62fc\u63a5\u5931\u8d25\uff01\")\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"IMAGE_PROCESS/06-stitch/#_2","title":"\u95ee\u9898","text":"<ul> <li>\u56fe\u50cf\u62fc\u63a5\u7684\u6548\u679c\u53d7\u56fe\u50cf\u9009\u62e9\u7684\u7ed3\u679c\uff0c\u5982\u679c\u56fe\u50cf\u7684\u5c3a\u5ea6\uff0c \u65b9\u5411\u5dee\u8ddd\u8fc7\u5927\u65f6\uff0c\u62fc\u63a5\u7684\u7ed3\u679c\u6548\u679c\u5f88\u5dee</li> <li>\u5728\u8fdb\u884c\u62fc\u63a5\u4e4b\u524d\uff0c \u5bf9\u56fe\u50cf\u8fdb\u884c\u4e86\u91cd\u6295\u5f71\uff0c\u7edf\u4e00\u4e86\u7a7a\u95f4\u5206\u8fa8\u7387\u7b49\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/07-img/","title":"\u7ea2\u5916\u56fe\u50cf\u548c\u9065\u611f\u6570\u636e","text":""},{"location":"IMAGE_PROCESS/07-img/#_2","title":"\u7ea2\u5916\u56fe\u50cf","text":"<p>\u7ea2\u5916\u56fe\u50cf\u901a\u5e38\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a\u8fd1\u7ea2\u5916\uff08Near Infrared, NIR\uff09\u548c\u70ed\u7ea2\u5916\uff08Thermal Infrared, TIR\uff09\u3002\u8fd9\u4e24\u7c7b\u7ea2\u5916\u56fe\u50cf\u5206\u522b\u57fa\u4e8e\u4e0d\u540c\u7684\u7535\u78c1\u6ce2\u6ce2\u957f\u8303\u56f4\uff0c\u5b83\u4eec\u7684\u5e94\u7528\u548c\u83b7\u53d6\u65b9\u5f0f\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"IMAGE_PROCESS/07-img/#1-near-infrared-nir","title":"1. \u8fd1\u7ea2\u5916\uff08Near Infrared, NIR\uff09\u56fe\u50cf","text":"<ul> <li>\u6ce2\u957f\u8303\u56f4\uff1a\u8fd1\u7ea2\u5916\u6ce2\u6bb5\u901a\u5e38\u6307\u7684\u662f0.7 \u00b5m \u5230 1.5 \u00b5m\u4e4b\u95f4\u7684\u7535\u78c1\u6ce2\uff08\u6709\u65f6\u4e5f\u4f1a\u5305\u62ec\u66f4\u9ad8\u9891\u7387\u7684\u90e8\u5206\uff09\uff0c\u63a5\u8fd1\u53ef\u89c1\u5149\u6ce2\u6bb5\u3002</li> <li>\u7279\u70b9\uff1a<ul> <li>\u8fd1\u7ea2\u5916\u5149\u5bf9\u690d\u7269\u7279\u522b\u654f\u611f\uff0c\u80fd\u591f\u53cd\u6620\u690d\u7269\u7684\u5065\u5eb7\u72b6\u6001\uff0c\u56e0\u4e3a\u5065\u5eb7\u690d\u7269\u7684\u53f6\u7247\u4f1a\u5f3a\u70c8\u53cd\u5c04\u8fd1\u7ea2\u5916\u5149\uff08\u7279\u522b\u662f\u57280.7\u52301.1\u5fae\u7c73\u4e4b\u95f4\uff09\u3002</li> <li>\u8fd1\u7ea2\u5916\u56fe\u50cf\u53ef\u4ee5\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7c7b\u578b\u7684\u5730\u7269\uff0c\u5c24\u5176\u662f\u7528\u4e8e\u690d\u88ab\u76d1\u6d4b\u3001\u571f\u5730\u5229\u7528\u5206\u7c7b\u7b49\u5e94\u7528\u3002</li> </ul> </li> <li>\u5e94\u7528\uff1a<ul> <li>\u519c\u4e1a\uff1a\u7528\u4e8e\u76d1\u6d4b\u4f5c\u7269\u7684\u751f\u957f\u72b6\u51b5\u3001\u5065\u5eb7\u72b6\u51b5\u3001\u571f\u58e4\u6e7f\u5ea6\u7b49\u3002</li> <li>\u751f\u6001\u76d1\u6d4b\uff1a\u901a\u8fc7\u690d\u88ab\u6307\u6570\uff08\u5982NDVI\uff09\u6765\u5206\u6790\u690d\u88ab\u8986\u76d6\u5ea6\u3001\u68ee\u6797\u5065\u5eb7\u7b49\u3002</li> <li>\u571f\u5730\u8986\u76d6\u5206\u7c7b\uff1a\u533a\u5206\u4e0d\u540c\u7684\u5730\u7269\u7c7b\u578b\uff0c\u5982\u88f8\u571f\u3001\u690d\u88ab\u3001\u6c34\u4f53\u7b49\u3002</li> <li>\u9065\u611f\u5f71\u50cf\u878d\u5408\uff1a\u5c06\u8fd1\u7ea2\u5916\u56fe\u50cf\u4e0e\u53ef\u89c1\u5149\u56fe\u50cf\u7ed3\u5408\uff0c\u7528\u4e8e\u63d0\u9ad8\u5f71\u50cf\u7684\u5206\u6790\u7cbe\u5ea6\u3002</li> </ul> </li> </ul>"},{"location":"IMAGE_PROCESS/07-img/#2-thermal-infrared-tir","title":"2. \u70ed\u7ea2\u5916\uff08Thermal Infrared, TIR\uff09\u56fe\u50cf","text":"<ul> <li>\u6ce2\u957f\u8303\u56f4\uff1a\u70ed\u7ea2\u5916\u6ce2\u6bb5\u901a\u5e38\u6307\u7684\u662f3 \u00b5m \u5230 14 \u00b5m\u4e4b\u95f4\u7684\u7535\u78c1\u6ce2\uff0c\u6db5\u76d6\u4e86\u5730\u7269\u7684\u70ed\u8f90\u5c04\u8303\u56f4\u3002</li> <li>\u7279\u70b9\uff1a<ul> <li>\u70ed\u7ea2\u5916\u56fe\u50cf\u4e3b\u8981\u7528\u4e8e\u6d4b\u91cf\u7269\u4f53\u7684\u6e29\u5ea6\uff0c\u56e0\u4e3a\u6240\u6709\u7269\u4f53\u5728\u6b64\u6ce2\u6bb5\u90fd\u6709\u8f90\u5c04\uff0c\u6e29\u5ea6\u8f83\u9ad8\u7684\u7269\u4f53\u4f1a\u8f90\u5c04\u66f4\u591a\u7684\u70ed\u91cf\u3002</li> <li>\u70ed\u7ea2\u5916\u56fe\u50cf\u80fd\u591f\u63d0\u4f9b\u5730\u8868\u6e29\u5ea6\u5206\u5e03\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6c14\u5019\u53d8\u5316\u3001\u707e\u5bb3\u76d1\u6d4b\u3001\u80fd\u6e90\u7ba1\u7406\u7b49\u9886\u57df\u3002</li> </ul> </li> <li>\u5e94\u7528\uff1a<ul> <li>\u73af\u5883\u76d1\u6d4b\uff1a\u4f8b\u5982\u76d1\u6d4b\u5730\u8868\u6e29\u5ea6\u3001\u57ce\u5e02\u70ed\u5c9b\u6548\u5e94\u3001\u751f\u6001\u70ed\u73af\u5883\u5206\u6790\u7b49\u3002</li> <li>\u707e\u5bb3\u76d1\u6d4b\uff1a\u5982\u76d1\u6d4b\u706b\u707e\u3001\u68ee\u6797\u706b\u707e\u3001\u5730\u9707\u540e\u7684\u70ed\u6210\u50cf\u8bc4\u4f30\u3001\u6cb9\u6c14\u6cc4\u6f0f\u7b49\u3002</li> <li>\u5efa\u7b51\u80fd\u6e90\u6548\u7387\uff1a\u901a\u8fc7\u6d4b\u91cf\u5efa\u7b51\u7269\u5916\u8868\u7684\u70ed\u8f90\u5c04\uff0c\u5206\u6790\u80fd\u8017\u3001\u70ed\u635f\u5931\u7b49\u95ee\u9898\u3002</li> <li>\u77ff\u4ea7\u52d8\u63a2\uff1a\u70ed\u7ea2\u5916\u56fe\u50cf\u80fd\u591f\u53cd\u6620\u5730\u9762\u70ed\u6d41\u548c\u77ff\u4ea7\u7684\u70ed\u5c5e\u6027\uff0c\u5e2e\u52a9\u8fdb\u884c\u8d44\u6e90\u63a2\u6d4b\u3002</li> </ul> </li> </ul>"},{"location":"IMAGE_PROCESS/07-img/#_3","title":"\u8fd1\u7ea2\u5916\u4e0e\u70ed\u7ea2\u5916\u7684\u533a\u522b","text":"\u7279\u5f81 \u8fd1\u7ea2\u5916 \u70ed\u7ea2\u5916 \u6ce2\u957f\u8303\u56f4 0.7 \u00b5m - 1.5 \u00b5m 3 \u00b5m - 14 \u00b5m \u7528\u9014 \u4e3b\u8981\u7528\u4e8e\u690d\u88ab\u76d1\u6d4b\u3001\u571f\u58e4\u6e7f\u5ea6\u3001\u4f5c\u7269\u751f\u957f\u3001\u571f\u5730\u8986\u76d6\u5206\u7c7b\u7b49 \u4e3b\u8981\u7528\u4e8e\u6e29\u5ea6\u6d4b\u91cf\u3001\u707e\u5bb3\u76d1\u6d4b\u3001\u6c14\u5019\u5206\u6790\u3001\u70ed\u5c9b\u6548\u5e94\u7b49 \u53cd\u5c04\u6027\u8d28 \u690d\u7269\u3001\u571f\u58e4\u3001\u6c34\u4f53\u7b49\u5730\u7269\u5bf9\u8fd1\u7ea2\u5916\u6709\u663e\u8457\u7684\u53cd\u5c04\u5dee\u5f02 \u7269\u4f53\u6839\u636e\u6e29\u5ea6\u4e0d\u540c\u53d1\u5c04\u4e0d\u540c\u5f3a\u5ea6\u7684\u70ed\u8f90\u5c04 \u8bbe\u5907 \u591a\u7528\u4e8e\u5149\u5b66\u9065\u611f\u8bbe\u5907\uff0c\u5982\u591a\u5149\u8c31\u536b\u661f\u6216\u65e0\u4eba\u673a\u4f20\u611f\u5668 \u591a\u7528\u4e8e\u70ed\u6210\u50cf\u76f8\u673a\u3001\u536b\u661f\u4f20\u611f\u5668\u7b49\u8bbe\u5907 \u5e94\u7528\u9886\u57df \u519c\u4e1a\u3001\u73af\u5883\u76d1\u6d4b\u3001\u751f\u6001\u5b66\u3001\u571f\u5730\u5229\u7528/\u571f\u5730\u8986\u76d6\u5206\u7c7b\u7b49 \u707e\u5bb3\u76d1\u6d4b\u3001\u6c14\u5019\u53d8\u5316\u3001\u5efa\u7b51\u80fd\u6e90\u5206\u6790\u3001\u519b\u4e8b\u4fa6\u5bdf\u7b49"},{"location":"IMAGE_PROCESS/07-img/#_4","title":"\u603b\u7ed3","text":"<ul> <li>\u8fd1\u7ea2\u5916\u56fe\u50cf\u4e3b\u8981\u7528\u4e8e\u83b7\u53d6\u690d\u88ab\u7b49\u5730\u7269\u7684\u53cd\u5c04\u7279\u5f81\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u519c\u4e1a\u3001\u751f\u6001\u76d1\u6d4b\u3001\u571f\u5730\u8986\u76d6\u5206\u7c7b\u7b49\u9886\u57df\u3002</li> <li>\u70ed\u7ea2\u5916\u56fe\u50cf\u5219\u4fa7\u91cd\u4e8e\u901a\u8fc7\u6e29\u5ea6\u4fe1\u606f\u8fdb\u884c\u5730\u7269\u70ed\u8f90\u5c04\u7684\u611f\u77e5\uff0c\u9002\u7528\u4e8e\u707e\u5bb3\u76d1\u6d4b\u3001\u73af\u5883\u5206\u6790\u3001\u57ce\u5e02\u70ed\u5c9b\u6548\u5e94\u7814\u7a76\u7b49\u9886\u57df\u3002</li> </ul> <p>\u4e24\u8005\u7684\u533a\u522b\u4e0d\u4ec5\u5728\u4e8e\u6ce2\u957f\u8303\u56f4\u548c\u6d4b\u91cf\u5bf9\u8c61\uff08\u53cd\u5c04\u4e0e\u8f90\u5c04\uff09\uff0c\u8fd8\u4f53\u73b0\u5728\u5b83\u4eec\u7684\u5e94\u7528\u548c\u83b7\u53d6\u65b9\u5f0f\u4e0a\u3002\u5728\u9065\u611f\u9886\u57df\uff0c\u8fd1\u7ea2\u5916\u4e0e\u70ed\u7ea2\u5916\u56fe\u50cf\u5404\u6709\u7279\u8272\u4e14\u4e92\u8865\uff0c\u5e38\u5e38\u53ef\u4ee5\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u589e\u5f3a\u5bf9\u5730\u7269\u7684\u5168\u9762\u7406\u89e3\u3002</p>"},{"location":"IMAGE_PROCESS/07-img/#_5","title":"\u9065\u611f\u6570\u636e","text":"<p>\u9065\u611f\u6570\u636e\uff08Remote Sensing Data\uff09\u662f\u901a\u8fc7\u9065\u611f\u6280\u672f\u91c7\u96c6\u7684\u5730\u7403\u8868\u9762\u4fe1\u606f\u3002\u8fd9\u4e9b\u6570\u636e\u901a\u5e38\u901a\u8fc7\u536b\u661f\u3001\u98de\u673a\u3001\u65e0\u4eba\u673a\u7b49\u5e73\u53f0\uff0c\u5229\u7528\u5404\u79cd\u4f20\u611f\u5668\uff08\u5982\u5149\u5b66\u3001\u96f7\u8fbe\u3001\u7ea2\u5916\u3001\u6fc0\u5149\u7b49\uff09\u4ece\u8fdc\u8ddd\u79bb\u83b7\u53d6\u5730\u7269\u7684\u56fe\u50cf\u6216\u5176\u4ed6\u7269\u7406\u7279\u6027\u4fe1\u606f\u3002\u9065\u611f\u6280\u672f\u7684\u6838\u5fc3\u662f\u901a\u8fc7\u63a2\u6d4b\u7535\u78c1\u6ce2\u7684\u53cd\u5c04\u3001\u8f90\u5c04\u6216\u6563\u5c04\u7b49\u7279\u6027\uff0c\u6765\u83b7\u53d6\u76ee\u6807\u7269\u4f53\u7684\u5c5e\u6027\u3002</p>"},{"location":"IMAGE_PROCESS/07-img/#_6","title":"\u9065\u611f\u6570\u636e\u7684\u7279\u70b9","text":"<ol> <li>\u975e\u63a5\u89e6\u6027\uff1a\u9065\u611f\u6570\u636e\u7684\u83b7\u53d6\u4e0d\u9700\u8981\u76f4\u63a5\u63a5\u89e6\u76ee\u6807\u7269\u4f53\uff0c\u9002\u7528\u4e8e\u5e7f\u6cdb\u7684\u5730\u7406\u533a\u57df\u548c\u4e0d\u6613\u63a5\u8fd1\u7684\u533a\u57df\u3002</li> <li>\u591a\u7ef4\u6027\uff1a\u9065\u611f\u6570\u636e\u5305\u542b\u591a\u79cd\u4fe1\u606f\uff0c\u4e0d\u4ec5\u662f\u56fe\u50cf\uff08\u4e8c\u7ef4\uff09\uff0c\u8fd8\u5305\u62ec\u5149\u8c31\u3001\u6e29\u5ea6\u3001\u6e7f\u5ea6\u7b49\u591a\u7ef4\u6570\u636e\u3002</li> <li>\u65f6\u7a7a\u5206\u8fa8\u7387\uff1a\u9065\u611f\u6570\u636e\u5177\u6709\u4e0d\u540c\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u3001\u65f6\u95f4\u5206\u8fa8\u7387\u548c\u5149\u8c31\u5206\u8fa8\u7387\u3002\u7a7a\u95f4\u5206\u8fa8\u7387\u51b3\u5b9a\u4e86\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u6240\u4ee3\u8868\u7684\u5730\u9762\u5927\u5c0f\uff0c\u65f6\u95f4\u5206\u8fa8\u7387\u51b3\u5b9a\u4e86\u6570\u636e\u83b7\u53d6\u7684\u9891\u7387\uff0c\u5149\u8c31\u5206\u8fa8\u7387\u51b3\u5b9a\u4e86\u4f20\u611f\u5668\u80fd\u591f\u611f\u77e5\u7684\u7535\u78c1\u6ce2\u6bb5\u7684\u6570\u91cf\u548c\u5bbd\u5ea6\u3002</li> </ol>"},{"location":"IMAGE_PROCESS/07-img/#_7","title":"\u9065\u611f\u6570\u636e\u7684\u5206\u7c7b","text":"<ol> <li> <p>\u6309\u4f20\u611f\u5668\u7c7b\u578b\u5206\u7c7b\uff1a</p> <ul> <li>\u5149\u5b66\u9065\u611f\u6570\u636e\uff1a\u901a\u8fc7\u53ef\u89c1\u5149\u548c\u8fd1\u7ea2\u5916\u6ce2\u6bb5\u83b7\u53d6\u7684\u56fe\u50cf\u6570\u636e\u3002\u5e38\u89c1\u7684\u9065\u611f\u5e73\u53f0\u5982 Landsat\u3001Sentinel-2 \u7b49\u536b\u661f\uff0c\u91c7\u96c6\u7684\u56fe\u50cf\u901a\u5e38\u662f\u591a\u5149\u8c31\u5f71\u50cf\u3002</li> <li>\u7ea2\u5916\u9065\u611f\u6570\u636e\uff1a\u901a\u8fc7\u7ea2\u5916\u6ce2\u6bb5\uff08\u70ed\u7ea2\u5916\u6216\u8fd1\u7ea2\u5916\uff09\u83b7\u53d6\u7684\u56fe\u50cf\u6570\u636e\uff0c\u53ef\u4ee5\u7528\u4e8e\u5730\u8868\u6e29\u5ea6\u3001\u690d\u88ab\u8986\u76d6\u5ea6\u3001\u6c34\u4f53\u53d8\u5316\u7b49\u5206\u6790\u3002</li> <li>\u96f7\u8fbe\u9065\u611f\u6570\u636e\uff1a\u901a\u8fc7\u4e3b\u52a8\u96f7\u8fbe\u7cfb\u7edf\u53d1\u5c04\u7535\u78c1\u6ce2\uff0c\u7136\u540e\u63a5\u6536\u8fd4\u56de\u6ce2\uff0c\u80fd\u591f\u7a7f\u900f\u4e91\u5c42\uff0c\u83b7\u53d6\u5730\u9762\u4fe1\u606f\u3002\u6bd4\u5982\uff0c\u5408\u6210\u5b54\u5f84\u96f7\u8fbe\uff08SAR\uff09\u6570\u636e\u3002</li> <li>\u6fc0\u5149\u96f7\u8fbe\u6570\u636e\uff1a\u5229\u7528\u6fc0\u5149\u53d1\u5c04\u5e76\u63a5\u6536\u8fd4\u56de\u4fe1\u53f7\uff0c\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u7684\u5730\u9762\u548c\u7269\u4f53\u9ad8\u5ea6\u4fe1\u606f\u3002\u5e38\u89c1\u7684\u6709\u6fc0\u5149\u626b\u63cf\u4eea\uff08LiDAR\uff09\u6570\u636e\u3002</li> <li>\u5fae\u6ce2\u9065\u611f\u6570\u636e\uff1a\u901a\u8fc7\u5fae\u6ce2\u4fe1\u53f7\u8fdb\u884c\u5730\u9762\u63a2\u6d4b\uff0c\u5e38\u7528\u4e8e\u76d1\u6d4b\u6d77\u6d0b\u3001\u571f\u58e4\u6e7f\u5ea6\u3001\u519c\u4e1a\u7b49\u9886\u57df\u3002</li> <li> <p>\u6309\u7a7a\u95f4\u5206\u8fa8\u7387\u5206\u7c7b\uff1a</p> </li> <li> <p>\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u6570\u636e\uff1a\u901a\u5e38\u7a7a\u95f4\u5206\u8fa8\u7387\u5c0f\u4e8e1\u7c73\uff08\u5982\u5546\u7528\u9ad8\u5206\u536b\u661f\u5f71\u50cf\uff09\uff0c\u9002\u7528\u4e8e\u57ce\u5e02\u89c4\u5212\u3001\u9053\u8def\u8bc6\u522b\u3001\u5efa\u7b51\u7269\u76d1\u6d4b\u7b49\u5e94\u7528\u3002</p> </li> <li>\u4e2d\u5206\u8fa8\u7387\u9065\u611f\u6570\u636e\uff1a\u7a7a\u95f4\u5206\u8fa8\u7387\u4e3a10\u7c73\u81f3100\u7c73\u4e4b\u95f4\uff08\u5982Landsat\u6570\u636e\uff09\uff0c\u9002\u7528\u4e8e\u5927\u8303\u56f4\u7684\u571f\u5730\u5229\u7528\u53d8\u5316\u76d1\u6d4b\u3001\u73af\u5883\u7ba1\u7406\u7b49\u3002</li> <li>\u4f4e\u5206\u8fa8\u7387\u9065\u611f\u6570\u636e\uff1a\u7a7a\u95f4\u5206\u8fa8\u7387\u5927\u4e8e100\u7c73\uff08\u5982MODIS\u536b\u661f\u6570\u636e\uff09\uff0c\u9002\u7528\u4e8e\u6c14\u5019\u53d8\u5316\u3001\u5168\u7403\u690d\u88ab\u8986\u76d6\u5ea6\u7b49\u5927\u5c3a\u5ea6\u5206\u6790\u3002</li> <li> <p>\u6309\u65f6\u95f4\u5206\u8fa8\u7387\u5206\u7c7b\uff1a</p> </li> <li> <p>\u5b9e\u65f6\u9065\u611f\u6570\u636e\uff1a\u5982\u6c14\u8c61\u536b\u661f\u63d0\u4f9b\u7684\u5b9e\u65f6\u6570\u636e\uff0c\u4e3b\u8981\u7528\u4e8e\u5929\u6c14\u9884\u62a5\u548c\u707e\u5bb3\u76d1\u6d4b\u3002</p> </li> <li>\u5468\u671f\u6027\u9065\u611f\u6570\u636e\uff1a\u4e00\u4e9b\u536b\u661f\u6309\u7167\u56fa\u5b9a\u7684\u8f68\u9053\u5468\u671f\u6027\u5730\u8fdb\u884c\u89c2\u6d4b\uff0c\u5982Landsat\u7cfb\u5217\u536b\u661f\u6bcf16\u5929\u91c7\u96c6\u4e00\u6b21\u6570\u636e\u3002</li> </ul> </li> </ol>"},{"location":"IMAGE_PROCESS/07-img/#_8","title":"\u9065\u611f\u6570\u636e\u7684\u5e94\u7528","text":"<p>\u9065\u611f\u6570\u636e\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4ee5\u4e0b\u9886\u57df\uff1a</p> <ol> <li> <p>\u73af\u5883\u76d1\u6d4b\uff1a</p> <ul> <li>\u68ee\u6797\u8986\u76d6\u3001\u6e7f\u5730\u53d8\u5316\u3001\u571f\u5730\u9000\u5316\u3001\u6c99\u6f20\u5316\u7b49\u73af\u5883\u53d8\u5316\u7684\u76d1\u6d4b\u3002</li> <li>\u5927\u6c14\u6c61\u67d3\u3001\u6c14\u5019\u53d8\u5316\u7b49\u7684\u89c2\u6d4b\u3002</li> <li> <p>\u519c\u4e1a\uff1a</p> </li> <li> <p>\u4f5c\u7269\u76d1\u6d4b\u3001\u4f30\u7b97\u4ea7\u91cf\u3001\u571f\u58e4\u6e7f\u5ea6\u3001\u704c\u6e89\u7ba1\u7406\u7b49\u3002</p> </li> <li>\u690d\u88ab\u5065\u5eb7\u76d1\u6d4b\uff0c\u53d1\u73b0\u866b\u5bb3\u3001\u5e72\u65f1\u7b49\u95ee\u9898\u3002</li> <li> <p>\u57ce\u5e02\u89c4\u5212\u4e0e\u7ba1\u7406\uff1a</p> </li> <li> <p>\u57ce\u5e02\u6269\u5c55\u3001\u4ea4\u901a\u6d41\u91cf\u5206\u6790\u3001\u5efa\u7b51\u7269\u68c0\u6d4b\u7b49\u3002</p> </li> <li>\u571f\u5730\u5229\u7528\u3001\u571f\u5730\u8986\u76d6\u5206\u7c7b\u7b49\u3002</li> <li> <p>\u707e\u5bb3\u76d1\u6d4b\u4e0e\u5e94\u6025\u7ba1\u7406\uff1a</p> </li> <li> <p>\u6d2a\u6c34\u3001\u5730\u9707\u3001\u706b\u707e\u7b49\u81ea\u7136\u707e\u5bb3\u7684\u9884\u6d4b\u3001\u8bc4\u4f30\u548c\u5e94\u6025\u54cd\u5e94\u3002</p> </li> <li>\u707e\u540e\u91cd\u5efa\u3001\u571f\u58e4\u6ed1\u5761\u3001\u706b\u707e\u540e\u7684\u76d1\u63a7\u7b49\u3002</li> <li> <p>\u8d44\u6e90\u52d8\u63a2\u4e0e\u5730\u8d28\u8c03\u67e5\uff1a</p> </li> <li> <p>\u77ff\u4ea7\u8d44\u6e90\u3001\u77f3\u6cb9\u52d8\u63a2\u7b49\u3002</p> </li> <li>\u5730\u8d28\u707e\u5bb3\u3001\u5730\u5f62\u5206\u6790\u7b49\u3002</li> <li> <p>\u519b\u4e8b\u548c\u56fd\u9632\uff1a</p> </li> <li> <p>\u8fb9\u754c\u76d1\u63a7\u3001\u519b\u4e8b\u8bbe\u65bd\u4fa6\u5bdf\u3001\u4f5c\u6218\u6a21\u62df\u7b49\u3002</p> </li> </ul> </li> </ol>"},{"location":"IMAGE_PROCESS/07-img/#_9","title":"\u9065\u611f\u6570\u636e\u7684\u5904\u7406\u4e0e\u5206\u6790","text":"<p>\u9065\u611f\u6570\u636e\u5904\u7406\u901a\u5e38\u5305\u62ec\uff1a</p> <ol> <li> <p>\u6570\u636e\u9884\u5904\u7406\uff1a</p> <ul> <li>\u56fe\u50cf\u914d\u51c6\uff1a\u5c06\u591a\u4e2a\u56fe\u50cf\u5bf9\u9f50\u5230\u76f8\u540c\u7684\u5750\u6807\u7cfb\u7edf\u4e2d\u3002</li> <li>\u53bb\u566a\uff1a\u53bb\u9664\u5f71\u50cf\u4e2d\u7684\u566a\u58f0\u3002</li> <li>\u8f90\u5c04\u6821\u6b63\uff1a\u5c06\u4e0d\u540c\u4f20\u611f\u5668\u4e4b\u95f4\u7684\u6570\u636e\u5dee\u5f02\u6807\u51c6\u5316\u3002</li> <li> <p>\u56fe\u50cf\u5206\u6790\u4e0e\u5206\u7c7b\uff1a</p> </li> <li> <p>\u56fe\u50cf\u5206\u5272\uff1a\u5c06\u56fe\u50cf\u5206\u5272\u6210\u591a\u4e2a\u533a\u57df\uff0c\u7528\u4e8e\u8fdb\u4e00\u6b65\u5206\u6790\u3002</p> </li> <li>\u7269\u4f53\u68c0\u6d4b\uff1a\u4f8b\u5982\u68c0\u6d4b\u6c34\u4f53\u3001\u57ce\u5e02\u3001\u68ee\u6797\u7b49\u3002</li> <li>\u53d8\u5316\u68c0\u6d4b\uff1a\u6bd4\u8f83\u4e0d\u540c\u65f6\u95f4\u6bb5\u7684\u9065\u611f\u56fe\u50cf\uff0c\u5206\u6790\u5730\u8868\u53d8\u5316\u3002</li> <li> <p>\u5730\u7406\u4fe1\u606f\u7cfb\u7edf\uff08GIS\uff09\u96c6\u6210\uff1a</p> </li> <li> <p>\u5c06\u9065\u611f\u6570\u636e\u4e0e\u5176\u4ed6\u5730\u7406\u4fe1\u606f\uff08\u5982\u5730\u56fe\u3001\u5b9e\u5730\u8c03\u67e5\u6570\u636e\u7b49\uff09\u7ed3\u5408\u8fdb\u884c\u7efc\u5408\u5206\u6790\u3002</p> </li> </ul> </li> </ol>"},{"location":"IMAGE_PROCESS/07-img/#_10","title":"\u603b\u7ed3","text":"<p>\u9065\u611f\u6570\u636e\u901a\u8fc7\u4ece\u8fdc\u5904\u83b7\u53d6\u5730\u8868\u4fe1\u606f\uff0c\u63d0\u4f9b\u4e86\u5bf9\u5730\u7403\u8868\u9762\u52a8\u6001\u53d8\u5316\u548c\u73af\u5883\u72b6\u51b5\u7684\u5927\u8303\u56f4\u76d1\u6d4b\u80fd\u529b\u3002\u5b83\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u73af\u5883\u3001\u519c\u4e1a\u3001\u707e\u5bb3\u76d1\u6d4b\u3001\u57ce\u5e02\u89c4\u5212\u7b49\u9886\u57df\u3002\u9065\u611f\u6570\u636e\u7684\u5904\u7406\u548c\u5206\u6790\u9700\u8981\u4f7f\u7528\u4e13\u4e1a\u7684\u8f6f\u4ef6\u548c\u6280\u672f\uff0c\u5982\u56fe\u50cf\u5904\u7406\u3001\u673a\u5668\u5b66\u4e60\u548c\u5730\u7406\u4fe1\u606f\u7cfb\u7edf\uff08GIS\uff09\u7b49\u3002</p>"},{"location":"IMAGE_PROCESS/NetVLAD/","title":"NetVLAD\u5411\u91cf\u805a\u5408","text":""},{"location":"IMAGE_PROCESS/NetVLAD/#1-vlad","title":"1. VLAD","text":"<p>VLAD \u662f\u4e00\u79cd\u4f20\u7edf\u7684\u5c40\u90e8\u7279\u5f81\u805a\u5408\u65b9\u6cd5\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u56fe\u50cf\u4e2d\u5927\u91cf\u7684\u5c40\u90e8\u7279\u5f81\uff08\u5982 SIFT\u3001SURF\uff09\u7f16\u7801\u4e3a\u4e00\u4e2a\u5b9a\u957f\u7684\u5411\u91cf\uff0c\u65b9\u4fbf\u56fe\u50cf\u68c0\u7d22\u548c\u5339\u914d VLAD \u540c\u65f6\u8003\u8651\u4e86 \u63cf\u8ff0\u5b50\u7684\u5206\u5e03\u504f\u79fb\uff08\u6b8b\u5dee\uff09\uff0c\u56e0\u800c\u66f4\u6709\u5224\u522b\u6027\u3002</p>"},{"location":"IMAGE_PROCESS/NetVLAD/#11-vlad","title":"1.1 VLAD \u7684\u4e3b\u8981\u6b65\u9aa4\uff1a","text":"<p>\u5047\u8bbe\u6709\u4e00\u5f20\u56fe\u50cf\uff0c\u63d0\u53d6\u4e86\u4e00\u7ec4\u5c40\u90e8\u7279\u5f81\uff08\u5982 128 \u7ef4\u7684 SIFT \u7279\u5f81\uff09</p>"},{"location":"IMAGE_PROCESS/NetVLAD/#111-codebook","title":"1.1.1 \u5efa\u7acb\u89c6\u89c9\u8bcd\u5178\uff08codebook\uff09","text":"<ul> <li>\u4f7f\u7528 KMeans \u5bf9\u6240\u6709\u8bad\u7ec3\u56fe\u50cf\u4e2d\u7684\u5c40\u90e8\u7279\u5f81\u805a\u7c7b\uff0c\u5f97\u5230 K \u4e2a\u805a\u7c7b\u4e2d\u5fc3 \\(\\{c_1, c_2, ..., c_K\\}\\)</li> <li>\u8fd9\u4e9b\u805a\u7c7b\u4e2d\u5fc3\u5c31\u50cf\u662f\u201c\u89c6\u89c9\u5355\u8bcd\u201d\u6216\u201canchor\u201d</li> </ul>"},{"location":"IMAGE_PROCESS/NetVLAD/#112","title":"1.1.2 \u5bf9\u6bcf\u4e2a\u5c40\u90e8\u7279\u5f81\u8fdb\u884c\u5206\u914d","text":"<ul> <li>\u5bf9\u6bcf\u4e2a\u5c40\u90e8\u63cf\u8ff0\u5b50 \\(x_i\\)\uff0c\u627e\u5230\u6700\u8fd1\u7684\u805a\u7c7b\u4e2d\u5fc3 \\(c_k\\)\uff08hard assignment\uff09</li> </ul>"},{"location":"IMAGE_PROCESS/NetVLAD/#113","title":"1.1.3 \u8ba1\u7b97\u6b8b\u5dee\u5411\u91cf","text":"<ul> <li>\u8ba1\u7b97\u63cf\u8ff0\u5b50\u4e0e\u5176\u805a\u7c7b\u4e2d\u5fc3\u4e4b\u95f4\u7684\u6b8b\u5dee \\(x_i - c_k\\)</li> </ul>"},{"location":"IMAGE_PROCESS/NetVLAD/#114","title":"1.1.4 \u5bf9\u6b8b\u5dee\u8fdb\u884c\u805a\u5408","text":"<ul> <li>\u5bf9\u6240\u6709\u5c5e\u4e8e\u540c\u4e00\u805a\u7c7b\u4e2d\u5fc3\u7684\u6b8b\u5dee\u5411\u91cf\u6c42\u548c\uff1a</li> </ul> \\[ v_k = \\sum_{x_i \\in c_k} (x_i - c_k) \\]"},{"location":"IMAGE_PROCESS/NetVLAD/#115","title":"1.1.5 \u8fde\u63a5\u6240\u6709\u6b8b\u5dee\u5411\u91cf","text":"<ul> <li>\u628a\u6240\u6709\u805a\u7c7b\u4e2d\u5fc3\u7684\u805a\u5408\u6b8b\u5dee \\(v_k\\) \u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u6700\u7ec8\u7684 VLAD \u7279\u5f81\u5411\u91cf\uff1a</li> </ul> \\[ VLAD = [v_1, v_2, ..., v_K] \\]"},{"location":"IMAGE_PROCESS/NetVLAD/#116","title":"1.1.6 \u540e\u5904\u7406","text":"<ul> <li>L2 normalization\u3001power normalization\uff08\u4f8b\u5982 signed square root\uff09\u5e38\u7528\u4e8e\u63d0\u5347\u6548\u679c</li> </ul>"},{"location":"IMAGE_PROCESS/NetVLAD/#12-vlad","title":"1.2 VLAD\u7279\u5f81\u7ef4\u5ea6\u8ba1\u7b97\uff1a","text":"<p>\u5047\u8bbe\uff1a</p> <ul> <li>\u6bcf\u4e2a\u5c40\u90e8\u7279\u5f81\u662f D \u7ef4\uff08\u5982 SIFT \u662f 128D\uff09</li> <li>\u805a\u7c7b\u4e2d\u5fc3\u6570\u662f K\uff08\u5982 64\uff09</li> </ul> <p>\u5219\uff1a</p> \\[ \\text{VLAD \u5411\u91cf\u7ef4\u5ea6} = K \\times D \\]"},{"location":"IMAGE_PROCESS/NetVLAD/#13","title":"1.3 \u4f18\u70b9","text":"\u4f18\u70b9 \u63cf\u8ff0 \u2705 \u6bd4 BoW \u66f4\u6709\u8868\u73b0\u529b \u4e0d\u53ea\u662f\u7edf\u8ba1\u6570\u91cf\uff0c\u800c\u662f\u6355\u6349\u4e86\u63cf\u8ff0\u5b50\u7684\u5206\u5e03\u4fe1\u606f \u2705 \u7d27\u51d1\u8868\u793a \u53ef\u88ab PCA \u6216\u964d\u7ef4\u5904\u7406 \u2705 \u53ef\u4e0e SIFT/SURF/HOG \u7b49\u7ed3\u5408 \u4e0d\u4f9d\u8d56 CNN\uff0c\u53ef\u5728\u4f20\u7edf\u56fe\u50cf\u5904\u7406\u4e2d\u4f7f\u7528"},{"location":"IMAGE_PROCESS/NetVLAD/#14","title":"1.4 \u7f3a\u70b9","text":"\u7f3a\u70b9 \u63cf\u8ff0 \u274c \u4e0d\u662f\u7aef\u5230\u7aef \u805a\u7c7b\u4e0e\u7279\u5f81\u63d0\u53d6\u5206\u79bb\uff0c\u4e0d\u80fd\u8bad\u7ec3\u4f18\u5316 \u274c \u4e0d\u9002\u5408\u6df1\u5ea6\u7279\u5f81 \u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\u4e0d\u6613\u76f4\u63a5\u4f7f\u7528 \u274c \u786c\u5206\u914d\u53ef\u80fd\u5bfc\u81f4\u4fe1\u606f\u4e22\u5931 \u6539\u8fdb\u4e3a soft-assignment \u540e\u53d8\u4e3a NetVLAD"},{"location":"IMAGE_PROCESS/NetVLAD/#2-netvlad","title":"2. NetVLAD","text":"<p>NetVLAD \u662f\u4e00\u79cd\u5c06 CNN \u5c40\u90e8\u7279\u5f81\u805a\u5408\u4e3a\u5168\u5c40\u63cf\u8ff0\u7b26\u7684\u53ef\u8bad\u7ec3\u6a21\u5757\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u56fe\u50cf\u68c0\u7d22\u548c\u89c6\u89c9\u5b9a\u4f4d\u4efb\u52a1\u3002</p>"},{"location":"IMAGE_PROCESS/NetVLAD/#21-netvlad","title":"2.1 NetVLAD \u7684\u7ed3\u6784\u7ec4\u6210","text":"<p>\u8f93\u5165\u901a\u5e38\u662f\u4e00\u5f20\u56fe\u50cf\uff0c\u7ecf\u8fc7 CNN\uff08\u5982 ResNet\uff09\u5f97\u5230\u4e00\u4e2a\u7279\u5f81\u56fe\uff1a</p> Text Only<pre><code>\u8f93\u5165\u7279\u5f81\u56fe\u5927\u5c0f\uff1a B x C x H x W\n</code></pre> <p>NetVLAD \u4f1a\u5bf9\u8fd9\u7ec4\u7279\u5f81\u505a\u4ee5\u4e0b\u5904\u7406\uff1a</p>"},{"location":"IMAGE_PROCESS/NetVLAD/#211-soft-assignment","title":"2.1.1. Soft assignment \u8f6f\u5206\u914d","text":"<p>\u5bf9\u6bcf\u4e2a\u7279\u5f81\u70b9 \\(x_i \\in \\mathbb{R}^D\\)\uff0c\u8ba1\u7b97\u5b83\u5c5e\u4e8e\u6bcf\u4e2a cluster \u7684\u6982\u7387\uff1a</p> \\[ a_k(x_i) = \\frac{e^{w_k^\\top x_i + b_k}}{\\sum_{j=1}^{K} e^{w_j^\\top x_i + b_j}} \\] <p>\u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e\u53ef\u8bad\u7ec3\u7684 soft-KMeans\uff0c\u7528 1x1 \u5377\u79ef\u5b9e\u73b0</p>"},{"location":"IMAGE_PROCESS/NetVLAD/#212","title":"2.1.2 \u6b8b\u5dee\u7f16\u7801","text":"<p>\u5bf9\u6bcf\u4e2a\u7279\u5f81\u70b9\u548c\u4e2d\u5fc3 \\(c_k\\) \u8ba1\u7b97\u6b8b\u5dee\uff1a</p> \\[ r_{ik} = a_k(x_i) \\cdot (x_i - c_k) \\] <p>\u7136\u540e\u5728\u6bcf\u4e2a cluster \u4e0a\u505a\u6c42\u548c\u805a\u5408\uff1a</p> \\[ V_k = \\sum_i r_{ik} \\] <p>\u5f97\u5230\u805a\u5408\u540e\u6bcf\u4e2a cluster \u7684\u6b8b\u5dee\u4fe1\u606f\u3002</p>"},{"location":"IMAGE_PROCESS/NetVLAD/#213","title":"2.1.3 \u62fc\u63a5\u8f93\u51fa\u5411\u91cf","text":"<p>\u6240\u6709 cluster \u7684\u6b8b\u5dee\u5411\u91cf\u62fc\u63a5\u6210\u4e00\u4e2a\u5927\u5411\u91cf \\(V = [V_1, V_2, ..., V_K]\\)\uff0c\u5176\u7ef4\u5ea6\u4e3a\uff1a</p> \\[ \\text{\u7ef4\u5ea6} = K \\times D \\]"},{"location":"IMAGE_PROCESS/NetVLAD/#22","title":"2.2 \u4ee3\u7801\u793a\u4f8b","text":"Python<pre><code>import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass NetVLAD(nn.Module):\n\"\"\"NetVLAD layer implementation\"\"\"\n\n    def __init__(self, num_clusters=64, dim=16, alpha=100.0,normalize_input=True):\n\n    \"\"\"\n    Args:\n    num_clusters : int\n    The number of clusters\n    dim : int\n    Dimension of descriptors\n    alpha : float\n    Parameter of initialization. Larger value is harder assignment.\n    normalize_input : bool\n    If true, descriptor-wise L2 normalization is applied to input.\n    \"\"\"\n\n    super(NetVLAD, self).__init__()\n    self.num_clusters = num_clusters\n    self.dim = dim\n    self.alpha = alpha\n    self.normalize_input = normalize_input\n    self.conv = nn.Conv2d(dim, num_clusters, kernel_size=(1, 1), bias=True)\n    self.centroids = nn.Parameter(torch.rand(num_clusters, dim))\n    self._init_params()\n\n    def _init_params(self):\n\n    self.conv.weight = nn.Parameter((2.0 * self.alpha * self.centroids).unsqueeze(-1).unsqueeze(-1))\n    self.conv.bias = nn.Parameter(- self.alpha * self.centroids.norm(dim=1))\n\n    def forward(self, x):\n\n    N, C = x.shape[:2]\n    if self.normalize_input:\n        x = F.normalize(x, p=2, dim=1) # across descriptor dim\n\n    # soft-assignment\n    # x: [48, 16, 32, 32] -&gt; [48, 64, 32, 32] -&gt; [48, 64, 1024]\n    soft_assign = self.conv(x).view(N, self.num_clusters, -1)\n    soft_assign = F.softmax(soft_assign, dim=1)\n\n    # x: [48, 16, 32, 32] -&gt; [48, 16, 1024]\n    x_flatten = x.view(N, C, -1)\n\n    # calculate residuals to each clusters\n    # x_flatten:[48, 16, 1024] -&gt; [48, 64, 16, 1024]\n    # centroids: [64, 16] -&gt; [1024, 64, 16] -&gt; [64, 16, 1024] -&gt; [1, 64, 16, 1024]\n    residual = x_flatten.expand(self.num_clusters, -1, -1, -1).permute(1, 0, 2, 3) - self.centroids.expand(x_flatten.size(-1), -1, -1).permute(1, 2, 0).unsqueeze(0)\n\n    residual *= soft_assign.unsqueeze(2)\n    vlad = residual.sum(dim=-1)\n    vlad = F.normalize(vlad, p=2, dim=2) # intra-normalization\n    vlad = vlad.view(x.size(0), -1) # flatten\n    vlad = F.normalize(vlad, p=2, dim=1) # L2 normalize\n\n    return vlad\n\n\n\nif __name__ == \"__main__\":\n\n    net = NetVLAD()\n    input = torch.randn((48, 16, 32, 32))\n    output = net(input)\n    print(output.shape)\n</code></pre>"},{"location":"IMAGE_PROCESS/NetVLAD/#22_1","title":"2.2 \u8bad\u7ec3\u65b9\u5f0f","text":"<p>NetVLAD \u4e00\u822c\u5728 \u56fe\u50cf\u68c0\u7d22\u6216\u5b9a\u4f4d\u4efb\u52a1\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u8bad\u7ec3\uff1a</p> <ul> <li>\ud83d\udd39 Triplet Loss / Contrastive Loss\uff1a\u5339\u914d\u6b63\u8d1f\u56fe\u50cf\u5bf9\uff0c\u8ba9\u63cf\u8ff0\u5b50\u5bf9\u540c\u4e00\u5730\u70b9\u66f4\u63a5\u8fd1\u3002</li> <li>\ud83d\udd39 ProxyNCA / ArcFace\uff1a\u66f4\u590d\u6742\u7684\u7ed3\u6784\u5339\u914d\u8bad\u7ec3\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/NetVLAD/#23","title":"2.3 \u8f93\u51fa\u7ef4\u5ea6\u793a\u4f8b\uff1a","text":"<ul> <li>CNN \u8f93\u51fa shape = <code>[B, 512, 20, 20]</code> \u2192 \u5c55\u5f00\u4e3a <code>400</code> \u4e2a <code>512D</code> \u7279\u5f81</li> <li>\u805a\u7c7b\u6570 \\(K = 64\\)</li> </ul> <p>\u90a3\u4e48 NetVLAD \u8f93\u51fa\u7ef4\u5ea6\uff1a</p> \\[ \\text{Output dim} = 64 \\times 512 = 32768 \\] <p>\u4e00\u822c\u4f1a\u52a0\uff1a</p> <ul> <li>BatchNorm / L2 Normalization</li> <li>PCA + Whitening\uff08\u538b\u7f29\u5230\u6bd4\u5982 4096 \u6216 2048 \u7ef4\uff09</li> </ul>"},{"location":"IMAGE_PROCESS/NetVLAD/#netvlad_1","title":"\ud83e\udd1d \u4e0e NetVLAD \u533a\u522b\u5bf9\u6bd4","text":"\u6bd4\u8f83\u70b9 VLAD NetVLAD \u805a\u7c7b\u65b9\u5f0f KMeans\uff0c\u79bb\u7ebf \u53ef\u5b66\u4e60\uff0c\u7aef\u5230\u7aef\u8bad\u7ec3 \u5206\u914d\u65b9\u5f0f Hard assignment Soft assignment \u53ef\u8bad\u7ec3\u6027 \u5426 \u662f\uff08\u53ef\u5fae\uff09 \u7279\u5f81\u8f93\u5165 \u624b\u5de5\u5c40\u90e8\u7279\u5f81\uff08\u5982 SIFT\uff09 CNN \u8f93\u51fa\u7684\u7279\u5f81\u56fe \u5e94\u7528\u573a\u666f \u4f20\u7edf\u56fe\u50cf\u68c0\u7d22 \u6df1\u5ea6\u5b66\u4e60\u56fe\u50cf\u5b9a\u4f4d/\u68c0\u7d22"},{"location":"IMAGE_PROCESS/NetVLAD/#_1","title":"\ud83d\udcd8 \u53c2\u8003\u8bba\u6587","text":"<ul> <li>VLAD: Aggregating Local Descriptors for Large-Scale Image Search H. J\u00e9gou et al., CVPR 2010</li> <li>NetVLAD: CNN architecture for weakly supervised place recognition Relja Arandjelovic, et al. \u2013 CVPR 2016</li> </ul>"},{"location":"IMAGE_PROCESS/bytetrack/","title":"ByteTrack\u8ddf\u8e2a\u7b97\u6cd5","text":"<p>ByteTrack\uff08[BoT-SORT\u2019s predecessor]\uff09\u662f\u4e00\u79cd\u9ad8\u6027\u80fd\u7684 \u591a\u76ee\u6807\u8ddf\u8e2a\uff08Multi-Object Tracking, MOT\uff09 \u7b97\u6cd5</p> <p>\u591a\u76ee\u6807\u8ffd\u8e2a\u7b97\u6cd5\u4e00\u822c\u5728\u5b8c\u6210\u5f53\u524d\u5e27\u7684\u76ee\u6807\u68c0\u6d4b\u540e\u53ea\u4f1a\u4fdd\u7559\u7f6e\u4fe1\u5ea6\u6bd4\u8f83\u5927\u7684\u68c0\u6d4b\u6846\u7528\u4e8e\u8fdb\u884c\u76ee\u6807\u8ddf\u8e2a\uff0c\u800c\u5728ByteTrack\u4e2d\uff0c\u4f5c\u8005\u4fdd\u7559\u4e86\u6240\u6709\u7684\u68c0\u6d4b\u6846\u5e76\u4e14\u901a\u8fc7\u9608\u503c\u5c06\u5b83\u4eec\u5206\u6210\u4e86\u9ad8\u7f6e\u4fe1\u5ea6\u68c0\u6d4b\u6846\u548c\u4f4e\u7f6e\u4fe1\u5ea6\u68c0\u6d4b\u6846\u3002ByteTrack \u53ef\u4ee5\u6709\u6548\u89e3\u51b3\u4e00\u4e9b\u906e\u6321\uff0c\u4e14\u80fd\u591f\u4fdd\u6301\u8f83\u4f4e\u7684 ID Switch\u3002\u56e0\u4e3a\u76ee\u6807\u4f1a\u56e0\u4e3a\u88ab\u906e\u6321\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\u6709\u6240\u964d\u4f4e\uff0c\u5f53\u91cd\u65b0\u51fa\u73b0\u65f6\uff0c\u7f6e\u4fe1\u5ea6\u4f1a\u6709\u6240\u5347\u9ad8\u3002\u7b97\u6cd5\u7279\u70b9\u5728\u4e8e\uff1a</p> <p>\u5f53\u76ee\u6807\u9010\u6e10\u88ab\u906e\u6321\u65f6\uff0c\u8ddf\u8e2a\u76ee\u6807\u4e0e\u4f4e\u7f6e\u4fe1\u5ea6\u68c0\u6d4b\u76ee\u6807\u5339\u914d\u3002 \u5f53\u76ee\u6807\u906e\u6321\u9010\u6e10\u91cd\u73b0\u65f6\uff0c\u8ddf\u8e2a\u76ee\u6807\u4e0e\u9ad8\u7f6e\u4fe1\u5ea6\u68c0\u6d4b\u76ee\u6807\u5339\u914d\u3002</p> <p>\u76f8\u6bd4\u4e0eSORT bytetrack\u4e5f\u662f\u7528\u5230\u4e86\u5361\u5c14\u66fc\u6ee4\u6ce2\u548c\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u4e0d\u540c\u7684\u5c31\u662fbytetrack\u5229\u7528\u4e86\u68c0\u6d4b\u5f97\u5230\u7684\u9ad8\u5f97\u5206\u6846\u548c\u4f4e\u5f97\u5206\u6846\uff0c\u5339\u914d\u903b\u8f91\u66f4\u590d\u6742\uff0c\u800csort\u53ea\u7528\u4e86\u6700\u9ad8\u5f97\u5206\u7684\u68c0\u6d4b\u6846\u53bb\u548c\u5386\u53f2\u8f68\u8ff9\u505a\u5339\u914d\uff0c\u5339\u914d\u903b\u8f91\u7b80\u5355\u70b9\uff0c\u4f46\u662f\u4e0d\u7ba1\u662fbytetrack\u8fd8\u662fsort\u90fd\u662f\u7528\u4e86\u5308\u7259\u5229\u7b97\u6cd5\u505a\u5339\u914d\uff0c\u53ea\u4e0d\u8fc7\u5339\u914d\u7684\u903b\u8f91\u4e0d\u592a\u4e00\u6837\uff0c\u5e76\u4e14\u4e24\u8005\u90fd\u662f\u7528\u4e86\u5361\u5c14\u66fc\u6ee4\u6ce2\u505a\u9884\u6d4b\u4ee5\u53ca\u66f4\u65b0\u6700\u4f18\u503c\u3002</p> <p></p> <p></p>"},{"location":"IMAGE_PROCESS/bytetrack/#_1","title":"\u4ee3\u7801\u903b\u8f91","text":""},{"location":"IMAGE_PROCESS/bytetrack/#strack","title":"<code>STrack</code>","text":"<p>\u4e3a\u6bcf\u4e2a\u76ee\u6807\u6846\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff1a\u8868\u793a\u5355\u4e2a\u76ee\u6807\u7684\u8f68\u8ff9\uff0c\u5305\u542b\u5361\u5c14\u66fc\u6ee4\u6ce2\u9884\u6d4b\u3001\u72b6\u6001\u66f4\u65b0\u7b49\u529f\u80fd</p>"},{"location":"IMAGE_PROCESS/bytetrack/#1-__init__","title":"(1) \u521d\u59cb\u5316 <code>__init__()</code>","text":"Python<pre><code>def __init__(self, tlwh, score):\n    self._tlwh = np.asarray(tlwh, dtype=np.float64)  # \u76ee\u6807\u7684\u8fb9\u754c\u6846 (x, y, w, h)\n    self.kalman_filter = None  # \u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\n    self.mean, self.covariance = None, None  # \u76ee\u6807\u72b6\u6001\u5747\u503c &amp; \u534f\u65b9\u5dee\n    self.is_activated = False  # \u8f68\u8ff9\u662f\u5426\u6fc0\u6d3b\n    self.score = score  # \u76ee\u6807\u68c0\u6d4b\u5206\u6570\n    self.tracklet_len = 0  # \u76ee\u6807\u5b58\u5728\u7684\u5e27\u6570\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a\u521b\u5efa\u4e00\u4e2a\u76ee\u6807\u8ddf\u8e2a\u5bf9\u8c61\uff0c\u5e76\u5b58\u50a8\u5176\u521d\u59cb\u72b6\u6001\uff08\u4f4d\u7f6e\u3001\u7f6e\u4fe1\u5ea6\u5206\u6570\u7b49\uff09\u3002</p>"},{"location":"IMAGE_PROCESS/bytetrack/#2-predict","title":"(2) \u9884\u6d4b <code>predict()</code>","text":"Python<pre><code>def predict(self):\n    mean_state = self.mean.copy()\n    if self.state != TrackState.Tracked:\n        mean_state[7] = 0  # \u5982\u679c\u4e0d\u662f Tracked \u72b6\u6001\uff0c\u901f\u5ea6\u8bbe\u4e3a 0\n    self.mean, self.covariance = self.kalman_filter.predict(mean_state, self.covariance)\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u57fa\u4e8e\u5361\u5c14\u66fc\u6ee4\u6ce2\u9884\u6d4b\u76ee\u6807\u7684\u4e0b\u4e00\u5e27\u4f4d\u7f6e\uff0c\u5982\u679c\u76ee\u6807\u72b6\u6001\u4e0d\u4e3a <code>Tracked</code>\uff0c\u5219\u8bbe\u901f\u5ea6\u4e3a 0\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/bytetrack/#3-multi_predict","title":"(3) \u591a\u76ee\u6807\u9884\u6d4b <code>multi_predict()</code>","text":"Python<pre><code>@staticmethod\ndef multi_predict(stracks):\n    if len(stracks) &gt; 0:\n        multi_mean = np.asarray([st.mean.copy() for st in stracks])\n        multi_covariance = np.asarray([st.covariance for st in stracks])\n        for i, st in enumerate(stracks):\n            if st.state != TrackState.Tracked:\n                multi_mean[i][7] = 0  # \u901f\u5ea6\u5f52\u96f6\n        multi_mean, multi_covariance = STrack.shared_kalman.multi_predict(multi_mean, multi_covariance)\n        for i, (mean, cov) in enumerate(zip(multi_mean, multi_covariance)):\n            stracks[i].mean = mean\n            stracks[i].covariance = cov\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5bf9\u6240\u6709\u76ee\u6807\u540c\u65f6\u8fdb\u884c\u5361\u5c14\u66fc\u6ee4\u6ce2\u9884\u6d4b\uff0c\u63d0\u9ad8\u6548\u7387\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/bytetrack/#4-activate","title":"(4) \u8f68\u8ff9\u6fc0\u6d3b <code>activate()</code>","text":"Python<pre><code>def activate(self, kalman_filter, frame_id):\n    self.kalman_filter = kalman_filter\n    self.track_id = self.next_id()  # \u8f68\u8ff9 ID \u9012\u589e\n    self.mean, self.covariance = self.kalman_filter.initiate(self.tlwh_to_xyah(self._tlwh))\n    self.state = TrackState.Tracked  # \u8bbe\u7f6e\u72b6\u6001\u4e3a Tracked\n    if frame_id == 1:\n        self.is_activated = True\n    self.frame_id = frame_id\n    self.start_frame = frame_id\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5f53\u68c0\u6d4b\u5230\u65b0\u7684\u76ee\u6807\u65f6\uff0c\u521d\u59cb\u5316\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668 \u5e76 \u5206\u914d\u65b0\u7684 Track ID\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/bytetrack/#5-update","title":"(5) \u8f68\u8ff9\u66f4\u65b0 <code>update()</code>","text":"Python<pre><code>def update(self, new_track, frame_id):\n    self.frame_id = frame_id\n    self.tracklet_len += 1\n    new_tlwh = new_track.tlwh\n    self.mean, self.covariance = self.kalman_filter.update(\n        self.mean, self.covariance, self.tlwh_to_xyah(new_tlwh))\n    self.state = TrackState.Tracked\n    self.is_activated = True\n    self.score = new_track.score\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5f53\u4e00\u4e2a\u65b0\u68c0\u6d4b\u7ed3\u679c\u4e0e\u5f53\u524d\u8f68\u8ff9\u5339\u914d\u65f6\uff0c\u66f4\u65b0\u8f68\u8ff9\u72b6\u6001\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/bytetrack/#6-re_activate","title":"(6) \u8f68\u8ff9\u91cd\u65b0\u6fc0\u6d3b <code>re_activate()</code>","text":"Python<pre><code>def re_activate(self, new_track, frame_id, new_id=False):\n    self.mean, self.covariance = self.kalman_filter.update(\n        self.mean, self.covariance, self.tlwh_to_xyah(new_track.tlwh)\n    )\n    self.is_activated = True\n    self.frame_id = frame_id\n    if new_id:\n        self.track_id = self.next_id()\n    self.score = new_track.score\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5982\u679c\u76ee\u6807\u66fe\u4e22\u5931\u4f46\u53c8\u88ab\u91cd\u65b0\u68c0\u6d4b\u5230\uff0c\u5219\u91cd\u65b0\u6fc0\u6d3b\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/bytetrack/#bytetracker","title":"<code>BYTETracker</code>","text":"<p><code>BYTETracker</code>\uff08\u4e3b\u8ddf\u8e2a\u5668\uff09\uff1a\u7ba1\u7406\u6240\u6709\u76ee\u6807\u7684\u72b6\u6001\uff0c\u5305\u62ec\u68c0\u6d4b\u3001\u5339\u914d\u3001\u66f4\u65b0\u3001\u8f68\u8ff9\u7ba1\u7406\u7b49\u3002</p>"},{"location":"IMAGE_PROCESS/bytetrack/#1-__init___1","title":"(1) \u521d\u59cb\u5316 <code>__init__()</code>","text":"Python<pre><code>def __init__(self, args, frame_rate=30):\n    self.tracked_stracks = []  # \u6b63\u5728\u8ddf\u8e2a\u7684\u8f68\u8ff9\n    self.lost_stracks = []  # \u4e22\u5931\u7684\u8f68\u8ff9\n    self.removed_stracks = []  # \u5220\u9664\u7684\u8f68\u8ff9\n    self.frame_id = 0  # \u5f53\u524d\u5e27\u53f7\n    self.args = args\n    self.det_thresh = args.track_thresh + 0.1  # \u76ee\u6807\u68c0\u6d4b\u9608\u503c\n    self.buffer_size = int(frame_rate / 30.0 * args.track_buffer)  # \u8f68\u8ff9\u7f13\u51b2\u533a\n    self.max_time_lost = self.buffer_size  # \u5141\u8bb8\u4e22\u5931\u7684\u6700\u5927\u5e27\u6570\n    self.kalman_filter = KalmanFilter()\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u521d\u59cb\u5316 BYTETracker \u5e76\u8bbe\u7f6e\u8ddf\u8e2a\u53c2\u6570\uff08\u4f8b\u5982\u8f68\u8ff9\u7f13\u51b2\u533a\u5927\u5c0f\uff09\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/bytetrack/#2-update","title":"(2) \u66f4\u65b0 <code>update()</code>(\u7b97\u6cd5\u6838\u5fc3\u903b\u8f91)","text":"Python<pre><code>def update(self, output_results, img_info, img_size):\n        self.frame_id += 1\n        activated_starcks = [] # \u4fdd\u5b58\u5f53\u524d\u5e27\u5339\u914d\u5230\u7684\u6301\u7eed\u8ddf\u8e2a\u7684\u8f68\u8ff9\n        refind_stracks = [] # \u4fdd\u5b58\u5f53\u524d\u5e27\u5339\u914d\u5230\u4e4b\u524d\u76ee\u6807\u4e22\u5931\u7684\u8f68\u8ff9\n        lost_stracks = [] # \u4fdd\u5b58\u5f53\u524d\u5e27\u6ca1\u6709\u5339\u914d\u5230\u76ee\u6807\u7684\u8f68\u8ff9\n        removed_stracks = [] # \u4fdd\u5b58\u5f53\u524d\u5e27\u8981\u79fb\u9664\u7684\u8f68\u8ff9\n\n        # \u7b2c\u4e00\u6b65\uff0c \u5c06objects\u8f6c\u6362\u4e3a[x1, y1, x2, y2, score]\u683c\u5f0f\uff0c\u6784\u5efastrack\n        if output_results.shape[1] == 5:\n            scores = output_results[:, 4]\n            bboxes = output_results[:, :4]\n        else:\n            output_results = output_results.cpu().numpy()\n            scores = output_results[:, 4] * output_results[:, 5]\n            bboxes = output_results[:, :4]  # x1y1x2y2\n        img_h, img_w = img_info[0], img_info[1]\n        scale = min(img_size[0] / float(img_h), img_size[1] / float(img_w))\n        bboxes /= scale\n\n        # \u6309\u7f6e\u4fe1\u5ea6\u5206\u4e3a\u9ad8\u5206\u5339\u914d\uff08\u7b2c\u4e00\u6b21\uff0c \u7f6e\u4fe1\u5ea6&gt;track_thresh\uff09\uff0c \u4f4e\u5206\u5339\u914d\uff08\u7b2c\u4e8c\u6b21\uff0c \u7f6e\u4fe1\u5ea6\u4ecb\u4e8e0.1\u5230thrack_thresh\uff09\n        remain_inds = scores &gt; self.args.track_thresh\n        inds_low = scores &gt; 0.1\n        inds_high = scores &lt; self.args.track_thresh\n\n        inds_second = np.logical_and(inds_low, inds_high)\n        dets_second = bboxes[inds_second] # \u7528\u4e8e\u7b2c\u4e8c\u6b21\u5339\u914d\u7684\u76ee\u6807\u6846\n        dets = bboxes[remain_inds] # \u7528\u4e8e\u7b2c\u4e00\u6b21\u5339\u914d\u7684\u76ee\u6807\u6846\n        scores_keep = scores[remain_inds]\n        scores_second = scores[inds_second]\n\n        if len(dets) &gt; 0:\n            '''Detections'''\n            detections = [STrack(STrack.tlbr_to_tlwh(tlbr), s) for\n                          (tlbr, s) in zip(dets, scores_keep)]\n        else:\n            detections = []\n\n        ''' Add newly detected tracklets to tracked_stracks'''\n        unconfirmed = []\n        tracked_stracks = []  # type: list[STrack]\n        for track in self.tracked_stracks:\n            if not track.is_activated:\n                unconfirmed.append(track)\n            else:\n                tracked_stracks.append(track)\n\n        ''' Step 2: First association, with high score detection boxes'''\n        # \u7b2c\u4e00\u6b21\u5339\u914d\n        # \u5c06tracked_stracks\u548clost_stracks\u5148\u9884\u6d4b\u5f97\u5230\u9884\u6d4b\u6846\uff0c\u4e0e\u9ad8\u5206\u6846\u505a\u5339\u914d\n        # tracked_stracks\u548clost_stracks\u90fd\u662f\u5df2\u7ecf\u6fc0\u6d3b\u7684\u72b6\u6001\n        strack_pool = joint_stracks(tracked_stracks, self.lost_stracks)\n        # \u6839\u636e\u8fd9\u4e9b\u8f68\u8ff9\u5229\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2\u9884\u6d4b\u8fd9\u6b21\u7684\u76ee\u6807\u6846\u4f4d\u7f6e\n        STrack.multi_predict(strack_pool)\n        dists = matching.iou_distance(strack_pool, detections)\n        if not self.args.mot20:\n            dists = matching.fuse_score(dists, detections)\n        matches, u_track, u_detection = matching.linear_assignment(dists, thresh=self.args.match_thresh)\n\n        for itracked, idet in matches:\n            track = strack_pool[itracked]\n            det = detections[idet]\n            if track.state == TrackState.Tracked:\n                track.update(detections[idet], self.frame_id)\n                activated_starcks.append(track)\n            else:\n                track.re_activate(det, self.frame_id, new_id=False)\n                refind_stracks.append(track)\n\n        ''' Step 3: Second association, with low score detection boxes'''\n\n        # \u7b2c\u4e8c\u6b21\u4f4e\u5206\u4e0e\u672a\u5339\u914d\u7684\u8f68\u8ff9\uff08\u72b6\u6001\u4e3aTracked\u7684\u8f68\u8ff9\uff09\n        # association the untrack to the low score detections\n        if len(dets_second) &gt; 0:\n            '''Detections'''\n            detections_second = [STrack(STrack.tlbr_to_tlwh(tlbr), s) for\n                          (tlbr, s) in zip(dets_second, scores_second)]\n        else:\n            detections_second = []\n        r_tracked_stracks = [strack_pool[i] for i in u_track if strack_pool[i].state == TrackState.Tracked]\n        dists = matching.iou_distance(r_tracked_stracks, detections_second)\n        matches, u_track, u_detection_second = matching.linear_assignment(dists, thresh=0.5)\n        for itracked, idet in matches:\n            track = r_tracked_stracks[itracked]\n            det = detections_second[idet]\n            if track.state == TrackState.Tracked:\n                track.update(det, self.frame_id)\n                activated_starcks.append(track)\n            else:\n                track.re_activate(det, self.frame_id, new_id=False)\n                refind_stracks.append(track)\n\n        for it in u_track:\n            track = r_tracked_stracks[it]\n            if not track.state == TrackState.Lost:\n                track.mark_lost()\n                lost_stracks.append(track)\n\n        '''Deal with unconfirmed tracks, usually tracks with only one beginning frame'''\n        # \u7b2c\u4e09\u6b21\u5339\u914d\uff0c \u7b2c\u4e00\u6b21\u672a\u5339\u914d\u7684\u9ad8\u5206\u68c0\u6d4b\u6846\u4e0e\u975e\u6fc0\u6d3b\u8f68\u8ff9\u5339\u914d\uff08\u4e0a\u4e00\u5e27\u521a\u521a\u65b0\u5efa\u7684\u8f68\u8ff9\uff09\n        detections = [detections[i] for i in u_detection]\n        dists = matching.iou_distance(unconfirmed, detections)\n        if not self.args.mot20:\n            dists = matching.fuse_score(dists, detections)\n        matches, u_unconfirmed, u_detection = matching.linear_assignment(dists, thresh=0.7)\n        for itracked, idet in matches:\n            unconfirmed[itracked].update(detections[idet], self.frame_id)\n            activated_starcks.append(unconfirmed[itracked])\n        for it in u_unconfirmed:\n            track = unconfirmed[it]\n            track.mark_removed()\n            removed_stracks.append(track)\n        # \u7b2c\u4e09\u6b21\u5339\u914d\u540e\uff0c\u4ecd\u7136\u5269\u4f59\u7684\u9ad8\u5206\u68c0\u6d4b\u6846\uff0c\u6765\u65b0\u5efa\u8f68\u8ff9\uff0c\u9664\u7b2c\u4e00\u5e27\u5916\uff0c\u65b0\u5efa\u7684\u8f68\u8ff9\u90fd\u662f\u672a\u6fc0\u6d3b\u7684\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9700\u8981\u8fde\u7eed\u68c0\u6d4b\u624d\u80fd\u6fc0\u6d3b\n        \"\"\" Step 4: Init new stracks\"\"\"\n        for inew in u_detection:\n            track = detections[inew]\n            if track.score &lt; self.det_thresh:\n                continue\n            track.activate(self.kalman_filter, self.frame_id)\n            activated_starcks.append(track)\n            #\u7b2c1\u6b21\u5339\u914d\u540e\uff0c\u5269\u4f59\u8fde\u7eedLost\u72b6\u6001\u7684\u8f68\u8ff9\uff0c\u8d85\u8fc7max_time_lost\u5e27\u5220\u9664\n        \"\"\" Step 5: Update state\"\"\"\n        for track in self.lost_stracks:\n            if self.frame_id - track.end_frame &gt; self.max_time_lost:\n                track.mark_removed()\n                removed_stracks.append(track)\n\n        # print('Ramained match {} s'.format(t4-t3))\n\n        self.tracked_stracks = [t for t in self.tracked_stracks if t.state == TrackState.Tracked]\n        self.tracked_stracks = joint_stracks(self.tracked_stracks, activated_starcks)\n        self.tracked_stracks = joint_stracks(self.tracked_stracks, refind_stracks)\n        self.lost_stracks = sub_stracks(self.lost_stracks, self.tracked_stracks)\n        self.lost_stracks.extend(lost_stracks)\n        self.lost_stracks = sub_stracks(self.lost_stracks, self.removed_stracks)\n        self.removed_stracks.extend(removed_stracks)\n        self.tracked_stracks, self.lost_stracks = remove_duplicate_stracks(self.tracked_stracks, self.lost_stracks)\n        # get scores of lost tracks\n        output_stracks = [track for track in self.tracked_stracks if track.is_activated]\n\n        return output_stracks\n</code></pre>"},{"location":"IMAGE_PROCESS/Learn/","title":"Index","text":""},{"location":"IMAGE_PROCESS/Learn/#html","title":"\u5bfc\u822aHTML","text":"<ul> <li>faiss python\u8fd0\u884c\u65f6\u95f4\u5bf9\u6bd4</li> <li>\u6570\u636e\u589e\u5f3a</li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/","title":"ISP Pipeline","text":""},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#1-raw","title":"1. RAW\u57df\u5904\u7406","text":""},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#11-blc-black-level-correction","title":"1.1 BLC\uff08\u9ed1\u7535\u5e73\u6821\u6b63 Black Level Correction\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u4f20\u611f\u5668\u5668\u4ef6\u4f1a\u4ea7\u751f\u6697\u7535\u6d41\uff0c\u5bfc\u81f4\u8f93\u51fa\u4e0d\u662f\u7edd\u5bf90\uff0c\u5f71\u54cd\u771f\u5b9e\u7535\u5e73\u503c\u3002</p> </li> <li>\u6a21\u62df\u4fe1\u53f7\u8f6c\u6362\u6210\u6570\u5b57\u4fe1\u53f7\u65f6\u5b58\u5728\u7cbe\u5ea6\u95ee\u9898\uff0c\u65e0\u6cd5\u533a\u5206\u5f88\u5c0f\u7684\u7535\u5e73\u503c\u3002</li> <li> <p>\u4f5c\u7528</p> </li> <li> <p>\u53bb\u9664\u56fe\u50cf\u9ed1\u7535\u5e73\u504f\u79fb\uff0c\u4f7fRAW\u6570\u636e\u7ebf\u6027\u5316\uff0c\u65b9\u4fbf\u540e\u7eed\u5904\u7406\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u56fa\u5b9a\u503c\u6263\u9664\u6cd5\uff1a\u5bf9\u6bcf\u4e2a\u901a\u9053\u51cf\u53bb\u4e00\u4e2a\u56fa\u5b9a\u503c\uff08\u5747\u503c\u6216\u4e2d\u503c\uff09\u3002</p> </li> <li>\u53ef\u9009\u5bf9Gr\u3001Gb\u901a\u9053\u5f52\u4e00\u5316\u5904\u7406\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#12-lsc-lens-shading-correction","title":"1.2 LSC\uff08\u955c\u5934\u9634\u5f71\u6821\u6b63 Lens Shading Correction\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u955c\u5934\u5149\u5b66\u6298\u5c04\u4e0d\u5747\u5300\uff0c\u9020\u6210\u56db\u89d2\u504f\u6697\u7b49\u9634\u5f71\u6548\u5e94\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u7f51\u683c\u6cd5\uff1a\u5c06\u56fe\u50cf\u5212\u5206\u4e3a\u56fa\u5b9a\u5927\u5c0f\u7684\u7f51\u683c\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u7f51\u683c\u7684\u589e\u76ca\uff0c\u5229\u7528\u63d2\u503c\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u7684\u589e\u76ca\u5e76\u8865\u507f\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#13-dpc-defective-pixel-correction","title":"1.3 DPC\uff08\u52a8\u6001\u574f\u70b9\u6821\u6b63 Defective Pixel Correction\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u5236\u9020\u5de5\u827a\u7f3a\u9677\u5bfc\u81f4\u67d0\u4e9b\u50cf\u7d20\u5f02\u5e38\uff0c\u5982\u5168\u9ed1\u73af\u5883\u4e0b\u7684\u767d\u70b9\u6216\u9ad8\u4eae\u73af\u5883\u4e0b\u7684\u9ed1\u70b9\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u901a\u8fc7\u7b97\u6cd5\u68c0\u6d4b\u574f\u70b9\uff0c\u57fa\u4e8e\u5468\u56f4\u6b63\u5e38\u50cf\u7d20\u63d2\u503c\u6ee4\u6ce2\u4fee\u6b63\u574f\u70b9\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#14-awb-automatic-white-balance","title":"1.4 AWB\uff08\u81ea\u52a8\u767d\u5e73\u8861 Automatic White Balance\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u4f20\u611f\u5668\u5bf9\u4e0d\u540c\u5149\u6e90\u65e0\u989c\u8272\u6052\u5e38\u6027\uff0c\u5bfc\u81f4\u56fe\u50cf\u8272\u504f\u3002</p> </li> <li> <p>\u5e38\u7528\u7b97\u6cd5</p> </li> <li> <p>\u7070\u5ea6\u4e16\u754c\u6cd5</p> <ul> <li>\u5047\u8bbe\u56fe\u50cfRGB\u4e09\u901a\u9053\u5747\u503c\u76f8\u7b49\uff0c\u901a\u8fc7\u8ba1\u7b97R\u3001G\u3001B\u5747\u503c\u5f97\u5230\u589e\u76ca\u503c\uff0c\u8c03\u6574\u5404\u901a\u9053\u3002</li> <li> <p>\u5b8c\u7f8e\u53cd\u5c04\u6cd5\uff08\u767d\u70b9\u6cd5\uff09</p> </li> <li> <p>\u9009\u53d6\u56fe\u50cf\u4e2d\u4eae\u5ea6\u6700\u9ad8\u7684\u50cf\u7d20\u4f5c\u4e3a\u767d\u70b9\uff0c\u8ba1\u7b97\u5404\u901a\u9053\u589e\u76ca\u8fdb\u884c\u6821\u6b63\u3002</p> </li> <li>\u7edf\u8ba1\u6cd5\u3001\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684AWB\uff08\u53ef\u9009\uff09</li> </ul> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#15-bnrbayer-bayer-noise-reduction","title":"1.5 BNR\uff08Bayer\u964d\u566a Bayer Noise Reduction\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u4f20\u611f\u5668\u53d7\u6e29\u5ea6\u3001\u6697\u5149\u3001\u4f20\u8f93\u7b49\u5f71\u54cd\u4ea7\u751f\u566a\u58f0\uff0c\u4e14ISP\u5904\u7406\u53ef\u80fd\u653e\u5927\u566a\u58f0\u3002</p> </li> <li> <p>\u4f5c\u7528</p> </li> <li> <p>\u5728RAW\u57df\u53bb\u566a\u6bd4\u540e\u671fYUV\u57df\u964d\u566a\u6548\u679c\u66f4\u597d\uff0c\u56e0\u4e3a\u7ebf\u6027\u53d8\u5316\u5c0f\uff0c\u6613\u5904\u7406\u3002</p> </li> <li> <p>\u5e38\u7528\u7b97\u6cd5</p> </li> <li> <p>\u7a7a\u57df\u6cd5\uff1a\u4e2d\u503c\u6ee4\u6ce2\u3001\u5747\u503c\u6ee4\u6ce2\u3001\u9ad8\u65af\u6ee4\u6ce2\u3001\u53cc\u8fb9\u6ee4\u6ce2\u3002</p> </li> <li>\u9891\u57df\u6cd5\uff1a\u5085\u91cc\u53f6\u53d8\u6362\u3001\u79bb\u6563\u4f59\u5f26\u53d8\u6362\uff08DCT\uff09\u3001\u5c0f\u6ce2\u53d8\u6362\u3002</li> <li>\u56fe\u50cf\u81ea\u76f8\u4f3c\u6027\u6cd5\uff1a\u975e\u5c40\u90e8\u5747\u503c\uff08NLM\uff09\u3001BM3D\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#16-hdr","title":"1.6 HDR\uff08\u9ad8\u52a8\u6001\u8303\u56f4\u5904\u7406\uff09","text":"<ul> <li> <p>\u4f5c\u7528</p> </li> <li> <p>\u5408\u6210\u591a\u5f20\u4e0d\u540c\u66dd\u5149\u7684RAW\u56fe\u50cf\uff0c\u6269\u5c55\u56fe\u50cf\u52a8\u6001\u8303\u56f4\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u591a\u66dd\u5149\u5408\u6210\uff0c\u5c40\u90e8\u5bf9\u6bd4\u5ea6\u589e\u5f3a\u7b49\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#17-demosaic","title":"1.7 Demosaic\uff08\u53bb\u9a6c\u8d5b\u514b\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u5c06Bayer RAW\u56fe\u50cf\u8f6c\u6210\u5b8c\u6574\u7684RGB\u56fe\u50cf\u3002</p> </li> <li> <p>\u5e38\u7528\u7b97\u6cd5</p> </li> <li> <p>\u7ebf\u6027\u63d2\u503c\u6cd5\uff1a\u7528\u7f3a\u5931\u989c\u8272\u7684\u90bb\u8fd1\u50cf\u7d20\u7ebf\u6027\u63d2\u503c\u3002</p> </li> <li>\u8272\u6bd4\u6cd5\uff1a\u5047\u8bbe\u90bb\u8fd1\u50cf\u7d20\u7684\u8272\u6bd4\uff08R/G\uff0cB/G\uff09\u6052\u5b9a\uff0c\u5148\u63d2\u503cG\u901a\u9053\uff0c\u518d\u63a8\u7b97\u7f3a\u5931\u901a\u9053\u3002</li> <li>\u8272\u5dee\u6cd5\uff1a\u57fa\u4e8e\u8272\u5f69\u5dee\u5f02\u8fdb\u884c\u63d2\u503c\uff0c\u66f4\u51c6\u786e\u3002</li> <li>\u9ad8\u7ea7\u65b9\u6cd5\uff1a\u57fa\u4e8e\u8fb9\u7f18\u68c0\u6d4b\u3001\u9891\u57df\u6ee4\u6ce2\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u53bb\u9a6c\u8d5b\u514b\u7b97\u6cd5\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#2-rgb","title":"2. RGB\u57df\u5904\u7406","text":""},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#21-ccm-color-correction-matrix","title":"2.1 CCM\uff08\u8272\u5f69\u6821\u6b63\u77e9\u9635 Color Correction Matrix\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u4eba\u773c\u5bf9\u4e0d\u540c\u8272\u5f69\u7684\u54cd\u5e94\u4e0d\u540c\uff0c\u9700\u5bf9\u4f20\u611f\u5668\u6355\u83b7\u7684\u8272\u5f69\u8fdb\u884c\u6821\u6b63\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u4f7f\u75283x3\u77e9\u9635\u5bf9RGB\u4e09\u901a\u9053\u8fdb\u884c\u7ebf\u6027\u53d8\u6362\uff0c\u8c03\u6574\u8272\u5f69\u3002</p> </li> <li>\u901a\u8fc7\u62cd\u6444\u6807\u51c6\u8272\u5361\u8fdb\u884c\u77e9\u9635\u6807\u5b9a\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#22-gamma","title":"2.2 Gamma\u6821\u6b63","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u4eba\u773c\u5bf9\u4eae\u5ea6\u611f\u77e5\u975e\u7ebf\u6027\uff0c\u800c\u4f20\u611f\u5668\u7ebf\u6027\u54cd\u5e94\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u4f7f\u7528\u67e5\u627e\u8868\uff08LUT\uff09\u6216\u7ebf\u6027\u63d2\u503c\u5b9e\u73b0\u975e\u7ebf\u6027\u6620\u5c04\uff0c\u4f7f\u56fe\u50cf\u7b26\u5408\u4eba\u773c\u89c6\u89c9\u7279\u6027\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#23-csc-color-space-conversion","title":"2.3 CSC\uff08\u8272\u5f69\u7a7a\u95f4\u8f6c\u6362 Color Space Conversion\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u89c6\u9891\u7f16\u7801\u3001\u663e\u793a\u8bbe\u5907\u7b49\u901a\u5e38\u4f7f\u7528YUV\u8272\u5f69\u7a7a\u95f4\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u5c06RGB\u8f6c\u6362\u6210YUV\uff08\u6216YCbCr\uff09\u8272\u5f69\u7a7a\u95f4\uff0c\u65b9\u4fbf\u540e\u7eed\u538b\u7f29\u4e0e\u5904\u7406\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#3-yuv","title":"3. YUV\u57df\u5904\u7406","text":""},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#31-ynr-luma-noise-reduction","title":"3.1 YNR\uff08\u4eae\u5ea6\u964d\u566a Luma Noise Reduction\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u56fe\u50cf\u4eae\u5ea6\u901a\u9053\u7684\u566a\u58f0\u5f71\u54cd\u7ec6\u8282\u548c\u89c6\u89c9\u6548\u679c\u3002</p> </li> <li> <p>\u5e38\u7528\u7b97\u6cd5</p> </li> <li> <p>\u7ed3\u5408\u7a7a\u57df\u6ee4\u6ce2\u548c\u9891\u57df\u6ee4\u6ce2\uff0c\u91c7\u7528\u81ea\u9002\u5e94\u6ee4\u6ce2\u3001\u5f15\u5bfc\u6ee4\u6ce2\u7b49\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#32-uvnr-chroma-noise-reduction","title":"3.2 UVNR\uff08\u8272\u5ea6\u964d\u566a Chroma Noise Reduction\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u867d\u7ecf\u8fc7\u767d\u5e73\u8861\uff0cRGB\u4e09\u901a\u9053\u4ecd\u5b58\u5728\u968f\u673a\u8272\u566a\uff0c\u7279\u522b\u5728\u8272\u5ea6\u5206\u91cf\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u5229\u7528\u8272\u5ea6\u901a\u9053\u7279\u6027\u8fdb\u884c\u566a\u58f0\u6291\u5236\uff0c\u901a\u5e38\u6bd4\u4eae\u5ea6\u964d\u566a\u5f3a\u5ea6\u4f4e\uff0c\u907f\u514d\u8272\u5f69\u5931\u771f\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#33-ee-edge-enhancement","title":"3.3 EE\uff08\u8fb9\u7f18\u589e\u5f3a Edge Enhancement\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u5149\u5b66\u7cfb\u7edf\u7684\u4f4e\u901a\u6ee4\u6ce2\u4f5c\u7528\u5bfc\u81f4\u56fe\u50cf\u7ec6\u8282\u9510\u5ea6\u4e0b\u964d\u3002</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u6cd5</p> </li> <li> <p>\u4f7f\u7528Unsharp Mask\uff08USM\uff09\u63d0\u53d6\u9ad8\u9891\u5206\u91cf\uff0c\u52a0\u5f3a\u8fb9\u7f18\u660e\u6697\u53cd\u5dee\uff0c\u63d0\u5347\u89c6\u89c9\u9510\u5ea6\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#34-warping-distortion-correction","title":"3.4 Warping\uff08\u53bb\u7578\u53d8 Distortion Correction\uff09","text":"<ul> <li> <p>\u4ea7\u751f\u539f\u56e0</p> </li> <li> <p>\u955c\u5934\u7578\u53d8\uff08\u5f84\u5411\u6876\u5f62\u3001\u6795\u5f62\u7578\u53d8\u53ca\u5207\u5411\u7578\u53d8\uff09\u5bfc\u81f4\u56fe\u50cf\u51e0\u4f55\u5931\u771f\u3002</p> </li> <li> <p>\u6807\u5b9a\u65b9\u6cd5</p> </li> <li> <p>\u6536\u96c6\u6807\u5b9a\u56fe\u50cf\uff08\u68cb\u76d8\u683c\u7b49\uff09</p> </li> <li>\u83b7\u53d6\u89d2\u70b9\u4e09\u7ef4\u5750\u6807\u4e0e\u50cf\u7d20\u5750\u6807</li> <li>\u6c42\u5185\u5916\u53c2\u6570\u53ca\u7578\u53d8\u7cfb\u6570\uff08\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u3001\u6781\u5927\u4f3c\u7136\u6cd5\u4f18\u5316\uff09</li> <li>\u751f\u6210\u7578\u53d8\u77eb\u6b63\u6620\u5c04\u8868</li> <li> <p>\u7b97\u6cd5</p> </li> <li> <p>\u5229\u7528\u7578\u53d8\u6a21\u578b\u8ba1\u7b97\u6821\u6b63\u5750\u6807\uff0c\u91c7\u7528\u53cc\u4e09\u6b21\u63d2\u503c\u83b7\u5f97\u76ee\u6807\u50cf\u7d20\u503c\u3002</p> </li> </ul>"},{"location":"IMAGE_PROCESS/isp/isp_pipeline/#_1","title":"\u5907\u6ce8\u53ca\u8865\u5145","text":"<ul> <li>ISP Pipeline\u5177\u4f53\u5b9e\u73b0\u4f1a\u56e0\u5382\u5546\u4e0d\u540c\u6709\u6240\u5dee\u5f02\u3002</li> <li>\u90e8\u5206\u73af\u8282\u53ef\u80fd\u6709\u591a\u4e2a\u7b97\u6cd5\u7248\u672c\uff0c\u9009\u62e9\u9700\u8003\u8651\u6027\u80fd\u4e0e\u6548\u679c\u5e73\u8861\u3002</li> <li>\u73b0\u4ee3ISP\u8fd8\u4f1a\u5305\u542b\u81ea\u52a8\u66dd\u5149\uff08AE\uff09\u3001\u81ea\u52a8\u5bf9\u7126\uff08AF\uff09\u3001\u8272\u8c03\u6620\u5c04\uff08Tone Mapping\uff09\u3001\u9510\u5316\u3001\u4f3d\u9a6c\u6821\u6b63\u540e\u7684\u8272\u5f69\u589e\u5f3a\u7b49\u3002</li> <li>\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u5f00\u59cb\u88ab\u5f15\u5165ISP\u540e\u7aef\u4ee5\u63d0\u5347\u964d\u566a\u548c\u53bb\u9a6c\u8d5b\u514b\u7b49\u6548\u679c\u3002</li> </ul>"},{"location":"IMAGE_PROCESS/opencv/01-mat/","title":"cv::Mat \u5bb9\u5668","text":"<p><code>cv::Mat</code> \u662f OpenCV \u4e2d\u7528\u6765\u5b58\u50a8\u56fe\u50cf\u3001\u56fe\u50cf\u533a\u57df\u3001\u6216\u8005\u4efb\u610f\u77e9\u9635\uff08\u5982\u7279\u5f81\u77e9\u9635\u3001\u53d8\u6362\u77e9\u9635\u7b49\uff09\u7684\u7c7b\u3002</p> <ul> <li>\u5168\u79f0\uff1aMatrix\uff08\u77e9\u9635\uff09</li> <li>\u672c\u8d28\u4e0a\u662f\uff1a\u4e00\u4e2a\u5305\u542b\u6570\u636e\uff08Data\uff09\u3001\u5c3a\u5bf8\uff08Size\uff09\u3001\u7c7b\u578b\uff08Type\uff09\u7b49\u4fe1\u606f\u7684\u4e8c\u7ef4\u6570\u636e\u7ed3\u6784\u3002</li> <li>\u7c7b\u5b9a\u4e49\u5728\uff1a<code>opencv2/core/mat.hpp</code></li> </ul> C++<pre><code>class Mat {\npublic:\n    uchar* data;         // \u5b9e\u9645\u7684\u6570\u636e\u6307\u9488\n    int rows, cols;      // \u884c\u6570\u3001\u5217\u6570\uff08\u9ad8\u3001\u5bbd\uff09\n    int type();          // \u6570\u636e\u7c7b\u578b\uff08\u5982 CV_8UC3\uff09\n    ...\n};\n</code></pre> <p><code>cv::Mat</code> \u4f7f\u7528 \u667a\u80fd\u5f15\u7528\u8ba1\u6570\u3002\u591a\u4e2a <code>Mat</code> \u5171\u4eab\u4e00\u4efd\u6570\u636e\uff0c\u76f4\u5230\u6709\u4eba <code>.clone()</code>\u3002</p>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#1","title":"1. \u5e38\u89c1\u521b\u5efa\u65b9\u5f0f","text":"<p>\u7a7a\u77e9\u9635</p> C++<pre><code>cv::Mat m1;\n</code></pre> <p>\u6307\u5b9a\u5927\u5c0f\u548c\u7c7b\u578b</p> C++<pre><code>cv::Mat m2(480, 640, CV_8UC1);        // \u5355\u901a\u9053\u7070\u5ea6\u56fe\u50cf\ncv::Mat m3(480, 640, CV_8UC3, cv::Scalar(0, 0, 255));  // \u7ea2\u8272\u80cc\u666f\n</code></pre> <p>\u4ece\u5df2\u6709\u6570\u636e\u6784\u9020</p> C++<pre><code>uchar data[] = {1, 2, 3, 4, 5, 6};\ncv::Mat m4(2, 3, CV_8UC1, data);  // 2\u884c3\u5217\n</code></pre> <p>\u91c7\u7528matlab\u65b9\u5f0f\u521d\u59cb\u5316</p> C++<pre><code>cv::Mat E = cv::Mat::eye(4, 4, CV_64F);\ncv::Mat O = cv::Mat::ones(2, 2, CV_32F);\ncv::Mat z = cv::Mat::zeros(3, 3, CV_8UC1);  \n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#2","title":"2. \u8bfb\u53d6\u56fe\u50cf","text":"C++<pre><code>cv::Mat img = cv::imread(\"image.jpg\");  // \u81ea\u52a8\u68c0\u6d4b\u901a\u9053\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#3","title":"3. \u590d\u5236\u4e0e\u6df1\u62f7\u8d1d","text":"C++<pre><code>cv::Mat copy1 = img;       // \u6d45\u62f7\u8d1d\uff0c\u6570\u636e\u5171\u4eab\uff0c\u589e\u52a0\u6570\u636e\u7684\u5f15\u7528\u6b21\u6570\uff0c\u6307\u5411\u540c\u4e00\u5757\u5730\u5740\ncv::Mat copy2 = img.clone(); // \u6df1\u62f7\u8d1d\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#4","title":"4. \u5e38\u7528\u65b9\u6cd5","text":""},{"location":"IMAGE_PROCESS/opencv/01-mat/#41","title":"4.1 \u57fa\u672c\u5c5e\u6027","text":"C++<pre><code>img.rows;       // \u9ad8\u5ea6\nimg.cols;       // \u5bbd\u5ea6\nimg.channels(); // \u901a\u9053\u6570\nimg.type();     // \u6570\u636e\u7c7b\u578b\uff08CV_8UC3\u7b49\uff09\nimg.depth();    // \u6df1\u5ea6\uff08CV_8U\u3001CV_32F \u7b49\uff09\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#42","title":"4.2 \u5224\u65ad\u56fe\u50cf\u6709\u6548\u6027","text":"C++<pre><code>if (img.empty()) {\n    std::cerr &lt;&lt; \"\u56fe\u50cf\u4e3a\u7a7a\uff01\\n\";\n}\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#43","title":"4.3 \u8bbf\u95ee\u50cf\u7d20","text":"C++<pre><code>// \u7070\u5ea6\u56fe\u50cf\nuchar gray = img.at&lt;uchar&gt;(y, x);\n\n// \u5f69\u8272\u56fe\u50cf\ncv::Vec3b color = img.at&lt;cv::Vec3b&gt;(y, x);\nuchar blue  = color[0];\nuchar green = color[1];\nuchar red   = color[2];\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#44","title":"4.4 \u8bbe\u7f6e\u50cf\u7d20","text":"C++<pre><code>img.at&lt;uchar&gt;(y, x) = 128;\nimg.at&lt;cv::Vec3b&gt;(y, x) = cv::Vec3b(0, 255, 0);  // \u7eff\u8272\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#5-type","title":"5. \u5e38\u89c1\u7c7b\u578b\uff08Type\uff09","text":"<p>OpenCV \u7684\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u65b9\u5f0f\u5982\u4e0b\uff1a</p> Text Only<pre><code>CV_&lt;bit-depth&gt;{U|S|F}C&lt;channels&gt;\n</code></pre> \u5b8f\u5b9a\u4e49 \u542b\u4e49 \u8bf4\u660e <code>CV_8UC1</code> 8-bit \u65e0\u7b26\u53f7\uff0c\u5355\u901a\u9053 \u7070\u5ea6\u56fe\u50cf\u5e38\u7528 <code>CV_8UC3</code> 8-bit \u65e0\u7b26\u53f7\uff0c\u4e09\u901a\u9053 \u5f69\u8272\u56fe\u50cf\uff08BGR\uff09\u5e38\u7528 <code>CV_32FC1</code> 32-bit float\uff0c\u5355\u901a\u9053 \u6d6e\u70b9\u56fe\u3001\u6df1\u5ea6\u56fe <code>CV_64FC1</code> 64-bit double\uff0c\u5355\u901a\u9053 \u9ad8\u7cbe\u5ea6\u8ba1\u7b97"},{"location":"IMAGE_PROCESS/opencv/01-mat/#6-roi","title":"6. \u56fe\u50cf\u533a\u57df\uff08ROI\uff09","text":"<p>\u4ece\u539f\u56fe\u4e2d\u83b7\u53d6\u4e00\u90e8\u5206\u5b50\u56fe\uff08\u4e0d\u590d\u5236\u6570\u636e\uff09\uff1a</p> C++<pre><code>cv::Rect roi(50, 50, 100, 100);\ncv::Mat sub_img = img(roi);  // \u5b50\u56fe\u50cf\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#7","title":"7. \u514b\u9686\u4e0e\u590d\u5236","text":"C++<pre><code>cv::Mat A = img;        // \u5171\u4eab\u6570\u636e\uff08\u5f15\u7528\u8ba1\u6570+1\uff09\ncv::Mat B = img.clone(); // \u5b8c\u5168\u590d\u5236\uff08\u65b0\u7684\u5185\u5b58\uff09\ncv::Mat C;\nimg.copyTo(C);          // \u5b8c\u5168\u590d\u5236\uff08\u7b49\u4ef7\u4e8e clone\uff09\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#8-mat","title":"8. <code>Mat</code> \u4e0e\u5176\u4ed6\u5bb9\u5668\u4e92\u8f6c","text":"C++<pre><code>std::vector&lt;float&gt; vec = {1,2,3,4,5,6};\ncv::Mat mat(vec);  // \u4ece vector \u521b\u5efa Mat\n\ncv::Mat mat2(3, 1, CV_32F);\nstd::vector&lt;float&gt; out;\nmat2.copyTo(out);  // \u8f6c\u56de vector\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#9","title":"9. \u56fe\u50cf\u8bbf\u95ee\u65b9\u5f0f","text":"<p>\u8bbf\u95ee\u56fe\u50cf\u4e2d\u50cf\u7d20\u503c\u6709\u591a\u79cd\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u56fe\u50cf\u7c7b\u578b</p> <p>\u9996\u5148\u9700\u8981\u77e5\u9053\u56fe\u50cf\u7684\u7c7b\u578b\u548c\u901a\u9053\u6570\uff08<code>CV_8UC1</code>, <code>CV_8UC3</code>, <code>CV_32FC1</code> \u7b49\uff09\uff1a</p> C++<pre><code>int type = img.type();         // \u56fe\u50cf\u7c7b\u578b\uff08\u6574\u578b\u6570\u503c\uff09\nint channels = img.channels(); // \u901a\u9053\u6570\n</code></pre> \u65b9\u5f0f \u4f18\u70b9 \u9002\u7528\u573a\u666f \u662f\u5426\u5b89\u5168 \u662f\u5426\u63a8\u8350\u904d\u5386\u4e2d\u4f7f\u7528 <code>at&lt;T&gt;(y,x)</code> \u7b80\u6d01\u3001\u5b89\u5168 \u6240\u6709\u901a\u9053 \u2705 \u5b89\u5168 \u274c \u8f83\u6162\uff08\u5e26\u8fb9\u754c\u68c0\u67e5\uff09 <code>ptr&lt;T&gt;(y)</code> \u9ad8\u6548\u3001\u76f4\u63a5 \u6240\u6709\u901a\u9053 \u26a0 \u4e0d\u5b89\u5168 \u2705 \u63a8\u8350\u904d\u5386\u4f7f\u7528 \u6307\u9488 + step \u6700\u9ad8\u6027\u80fd \u9ad8\u7ea7\u573a\u666f \u274c \u6613\u9519 \u2705 \u9ad8\u6027\u80fd\u904d\u5386 \u8fed\u4ee3\u5668 \u5b89\u5168\u53ef\u8bfb \u56fe\u50cf\u6574\u4f53\u8bbf\u95ee \u2705 \u5b89\u5168 \u274c \u4ec5\u5e95\u5c42\u4f7f\u7528 <code>data</code> \u539f\u59cb\u6307\u9488 \u56fe\u50cf\u6574\u4f53\u8bbf\u95ee \u274c \u975e\u5e38\u4e0d\u5b89\u5168 \u274c \u4ec5\u5e95\u5c42\u4f7f\u7528"},{"location":"IMAGE_PROCESS/opencv/01-mat/#91-atty-x","title":"9.1 <code>at&lt;T&gt;(y, x)</code>","text":"<p>\u5355\u901a\u9053\u7070\u5ea6\u56fe</p> C++<pre><code>cv::Mat gray = cv::imread(\"gray.jpg\", cv::IMREAD_GRAYSCALE);\nuchar pixel = gray.at&lt;uchar&gt;(y, x);      // \u83b7\u53d6\u50cf\u7d20\ngray.at&lt;uchar&gt;(y, x) = 128;              // \u4fee\u6539\u50cf\u7d20\n</code></pre> <p>\u5f69\u8272\u56fe\u50cf\uff083\u901a\u9053\uff09</p> C++<pre><code>cv::Mat img = cv::imread(\"color.jpg\");\ncv::Vec3b&amp; color = img.at&lt;cv::Vec3b&gt;(y, x);  // BGR \u987a\u5e8f\nuchar B = color[0];\nuchar G = color[1];\nuchar R = color[2];\n\ncolor[2] = 255;  // \u8bbe\u7f6e\u7ea2\u8272\u901a\u9053\n</code></pre> <p>\u6d6e\u70b9\u56fe\u50cf</p> C++<pre><code>cv::Mat depth(480, 640, CV_32FC1);\nfloat d = depth.at&lt;float&gt;(y, x);\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#92-ptrtyx","title":"9.2 <code>ptr&lt;T&gt;(y)[x]</code> \uff08\u63a8\u8350\u904d\u5386\u4e2d\u4f7f\u7528\uff09","text":"<p><code>ptr</code>\u51fd\u6570\u53ef\u4ee5\u5f97\u5230\u56fe\u50cf\u4efb\u610f\u884c\u7684\u9996\u5730\u5740</p> <p>\u5355\u901a\u9053</p> C++<pre><code>for (int y = 0; y &lt; gray.rows; ++y) {\n    uchar* row_ptr = gray.ptr&lt;uchar&gt;(y);\n    for (int x = 0; x &lt; gray.cols; ++x) {\n        uchar pixel = row_ptr[x];\n        row_ptr[x] = 255 - pixel;\n    }\n}\n</code></pre> <p>\u5f69\u8272\u56fe\u50cf\uff083 \u901a\u9053\uff09</p> C++<pre><code>for (int y = 0; y &lt; img.rows; ++y) {\n    cv::Vec3b* row_ptr = img.ptr&lt;cv::Vec3b&gt;(y);\n    for (int x = 0; x &lt; img.cols; ++x) {\n        row_ptr[x][0] = 255 - row_ptr[x][0];  // \u53cd\u8f6c\u84dd\u8272\u901a\u9053\n    }\n}\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#93-step","title":"9.3 \u4f7f\u7528\u539f\u59cb\u6307\u9488\u548c <code>step</code>\uff08\u9ad8\u6548\uff09","text":"<p>\u7528\u4e8e\u6700\u5927\u6027\u80fd\u4f18\u5316\uff0c\u4f46\u4ee3\u7801\u8f83\u590d\u6742</p> C++<pre><code>uchar* base = img.data;\nint step = img.step;  // \u6bcf\u884c\u7684\u5b57\u8282\u6570\n\nfor (int y = 0; y &lt; img.rows; ++y) {\n    uchar* row_ptr = base + y * step;\n    for (int x = 0; x &lt; img.cols; ++x) {\n        uchar b = row_ptr[x * 3 + 0];\n        uchar g = row_ptr[x * 3 + 1];\n        uchar r = row_ptr[x * 3 + 2];\n        // \u64cd\u4f5c...\n    }\n}\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#94","title":"9.4 \u8fed\u4ee3\u5668","text":"<p>1. \u7070\u5ea6\u56fe\u53cd\u8272\uff08CV_8UC1\uff09</p> C++<pre><code>// \u4f7f\u7528 Mat_&lt;T&gt;::iterator \u904d\u5386\n    for (cv::Mat_&lt;uchar&gt;::iterator it = gray.begin(); it != gray.end(); ++it) {\n        *it = 255 - *it;  // \u50cf\u7d20\u53cd\u8f6c\n    }\n</code></pre> <p>\u5f69\u8272\u56fe\u50cf\uff08CV_8UC3\uff09</p> C++<pre><code>// \u4f7f\u7528 Mat_&lt;Vec3b&gt;::iterator \u904d\u5386\n    for (cv::Mat_&lt;cv::Vec3b&gt;::iterator it = color.begin(); it != color.end(); ++it) {\n        (*it)[0] = 255 - (*it)[0];  // B\n        (*it)[1] = 255 - (*it)[1];  // G\n        (*it)[2] = 255 - (*it)[2];  // R\n    }\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#95","title":"9.5 \u5e38\u89c1\u9519\u8bef\u907f\u514d","text":"<ol> <li><code>at&lt;T&gt;</code> \u4e2d <code>T</code> \u4e0e\u56fe\u50cf\u7c7b\u578b\u8981\u5339\u914d\uff0c\u5982 <code>CV_8UC3</code> \u7528 <code>cv::Vec3b</code>\uff0c\u5426\u5219\u4f1a\u5d29\u6e83\u3002</li> <li>\u5750\u6807\u987a\u5e8f\u662f <code>y, x</code>\uff0c\u4e0d\u662f <code>x, y</code>\uff01</li> <li>\u4e0d\u8981\u6df7\u7528 <code>data[]</code> \u548c <code>ptr&lt;&gt;</code>\u3002</li> <li>\u6d6e\u70b9\u56fe\u50cf\u7528 <code>float</code> \u6216 <code>double</code>\uff0c\u4e0d\u8981\u7528 <code>uchar</code> \u53d6\u503c\u3002</li> </ol>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#96","title":"9.6 \u5b8c\u6574\u793a\u4f8b","text":"C++<pre><code>cv::Mat img = cv::imread(\"color.jpg\");\nfor (int y = 0; y &lt; img.rows; ++y) {\n    cv::Vec3b* row = img.ptr&lt;cv::Vec3b&gt;(y);\n    for (int x = 0; x &lt; img.cols; ++x) {\n        row[x][0] = 255 - row[x][0];  // B\n        row[x][1] = 255 - row[x][1];  // G\n        row[x][2] = 255 - row[x][2];  // R\n    }\n}\ncv::imshow(\"Inverted\", img);\ncv::waitKey(0);\n</code></pre>"},{"location":"IMAGE_PROCESS/opencv/01-mat/#demo","title":"demo","text":"C++<pre><code>#include &lt;opencv2/opencv.hpp&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    cv::Mat img = cv::imread(\"test.jpg\");\n    if (img.empty()) {\n        std::cerr &lt;&lt; \"\u8bfb\u53d6\u5931\u8d25\\n\";\n        return -1;\n    }\n\n    std::cout &lt;&lt; \"\u56fe\u50cf\u5927\u5c0f: \" &lt;&lt; img.cols &lt;&lt; \" x \" &lt;&lt; img.rows &lt;&lt; \"\\n\";\n    std::cout &lt;&lt; \"\u901a\u9053\u6570: \" &lt;&lt; img.channels() &lt;&lt; \"\\n\";\n\n    cv::Rect roi(50, 50, 100, 100);\n    cv::Mat sub_img = img(roi);\n    cv::imshow(\"ROI\", sub_img);\n\n    cv::Mat clone_img = img.clone();\n    clone_img.setTo(cv::Scalar(0, 0, 255));  // \u5168\u56fe\u53d8\u7ea2\n    cv::imshow(\"Red\", clone_img);\n\n    cv::waitKey(0);\n    return 0;\n}\n</code></pre>"},{"location":"TOOL/conda/","title":"Conda","text":""},{"location":"TOOL/conda/#conda","title":"Conda \u547d\u4ee4","text":""},{"location":"TOOL/conda/#_1","title":"\u57fa\u7840\u547d\u4ee4","text":""},{"location":"TOOL/conda/#1conda","title":"1.\u67e5\u770bConda\u7248\u672c","text":"Bash<pre><code>conda --version\n</code></pre>"},{"location":"TOOL/conda/#2conda","title":"2.\u66f4\u65b0Conda","text":"Bash<pre><code>conda update conda\n</code></pre>"},{"location":"TOOL/conda/#3conda","title":"3.\u83b7\u53d6Conda\u5e2e\u52a9","text":"Bash<pre><code>conda --help\n</code></pre>"},{"location":"TOOL/conda/#_2","title":"\u73af\u5883\u7ba1\u7406","text":""},{"location":"TOOL/conda/#1","title":"1.\u521b\u5efa\u65b0\u73af\u5883","text":"<p>\u521b\u5efa\u65b0\u73af\u5883\u5e76\u6307\u5b9aPython\u7248\u672c</p> Bash<pre><code>conda create --name myenv python=3.8\n</code></pre>"},{"location":"TOOL/conda/#2","title":"2.\u514b\u9686\u73af\u5883","text":"Bash<pre><code>conda create --name myenv_clone --clone myenv\n</code></pre>"},{"location":"TOOL/conda/#3","title":"3.\u6fc0\u6d3b\u73af\u5883","text":"Bash<pre><code>conda activate myenv\n</code></pre>"},{"location":"TOOL/conda/#4","title":"4.\u505c\u7528\u73af\u5883","text":"Bash<pre><code>conda deactivate\n</code></pre>"},{"location":"TOOL/conda/#5","title":"5.\u5217\u51fa\u6240\u6709\u73af\u5883","text":"Bash<pre><code>conda env list\n# \u6216\nconda info --envs\n</code></pre>"},{"location":"TOOL/conda/#6","title":"6.\u5220\u9664\u73af\u5883","text":"Bash<pre><code>conda remove --name myenv --all\n</code></pre>"},{"location":"TOOL/conda/#_3","title":"\u5305\u7ba1\u7406","text":""},{"location":"TOOL/conda/#1_1","title":"1.\u5b89\u88c5\u5305","text":"Bash<pre><code>conda install numpy\n</code></pre>"},{"location":"TOOL/conda/#2_1","title":"2.\u5b89\u88c5\u7279\u5b9a\u7248\u672c\u7684\u5305","text":"Bash<pre><code>conda install numpy=1.18.1\n</code></pre>"},{"location":"TOOL/conda/#3_1","title":"3.\u4ece\u7279\u5b9a\u7684\u9891\u9053\u5b89\u88c5\u5305","text":"Bash<pre><code>conda install -c conda-forge numpy\n</code></pre>"},{"location":"TOOL/conda/#4_1","title":"4.\u66f4\u65b0\u5305","text":"Bash<pre><code>conda update numpy\n</code></pre>"},{"location":"TOOL/conda/#5_1","title":"5.\u66f4\u65b0\u6240\u6709\u5305","text":"Bash<pre><code>conda update --all\n</code></pre>"},{"location":"TOOL/conda/#6_1","title":"6.\u5220\u9664\u5305","text":"Bash<pre><code>conda remove numpy\n</code></pre>"},{"location":"TOOL/conda/#7","title":"7.\u5f3a\u5236\u5220\u9664\u5305","text":"Bash<pre><code>conda remove numpy --force\n</code></pre>"},{"location":"TOOL/conda/#8","title":"8.\u67e5\u770b\u5df2\u5b89\u88c5\u7684\u5305","text":"Bash<pre><code>conda list\n</code></pre>"},{"location":"TOOL/conda/#9","title":"9.\u67e5\u770b\u67d0\u4e2a\u5305\u7684\u8be6\u7ec6\u4fe1\u606f\u53ca\u4f9d\u8d56","text":"Bash<pre><code>conda info numpy\n</code></pre>"},{"location":"TOOL/conda/#_4","title":"\u73af\u5883\u5bfc\u51fa\u4e0e\u5bfc\u5165","text":""},{"location":"TOOL/conda/#1yaml","title":"1.\u5bfc\u51fa\u73af\u5883\u5230YAML\u6587\u4ef6","text":"Bash<pre><code>conda env export &gt; environment.yml\n</code></pre>"},{"location":"TOOL/conda/#2yaml","title":"2.\u4eceYAML\u6587\u4ef6\u521b\u5efa\u73af\u5883","text":"Bash<pre><code>conda env create -f environment.yml\n</code></pre>"},{"location":"TOOL/conda/#3_2","title":"3.\u5bfc\u51fa\u73af\u5883\u5230\u7b80\u5355\u5217\u8868","text":"Bash<pre><code>conda list --export &gt; requirements.txt\n</code></pre>"},{"location":"TOOL/conda/#4_2","title":"4.\u4ece\u7b80\u5355\u5217\u8868\u521b\u5efa\u73af\u5883","text":"Bash<pre><code>conda create --name myenv --file requirements.txt\n</code></pre>"},{"location":"TOOL/conda/#_5","title":"\u6e05\u7406\u7f13\u5b58","text":""},{"location":"TOOL/conda/#1_2","title":"1.\u6e05\u7406\u5df2\u4e0b\u8f7d\u7684\u5305\u6587\u4ef6","text":"Bash<pre><code>conda clean --packages\n</code></pre>"},{"location":"TOOL/conda/#2_2","title":"2.\u6e05\u7406\u6240\u6709\u7f13\u5b58","text":"Bash<pre><code>conda clean --all\n</code></pre>"},{"location":"TOOL/conda/#conda_1","title":"Conda \u914d\u7f6e\u7ba1\u7406","text":"<p>Conda\u9891\u9053\u662f\u5305\u96c6\u5408\u7684\u6e90\uff0cConda\u901a\u8fc7\u8fd9\u4e9b\u6e20\u9053\u6765\u67e5\u627e\u3001\u4e0b\u8f7d\u548c\u5b89\u88c5\u8f6f\u4ef6\u5305\u3002\u4e0d\u540c\u7684\u9891\u9053\u53ef\u80fd\u5305\u542b\u4e0d\u540c\u7248\u672c\u7684\u8f6f\u4ef6\u5305\uff0c\u6216\u8005\u6709\u4e0d\u540c\u7684\u7ef4\u62a4\u548c\u66f4\u65b0\u7b56\u7565\u3002</p> <p>\u5e38\u89c1\u7684Conda\u9891\u9053 \u9ed8\u8ba4\u9891\u9053\uff08defaults\uff09: \u8fd9\u662fConda\u7684\u5b98\u65b9\u9891\u9053\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6240\u6709Conda\u5b89\u88c5\u90fd\u4f7f\u7528\u8fd9\u4e2a\u9891\u9053\u3002\u5b83\u5305\u542b\u4e86\u5927\u91cf\u5e38\u7528\u7684\u5305\uff0c\u7ef4\u62a4\u548c\u66f4\u65b0\u7531Anaconda\u56e2\u961f\u8d1f\u8d23\u3002 URL: https://repo.anaconda.com/pkgs/main/ conda-forge: \u8fd9\u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684\u9891\u9053\uff0c\u5305\u542b\u4e86\u66f4\u591a\u5305\u548c\u66f4\u65b0\u7248\u672c\uff0c\u901a\u5e38\u6bd4\u9ed8\u8ba4\u9891\u9053\u66f4\u65b0\u66f4\u5feb\u3002 URL: https://conda-forge.org/ r: \u4e13\u95e8\u63d0\u4f9b R \u8bed\u8a00\u76f8\u5173\u7684\u5305\u3002 URL: https://repo.anaconda.com/pkgs/r/ free: \u5305\u542b\u4e86\u6240\u6709\u8bb8\u53ef\u8bc1\u4e0b\u7684\u81ea\u7531\u548c\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u5305\uff0c\u8fd9\u662f\u9ed8\u8ba4\u9891\u9053\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5728Anaconda 5.0\u4e4b\u540e\u88ab\u5408\u5e76\u5230\u4e86 main \u9891\u9053\u4e2d\u3002 URL: https://repo.anaconda.com/pkgs/free/  </p>"},{"location":"TOOL/conda/#1_3","title":"1.\u6dfb\u52a0\u9891\u9053","text":"Bash<pre><code>conda config --add channels conda-forge\n</code></pre>"},{"location":"TOOL/conda/#2_3","title":"2.\u6dfb\u52a0\u9891\u9053\u5e76\u7f6e\u4e8e\u6700\u9ad8\u4f18\u5148\u7ea7","text":"Bash<pre><code>conda config --add channels conda-forge --prepend\n</code></pre>"},{"location":"TOOL/conda/#3_3","title":"3.\u6dfb\u52a0\u5176\u4ed6\u9891\u9053","text":"Bash<pre><code>conda config --add channels defaults\n</code></pre>"},{"location":"TOOL/conda/#4_3","title":"4.\u79fb\u9664\u9891\u9053","text":"Bash<pre><code>conda config --remove channels conda-forge\n</code></pre>"},{"location":"TOOL/conda/#5_2","title":"5.\u5220\u9664\u6240\u6709\u9891\u9053","text":"Bash<pre><code>conda config --remove-key channels\n</code></pre>"},{"location":"TOOL/conda/#6_2","title":"6.\u9a8c\u8bc1\u9891\u9053","text":"Bash<pre><code>conda config --get channels\n</code></pre>"},{"location":"TOOL/conda/#7http","title":"7.\u8bbe\u7f6eHTTP\u4ee3\u7406","text":"Bash<pre><code>conda config --set proxy_servers.http http://proxy_address:port\n</code></pre>"},{"location":"TOOL/conda/#8https","title":"8.\u8bbe\u7f6eHTTPS\u4ee3\u7406","text":"Bash<pre><code>conda config --set proxy_servers.https https://proxy_address:port\n</code></pre>"},{"location":"TOOL/conda/#9_1","title":"9.\u8bbe\u7f6e\u73af\u5883\u7684\u9ed8\u8ba4\u76ee\u5f55","text":"Bash<pre><code>conda config --set envs_dirs /path/to/envs\n</code></pre>"},{"location":"TOOL/conda/#10","title":"10.\u542f\u7528\u8be6\u7ec6\u8f93\u51fa","text":"Bash<pre><code>conda config --set verbosity 2\n</code></pre>"},{"location":"TOOL/conda/#11","title":"11.\u7981\u7528\u5305\u7248\u672c\u68c0\u67e5","text":"Bash<pre><code>conda config --set auto_update_conda false\n</code></pre>"},{"location":"TOOL/conda/#12","title":"12.\u5217\u51fa\u6240\u6709\u914d\u7f6e","text":"Bash<pre><code>conda config --show\n</code></pre>"},{"location":"TOOL/conda/#13","title":"13.\u67e5\u770b\u5305\u4fe1\u606f","text":"Bash<pre><code>conda search numpy --info\n</code></pre>"},{"location":"TOOL/conda/#14","title":"14.\u67e5\u770b\u53ef\u7528\u5305","text":"Bash<pre><code>conda search numpy\n</code></pre>"},{"location":"TOOL/conda/#conda-pack","title":"\u4f7f\u7528conda-pack\u6253\u5305","text":""},{"location":"TOOL/conda/#1-conda","title":"1. \u6253\u5305 Conda \u73af\u5883","text":"<p>\u9996\u5148\uff0c\u5728\u6709\u7f51\u7edc\u7684\u73af\u5883\u4e0b\uff0c\u4f7f\u7528 <code>conda-pack</code> \u5bf9\u73af\u5883\u8fdb\u884c\u6253\u5305\uff1a</p> <ol> <li> <p>\u5b89\u88c5 <code>conda-pack</code>\uff1a Bash<pre><code>conda install -c conda-forge conda-pack\n</code></pre></p> </li> <li> <p>\u6253\u5305\u5f53\u524d\u7684 Conda \u73af\u5883\uff1a Bash<pre><code>conda-pack -n my_env -o my_env.tar.gz\n</code></pre> \u8fd9\u91cc <code>my_env</code> \u662f\u8981\u6253\u5305\u7684 Conda \u73af\u5883\u7684\u540d\u79f0\uff0c<code>my_env.tar.gz</code> \u662f\u6253\u5305\u751f\u6210\u7684\u538b\u7f29\u6587\u4ef6\u540d\u3002</p> </li> </ol>"},{"location":"TOOL/conda/#2_4","title":"2. \u5c06\u6253\u5305\u6587\u4ef6\u4f20\u8f93\u5230\u65e0\u7f51\u7edc\u7684\u73af\u5883","text":"<p>\u5c06\u751f\u6210\u7684 <code>my_env.tar.gz</code> \u6587\u4ef6\u4f20\u8f93\u5230\u65e0\u7f51\u7edc\u7684\u76ee\u6807\u673a\u5668\u4e0a\u3002</p>"},{"location":"TOOL/conda/#3_4","title":"3. \u5728\u65e0\u7f51\u7edc\u73af\u5883\u4e0b\u89e3\u538b\u5e76\u5b89\u88c5","text":"<p>\u5728\u65e0\u7f51\u7edc\u73af\u5883\u7684\u673a\u5668\u4e0a\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u89e3\u538b\u7f29\u6253\u5305\u6587\u4ef6\uff1a Bash<pre><code>mkdir -p ~/my_env \ntar -xzf my_env.tar.gz -C ~/my_env\n</code></pre></p> </li> <li> <p>\uff08\u53ef\u9009\uff09\u5982\u679c\u4f60\u5e0c\u671b\u5c06\u89e3\u538b\u540e\u7684\u73af\u5883\u653e\u7f6e\u5728\u7279\u5b9a\u8def\u5f84\u4e0b\uff08\u4f8b\u5982 <code>/opt/conda/envs/my_env</code>\uff09\uff0c\u4f60\u53ef\u4ee5\u5c06\u89e3\u538b\u540e\u7684\u5185\u5bb9\u79fb\u81f3\u8be5\u8def\u5f84\uff1a Bash<pre><code>mv ~/my_env /opt/conda/envs/my_env\n</code></pre></p> </li> <li>\u6fc0\u6d3b\u89e3\u538b\u540e\u7684\u73af\u5883\uff1a</li> </ol> <p>Bash<pre><code>source ~/my_env/bin/activate\n</code></pre> \u6216\u8005\uff0c\u5982\u679c\u4f60\u79fb\u52a8\u4e86\u73af\u5883\u76ee\u5f55\uff1a Bash<pre><code>source /opt/conda/envs/my_env/bin/activate\n</code></pre></p> <ol> <li>\u4fee\u590d\u73af\u5883\u8def\u5f84\uff08\u5982\u679c\u9700\u8981\uff09\uff1a \u5982\u679c\u79fb\u52a8\u4e86\u89e3\u538b\u540e\u7684\u73af\u5883\u5230\u4e00\u4e2a\u65b0\u7684\u8def\u5f84\uff0c\u4f60\u9700\u8981\u4fee\u590d\u73af\u5883\u4e2d\u7684\u8def\u5f84\u4fe1\u606f\uff1a Bash<pre><code>conda-unpack\n</code></pre></li> </ol> <p>\u8fd9\u4e00\u6b65\u4f1a\u4fee\u590d\u73af\u5883\u4e2d\u4e0e\u539f\u8def\u5f84\u76f8\u5173\u7684\u4f9d\u8d56\u6587\u4ef6\u8def\u5f84\uff0c\u4f7f\u73af\u5883\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"TOOL/conda/#4_4","title":"4. \u9a8c\u8bc1\u5b89\u88c5","text":"<p>\u6700\u540e\uff0c\u9a8c\u8bc1\u73af\u5883\u662f\u5426\u6b63\u786e\u5b89\u88c5\u5e76\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff1a</p> Bash<pre><code>conda list\n</code></pre> <p>\u8fd9\u5c06\u663e\u793a\u5f53\u524d\u73af\u5883\u4e2d\u7684\u6240\u6709\u5df2\u5b89\u88c5\u5305\u3002</p> <p>\u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u4f60\u53ef\u4ee5\u5728\u65e0\u7f51\u7edc\u73af\u5883\u4e0b\u6210\u529f\u5b89\u88c5\u548c\u4f7f\u7528\u4e00\u4e2a\u5df2\u6253\u5305\u7684 Conda \u73af\u5883\u3002</p>"},{"location":"TOOL/network/","title":"ubuntu\u642d\u5efa\u5171\u4eab\u7f51\u7edc","text":""},{"location":"TOOL/network/#1","title":"1 \u68c0\u67e5\u7f51\u7edc\u7ba1\u7406\u5668\u670d\u52a1\u662f\u5426\u5f00\u542f","text":"Bash<pre><code>sudo systemctl status network-manager\n</code></pre>"},{"location":"TOOL/network/#2-wifi","title":"2 \u521b\u5efa\u5e76\u914d\u7f6e\u9700\u8981\u5171\u4eab\u7684wifi","text":"<p>Bash<pre><code>nm-connection-editor\n</code></pre> \u9009\u62e9<code>add a new connections</code>, \u8fde\u63a5\u7c7b\u578b\u9009\u62e9<code>WIFI</code>\uff1b</p> <p>connection name: xujg WIFI\u680f\uff1a</p> <ul> <li>SSID: xujg</li> <li>Mode: Hotspot</li> <li>Band: Automatic</li> <li>Channel: default</li> <li>Device: </li> <li>Cloned MAC address: Random</li> <li>MTU: automatic</li> </ul> <p>WIFI Security: - Security: WEP 40/128-bit Key(Hex or ASCII) - key: **** (5\u4f4d) - WEP index: 1(Default) - Authetication: Open System</p>"},{"location":"TOOL/rk3588/","title":"RK3588\u70e7\u5f55","text":"<p>\u4ee5\u4e0b\u5185\u5bb9\u5747\u4f7f\u7528USB\u70e7\u5f55\u5de5\u5177\u70e7\u5f55\u955c\u50cf  \u5728windows\u4e0b\uff0c\u5b89\u88c5\u70e7\u5f55\u5de5\u5177<code>rkdevtool</code>\u4ee5\u53ca\u9a71\u52a8<code>DriverAssitant</code>  \u8f6f\u4ef6\u94fe\u63a5\uff1a  * \u94fe\u63a5: https://pan.baidu.com/s/1Mq7xK8zdOAaCT7HZMr1Shw?pwd=db82 * \u63d0\u53d6\u7801: db82 </p>"},{"location":"TOOL/rk3588/#1-rk3588","title":"1. RK3588\u56fa\u4ef6\u70e7\u5f55","text":"<p>\u8fdb\u5165\u70e7\u5f55\u6a21\u5f0f\uff1a  * 1.\u5c06\u51c6\u5907\u597d\u7684USB\u7ebf\u7f06\uff0c\u4e00\u7aef\u8fde\u63a5\u7535\u8111\uff0c\u4e00\u7aef\u9884\u7559\u5907\u7528  * 2.\u5c06\u6240\u6709\u6709\u53ef\u80fd\u7ed9\u677f\u5361\u4f9b\u7535\u7684\u63a5\u7ebf\u90fd\u65ad\u5f00\uff0c\u5982\u7535\u6e90\u7ebf\uff0c\u5176\u4ed6USB\u7ebf\u7b49  3.\u6309\u4f4fBOOT\u6309\u952e\u4e0d\u677e\u5f00\uff0c\u5148\u5c06\u51c6\u5907\u597d\u7684USB\u7ebf\u63d2\u5165\u677f\u5361\u7684\u4e0b\u8f7d\u63a5\u53e3\uff0c\u518d\u63d2\u5165\u7535\u6e90\u3002\u90e8\u5206\u4e0b\u8f7d\u63a5\u53e3\u4e0e\u7535\u6e90\u63a5\u53e3\u5171\u7528\u7684\u677f\u5361\u65e0\u9700\u518d\u63d2\u5165\u989d\u5916\u7684\u7535\u6e90\uff0c\u4f46\u9700\u4fdd\u8bc1\u7535\u8111USB\u63a5\u53e3\u80fd\u63d0\u4f9b\u81f3\u5c115V 0.5A\u7684\u4f9b\u7535    4.\u7b49\u5f85\u8f6f\u4ef6\u63d0\u793a \u53d1\u73b0\u4e00\u4e2aMASKROM\u8bbe\u5907\uff0c\u7ee7\u7eed\u7b49\u5f855\u79d2\u4ee5\u4e0a\u518d\u677e\u5f00\u6309\u952e * 5.\u5982\u679c\u4e0d\u6210\u529f\uff0c\u91cd\u590d2-4\u6b65\u9aa4\u3002 </p> <p>\u56fa\u4ef6\uff1a   \u94fe\u63a5: https://pan.baidu.com/s/1HlCZ5PeK_RkiCJy1O6CpDw?pwd=j2e6  \u63d0\u53d6\u7801: j2e6  </p>"},{"location":"TOOL/rk3588/#_1","title":"\u70e7\u5f55","text":"<p>\u6253\u5f00RkDevTool\u70e7\u5f55\u5de5\u5177\uff0c\u5e76\u8bbe\u7f6e\u677f\u5361\u8fdb\u5165\u70e7\u5f55\u6a21\u5f0f\uff0c\u51c6\u5907\u597d\u4e0b\u8f7d\u7684\u7cfb\u7edf\u56fa\u4ef6</p> <p>\u70b9\u51fb\"\u5347\u7ea7\u56fa\u4ef6-&gt; \u56fa\u4ef6\u201d\uff0c\u9009\u62e9\u8981\u70e7\u5f55\u7684\u56fa\u4ef6\uff0c\u4ee5<code>update.img</code>\u4e3a\u4f8b\uff0c\u7136\u540e\u6253\u5f00</p> <p>\u7b49\u5f85\u56fa\u4ef6\u52a0\u8f7d\u5b8c\u6210\uff0c\u7136\u540e\u70b9\u51fb\u5347\u7ea7\uff0c\u5f00\u59cb\u70e7\u5f55\u56fa\u4ef6\uff0c\u7b49\u5f85\u70e7\u5f55\u5b8c\u6210</p>"},{"location":"TOOL/rk3588/#2","title":"2. \u70e7\u5f55\u7cfb\u7edf\u76d8","text":"<p>\u7cfb\u7edf\u76d8\u955c\u50cf\uff1a    \u94fe\u63a5: \u94fe\u63a5: https://pan.baidu.com/s/1NwX-TnJv9kEXqaTdDGwDUw?pwd=sem1  \u63d0\u53d6\u7801: sem1 </p> <ul> <li>\u6301\u7eed\u6309\u4f4f\u5f00\u53d1\u677f\u4e0a\u7684<code>RECOVERY</code>\u952e\uff0c\u63a5\u901a\u7535\u6e90\uff0c\u4e24\u79d2\u540e\u677e\u5f00\uff0cRKDevTool\u5c06\u663e\u793a\u8fde\u63a5\u5230<code>LOADER</code>\u8bbe\u5907    </li> <li>\u70b9\u51fb\u201c\u8bbe\u5907\u5206\u533a\u8868\u201d\uff0c\u53f3\u4fa7\u5c06\u770b\u5230\u5206\u533a\u4fe1\u606f\uff08\u5982\u6709\u62a5\u9519\u65e0\u9700\u62c5\u5fc3\uff0c\u70b9\u51fb\u786e\u5b9a\u5373\u53ef\uff09     </li> <li>\u8bb0\u4f4f<code>rootfs</code>\u5206\u533a\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4f8b\u5982<code>0x00078000</code> </li> <li>\u70b9\u51fb\u5de6\u4fa7\u7a7a\u767d\u5904\uff0c\u53f3\u952e\u5e76\u70b9\u51fb<code>\u6dfb\u52a0\u9879</code>,\u586b\u5165<code>rootfs</code>\u8d77\u59cb\u4f4d\u7f6e\u548c\u540d\u5b57\uff0c \u70b9\u51fb\u53f3\u4fa7<code>...</code>\uff0c \u9009\u62e9\u4e4b\u524d\u5907\u4efd\u7684\u955c\u50cf\u6587\u4ef6<code>backup_rootfs.img</code>\u3002\u70b9\u51fb\u6267\u884c\uff0c \u53f3\u4fa7\u5c06\u770b\u5230\u6b63\u5728\u5199\u5165\u7684\u8fdb\u5ea6\u63d0\u793a\uff0c\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4 </li> <li>\u5b8c\u6210\u540e\uff0c\u5c06\u81ea\u52a8\u91cd\u542f\uff0c\u8fdb\u5165\u7cfb\u7edf\uff0c \u81f3\u6b64\uff0c\u7cfb\u7edf\u76d8\u8fc1\u79fb\u5b8c\u6210\u3002 </li> </ul>"},{"location":"TOOL/rk3588/#3","title":"3. \u5907\u4efd\u7cfb\u7edf\u76d8","text":""},{"location":"TOOL/rk3588/#31","title":"3.1 \u5236\u4f5c\u7cfb\u7edf\u76d8\u955c\u50cf\u6587\u4ef6","text":"<p>\u6253\u5f00\u7ec8\u7aef\uff0c \u8f93\u5165<code>lsblk</code>\uff0c \u67e5\u770b\u7cfb\u7edf\u5206\u533a\u60c5\u51b5\uff0c\u4f8b\u5982\uff1a Bash<pre><code>NAME         MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\nsda            8:0    1 114.6G  0 disk \n\u2514\u2500sda1         8:1    1 114.6G  0 part \nmmcblk0      179:0    0  59.6G  0 disk \n\u251c\u2500mmcblk0p1  179:1    0     4M  0 part \n\u251c\u2500mmcblk0p2  179:2    0     4M  0 part \n\u251c\u2500mmcblk0p3  179:3    0    64M  0 part \n\u251c\u2500mmcblk0p4  179:4    0   128M  0 part \n\u251c\u2500mmcblk0p5  179:5    0    32M  0 part \n\u2514\u2500mmcblk0p6  179:6    0  59.4G  0 part /\nmmcblk0boot0 179:32   0  31.9M  1 disk \nmmcblk0boot1 179:64   0  31.9M  1 disk \n</code></pre> mmcblk0p6\u4e3a\u7cfb\u7edf\u76d8\uff0c'/'\u5373\u6839\u76ee\u5f55</p>"},{"location":"TOOL/rk3588/#32-u","title":"3.2 \u63d2\u5165U\u76d8\u6216\u8005\u786c\u76d8\u7b49\u5916\u90e8\u5b58\u50a8\u8bbe\u5907","text":"<p>\u5728\u7ec8\u7aef\u8f93\u5165\u547d\u4ee4 Bash<pre><code>sudo dd if=/dev/mmcblk0p6 of=/media/rpdzkj/sda/backup_rootfs.img bs=4M status=progress\n</code></pre> <code>/dev/mmcblk0p6</code>\u4e3a\u7cfb\u7edf\u76d8\uff0c<code>/media/rpdzkj/sda</code>\u4e3a\u5916\u90e8\u5b58\u50a8\u8bbe\u5907\uff0c <code>backup_rootfs.img</code>\u4e3a\u5907\u4efd\u955c\u50cf\u6587\u4ef6 \u8fd9\u4e00\u6b65\u5c06\u82b1\u8d39\u8f83\u957f\u65f6\u95f4\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85 \u5907\u4efd\u5b8c\u6210\u540e\uff0c \u8fdb\u5165\u955c\u50cf\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c\u68c0\u67e5\u5e76\u81ea\u52a8\u4fee\u590d\u955c\u50cf\u6587\u4ef6 Bash<pre><code>sudo e2fsck -p -f backup_rootfs.img\n</code></pre> \u7cbe\u7b80\u955c\u50cf\u6587\u4ef6\u5927\u5c0f Bash<pre><code>sudo resize2fs -M backup_rootfs.img\n</code></pre></p>"},{"location":"TOOL/docker/01-docker-install/","title":"docker\u5b89\u88c5","text":"<p>Ubuntu\u5b89\u88c5Docker \u6709\u4e24\u79cd\u63a8\u8350\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u4ece Ubuntu \u7684\u4ed3\u5e93\u5b89\u88c5 Docker\uff1a\u7b80\u5355\u7684\u5355\u884c\u547d\u4ee4\uff0c\u4f46\u63d0\u4f9b\u65e7\u7248\u672c</li> <li>\u4f7f\u7528 Docker \u7684\u5b98\u65b9\u4ed3\u5e93\uff1a\u5de5\u4f5c\u91cf\u7a0d\u591a\uff0c\u4f46\u63d0\u4f9b\u4e86\u6700\u65b0\u7684\u7a33\u5b9a\u7248\u672c</li> </ul>"},{"location":"TOOL/docker/01-docker-install/#1-ubuntu-docker","title":"\u65b9\u6cd5 1\uff1a\u4f7f\u7528 Ubuntu \u7684\u4ed3\u5e93\u5b89\u88c5 Docker","text":"<p>\u5982\u679c\u4f60\u4e0d\u5728\u610f\u65e7\u7248\u672c\uff0c\u5e76\u4e14\u4e0d\u60f3\u8bbe\u7f6e\u548c\u7ba1\u7406\u4ed3\u5e93\uff0c\u90a3\u4e48\u8fd9\u662f\u6700\u9002\u5408\u4f60\u7684\u65b9\u6cd5\u3002</p> <p>\u4ece\u66f4\u65b0\u4ed3\u5e93\u7d22\u5f15\u5f00\u59cb\uff1a</p> Bash<pre><code>apt update\n</code></pre> <p>\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5728 Ubuntu \u4e2d\u5b89\u88c5 Docker \u4ee5\u53ca\u00a0Docker Compose\uff1a</p> Bash<pre><code>sudo apt install docker.io docker-compose\n</code></pre> <p>\ud83d\udccb Docker \u5305\u88ab\u547d\u540d\u4e3a\u00a0<code>docker.io</code>\uff0c\u56e0\u4e3a\u5728 Docker \u51fa\u73b0\u4e4b\u524d\u5c31\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u540d\u4e3a docker\uff08\u7528\u4e8e Dockerlet \u5e94\u7528\uff09\u7684\u8fc7\u6e21\u5305\u3002\u56e0\u6b64\uff0cDocker \u5305\u5fc5\u987b\u88ab\u547d\u540d\u4e3a\u5176\u4ed6\u540d\u79f0\u3002</p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5\u5b89\u88c5\u7684\u7248\u672c\uff1a</p> Bash<pre><code>docker -v\n</code></pre> <p></p> <p>\u5982\u4f60\u6240\u89c1\uff0c\u5b83\u7ed9\u4e86\u6211 Docker 27.0.2\u3002</p>"},{"location":"TOOL/docker/01-docker-install/#2-ubuntu-docker","title":"\u65b9\u6cd5 2\uff1a\u5728 Ubuntu \u4e2d\u5b89\u88c5\u6700\u65b0\u7a33\u5b9a\u7248\u672c\u7684 Docker","text":"<p>\u5982\u679c\u4f60\u60f3\u8981 Docker \u7684\u6700\u65b0\u7a33\u5b9a\u7248\u672c\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4ece\u5176\u5b98\u65b9\u4ed3\u5e93\u5b89\u88c5 Docker\u3002</p>"},{"location":"TOOL/docker/01-docker-install/#1-docker","title":"\u6b65\u9aa4 1\uff1a\u5220\u9664\u4efb\u4f55\u73b0\u6709\u7684 Docker \u5305","text":"<p>\u4f46\u5728\u8df3\u5230\u5b89\u88c5\u90e8\u5206\u4e4b\u524d\uff0c\u6709\u5fc5\u8981\u5220\u9664\u6240\u6709\u4ee5\u524d\u5b89\u88c5\u7684 Docker\u3002</p> <p>\u8981\u00a0\u5378\u8f7d\u4ee5\u524d\u7684 Docker\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u3002</p> Bash<pre><code>sudo apt remove docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc\n</code></pre>"},{"location":"TOOL/docker/01-docker-install/#2","title":"\u6b65\u9aa4 2\uff1a\u5b89\u88c5\u4f9d\u8d56\u9879","text":"<p>\u7b2c\u4e00\u6b65\u662f\u5b89\u88c5\u4e00\u4e9b\u5fc5\u8981\u7684\u8f6f\u4ef6\u5305\uff0c\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u5c06\u7528\u4e8e\u5728\u672c\u6559\u7a0b\u540e\u9762\u5b89\u88c5 Docker\uff1a</p> Bash<pre><code>sudo apt install ca-certificates curl gnupg lsb-release\n</code></pre> <p>\u4f60\u53ef\u80fd\u5df2\u7ecf\u5b89\u88c5\u4e86\u90e8\u5206\u6216\u5168\u90e8\u8fd9\u4e9b\u8f6f\u4ef6\u5305\uff0c\u4f46\u786e\u8ba4\u5b89\u88c5\u6ca1\u6709\u4ec0\u4e48\u574f\u5904\u3002\u4e0a\u9762\u7684\u547d\u4ee4\u4e0d\u4f1a\u4f24\u5bb3\u4f60\u3002</p>"},{"location":"TOOL/docker/01-docker-install/#3-docker-gpg-sourceslist","title":"\u6b65\u9aa4 3\uff1a\u6dfb\u52a0 Docker \u4ed3\u5e93\u7684 GPG \u5bc6\u94a5\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 sources.list","text":"<p>\u73b0\u5728\uff0c\u901a\u8fc7\u00a0<code>apt</code>\u00a0\u5305\u7ba1\u7406\u5668\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u6b8a\u6743\u9650\u7684\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u50a8\u52a0\u5bc6\u5bc6\u94a5\u4ee5\u8fdb\u884c\u5305\u9a8c\u8bc1\uff1a</p> Bash<pre><code>sudo install -m 0755 -d /etc/apt/keyrings\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u5982\u4e0b\u6240\u793a\u00a0\u4f7f\u7528 curl \u547d\u4ee4\u00a0\u4e0b\u8f7d\u5e76\u5bfc\u5165 Docker \u7684 GPG \u5bc6\u94a5\u73af\uff1a</p> Bash<pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n</code></pre> <p>\u4e0b\u8f7d GPG \u5bc6\u94a5\u540e\uff0c\u4f7f\u7528 chmod \u547d\u4ee4\u66f4\u6539\u6587\u4ef6\u6743\u9650\uff0c\u4ee5\u4fbf\u7cfb\u7edf\u4e0a\u7684\u6bcf\u4e2a\u7528\u6237\u90fd\u53ef\u4ee5\u8bfb\u53d6 GPG \u5bc6\u94a5\uff1a</p> Bash<pre><code>sudo chmod a+r /etc/apt/keyrings/docker.gpg\n</code></pre> <p>\u6700\u540e\uff0c\u5c06 Docker \u4ed3\u5e93\u6dfb\u52a0\u5230\u00a0<code>sources.list.d</code>\u00a0\u6587\u4ef6\u4e2d\uff1a</p> Bash<pre><code>echo \\\n    \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n    $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n    sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre>"},{"location":"TOOL/docker/01-docker-install/#4-docker-docker-compose","title":"\u6b65\u9aa4 4\uff1a\u5b89\u88c5 Docker \u548c Docker Compose","text":"<p>\u73b0\u5728\uff0c\u8981\u4f7f\u4f60\u5bf9\u7cfb\u7edf\u6240\u505a\u7684\u66f4\u6539\u751f\u6548\uff0c\u8bf7\u66f4\u65b0\u7cfb\u7edf\u4ed3\u5e93\uff1a</p> Bash<pre><code>sudo apt update\n</code></pre> <p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u83b7\u53d6\u6700\u65b0\u7248\u672c\u7684 Docker \u4ee5\u53ca\u5176\u4ed6 Docker \u7ec4\u4ef6\u548c\u4f9d\u8d56\u9879\uff1a</p> Bash<pre><code>sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>\ud83d\udccb \u867d\u7136\u00a0docker.io\u00a0\u5305\u5b89\u88c5\u4e86\u5927\u90e8\u5206\u5fc5\u9700\u7684 Docker \u7ec4\u4ef6\uff0c\u4f46\u4f60\u9700\u8981\u5728\u6b64\u5904\u5355\u72ec\u8fdb\u884c\u5b89\u88c5\u3002</p> <p>\u8981\u68c0\u67e5\u5df2\u5b89\u88c5\u7684\u7248\u672c\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> Bash<pre><code>docker -v\n</code></pre> <p>\u6d4b\u8bd5\u5b89\u88c5\u7684\u53e6\u4e00\u4e2a\u65b9\u6cd5\u662f\u5728 Docker \u4e2d\u4f7f\u7528 \u201cHello World\u201d \u955c\u50cf\u3002</p> <p>\u8ba9\u6211\u544a\u8bc9\u4f60\u5982\u4f55\u505a\u3002</p>"},{"location":"TOOL/docker/01-docker-install/#hello-world-docker","title":"\u4f7f\u7528 hello-world \u955c\u50cf\u6765\u9a8c\u8bc1 Docker \u5b89\u88c5","text":"<p>\u8fd0\u884c \u201cHello World\u201d \u7a0b\u5e8f\u662f\u6211\u4eec\u542f\u52a8\u4efb\u4f55\u7f16\u7a0b\u4e4b\u65c5\u65f6\u90fd\u9075\u5faa\u7684\u6807\u51c6\u505a\u6cd5\uff0cDocker \u4e5f\u662f\u5982\u6b64\u3002</p> <p>Docker \u4e3a\u4f60\u63d0\u4f9b\u4e86\u4e00\u4e2a \u201cHello World\u201d \u955c\u50cf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u6d4b\u8bd5\u5b89\u88c5\u3002</p> <p>\u8981\u5b89\u88c5\u5e76\u8fd0\u884c \u201cHello World\u201d \u955c\u50cf\uff0c\u53ea\u9700\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> Bash<pre><code>sudo docker run hello-world\n</code></pre> <p>\u67d0\u4e9b\u7528\u6237\u5728\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u65f6\u53ef\u80fd\u4f1a\u6536\u5230\u9519\u8bef\u6d88\u606f\u201c\u65e0\u6cd5\u8fde\u63a5\u5230 Docker \u5b88\u62a4\u8fdb\u7a0b\u201d\uff1a</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u5e76\u518d\u6b21\u5c1d\u8bd5\u5b89\u88c5 Docker Hello World \u955c\u50cf\uff0c\u5b83\u5c06\u6b63\u5e38\u5de5\u4f5c\u3002</p>"},{"location":"TOOL/docker/01-docker-install/#ubuntu-docker-sudo","title":"\ud83d\udca1 \u989d\u5916\u63d0\u793a\uff1a\u5728 Ubuntu \u4e2d\u4f7f\u7528 Docker \u800c\u65e0\u9700 sudo","text":"<p>\u4f7f\u7528 sudo \u6765\u62c9\u53d6 Docker \u955c\u50cf\uff0c\u8fd9\u5e76\u4e0d\u662f\u4f7f\u7528 Docker \u6700\u65b9\u4fbf\u7684\u65b9\u5f0f</p> <p>\u7b2c\u4e00\u6b65\u662f\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u00a0\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a docker \u7684\u65b0\u7ec4\uff1a</p> Bash<pre><code>sudo groupadd docker\n</code></pre> <p>\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06\u7528\u6237\u6dfb\u52a0\u5230\u00a0<code>docker</code>\u00a0\u7ec4\uff1a</p> Text Only<pre><code>sudo usermod -aG docker &lt;\u7528\u6237\u540d&gt;\n</code></pre> <p>\ud83d\udea7 \u786e\u4fdd\u4f60\u53ea\u6dfb\u52a0\u5177\u6709\u8d85\u7ea7\u7528\u6237\u6743\u9650\u7684\u7528\u6237</p> <p>\u73b0\u5728\uff0c\u6ce8\u9500\u5e76\u91cd\u65b0\u767b\u5f55\u4ee5\u4f7f\u66f4\u6539\u751f\u6548\u3002\u4f46\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u865a\u62df\u673a\uff0c\u90a3\u4e48\u5fc5\u987b\u91cd\u65b0\u542f\u52a8\u3002</p> <p>\u5c31\u662f\u8fd9\u6837\uff01\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u00a0<code>docker</code>\u00a0\u547d\u4ee4\u800c\u4e0d\u9700\u8981 sudo</p>"},{"location":"TOOL/docker/01-docker-install/#_1","title":"\u6dfb\u52a0\u955c\u50cf\u6e90","text":"<p>\u5728<code>/etc/docker</code>\u76ee\u5f55\u4e2d\u6dfb\u52a0daemon.json\u6587\u4ef6,\u52a0\u5165\u963f\u91cc\u4e91\u955c\u50cf \u91cd\u542fdocker\u670d\u52a1 Bash<pre><code>sudo service docker restart\n</code></pre> \u7136\u540e\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u786e\u5b9a\u955c\u50cf\u4fee\u6539\u6210\u529f, \u8fdb\u884c\u67e5\u770b Bash<pre><code>sudo docker info\n</code></pre> \u56fd\u5185\u5e38\u89c1\u7684\u955c\u50cf\u52a0\u901f\u5668</p> <ul> <li>Docker \u4e2d\u56fd\u5b98\u65b9\u955c\u50cf https://registry.docker-cn.com</li> <li>DaoCloud \u955c\u50cf\u7ad9  http://f1361db2.m.daocloud.io</li> <li>Azure \u4e2d\u56fd\u955c\u50cf    https://dockerhub.azk8s.cn</li> <li>\u79d1\u5927\u955c\u50cf\u7ad9 https://docker.mirrors.ustc.edu.cn</li> <li>\u963f\u91cc\u4e91   https://ud6340vz.mirror.aliyuncs.com</li> <li>\u4e03\u725b\u4e91   https://reg-mirror.qiniu.com</li> <li>\u7f51\u6613\u4e91   https://hub-mirror.c.163.com</li> <li>\u817e\u8baf\u4e91   https://mirror.ccs.tencentyun.com</li> </ul>"},{"location":"TOOL/docker/01-docker-install/#docker_1","title":"\u914d\u7f6eDocker\u5b88\u62a4\u8fdb\u7a0b\u4f7f\u7528\u4ee3\u7406","text":"<p>1.\u521b\u5efa\u6216\u7f16\u8f91Docker\u5b88\u62a4\u8fdb\u7a0b\u7684\u4ee3\u7406\u914d\u7f6e\u6587\u4ef6\uff1a</p> <p>\u5728 <code>/etc/systemd/system/docker.service.d</code> \u76ee\u5f55\u4e0b\u521b\u5efa\u6216\u7f16\u8f91 <code>http-proxy.conf</code> \u6587\u4ef6\uff1a</p> Bash<pre><code>sudo mkdir -p /etc/systemd/system/docker.service.d\nsudo nano /etc/systemd/system/docker.service.d/http-proxy.conf\n</code></pre> <p>2.\u6dfb\u52a0\u4ee3\u7406\u914d\u7f6e\uff1a</p> <p>\u5728\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff0c\u4f7f\u7528\u60a8\u7684\u4ee3\u7406\u5730\u5740\uff1a</p> <p>Text Only<pre><code>[Service]\nEnvironment=\"HTTP_PROXY=http://127.0.0.1:7897/\"\nEnvironment=\"HTTPS_PROXY=http://127.0.0.1:7897/\"\n</code></pre> 3.\u91cd\u65b0\u52a0\u8f7d\u5b88\u62a4\u8fdb\u7a0b\u5e76\u91cd\u542fDocker\uff1a</p> Bash<pre><code>sudo systemctl daemon-reload\nsudo systemctl restart docker\n</code></pre> <p>4.\u9a8c\u8bc1\u8bbe\u7f6e\u662f\u5426\u751f\u6548\uff1a \u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770bDocker\u7684\u4ee3\u7406\u8bbe\u7f6e\uff1a</p> Bash<pre><code>systemctl show --property=Environment docker\n</code></pre>"},{"location":"TOOL/docker/01-docker-install/#docker_2","title":"\u9a8c\u8bc1Docker\u4ee3\u7406\u8bbe\u7f6e","text":"<p>Bash<pre><code>docker info\n</code></pre> \u68c0\u67e5\u8f93\u51fa\u4e2d\u7684 \"HTTP Proxy\" \u548c \"HTTPS Proxy\" \u8bbe\u7f6e\u662f\u5426\u6b63\u786e\u3002</p>"},{"location":"TOOL/docker/01-docker-install/#docker_3","title":"\u91cd\u65b0\u62c9\u53d6Docker\u955c\u50cf","text":"Bash<pre><code>sudo docker pull opendronemap/odm\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/","title":"docker\u57fa\u672c\u547d\u4ee4","text":"<p>\u53c2\u8003https://docs.docker.com/reference/cli/docker/</p>"},{"location":"TOOL/docker/02-docker-commands/#1-docker","title":"1. docker\u7b80\u4ecb","text":"<p>Docker \u662f\u4e00\u4e2a\u5e94\u7528\u6253\u5305\u3001\u5206\u53d1\u3001\u90e8\u7f72\u7684\u5de5\u5177 - \u6253\u5305\uff1a\u628a\u8f6f\u4ef6\u8fd0\u884c\u6240\u9700\u7684\u4f9d\u8d56\u3001\u7b2c\u4e09\u65b9\u5e93\u3001\u8f6f\u4ef6\u6253\u5305\u5230\u4e00\u8d77\uff0c\u53d8\u6210\u4e00\u4e2a\u5b89\u88c5\u5305 - \u5206\u53d1\uff1a\u628a\u6253\u5305\u597d\u7684\u201c\u5b89\u88c5\u5305\u201d\u4e0a\u4f20\u5230\u4e00\u4e2a\u955c\u50cf\u4ed3\u5e93\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u83b7\u53d6\u548c\u5b89\u88c5 - \u90e8\u7f72\uff1a\u62ff\u7740\u201c\u5b89\u88c5\u5305\u201d\u5c31\u53ef\u4ee5\u4e00\u4e2a\u547d\u4ee4\u8fd0\u884c\u8d77\u6765\u4f60\u7684\u5e94\u7528\uff0c\u81ea\u52a8\u6a21\u62df\u51fa\u4e00\u6478\u4e00\u6837\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4e0d\u7ba1\u662f\u5728 Windows/Mac/Linux\u786e\u4fdd\u4e86\u4e0d\u540c\u673a\u5668\u4e0a\u90fd\u662f\u4e00\u81f4\u7684\u8fd0\u884c\u73af\u5883 - \u955c\u50cf\uff1a\u955c\u50cf\u5305\u542b\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u6240\u6709\u5185\u5bb9\u2014\u2014\u4ee3\u7801\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u8fd0\u884c\u65f6\u3001\u4f9d\u8d56\u9879\u4ee5\u53ca\u6240\u9700\u7684\u4efb\u4f55\u5176\u4ed6\u6587\u4ef6\u7cfb\u7edf\u5bf9\u8c61\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u8f6f\u4ef6\u5b89\u88c5\u5305\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u8fdb\u884c\u4f20\u64ad\u548c\u5b89\u88c5\u3002\u955c\u50cf\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5b89\u88c5\u5305\uff0c\u7528\u6765\u751f\u6210\u5bb9\u5668 - \u5bb9\u5668\uff1a\u5bb9\u5668\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u5b83\u8fd8\u5e94\u7528\u4e86\u4e00\u4e9b\u9644\u52a0\u7684\u5c01\u88c5\u529f\u80fd\uff0c\u4ee5\u4f7f\u5176\u4e0e\u4e3b\u673a\u548c\u5176\u4ed6\u5bb9\u5668\u4fdd\u6301\u9694\u79bb\u3002\u5bb9\u5668\u9694\u79bb\u7684\u6700\u91cd\u8981\u65b9\u9762\u4e4b\u4e00\u662f\u6bcf\u4e2a\u5bb9\u5668\u90fd\u4e0e\u81ea\u5df1\u7684\u79c1\u6709\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\uff1b\u8be5\u6587\u4ef6\u7cfb\u7edf\u7531Docker\u955c\u50cf\u63d0\u4f9b\u3002\u5bb9\u5668\u662f\u955c\u50cf\u8fd0\u884c\u7684\u5b9e\u4f8b\uff0c\u5b83\u662f\u4e00\u4e2a\u53ef\u8bfb\u5199\u7684\uff0c\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u73af\u5883</p>"},{"location":"TOOL/docker/02-docker-commands/#2","title":"2. \u83b7\u53d6\u955c\u50cf","text":"<p>\u83b7\u53d6\u955c\u50cf\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a  * \u4f7f\u7528\u4ed6\u4eba\u6253\u5305\u597d\uff0c\u5e76\u901a\u8fc7\u7f51\u7edc\uff08\u4e3b\u8981\u662fdocker\u5b98\u65b9\u7684docker hub\u548c\u4e00\u4e9b\u7c7b\u4f3c\u7684\u955c\u50cf\u6258\u7ba1\u7f51\u7ad9\uff09\u8fdb\u884c\u5206\u4eab\u7684\u955c\u50cf\uff1b * \u5728\u672c\u5730\u5c06\u955c\u50cf\u4fdd\u5b58\u4e3a\u672c\u5730\u6587\u4ef6\uff0c\u76f4\u63a5\u4f7f\u7528\u751f\u6210\u7684\u6587\u4ef6\u8fdb\u884c\u5171\u4eab\u3002\u540e\u8005\u5728\u7f51\u7edc\u9996\u5148\u73af\u5883\u4e0b\u66f4\u52a0\u65b9\u4fbf\uff1b</p>"},{"location":"TOOL/docker/02-docker-commands/#21","title":"2.1 \u4ece\u7f51\u7edc","text":"<p>\u8fd9\u91cc\u4e3b\u8981\u53ef\u4ee5\u501f\u52a9\u4e8e\u4e24\u6761\u6307\u4ee4\u3002\u4e00\u4e2a\u662f <code>docker pull</code> \uff0c\u53e6\u4e00\u4e2a\u662f <code>docker run</code> Bash<pre><code>docker pull [OPTIONS] NAME[:TAG|@DIGEST]\n</code></pre> \u4ece\u4ed3\u5e93\u4e2d\u62c9\u53d6\uff08pull\uff09\u6307\u5b9a\u7684\u955c\u50cf\u5230\u672c\u673a\u3002 \u5bf9\u5e94\u4e8e\u8fd9\u91cc\u7684\u4e09\u79cd\u6784\u9020\u6307\u4ee4\u7684\u65b9\u5f0f\uff0c\u6587\u6863\u4e2d\u7ed9\u51fa\u4e86\u51e0\u79cd\u4e0d\u540c\u7684\u62c9\u53d6\u65b9\u5f0f\uff1a</p> <ul> <li>NAME</li> <li><code>docker pull ubuntu</code> \u5982\u679c\u4e0d\u6307\u5b9a\u6807\u7b7e\uff0cDocker Engine\u4f1a\u4f7f\u7528 :latest \u4f5c\u4e3a\u9ed8\u8ba4\u6807\u7b7e\u62c9\u53d6\u955c\u50cf\u3002</li> <li>NAME:TAG</li> <li><code>docker pull ubuntu:14.04</code> \u4f7f\u7528\u6807\u7b7e\u65f6\uff0c\u53ef\u4ee5\u518d\u6b21 <code>docker pull</code> \u8fd9\u4e2a\u955c\u50cf\uff0c\u4ee5\u786e\u4fdd\u5177\u6709\u8be5\u955c\u50cf\u7684\u6700\u65b0\u7248\u672c\u3002 \u4f8b\u5982\uff0c<code>docker pull ubuntu:14.04</code> \u5c06\u4f1a\u62c9\u53d6<code>Ubuntu 14.04</code>\u955c\u50cf\u7684\u6700\u65b0\u7248\u672c\u3002</li> <li>NAME@DIGEST</li> <li><code>docker pull ubuntu@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2</code> \u8fd9\u4e2a\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u6307\u5b9a\u7279\u5b9a\u7248\u672c\u955c\u50cf\u7684\u65b9\u6cd5 \u4e3a\u4e86\u4fdd\u8bc1\u540e\u671f\u6211\u4eec\u4ec5\u4ec5\u4f7f\u7528\u8fd9\u4e2a\u7248\u672c\u7684\u955c\u50cf\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u901a\u8fc7\u6307\u5b9aDIGEST\uff08\u901a\u8fc7\u67e5\u770b\u955c\u50cf\u6258\u7ba1\u7f51\u7ad9\u91cc\u7684\u955c\u50cf\u4fe1\u606f\u6216\u8005\u662f\u4e4b\u524d\u7684 pull \u8f93\u51fa\u91cc\u7684DIGEST\u4fe1\u606f\uff09\u7684\u65b9\u5f0f pull \u8be5\u7248\u672c\u955c\u50cf\u3002</li> </ul> Bash<pre><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]\n</code></pre> <p><code>docker run</code> \u547d\u4ee4\u9996\u5148\u5728\u6307\u5b9a\u7684\u6620\u50cf\u4e0a\u521b\u5efa\u4e00\u4e2a\u53ef\u5199\u7684\u5bb9\u5668\u5c42\uff0c\u7136\u540e\u4f7f\u7528\u6307\u5b9a\u7684\u547d\u4ee4\u542f\u52a8\u5b83</p> <p>\u8fd9\u4e2a\u5b9e\u9645\u4e0a\u4f1a\u81ea\u52a8\u4ece\u5b98\u65b9\u4ed3\u5e93\u4e2d\u4e0b\u8f7d\u672c\u5730\u6ca1\u6709\u7684\u955c\u50cf\u3002\u66f4\u591a\u662f\u4f7f\u7528\u4f1a\u5728\u540e\u9762\u521b\u5efa\u5bb9\u5668\u7684\u90e8\u5206\u4ecb\u7ecd\u3002</p> Bash<pre><code>$ sudo docker images\nREPOSITORY                                             TAG                 IMAGE ID            CREATED             SIZE\n\n$ sudo docker run hello-world\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n0e03bdcc26d7: Pull complete \nDigest: sha256:49a1c8800c94df04e9658809b006fd8a686cab8028d33cfba2cc049724254202\nStatus: Downloaded newer image for hello-world:latest\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\n\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n\n$ sudo docker images\nREPOSITORY                                             TAG                 IMAGE ID            CREATED             SIZE\nhello-world                                            latest              bf756fb1ae65        7 months ago        13.3kB\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#22","title":"2.2 \u4ece\u4ed6\u4eba\u5904","text":"<p>\u5173\u4e8e\u5982\u4f55\u4fdd\u5b58\u955c\u50cf\u5728\u540e\u9762\u4ecb\u7ecd\uff0c\u5176\u6d89\u53ca\u5230\u7684\u6307\u4ee4\u4e3a <code>docker save</code> \uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb2\u5982\u4f55\u52a0\u8f7d\u5df2\u7ecf\u5bfc\u51fa\u7684\u955c\u50cf\u6587\u4ef6\u3002 Bash<pre><code>docker load [OPTIONS]\n</code></pre> \u4f8b\u5b50\u53ef\u89c1\uff1ahttps://docs.docker.com/engine/reference/commandline/load/#examples</p>"},{"location":"TOOL/docker/02-docker-commands/#3","title":"3. \u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u5bb9\u5668","text":"<p><code>docker run</code> \u7684\u8bed\u6cd5\u975e\u5e38\u7075\u6d3b\uff0c\u53c2\u6570\u4e5f\u5f88\u591a\uff0c\u6211\u4eec\u6765 \u5206\u6a21\u5757\u8be6\u7ec6\u8bb2\u89e3\u6bcf\u4e2a\u53c2\u6570\u7684\u610f\u4e49\u548c\u7528\u6cd5</p> Bash<pre><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]\n</code></pre> <ul> <li><code>OPTIONS</code>: \u8fd0\u884c\u53c2\u6570\uff08\u914d\u7f6e\u5bb9\u5668\u7684\u8fd0\u884c\u65b9\u5f0f\uff09</li> <li><code>IMAGE</code>: \u8981\u8fd0\u884c\u7684\u955c\u50cf\u540d\uff08\u5982 <code>ubuntu:20.04</code>\uff09</li> <li><code>COMMAND</code>: \u955c\u50cf\u5185\u8981\u6267\u884c\u7684\u547d\u4ee4\uff08\u53ef\u9009\uff0c\u5982 <code>bash</code>\uff09</li> </ul>"},{"location":"TOOL/docker/02-docker-commands/#31","title":"3.1 \u542f\u52a8\u6a21\u5f0f","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b <code>-d</code> \u540e\u53f0\u8fd0\u884c\uff08detached\uff09 <code>docker run -d nginx</code> <code>-it</code> \u4ea4\u4e92\u6a21\u5f0f + \u4f2a\u7ec8\u7aef <code>docker run -it ubuntu bash</code> <code>--rm</code> \u5bb9\u5668\u9000\u51fa\u65f6\u81ea\u52a8\u5220\u9664 <code>docker run --rm ubuntu</code> <p>\ud83d\udcdd \u8bf4\u660e\uff1a</p> <ul> <li><code>-i</code>: \u4fdd\u6301\u8f93\u5165\u6d41\u6253\u5f00</li> <li><code>-t</code>: \u5206\u914d\u7ec8\u7aef</li> </ul>"},{"location":"TOOL/docker/02-docker-commands/#32","title":"3.2 \u5bb9\u5668\u547d\u540d","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b <code>--name</code> \u6307\u5b9a\u5bb9\u5668\u540d <code>docker run --name myweb nginx</code>"},{"location":"TOOL/docker/02-docker-commands/#33","title":"3.3 \u7aef\u53e3\u6620\u5c04","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b <code>-p</code> \u5c06\u5bbf\u4e3b\u673a\u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u7aef\u53e3 <code>docker run -p 8080:80 nginx</code> <p>\ud83c\udf10 \u542b\u4e49\uff1a\u672c\u673a\u7684 <code>8080</code> \u5bf9\u5e94\u5bb9\u5668\u7684 <code>80</code>\uff0c\u53ef\u901a\u8fc7 <code>localhost:8080</code> \u8bbf\u95ee\u3002</p>"},{"location":"TOOL/docker/02-docker-commands/#34","title":"3.4 \u5377\u6302\u8f7d\uff08\u6570\u636e\u6301\u4e45\u5316\uff09","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b <code>-v</code> \u5c06\u5bbf\u4e3b\u673a\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668 <code>docker run -v /host/data:/data ubuntu</code> <p>\ud83d\udcc1 \u542b\u4e49\uff1a\u5bb9\u5668\u5185 <code>/data</code> \u76ee\u5f55\u4e0e\u5bbf\u4e3b\u673a <code>/host/data</code> \u540c\u6b65\u3002</p> <p>\u5f53\u7136\u53ef\u4ee5\uff01Docker \u4e2d\u7684\u6302\u8f7d\u65b9\u5f0f\u4e3b\u8981\u6709\u4e24\u79cd\uff1a\u7ed1\u5b9a\u6302\u8f7d\uff08bind mount\uff09 \u548c \u547d\u540d\u5377\u6302\u8f7d\uff08named volume\uff09\u3002\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u7528\u4e8e\u5c06\u6570\u636e\u4ece\u5bbf\u4e3b\u673a\u201c\u6302\u8f7d\u201d\u5230\u5bb9\u5668\u4e2d\uff0c\u4f46\u5b83\u4eec\u7684\u673a\u5236\u3001\u7528\u9014\u548c\u7ba1\u7406\u65b9\u5f0f\u4e0d\u540c\u3002</p> <p>Docker \u4e2d\u7684\u6302\u8f7d\u65b9\u5f0f\u4e3b\u8981\u6709\u4e24\u79cd\uff1a\u7ed1\u5b9a\u6302\u8f7d\uff08bind mount\uff09 \u548c \u547d\u540d\u5377\u6302\u8f7d\uff08named volume\uff09\u3002\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u7528\u4e8e\u5c06\u6570\u636e\u4ece\u5bbf\u4e3b\u673a\u201c\u6302\u8f7d\u201d\u5230\u5bb9\u5668\u4e2d\uff0c\u4f46\u5b83\u4eec\u7684\u673a\u5236\u3001\u7528\u9014\u548c\u7ba1\u7406\u65b9\u5f0f\u4e0d\u540c</p>"},{"location":"TOOL/docker/02-docker-commands/#341-bind-mount","title":"3.4.1 \u7ed1\u5b9a\u6302\u8f7d\uff08Bind Mount\uff09","text":"Bash<pre><code>-v /\u5bbf\u4e3b\u673a/\u76ee\u5f55:/\u5bb9\u5668/\u76ee\u5f55\n</code></pre> <p>demo Bash<pre><code>docker run -v /home/user/html:/usr/share/nginx/html nginx\n</code></pre></p> <p>\u7279\u70b9</p> \u9879\u76ee \u5185\u5bb9 \u6765\u6e90 \u5bbf\u4e3b\u673a\u7684\u5b9e\u9645\u8def\u5f84 \u6301\u4e45\u6027 \u5bbf\u4e3b\u673a\u76ee\u5f55\u4e00\u76f4\u5b58\u5728\uff0c\u5bb9\u5668\u5220\u9664\u4e5f\u4e0d\u4f1a\u5220\u9664\u6570\u636e \u7ba1\u7406 \u7531\u4f60\u624b\u52a8\u7ba1\u7406\uff08Docker \u4e0d\u8d1f\u8d23\uff09 \u53ef\u89c1\u6027 \u5bbf\u4e3b\u673a\u548c\u5bb9\u5668\u5b9e\u65f6\u540c\u6b65\uff08\u9002\u5408\u672c\u5730\u5f00\u53d1\uff09 \u6743\u9650\u63a7\u5236 \u53ef\u8bbe\u7f6e\u53ea\u8bfb\uff1a<code>-v /src:/dst:ro</code> \u7075\u6d3b\u6027 \u53ef\u4ee5\u6302\u8f7d\u4efb\u610f\u8def\u5f84\uff0c\u5305\u62ec socket\u3001\u65e5\u5fd7\u3001\u914d\u7f6e\u6587\u4ef6\u7b49 <p>\u4f7f\u7528\u573a\u666f</p> <ul> <li>\u672c\u5730\u5f00\u53d1\uff08\u4f8b\u5982\u4ee3\u7801\u70ed\u66f4\u65b0\uff09</li> <li>\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84</li> <li>\u6302\u8f7d\u65e5\u5fd7\u3001\u6a21\u578b\u3001\u89c6\u9891\u6587\u4ef6\u7b49</li> </ul>"},{"location":"TOOL/docker/02-docker-commands/#342-named-volume","title":"3.4.2 \u547d\u540d\u5377\u6302\u8f7d\uff08Named Volume\uff09","text":"<p>demo</p> Bash<pre><code>docker volume create myvolume\ndocker run -v myvolume:/usr/share/nginx/html nginx\n</code></pre> <p>\u7279\u70b9\uff1a</p> \u9879\u76ee \u5185\u5bb9 \u6765\u6e90 Docker \u81ea\u52a8\u521b\u5efa\u548c\u7ba1\u7406\u7684\u76ee\u5f55\uff08\u901a\u5e38\u5728 <code>/var/lib/docker/volumes/...</code>\uff09 \u6301\u4e45\u6027 \u4e0e\u5bb9\u5668\u751f\u547d\u5468\u671f\u65e0\u5173\uff08\u5220\u9664\u5bb9\u5668\u540e\u4ecd\u7136\u4fdd\u7559\uff09 \u7ba1\u7406 \u901a\u8fc7 <code>docker volume</code> \u547d\u4ee4\u96c6\u4e2d\u7ba1\u7406 \u53ef\u89c1\u6027 \u9ed8\u8ba4\u5bbf\u4e3b\u673a\u770b\u4e0d\u5230\u6570\u636e\uff08\u9664\u975e\u8fdb\u5165 volume \u8def\u5f84\uff09 \u6570\u636e\u9694\u79bb \u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab Volume\uff0c\u4f46\u9ed8\u8ba4\u4e92\u4e0d\u5f71\u54cd \u53ef\u79fb\u690d\u6027 \u53ef\u4ee5\u7528\u4e8e\u5907\u4efd/\u8fc1\u79fb\uff08\u914d\u5408 <code>docker volume</code> \u547d\u4ee4\uff09 <p>\u4f7f\u7528\u573a\u666f</p> <ul> <li>\u6570\u636e\u5e93\u5b58\u50a8\uff08\u5982 MySQL\u3001PostgreSQL\uff09</li> <li>\u9700\u8981\u6301\u4e45\u5316\u6570\u636e\u7684\u670d\u52a1</li> <li>\u5bb9\u5668\u95f4\u5171\u4eab\u6570\u636e\uff08\u53ef\u914d\u5408 <code>docker-compose</code>\uff09</li> </ul> <p>\u5bf9\u6bd4\u603b\u7ed3\u8868</p> \u5bf9\u6bd4\u9879 \u7ed1\u5b9a\u6302\u8f7d\uff08Bind Mount\uff09 \u547d\u540d\u5377\uff08Named Volume\uff09 \u6570\u636e\u6765\u6e90 \u5bbf\u4e3b\u673a\u4e0a\u4efb\u610f\u76ee\u5f55 Docker \u7ba1\u7406\u7684\u8def\u5f84 <code>/var/lib/docker/volumes/...</code> \u521b\u5efa\u65b9\u5f0f \u81ea\u52a8\u6216\u624b\u52a8\u521b\u5efa\u5bbf\u4e3b\u673a\u8def\u5f84 <code>docker volume create</code> \u521b\u5efa \u6301\u4e45\u6027 \u4e0e\u5bbf\u4e3b\u673a\u8def\u5f84\u76f8\u5173 \u5bb9\u5668\u5220\u9664\u4e5f\u4e0d\u4f1a\u5220\u9664 volume \u6570\u636e\u5171\u4eab \u624b\u52a8\u914d\u7f6e\u76f8\u540c\u5bbf\u4e3b\u673a\u8def\u5f84 \u591a\u4e2a\u5bb9\u5668\u53ef\u6302\u8f7d\u540c\u4e00\u4e2a volume \u5bb9\u5668\u5220\u9664\u540e\u6570\u636e \u4ecd\u4fdd\u7559 \u4ecd\u4fdd\u7559 \u7ba1\u7406\u65b9\u4fbf\u6027 \u4e0d\u6613\u7edf\u4e00\u7ba1\u7406 <code>docker volume ls/inspect/rm</code> \u7ba1\u7406 \u6587\u4ef6\u8bbf\u95ee\u6027 \u5bbf\u4e3b\u673a\u4e0a\u53ef\u76f4\u63a5\u8bbf\u95ee \u5bbf\u4e3b\u673a\u9ed8\u8ba4\u4e0d\u53ef\u89c1 \u63a8\u8350\u573a\u666f \u672c\u5730\u5f00\u53d1\u3001\u8c03\u8bd5\u3001\u6302\u8f7d\u914d\u7f6e\u6216\u65e5\u5fd7\u7b49 \u6570\u636e\u6301\u4e45\u5316\u3001\u6570\u636e\u5e93\u3001\u5171\u4eab\u7f13\u5b58 <p>\u547d\u4ee4\u53c2\u8003</p> <ul> <li>\u521b\u5efa\u547d\u540d\u5377</li> </ul> Bash<pre><code>docker volume create mydata\n</code></pre> <ul> <li>\u4f7f\u7528\u547d\u540d\u5377</li> </ul> Bash<pre><code>docker run -v mydata:/data ubuntu\n</code></pre> <ul> <li>\u67e5\u770b\u5377</li> </ul> Bash<pre><code>docker volume ls\ndocker volume inspect mydata\n</code></pre> <ul> <li>\u5220\u9664\u5377</li> </ul> Bash<pre><code>docker volume rm mydata\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#35","title":"3.5 \u73af\u5883\u53d8\u91cf","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b <code>-e</code> \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf <code>docker run -e ENV=prod ubuntu</code>"},{"location":"TOOL/docker/02-docker-commands/#36","title":"3.6 \u7f51\u7edc\u914d\u7f6e","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b <code>--network</code> \u6307\u5b9a\u5bb9\u5668\u8fde\u63a5\u7684\u7f51\u7edc <code>docker run --network mynet ubuntu</code> <p>\u53ef\u4ee5\u901a\u8fc7 <code>docker network create</code> \u521b\u5efa\u81ea\u5b9a\u4e49\u7f51\u7edc\u3002</p>"},{"location":"TOOL/docker/02-docker-commands/#37","title":"3.7 \u81ea\u52a8\u91cd\u542f\u7b56\u7565\uff08\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff09","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b <code>--restart=always</code> \u5bb9\u5668\u5d29\u6e83\u540e\u81ea\u52a8\u91cd\u542f <code>docker run --restart=always nginx</code> <p>\u53ef\u9009\u503c\uff1a</p> <ul> <li><code>no</code>\uff08\u9ed8\u8ba4\uff09</li> <li><code>on-failure</code></li> <li><code>always</code></li> <li><code>unless-stopped</code></li> </ul>"},{"location":"TOOL/docker/02-docker-commands/#38-nginx","title":"3.8 \u5b8c\u6574\u793a\u4f8b\uff1a\u90e8\u7f72 Nginx \u7f51\u7ad9\u5bb9\u5668","text":"Bash<pre><code>docker run -d \\\n  --name my-nginx \\\n  -p 8080:80 \\\n  -v /home/user/html:/usr/share/nginx/html \\\n  --restart=always \\\n  nginx\n</code></pre> <p>\ud83d\udcdd \u542b\u4e49\uff1a</p> <ul> <li>\u540e\u53f0\u8fd0\u884c</li> <li>\u5bb9\u5668\u53eb <code>my-nginx</code></li> <li>\u628a\u672c\u5730 8080 \u6620\u5c04\u5230\u5bb9\u5668 80 \u7aef\u53e3</li> <li>\u5c06\u5bbf\u4e3b\u673a\u7684 <code>/home/user/html</code> \u4f5c\u4e3a\u7f51\u7ad9\u6839\u76ee\u5f55</li> <li>\u81ea\u52a8\u91cd\u542f</li> <li>\u4f7f\u7528 nginx \u955c\u50cf</li> </ul> <p>\u5176\u5b9e <code>docker run</code> \u7b49\u4ef7\u4e8e\uff1a</p> Bash<pre><code>docker create ...   # \u521b\u5efa\u5bb9\u5668\uff08\u4e0d\u8fd0\u884c\uff09\ndocker start ...    # \u542f\u52a8\u5bb9\u5668\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#4","title":"4. \u5bb9\u5668\u76f8\u5173\u547d\u4ee4","text":""},{"location":"TOOL/docker/02-docker-commands/#41","title":"4.1 \u5bb9\u5668\u751f\u547d\u5468\u671f\u7ba1\u7406\uff08\u521b\u5efa\u3001\u542f\u52a8\u3001\u505c\u6b62\u7b49\uff09","text":"<p><code>docker run</code> \ud83d\udc49 \u521b\u5efa + \u542f\u52a8\u5bb9\u5668</p> Bash<pre><code>docker run -it --name mycontainer ubuntu bash\n</code></pre> <ul> <li>\u521b\u5efa\u5bb9\u5668\u5e76\u8fd0\u884c</li> <li>\u52a0 <code>-d</code> \u5c31\u662f\u540e\u53f0\u8fd0\u884c</li> </ul> <p><code>docker start</code> \ud83d\udc49 \u542f\u52a8 \u5df2\u521b\u5efa\u4f46\u672a\u8fd0\u884c \u7684\u5bb9\u5668</p> Bash<pre><code>docker start mycontainer\n</code></pre> <p><code>docker stop</code> \ud83d\udc49 \u505c\u6b62\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668</p> Bash<pre><code>docker stop mycontainer\n</code></pre> <ul> <li>\u7b49\u5e94\u7528\u6b63\u5e38\u5173\u95ed\uff0c\u6700\u957f 10 \u79d2\u540e\u5f3a\u5236\u505c\u6b62</li> </ul> <p><code>docker restart</code> \ud83d\udc49 \u91cd\u542f\u5bb9\u5668</p> Bash<pre><code>docker restart mycontainer\n</code></pre> <p><code>docker pause / unpause</code> \ud83d\udc49 \u6302\u8d77 / \u6062\u590d\u5bb9\u5668\u8fdb\u7a0b</p> Bash<pre><code>docker pause mycontainer\ndocker unpause mycontainer\n</code></pre> <p><code>docker kill</code> \ud83d\udc49 \u5f3a\u5236\u7ec8\u6b62\u5bb9\u5668\uff08\u7acb\u5373\u53d1\u9001 SIGKILL\uff09</p> Bash<pre><code>docker kill mycontainer\n</code></pre> <p><code>docker rm</code> \ud83d\udc49 \u5220\u9664\u5bb9\u5668\uff08\u5fc5\u987b\u5148\u505c\u6b62\uff09</p> Bash<pre><code>docker rm mycontainer\ndocker rm -f mycontainer  # \u5f3a\u5236\u5220\u9664\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#42","title":"4.2 \u5bb9\u5668\u4fe1\u606f\u67e5\u770b","text":"<p><code>docker ps</code> \ud83d\udc49 \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668</p> Bash<pre><code>docker ps\n</code></pre> <p><code>docker ps -a</code> \ud83d\udc49 \u67e5\u770b\u6240\u6709\u5bb9\u5668\uff08\u5305\u62ec\u505c\u6b62\u7684\uff09</p> Bash<pre><code>docker ps -a\n</code></pre> <p><code>docker inspect</code> \ud83d\udc49 \u67e5\u770b\u5bb9\u5668\u8be6\u7ec6\u4fe1\u606f\uff08JSON\uff09</p> Bash<pre><code>docker inspect mycontainer\n</code></pre> <p>\u53ef\u67e5\u770b\uff1a</p> <ul> <li>\u5bb9\u5668\u914d\u7f6e</li> <li>\u7f51\u7edc\u4fe1\u606f</li> <li>\u6302\u8f7d\u5377</li> <li>IP\u3001\u73af\u5883\u53d8\u91cf\u7b49</li> </ul> <p><code>docker stats</code> \ud83d\udc49 \u5b9e\u65f6\u67e5\u770b\u5bb9\u5668\u8d44\u6e90\u5360\u7528\uff08CPU\u3001\u5185\u5b58\u3001IO\uff09</p> Bash<pre><code>docker stats\n</code></pre> <p><code>docker top</code> \ud83d\udc49 \u67e5\u770b\u5bb9\u5668\u5185\u7684\u8fdb\u7a0b</p> Bash<pre><code>docker top mycontainer\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#43","title":"4.3 \u5bb9\u5668\u4ea4\u4e92\u4e0e\u6587\u4ef6\u7ba1\u7406","text":"<p><code>docker exec</code> \ud83d\udc49 \u5728\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u5185\u6267\u884c\u547d\u4ee4</p> Bash<pre><code>docker exec -it mycontainer bash\n</code></pre> <ul> <li>\u7c7b\u4f3c\u767b\u5f55\u5bb9\u5668\u7ec8\u7aef</li> <li>\u7528\u4e8e\u8fd0\u884c\u8c03\u8bd5\u547d\u4ee4\u3001\u67e5\u770b\u65e5\u5fd7\u3001\u4e34\u65f6\u4fee\u6539</li> </ul> <p><code>docker attach</code> \ud83d\udc49 \u8fde\u63a5\u5bb9\u5668\u4e3b\u7ec8\u7aef</p> Bash<pre><code>docker attach mycontainer\n</code></pre> <p>\ud83d\udccc \u6ce8\u610f\uff1a</p> <ul> <li>\u662f\u8fde\u63a5\u4e3b\u8fdb\u7a0b\uff08\u975e\u65b0\u7ec8\u7aef\uff09</li> <li>Ctrl+C \u4f1a\u505c\u6b62\u5bb9\u5668</li> </ul> <p><code>docker cp</code> \ud83d\udc49 \u5bb9\u5668\u4e0e\u5bbf\u4e3b\u673a\u4e4b\u95f4\u62f7\u8d1d\u6587\u4ef6</p> <p>\u4ece\u5bbf\u4e3b\u673a\u62f7\u8d1d\u5230\u5bb9\u5668</p> Bash<pre><code>docker cp ./config.json mycontainer:/app/config.json\n</code></pre> <p>\u4ece\u5bb9\u5668\u62f7\u8d1d\u5230\u5bbf\u4e3b\u673a</p> Bash<pre><code>docker cp mycontainer:/app/log.txt ./log.txt\n</code></pre> <p><code>docker logs</code> \ud83d\udc49 \u67e5\u770b\u5bb9\u5668\u7684\u6807\u51c6\u8f93\u51fa\u65e5\u5fd7</p> Bash<pre><code>docker logs mycontainer\ndocker logs -f mycontainer  # \u5b9e\u65f6\u67e5\u770b\uff08follow\uff09\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#44","title":"4.4 \u5bb9\u5668\u66f4\u65b0\u4e0e\u4fee\u6539","text":"<p><code>docker commit</code> \ud83d\udc49 \u628a\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u4fdd\u5b58\u6210\u955c\u50cf</p> Bash<pre><code>docker commit mycontainer mynewimage:v1\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#45","title":"4.5 \u5bb9\u5668\u6e05\u7406","text":"<p>\u5220\u9664\u6240\u6709\u505c\u6b62\u7684\u5bb9\u5668</p> Bash<pre><code>docker container prune\n</code></pre> <p>\u5220\u9664\u6240\u6709\u5bb9\u5668\uff08\u5371\u9669\u64cd\u4f5c\uff09</p> Bash<pre><code>docker rm -f $(docker ps -aq)\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#46","title":"4.6 \u547d\u4ee4\u901f\u67e5\u8868","text":"\u7c7b\u578b \u547d\u4ee4 \u8bf4\u660e \u521b\u5efa\u5e76\u8fd0\u884c <code>docker run</code> \u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u5bb9\u5668 \u542f\u52a8 <code>docker start</code> \u542f\u52a8\u5df2\u5b58\u5728\u5bb9\u5668 \u505c\u6b62 <code>docker stop</code> \u505c\u6b62\u8fd0\u884c\u7684\u5bb9\u5668 \u5f3a\u5236\u505c\u6b62 <code>docker kill</code> \u7acb\u5373\u4e2d\u6b62\u5bb9\u5668\u8fdb\u7a0b \u91cd\u542f <code>docker restart</code> \u505c\u6b62+\u542f\u52a8 \u5220\u9664 <code>docker rm</code> \u5220\u9664\u5bb9\u5668 \u67e5\u770b <code>docker ps</code> \u67e5\u770b\u8fd0\u884c\u4e2d\u5bb9\u5668 \u67e5\u770b\u5168\u90e8 <code>docker ps -a</code> \u5305\u62ec\u505c\u6b62\u7684\u5bb9\u5668 \u67e5\u770b\u8be6\u60c5 <code>docker inspect</code> \u5bb9\u5668\u914d\u7f6e\u4e0e\u72b6\u6001 \u67e5\u770b\u8d44\u6e90 <code>docker stats</code> CPU\u3001\u5185\u5b58\u3001I/O \u5b9e\u65f6\u76d1\u63a7 \u67e5\u770b\u8fdb\u7a0b <code>docker top</code> \u5bb9\u5668\u5185\u8fd0\u884c\u7684\u8fdb\u7a0b \u767b\u5f55\u5bb9\u5668 <code>docker exec</code> \u63a8\u8350\uff08\u4e0d\u4f1a\u5173\u95ed\u4e3b\u8fdb\u7a0b\uff09 \u9644\u52a0\u7ec8\u7aef <code>docker attach</code> \u4e0d\u63a8\u8350\uff08Ctrl+C \u4f1a\u9000\u51fa\uff09 \u67e5\u770b\u65e5\u5fd7 <code>docker logs</code> \u6807\u51c6\u8f93\u51fa\u5185\u5bb9 \u6587\u4ef6\u590d\u5236 <code>docker cp</code> \u5bbf\u4e3b\u673a\u548c\u5bb9\u5668\u95f4\u4e92\u62f7 \u751f\u6210\u955c\u50cf <code>docker commit</code> \u628a\u5bb9\u5668\u6253\u5305\u6210\u955c\u50cf \u6e05\u7406\u5bb9\u5668 <code>docker container prune</code> \u5220\u9664\u5168\u90e8\u5df2\u505c\u6b62\u7684\u5bb9\u5668"},{"location":"TOOL/docker/02-docker-commands/#5-dockerfile","title":"5. \u4f7f\u7528 Dockerfile \u6784\u5efa\u955c\u50cf\uff08\u63a8\u8350\uff09","text":"<p>\u6807\u51c6\u505a\u6cd5\uff0c\u9002\u7528\u4e8e\u5f00\u53d1\u90e8\u7f72\u73af\u5883\u3001\u81ea\u5b9a\u4e49\u670d\u52a1\u955c\u50cf\u7b49</p>"},{"location":"TOOL/docker/02-docker-commands/#51-dockerfile","title":"5.1 \u51c6\u5907\u4e00\u4e2a Dockerfile\uff08\u65e0\u6269\u5c55\u540d\uff09","text":"<p>\u793a\u4f8b</p> Docker<pre><code># Dockerfile\nFROM ubuntu:20.04                 # \u57fa\u7840\u955c\u50cf\nRUN apt update &amp;&amp; apt install -y python3\nCOPY . /app                       # \u62f7\u8d1d\u5f53\u524d\u76ee\u5f55\u6240\u6709\u6587\u4ef6\u8fdb\u955c\u50cf\nWORKDIR /app                     # \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\nCMD [\"python3\", \"main.py\"]       # \u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#52","title":"5.2 \u6784\u5efa\u955c\u50cf","text":"Bash<pre><code>docker build -t my-python-app:v1 .\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>-t my-python-app:v1</code>\uff1a\u7ed9\u955c\u50cf\u547d\u540d\u5e76\u6253\u6807\u7b7e</li> <li><code>.</code>\uff1a\u8868\u793a\u5f53\u524d\u76ee\u5f55\uff08Dockerfile \u548c\u4ee3\u7801\u6240\u5728\u76ee\u5f55\uff09</li> </ul>"},{"location":"TOOL/docker/02-docker-commands/#53","title":"5.3 \u67e5\u770b\u751f\u6210\u7684\u955c\u50cf","text":"Bash<pre><code>docker images\n</code></pre> <p>\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u7c7b\u4f3c\u8f93\u51fa\uff1a</p> Text Only<pre><code>REPOSITORY        TAG     IMAGE ID       CREATED          SIZE\nmy-python-app     v1      abcd1234...    10 seconds ago   180MB\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#54","title":"5.4 \u4f7f\u7528\u955c\u50cf\u8fd0\u884c\u5bb9\u5668","text":"Bash<pre><code>docker run -it my-python-app:v1\n</code></pre> <p>\u5f53\u7136\u53ef\u4ee5\uff01\u6211\u4eec\u6765\u7cfb\u7edf\u8be6\u7ec6\u5730\u4ecb\u7ecd <code>docker save</code> \u548c <code>docker load</code>\uff0c\u5b83\u4eec\u662f\u7528\u4e8e \u955c\u50cf\u7684\u5bfc\u51fa\u4e0e\u5bfc\u5165 \u7684\u547d\u4ee4\uff0c\u5e38\u7528\u4e8e\uff1a</p> <ul> <li>\u955c\u50cf\u5907\u4efd\uff08\u672c\u5730\u4fdd\u5b58\uff09</li> <li>\u79bb\u7ebf\u73af\u5883\u90e8\u7f72\uff08\u5982\u65e0\u7f51\u7edc\u7684\u670d\u52a1\u5668\uff09</li> <li>\u955c\u50cf\u8fc1\u79fb\uff08\u4ece\u4e00\u53f0\u673a\u5668\u79fb\u52a8\u5230\u53e6\u4e00\u53f0\uff09</li> </ul>"},{"location":"TOOL/docker/02-docker-commands/#docker-save-tar","title":"\ud83e\uddca <code>docker save</code> \u2014\u2014 \u5bfc\u51fa\u955c\u50cf\u4e3a <code>.tar</code> \u6587\u4ef6","text":""},{"location":"TOOL/docker/02-docker-commands/#_1","title":"\ud83d\udccc \u4f5c\u7528\uff1a","text":"<p>\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a Docker \u955c\u50cf\u5bfc\u51fa\u4e3a <code>.tar</code> \u6587\u4ef6\uff0c\u5305\u542b\u955c\u50cf\u7684\u6240\u6709\u5c42\u548c\u5143\u6570\u636e\u3002</p>"},{"location":"TOOL/docker/02-docker-commands/#_2","title":"\ud83d\udcd8 \u57fa\u672c\u8bed\u6cd5\uff1a","text":"Bash<pre><code>docker save -o &lt;\u4fdd\u5b58\u8def\u5f84&gt;.tar &lt;\u955c\u50cf\u540d&gt;:&lt;\u6807\u7b7e&gt;\n</code></pre>"},{"location":"TOOL/docker/02-docker-commands/#_3","title":"\u2705 \u793a\u4f8b\uff1a","text":"Bash<pre><code>docker save -o nginx.tar nginx:latest\n</code></pre> <p>\u751f\u6210\u4e00\u4e2a <code>nginx.tar</code> \u6587\u4ef6\uff0c\u53ef\u4ee5\u590d\u5236\u3001\u4f20\u8f93\u3001\u5b58\u6863\u3002</p>"},{"location":"TOOL/docker/02-docker-commands/#6","title":"6. \u5bfc\u51fa\u5bfc\u5165\u955c\u50cf","text":"<p>\u4ece <code>.tar</code> \u6587\u4ef6\u4e2d\u5bfc\u5165\u955c\u50cf\u5230\u672c\u5730 Docker \u955c\u50cf\u4ed3\u5e93\u3002</p> Bash<pre><code>docker load -i &lt;\u8def\u5f84&gt;.tar\n</code></pre> <p>demo</p> Bash<pre><code>docker load -i nginx.tar\n</code></pre> <p>\u8f93\u51fa\u5982\u4e0b\uff0c\u8868\u793a\u5bfc\u5165\u6210\u529f\uff1a</p> Text Only<pre><code>Loaded image: nginx:latest\n</code></pre> <p>\u73b0\u5728\u50cf\u4f7f\u7528\u672c\u5730\u955c\u50cf\u4e00\u6837\u8fd0\u884c\u5b83\uff1a</p> Bash<pre><code>docker run -d -p 8080:80 nginx:latest\n</code></pre> <p>\u793a\u4f8b\u5b8c\u6574\u6d41\u7a0b\uff1a\u5907\u4efd\u548c\u8fc1\u79fb\u955c\u50cf</p> <p>\ud83d\udfe2 \u5728\u6e90\u670d\u52a1\u5668\u4e0a\uff1a</p> Bash<pre><code>docker save -o myapp.tar myapp:1.0\nscp myapp.tar user@target-server:/home/user/\n</code></pre> <p>\ud83d\udd35 \u5728\u76ee\u6807\u670d\u52a1\u5668\u4e0a\uff1a</p> Bash<pre><code>docker load -i /home/user/myapp.tar\ndocker run myapp:1.0\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5bfc\u51fa\u591a\u4e2a\u955c\u50cf\uff1a</p> Bash<pre><code>docker save -o all-in-one.tar nginx:latest redis:6.0\n</code></pre> <p>\u7136\u540e\u4f7f\u7528 <code>docker load -i all-in-one.tar</code> \u4e00\u6b21\u5bfc\u5165\u6240\u6709\u3002</p> <p>\u2705 \u603b\u7ed3</p> \u547d\u4ee4 \u4f5c\u7528 \u5e38\u7528\u573a\u666f <code>docker save</code> \u5bfc\u51fa\u955c\u50cf\u4e3a <code>.tar</code> \u6587\u4ef6 \u955c\u50cf\u8fc1\u79fb\u3001\u5907\u4efd\u3001\u79bb\u7ebf\u90e8\u7f72 <code>docker load</code> \u4ece <code>.tar</code> \u6587\u4ef6\u52a0\u8f7d\u955c\u50cf \u79bb\u7ebf\u5bfc\u5165\u955c\u50cf \u63a8\u8350\u4f7f\u7528 \u914d\u5408 <code>Dockerfile</code> \u6784\u5efa\u597d\u955c\u50cf\u540e\u5bfc\u51fa \u5b89\u5168\u53ef\u9760\u3001\u6613\u7ef4\u62a4"},{"location":"TOOL/ubuntu/01-timeshift/","title":"\u7cfb\u7edf\u5907\u4efd","text":"<p>Timeshift \u662f\u7c7b\u4f3c\u4e8e macOS\u300c\u65f6\u95f4\u673a\u5668\u300d\u7684\u5907\u4efd\u5de5\u5177\uff0c\u5b83\u80fd\u5907\u4efd\u6574\u4e2a\u7cfb\u7edf\uff0c\u5e76\u63d0\u4f9b\u6587\u4ef6\u5907\u4efd\u9009\u9879\u548c\u5907\u4efd\u8ba1\u5212\u529f\u80fd\u3002</p>"},{"location":"TOOL/ubuntu/01-timeshift/#_2","title":"\u5907\u4efd","text":""},{"location":"TOOL/ubuntu/01-timeshift/#apttimeshift","title":"apt\u5b89\u88c5timeshift","text":"Bash<pre><code>sudo apt update\nsudp apt install timeshift\n</code></pre> <p>\u6253\u5f00 Timeshift\uff0c\u9009\u62e9 RSYNC \u6216 BTRFS \u5feb\u7167\u7c7b\u578b\u3002\u901a\u5e38\u9009\u62e9 RSYNC</p> <p>\u9009\u62e9\u5907\u4efd\u5b58\u50a8\u4f4d\u7f6e\uff0c\u70b9\u51fb\u300c\u4e0b\u4e00\u6b65\u300d</p>"},{"location":"TOOL/ubuntu/01-timeshift/#_3","title":"\u521b\u5efa","text":""},{"location":"TOOL/ubuntu/01-timeshift/#_4","title":"\u6062\u590d\u7cfb\u7edf\u5feb\u7167","text":"<p>\u542f\u52a8 Timeshift\uff1a Bash<pre><code>sudo timeshift-launcher\n</code></pre></p>"},{"location":"TOOL/ubuntu/01-timeshift/#_5","title":"\u6062\u590d","text":""},{"location":"TOOL/ubuntu/01-timeshift/#_6","title":"\u9009\u62e9\u5feb\u7167\uff1a","text":"<p>\u5728 Timeshift \u754c\u9762\u4e2d\uff0c\u9009\u62e9\u60a8\u60f3\u8981\u6062\u590d\u7684\u5feb\u7167\u3002</p>"},{"location":"TOOL/ubuntu/01-timeshift/#_7","title":"\u6062\u590d\u5feb\u7167\uff1a","text":"<p>\u70b9\u51fb \u201cRestore\u201d \u6309\u94ae\u5e76\u6309\u7167\u63d0\u793a\u8fdb\u884c\u6062\u590d\u64cd\u4f5c\u3002 \u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\uff1a \u6062\u590d\u5b8c\u6210\u540e\uff0c\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u3002</p>"},{"location":"TOOL/ubuntu/01-timeshift/#_8","title":"\u547d\u4ee4\u884c\u64cd\u4f5c","text":"<p>\u5982\u679c\u65e0\u6cd5\u8fdb\u5165\u684c\u9762\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u547d\u4ee4\u884c\u6062\u590d\u5feb\u7167\u3002</p>"},{"location":"TOOL/ubuntu/01-timeshift/#_9","title":"\u5217\u51fa\u5feb\u7167\uff1a","text":"Bash<pre><code>sudo timeshift --list\n</code></pre>"},{"location":"TOOL/ubuntu/01-timeshift/#_10","title":"\u6062\u590d\u5feb\u7167\uff1a","text":"<p>\u4f7f\u7528\u547d\u4ee4\u884c\u6062\u590d\u7279\u5b9a\u7684\u5feb\u7167\uff08\u5047\u8bbe\u8981\u6062\u590d\u5230 2024-07-01 \u7684\u5feb\u7167\uff09\uff1a Bash<pre><code>sudo timeshift --restore --snapshot \"2024-07-01_12-00-00\"\n</code></pre></p>"},{"location":"TOOL/ubuntu/02-apt/","title":"apt","text":"<p>\u5728 <code>Linux</code>\u4e2d\uff0c<code>apt</code> \u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u7528\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u4e8e\u7ba1\u7406\u8f6f\u4ef6\u5305\u3002<code>apt</code> \u4ee3\u8868 <code>Advanced Package Tool</code>\uff0c\u662f\u4e00\u4e2a\u5305\u7ba1\u7406\u5668\u3002\u4ee5\u4e0b\u662f <code>apt</code> \u547d\u4ee4\u7684\u4e00\u4e9b\u57fa\u672c\u7528\u6cd5\u548c\u5e38\u7528\u9009\u9879\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a</p>"},{"location":"TOOL/ubuntu/02-apt/#1","title":"1. \u66f4\u65b0\u5305\u5217\u8868","text":"<p>\u5728\u5b89\u88c5\u6216\u66f4\u65b0\u8f6f\u4ef6\u5305\u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u66f4\u65b0\u5305\u5217\u8868\u4ee5\u786e\u4fdd\u83b7\u53d6\u6700\u65b0\u7684\u8f6f\u4ef6\u5305\u4fe1\u606f\u3002</p> <p>Bash<pre><code>sudo apt update\n</code></pre> \u8be5\u547d\u4ee4\u4ece\u8f6f\u4ef6\u6e90\u4e0b\u8f7d\u6700\u65b0\u7684\u5305\u5217\u8868\uff0c\u4f46\u5e76\u4e0d\u4f1a\u5b89\u88c5\u6216\u66f4\u65b0\u4efb\u4f55\u8f6f\u4ef6\u5305\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#2","title":"2. \u5347\u7ea7\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>sudo apt upgrade\n</code></pre> \u8be5\u547d\u4ee4\u4f1a\u5b89\u88c5\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u7684\u6700\u65b0\u7248\u672c\uff0c\u4f46\u4e0d\u4f1a\u5220\u9664\u6216\u5b89\u88c5\u4efb\u4f55\u65b0\u7684\u5305\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#3","title":"3. \u5347\u7ea7\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8f6f\u4ef6\u5305\uff08\u5305\u62ec\u5220\u9664\u548c\u5b89\u88c5\u65b0\u7684\u5305\uff09","text":"<p>Bash<pre><code>sudo apt full-upgrade\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7c7b\u4f3c\u4e8e <code>upgrade</code>\uff0c\u4f46\u5b83\u4f1a\u5904\u7406\u5305\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u5141\u8bb8\u5220\u9664\u73b0\u6709\u7684\u5305\u4ee5\u4fbf\u8fdb\u884c\u7cfb\u7edf\u7684\u5168\u9762\u5347\u7ea7\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#4","title":"4. \u5b89\u88c5\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>sudo apt install &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7528\u4e8e\u5b89\u88c5\u6307\u5b9a\u7684\u8f6f\u4ef6\u5305</p>"},{"location":"TOOL/ubuntu/02-apt/#5","title":"5. \u5220\u9664\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>sudo apt remove &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7528\u4e8e\u5220\u9664\u6307\u5b9a\u7684\u8f6f\u4ef6\u5305\uff0c\u4f46\u4f1a\u4fdd\u7559\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#6","title":"6. \u5b8c\u5168\u5220\u9664\u8f6f\u4ef6\u5305\uff08\u5305\u62ec\u914d\u7f6e\u6587\u4ef6\uff09","text":"<p>Bash<pre><code>sudo apt purge &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4e0d\u4ec5\u4f1a\u5220\u9664\u8f6f\u4ef6\u5305\uff0c\u8fd8\u4f1a\u5220\u9664\u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#7","title":"7. \u641c\u7d22\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>apt search &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7528\u4e8e\u641c\u7d22\u8f6f\u4ef6\u5305\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#8","title":"8. \u83b7\u53d6\u8f6f\u4ef6\u5305\u7684\u4fe1\u606f","text":"<p>Bash<pre><code>apt show &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u6709\u5173\u6307\u5b9a\u8f6f\u4ef6\u5305\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#9","title":"9. \u6e05\u7406\u4e0d\u9700\u8981\u7684\u5305","text":"<p>Bash<pre><code>sudo apt autoremove\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u81ea\u52a8\u5220\u9664\u90a3\u4e9b\u4f5c\u4e3a\u4f9d\u8d56\u5b89\u88c5\u4f46\u73b0\u5728\u4e0d\u518d\u9700\u8981\u7684\u5305\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#10","title":"10. \u6e05\u7406\u5df2\u4e0b\u8f7d\u7684\u5305\u6587\u4ef6","text":"<p>Bash<pre><code>sudo apt clean\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u6e05\u7406\u672c\u5730\u7f13\u5b58\u7684\u5305\u6587\u4ef6\u4ee5\u91ca\u653e\u78c1\u76d8\u7a7a\u95f4\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#11","title":"11. \u5217\u51fa\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>apt list --installed\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#apt-get","title":"apt-get","text":"<p><code>apt</code> \u548c <code>apt-get</code> \u90fd\u662f <code>Ubuntu</code> \u7cfb\u7edf\u4e2d\u7528\u4e8e\u7ba1\u7406\u8f6f\u4ef6\u5305\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002<code>apt</code> \u662f\u76f8\u5bf9\u8f83\u65b0\u7684\u5de5\u5177\uff0c\u76ee\u7684\u662f\u7b80\u5316\u548c\u7edf\u4e00 <code>apt-get</code> \u548c <code>apt-cache</code> \u7684\u529f\u80fd\uff0c\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u66f4\u7528\u6237\u53cb\u597d\u7684\u547d\u4ee4\u96c6\u5408\u3002\u5c3d\u7ba1 <code>apt</code>\u548c <code>apt-get</code> \u529f\u80fd\u4e0a\u6709\u5f88\u591a\u91cd\u53e0\uff0c\u4f46\u5b83\u4eec\u7684\u4f7f\u7528\u573a\u666f\u548c\u547d\u4ee4\u7565\u6709\u4e0d\u540c\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#apt-apt-get","title":"apt \u548c apt-get \u7684\u5173\u7cfb","text":"<p><code>apt</code>\uff1a\u662f <code>apt-get</code> \u548c <code>apt-cache</code> \u7684\u66f4\u9ad8\u7ea7\u7684\u66ff\u4ee3\u54c1\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u66f4\u7b80\u5355\u548c\u66f4\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u5e38\u89c1\u7684\u5305\u7ba1\u7406\u4efb\u52a1\u3002 <code>apt-get</code>\uff1a\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u9002\u5408\u9ad8\u7ea7\u7528\u6237\u548c\u811a\u672c\u7f16\u5199\uff0c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u9009\u9879\u548c\u66f4\u7cbe\u7ec6\u7684\u63a7\u5236\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#apt-get_1","title":"<code>apt-get</code> \u7684\u8be6\u7ec6\u7528\u6cd5","text":""},{"location":"TOOL/ubuntu/02-apt/#1_1","title":"1. \u66f4\u65b0\u5305\u5217\u8868","text":"<p>Bash<pre><code>sudo apt-get update\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u4ece\u8f6f\u4ef6\u6e90\u4e0b\u8f7d\u6700\u65b0\u7684\u5305\u5217\u8868\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#2_1","title":"2. \u5347\u7ea7\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>sudo apt-get upgrade\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5347\u7ea7\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\uff0c\u4f46\u4e0d\u4f1a\u5220\u9664\u6216\u5b89\u88c5\u4efb\u4f55\u65b0\u7684\u5305\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#3_1","title":"3. \u5347\u7ea7\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8f6f\u4ef6\u5305\uff08\u5305\u62ec\u5220\u9664\u548c\u5b89\u88c5\u65b0\u7684\u5305\uff09","text":"<p>Bash<pre><code>sudo apt-get dist-upgrade\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7c7b\u4f3c\u4e8e upgrade\uff0c\u4f46\u5b83\u4f1a\u5904\u7406\u5305\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u5141\u8bb8\u5220\u9664\u73b0\u6709\u7684\u5305\u4ee5\u4fbf\u8fdb\u884c\u7cfb\u7edf\u7684\u5168\u9762\u5347\u7ea7\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#4_1","title":"4. \u5b89\u88c5\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>sudo apt-get install &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7528\u4e8e\u5b89\u88c5\u6307\u5b9a\u7684\u8f6f\u4ef6\u5305</p>"},{"location":"TOOL/ubuntu/02-apt/#5_1","title":"5. \u5220\u9664\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>sudo apt-get remove &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7528\u4e8e\u5220\u9664\u6307\u5b9a\u7684\u8f6f\u4ef6\u5305\uff0c\u4f46\u4f1a\u4fdd\u7559\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#6_1","title":"6. \u5b8c\u5168\u5220\u9664\u8f6f\u4ef6\u5305\uff08\u5305\u62ec\u914d\u7f6e\u6587\u4ef6\uff09","text":"<p>Bash<pre><code>sudo apt-get purge &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4e0d\u4ec5\u4f1a\u5220\u9664\u8f6f\u4ef6\u5305\uff0c\u8fd8\u4f1a\u5220\u9664\u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#7_1","title":"7. \u641c\u7d22\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>apt-cache search &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7528\u4e8e\u641c\u7d22\u8f6f\u4ef6\u5305\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#8_1","title":"8. \u83b7\u53d6\u8f6f\u4ef6\u5305\u7684\u4fe1\u606f","text":"<p>Bash<pre><code>apt-cache show &lt;package_name&gt;\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u6709\u5173\u6307\u5b9a\u8f6f\u4ef6\u5305\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#9_1","title":"9. \u6e05\u7406\u4e0d\u9700\u8981\u7684\u5305","text":"<p>Bash<pre><code>sudo apt-get autoremove\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u81ea\u52a8\u5220\u9664\u90a3\u4e9b\u4f5c\u4e3a\u4f9d\u8d56\u5b89\u88c5\u4f46\u73b0\u5728\u4e0d\u518d\u9700\u8981\u7684\u5305\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#10_1","title":"10.  \u6e05\u7406\u5df2\u4e0b\u8f7d\u7684\u5305\u6587\u4ef6","text":"<p>Bash<pre><code>sudo apt-get clean\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u6e05\u7406\u672c\u5730\u7f13\u5b58\u7684\u5305\u6587\u4ef6\u4ee5\u91ca\u653e\u78c1\u76d8\u7a7a\u95f4\u3002</p>"},{"location":"TOOL/ubuntu/02-apt/#11_1","title":"11.  \u5217\u51fa\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305","text":"<p>Bash<pre><code>dpkg --list\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e9b apt \u548c apt-get \u5e38\u89c1\u547d\u4ee4\u7684\u5bf9\u6bd4\uff1a | \u529f\u80fd               | apt \u547d\u4ee4                   | apt-get \u547d\u4ee4                 | |--------------------|----------------------------|------------------------------| | \u66f4\u65b0\u5305\u5217\u8868         | sudo apt update            | sudo apt-get update          | | \u5347\u7ea7\u6240\u6709\u5305         | sudo apt upgrade           | sudo apt-get upgrade         | | \u5b8c\u5168\u5347\u7ea7           | sudo apt full-upgrade      | sudo apt-get dist-upgrade    | | \u5b89\u88c5\u5305             | sudo apt install  | sudo apt-get install  | | \u5220\u9664\u5305             | sudo apt remove   | sudo apt-get remove   | | \u5b8c\u5168\u5220\u9664\u5305         | sudo apt purge    | sudo apt-get purge    | | \u6e05\u7406\u4e0d\u9700\u8981\u7684\u5305     | sudo apt autoremove        | sudo apt-get autoremove      | | \u6e05\u7406\u5df2\u4e0b\u8f7d\u7684\u5305\u6587\u4ef6 | sudo apt clean             | sudo apt-get clean           |"},{"location":"TOOL/ubuntu/03-proxy/","title":"\u7f51\u7edc\u4ee3\u7406","text":"<p>Question</p> <p>\u5728Ubuntu\u7cfb\u7edf\u4e2d\uff0c\u8bbe\u7f6e\u7f51\u7edc\u4ee3\u7406\u540e\uff0c\u901a\u5e38\u53ea\u6709\u90a3\u4e9b\u914d\u7f6e\u4e3a\u4f7f\u7528\u7cfb\u7edf\u4ee3\u7406\u7684\u5e94\u7528\u7a0b\u5e8f\u4f1a\u901a\u8fc7\u4ee3\u7406\u8fde\u63a5\u7f51\u7edc\u3002\u5bf9\u4e8e\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982\u7ec8\u7aef\uff0c\u4e0d\u4f1a\u81ea\u52a8\u9075\u5faa\u5168\u5c40\u4ee3\u7406\u8bbe\u7f6e\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u4e3a\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u624b\u52a8\u914d\u7f6e\u4ee3\u7406</p>"},{"location":"TOOL/ubuntu/03-proxy/#1-git","title":"1. git","text":"<p>\u67e5\u770bgit\u6240\u6709\u914d\u7f6e Bash<pre><code>git config --list\n</code></pre> \u6dfb\u52a0\u7f51\u7edc\u4ee3\u7406</p> Bash<pre><code>git config --global http.proxy http://your-proxy-address:port\ngit config --global https.proxy https://your-proxy-address:port\n</code></pre>"},{"location":"TOOL/ubuntu/04-byobu/","title":"byobu","text":"<p>Note</p> <p>ssh\u8fde\u63a5linux\u670d\u52a1\u5668\u4e2d\u65ad\u540e\uff0c\u5982\u4f55\u8ba9\u547d\u4ee4\u7ee7\u7eed\u5728\u670d\u52a1\u5668\u8fd0\u884c</p> <p>\u4f7f\u7528<code>byobu</code> <code>byobu</code> \u662f\u4e00\u4e2a\u589e\u5f3a\u7684\u7ec8\u7aef\u590d\u7528\u5668\uff0c\u5b83\u57fa\u4e8e <code>tmux</code> \u548c <code>screen</code>\uff0c\u63d0\u4f9b\u4e86\u66f4\u53cb\u597d\u7684\u754c\u9762\u548c\u66f4\u591a\u7684\u529f\u80fd\u3002\u4f7f\u7528 <code>byobu</code> \u53ef\u4ee5\u65b9\u4fbf\u5730\u5728\u5173\u95ed <code>VSCode</code> \u6216\u7ec8\u7aef\u540e\u4fdd\u6301\u7a0b\u5e8f\u8fd0\u884c\u3002\u4ee5\u4e0b\u662f\u4f7f\u7528 <code>byobu</code> \u7684\u6b65\u9aa4\uff1a</p>"},{"location":"TOOL/ubuntu/04-byobu/#byobu_1","title":"\u5b89\u88c5byobu","text":"<p>\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u5b89\u88c5<code>byobu</code> Bash<pre><code>sudo aot-get update\nsudo apt-get install byobu\n</code></pre></p>"},{"location":"TOOL/ubuntu/04-byobu/#byobu_2","title":"\u542f\u52a8 byobu","text":"<p>Bash<pre><code>byobu\n</code></pre> \u8fd9\u5c06\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 <code>byobu</code>\u4f1a\u8bdd\u3002\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u8fd0\u884c\uff0c<code>byobu</code> \u53ef\u80fd\u4f1a\u63d0\u793a\u914d\u7f6e\u952e\u7ed1\u5b9a\u9009\u9879\u3002</p> <p>\u5728 <code>byobu</code> \u4f1a\u8bdd\u4e2d\u8fd0\u884c\u7a0b\u5e8f\uff1a \u4f8b\u5982\uff0c\u8fd0\u884c\u4e00\u4e2a Python \u811a\u672c\uff1a Bash<pre><code>python my_script.py\n</code></pre></p>"},{"location":"TOOL/ubuntu/04-byobu/#byobu_3","title":"\u5206\u79bb byobu","text":"<p>\u5206\u79bb<code>\uff08detach\uff09byobu</code> \u4f1a\u8bdd\uff1a \u6309 <code>Ctrl + A</code>\uff0c\u7136\u540e\u6309 <code>D</code> \u952e\u3002\u8fd9\u5c06\u5206\u79bb\u5f53\u524d\u4f1a\u8bdd\uff0c\u4f46\u4e0d\u4f1a\u5173\u95ed\u5b83\u3002</p>"},{"location":"TOOL/ubuntu/04-byobu/#ssh","title":"\u65ad\u5f00 SSH \u8fde\u63a5","text":"<p>\u53ef\u4ee5\u76f4\u63a5\u5173\u95ed\u7ec8\u7aef\u7a97\u53e3\u6216\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a Bash<pre><code>exit\n</code></pre></p>"},{"location":"TOOL/ubuntu/04-byobu/#byobu_4","title":"\u91cd\u65b0\u8fde\u63a5byobu\u4f1a\u8bdd","text":"<p>\u5217\u51fa\u6240\u6709\u4f1a\u8bdd Bash<pre><code>byobu list-sessions\n</code></pre> \u4f7f\u7528 <code>byobu attach-session</code> \u547d\u4ee4\u91cd\u65b0\u8fde\u63a5\u5230\u6307\u5b9a\u4f1a\u8bdd\uff1a Bash<pre><code>byobu attach-session -t &lt;session-name&gt;\n</code></pre> \u6216\u8005\uff0c\u76f4\u63a5\u8fde\u63a5\u6700\u8fd1\u7684\u4f1a\u8bdd\uff1a Bash<pre><code>byobu attach\n</code></pre></p>"},{"location":"TOOL/ubuntu/04-byobu/#byobu_5","title":"\u7ba1\u7406byobu\u4f1a\u8bdd","text":""},{"location":"TOOL/ubuntu/04-byobu/#_1","title":"\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4f1a\u8bdd","text":"Bash<pre><code>byobu new-session -s my_new_session\n</code></pre>"},{"location":"TOOL/ubuntu/04-byobu/#_2","title":"\u5217\u51fa\u6240\u6709\u4f1a\u8bdd","text":"Bash<pre><code>byobu list-sessions\n</code></pre>"},{"location":"TOOL/ubuntu/04-byobu/#_3","title":"\u5207\u6362\u5230\u7279\u5b9a\u4f1a\u8bdd","text":"Bash<pre><code>byobu attach-session -t &lt;session-name&gt;\n</code></pre>"},{"location":"TOOL/ubuntu/04-byobu/#_4","title":"\u7ed3\u675f\u4f1a\u8bdd","text":"<p>\u8fde\u63a5\u5230\u60f3\u7ed3\u675f\u7684\u4f1a\u8bdd Bash<pre><code>byobu attach-session -t &lt;session-name&gt;\n</code></pre> \u6309 <code>Ctrl + D</code> \u6216\u8fd0\u884c <code>exit</code> \u547d\u4ee4\u7ed3\u675f\u4f1a\u8bdd\u3002</p>"},{"location":"TOOL/ubuntu/04-byobu/#_5","title":"\u57fa\u672c\u5feb\u6377\u952e","text":"<p><code>F2</code>\uff1a\u521b\u5efa\u65b0\u7a97\u53e3\u3002 <code>F3</code>\uff1a\u5207\u6362\u5230\u524d\u4e00\u4e2a\u7a97\u53e3\u3002 <code>F4</code>\uff1a\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u7a97\u53e3\u3002 <code>F5</code>\uff1a\u5237\u65b0\u5f53\u524d\u7a97\u53e3\u3002 <code>F6</code>\uff1a\u5206\u79bb\u5f53\u524d\u4f1a\u8bdd\u3002 <code>F7</code>\uff1a\u8fdb\u5165\u6eda\u52a8\u6a21\u5f0f\uff0c\u53ef\u4ee5\u6eda\u52a8\u67e5\u770b\u7a97\u53e3\u7684\u5386\u53f2\u8f93\u51fa\u3002 <code>F8</code>\uff1a\u91cd\u547d\u540d\u5f53\u524d\u7a97\u53e3\u3002 <code>F9</code>\uff1a\u6253\u5f00 byobu \u914d\u7f6e\u83dc\u5355\u3002 <code>F10</code>\uff1a\u5173\u95ed\u5f53\u524d\u7a97\u53e3\u3002  </p>"},{"location":"TOOL/ubuntu/04-byobu/#_6","title":"\u9ad8\u7ea7\u5feb\u6377\u952e","text":"<p><code>Shift + F2</code>\uff1a\u62c6\u5206\u7a97\u53e3\uff08\u6c34\u5e73\uff09\u3002 <code>Ctrl + F2</code>\uff1a\u62c6\u5206\u7a97\u53e3\uff08\u5782\u76f4\uff09\u3002 <code>Shift + F3</code>\uff1a\u79fb\u52a8\u5230\u524d\u4e00\u4e2a\u62c6\u5206\u7a97\u53e3\u3002 <code>Shift + F4</code>\uff1a\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u62c6\u5206\u7a97\u53e3\u3002 <code>Ctrl + A\uff0cShift + O</code>\uff1a\u5c06\u5f53\u524d\u7a97\u53e3\u653e\u5165/\u79fb\u51fa\u62c6\u5206\u5e03\u5c40\u3002 <code>Ctrl + A\uff0cCtrl + F</code>\uff1a\u5168\u5c4f\u5207\u6362\u5f53\u524d\u62c6\u5206\u7a97\u53e3\u3002  </p>"},{"location":"TOOL/ubuntu/04-byobu/#_7","title":"\u4f1a\u8bdd\u7ba1\u7406\u5feb\u6377\u952e","text":"<p><code>Ctrl + A</code>\uff0c<code>D</code>\uff1a\u5206\u79bb\u4f1a\u8bdd\u3002 <code>Ctrl + A</code>\uff0c<code>C</code>\uff1a\u521b\u5efa\u65b0\u7a97\u53e3\uff08\u4e0e F2 \u7c7b\u4f3c\uff09\u3002 <code>Ctrl + A</code>\uff0c<code>N</code>\uff1a\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u7a97\u53e3\u3002 <code>Ctrl + A</code>\uff0c<code>P</code>\uff1a\u5207\u6362\u5230\u524d\u4e00\u4e2a\u7a97\u53e3\u3002 <code>Ctrl + A</code>\uff0c<code>L</code>\uff1a\u91cd\u65b0\u7ed8\u5236\u5c4f\u5e55\u3002  </p>"},{"location":"TOOL/ubuntu/04-byobu/#_8","title":"\u5feb\u6377\u952e\u53c2\u8003","text":"<p><code>F9</code> \u6253\u5f00\u914d\u7f6e\u83dc\u5355\uff1a \u901a\u8fc7\u6309 <code>F9</code> \u952e\uff0c\u53ef\u4ee5\u8bbf\u95ee <code>byobu</code> \u7684\u914d\u7f6e\u83dc\u5355\uff0c\u5728\u8fd9\u91cc\u53ef\u4ee5\u67e5\u770b\u548c\u66f4\u6539\u6240\u6709\u5feb\u6377\u952e\u7684\u8bbe\u7f6e\u3002 \u5728\u914d\u7f6e\u83dc\u5355\u4e2d\uff0c\u4f60\u8fd8\u53ef\u4ee5\u914d\u7f6e\u72b6\u6001\u680f\u3001\u989c\u8272\u65b9\u6848\u3001\u952e\u7ed1\u5b9a\u7b49\u9009\u9879\u3002</p>"},{"location":"TOOL/ubuntu/05-mount/","title":"\u6302\u8f7d\u786c\u76d8","text":""},{"location":"TOOL/ubuntu/05-mount/#1","title":"1. \u68c0\u67e5\u5df2\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u4f7f\u7528<code>df -h</code>\u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u4e2d\u5df2\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf Bash<pre><code>df -h\n</code></pre> \u8fd9\u5c06\u663e\u793a\u5f53\u524d\u6240\u6709\u6302\u8f7d\u7684\u5206\u533a\u4ee5\u53ca\u5b83\u4eec\u7684\u6302\u8f7d\u70b9\u3002</p>"},{"location":"TOOL/ubuntu/05-mount/#2","title":"2. \u68c0\u67e5\u6240\u6709\u5206\u533a","text":"<p>\u4f7f\u7528\u547d\u4ee4<code>lsblk</code>\u547d\u4ee4\u67e5\u770b\u6240\u6709\u786c\u76d8\u53ca\u5176\u5206\u533a\uff0c\u5e76\u786e\u5b9a\u54ea\u4e9b\u5206\u533a\u8fd8\u6ca1\u6709\u6302\u8f7d Bash<pre><code>lsblk -f\n</code></pre> \u5982\u679c\u67d0\u4e2a\u5206\u533a\u6ca1\u6709\u6302\u8f7d\u70b9\uff0c\u8bf4\u660e\u5b83\u6ca1\u6709\u6302\u8f7d\uff0c \u4f8b\u5982 Text Only<pre><code>NAME   FSTYPE LABEL UUID                                 MOUNTPOINT\nsda                                                      \n\u251c\u2500sda1 ntfs         1A2B3C4D5E6F7G8H                     /mnt/data\n\u251c\u2500sda2 swap         2A3B4C5D6E7F8G9H                     \n\u251c\u2500sda3 ext4         3A4B5C6D7E8F9G0H                     /mnt/backup\n\u2514\u2500sda4 ext4         4A5B6C7D8E9F0G1H                     \nsdb                                                      \n\u251c\u2500sdb1 ntfs         5A6B7C8D9E0F1G2H                     /mnt/windows\n\u251c\u2500sdb2 ntfs         6A7B8C9D0E1F2G3H                     \n\u2514\u2500sdb3 ext4         7A8B9C0D1E2F3G4H                     \n</code></pre> \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\uff0c<code>/dev/sda2</code>\u3001<code>/dev/sda4</code>\u3001<code>/dev/sdb2</code>\u548c<code>/dev/sdb3</code>\u6ca1\u6709\u6302\u8f7d\u70b9\uff0c\u56e0\u6b64\u5b83\u4eec\u6ca1\u6709\u88ab\u6302\u8f7d\u3002</p>"},{"location":"TOOL/ubuntu/05-mount/#_2","title":"\u6302\u8f7d\u5206\u533a","text":"<p>\u4ee5sda1\u5206\u533a\u4e3a\u4f8b\u8fdb\u884c\u6302\u8f7d</p> <p>Note</p> <p>\u6302\u8f7d\u65f6\u8981\u6ce8\u610f\u6743\u9650\uff0c\u6b63\u5e38\u6302\u8f7d\u540e\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u624d\u6709\u6743\u9650\uff0c\u666e\u901a\u7528\u6237\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\u8fd9\u4e9b\u6302\u8f7d\u70b9\uff0c\u56e0\u6b64\u9700\u8981\u786e\u4fdd\u666e\u901a\u7528\u6237\u6709\u8bbf\u95ee\u6743\u9650</p>"},{"location":"TOOL/ubuntu/05-mount/#idid","title":"\u83b7\u53d6\u7528\u6237ID\u548c\u7ec4ID","text":"<p>Bash<pre><code>id username\n</code></pre> \u5047\u8bbe\u7ed3\u679c\u4e3a\uff1a Text Only<pre><code>uid=1000(username) gid=1000(username) groups=1000(username),27(sudo),...\n</code></pre></p>"},{"location":"TOOL/ubuntu/05-mount/#_3","title":"\u6302\u8f7d\u5206\u533a","text":"<p>Bash<pre><code>sudo mount -o uid=1000,gid=1000 /dev/sda1 /mnt/sda1\n</code></pre> <code>/mnt/sda1</code>\u662f\u6302\u8f7d\u70b9\uff0c\u9700\u8981\u521b\u5efa\u5408\u9002\u4f4d\u7f6e\u7684\u6302\u8f7d\u70b9</p>"},{"location":"TOOL/ubuntu/05-mount/#_4","title":"\u9a8c\u8bc1\u6302\u8f7d","text":"Bash<pre><code>df -h | grep /mnt/sda1\n</code></pre>"},{"location":"TOOL/ubuntu/05-mount/#_5","title":"\u53d6\u6d88\u6302\u8f7d","text":"Bash<pre><code>sudo umount /mnt/sda1\n</code></pre>"},{"location":"TOOL/ubuntu/06-tar/","title":"tar/zip","text":""},{"location":"TOOL/ubuntu/06-tar/#tar","title":"tar\u6253\u5305","text":"<p>\u4f7f\u7528 <code>tar</code> \u6253\u5305\u6587\u4ef6\uff0c\u5e76==\u5ffd\u7565==\u7279\u5b9a\u6587\u4ef6\u6216\u6587\u4ef6\u5939\uff1a</p> Bash<pre><code>tar --exclude='./path/to/excluded_file_or_directory' -czf archive.tar.gz /path/to/source_directory\n</code></pre> <p>--exclude-from='exclude-list.txt' \u6307\u5b9a\u4e86\u5305\u542b\u5ffd\u7565\u89c4\u5219\u7684\u6587\u4ef6\u3002 -c \u521b\u5efa\u65b0\u7684\u5f52\u6863\u6587\u4ef6\u3002 -z \u4f7f\u7528 gzip \u538b\u7f29\u3002 -v \u663e\u793a\u8be6\u7ec6\u7684\u64cd\u4f5c\u8fc7\u7a0b\u3002 -f \u6307\u5b9a\u5f52\u6863\u6587\u4ef6\u7684\u540d\u79f0\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u60f3\u5ffd\u7565 <code>source_directory</code> \u6587\u4ef6\u5939\u4e2d\u7684 <code>exclude_folder</code> \u548c <code>exclude_file.txt</code>\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a Bash<pre><code>tar --exclude='./source_directory/exclude_folder' --exclude='./source_directory/exclude_file.txt' -czf archive.tar.gz -C /path/to/source_directory .\n</code></pre></p> <p>\u5982\u679c\u8981\u5ffd\u7565\u5f88\u591a\u6587\u4ef6\uff0c\u4f7f\u7528 <code>tar</code> \u7684 <code>--exclude</code> \u9009\u9879\u4f1a\u53d8\u5f97\u4e0d\u592a\u65b9\u4fbf\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5305\u542b\u9700\u8981\u6392\u9664\u6587\u4ef6\u5217\u8868\u7684\u6587\u4ef6\u3002\u53ef\u4ee5\u901a\u8fc7 <code>--exclude-from</code> \u9009\u9879\u6307\u5b9a\u8fd9\u4e2a\u6587\u4ef6\u3002 \u4ee5\u4e0b\u662f\u5177\u4f53\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u8981\u6392\u9664\u7684\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u5217\u8868\u7684\u6587\u4ef6\uff0c\u4f8b\u5982 <code>exclude.txt</code>\uff1a Text Only<pre><code>*.log\ntemp/\npath/to/ignore/\nanother-file-to-ignore.txt\n</code></pre></p> </li> <li> <p>\u4f7f\u7528 <code>tar</code> \u547d\u4ee4\u6253\u5305\u6587\u4ef6\uff0c\u5e76\u901a\u8fc7 <code>--exclude-from</code> \u9009\u9879\u6392\u9664\u6587\u4ef6\u5217\u8868\u4e2d\u7684\u6587\u4ef6\u6216\u6587\u4ef6\u5939\uff1a Bash<pre><code>tar --exclude-from=exclude.txt -czf archive.tar.gz -C /path/to/source_directory .\n</code></pre></p> </li> </ol>"},{"location":"TOOL/ubuntu/06-tar/#zip","title":"zip\u6253\u5305","text":""},{"location":"TOOL/ubuntu/06-tar/#_1","title":"\u521b\u5efa\u538b\u7f29\u5305\u5e76\u5305\u542b\u6240\u6709\u5b50\u76ee\u5f55","text":"Bash<pre><code>zip -r archive.zip mydir\n</code></pre>"},{"location":"TOOL/ubuntu/06-tar/#_2","title":"\u521b\u5efa\u538b\u7f29\u5305\u5e76\u6392\u9664\u7279\u5b9a\u6587\u4ef6","text":"Bash<pre><code>zip -r archive.zip mydir -x '*.tmp' -x 'backup/*'\n</code></pre>"},{"location":"TOOL/ubuntu/06-tar/#_3","title":"\u66f4\u65b0\u538b\u7f29\u5305\u4e2d\u7684\u6587\u4ef6","text":"Bash<pre><code>zip -u archive.zip updatedfile.txt\n</code></pre>"},{"location":"TOOL/ubuntu/06-tar/#_4","title":"\u4ece\u538b\u7f29\u5305\u4e2d\u5220\u9664\u6587\u4ef6","text":"Bash<pre><code>zip -d archive.zip oldfile.txt\n</code></pre>"},{"location":"TOOL/ubuntu/06-tar/#_5","title":"\u52a0\u5bc6\u538b\u7f29\u5305","text":"Bash<pre><code>zip -e archive.zip file.txt\n</code></pre>"},{"location":"TOOL/ubuntu/06-tar/#zip_1","title":"zip\u4f7f\u7528\u6392\u9664\u5217\u8868\u6587\u4ef6\u5ffd\u7565\u6253\u5305\u5185\u5bb9","text":"<p>\u5982\u679c\u9700\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u5f88\u591a\uff0c\u6216\u8005\u5ffd\u7565\u89c4\u5219\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6392\u9664\u5217\u8868\u6587\u4ef6\u7684\u65b9\u6cd5\uff1a</p>"},{"location":"TOOL/ubuntu/06-tar/#_6","title":"\u521b\u5efa\u4e00\u4e2a\u6392\u9664\u5217\u8868\u6587\u4ef6\uff1a","text":"<p>\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff08\u4f8b\u5982 <code>exclude-list.txt</code>\uff09\uff0c\u5728\u6587\u4ef6\u4e2d\u5217\u51fa\u6bcf\u4e00\u884c\u9700\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u3002\u4f8b\u5982\uff1a</p> <p>Text Only<pre><code>*.log\ntemp/*\npath/to/ignore/*\nanother-file-to-ignore.txt\n</code></pre> \u4f7f\u7528 <code>-x</code> \u9009\u9879\uff1a</p> <p>\u4f7f\u7528 <code>zip</code> \u547d\u4ee4\u5e76\u9010\u4e00\u4f20\u9012 <code>-x</code> \u9009\u9879\uff0c\u6216\u8005\u901a\u8fc7 <code>shell</code> \u7684\u53c2\u6570\u5c55\u5f00\u6765\u6307\u5b9a\u8fd9\u4e9b\u6392\u9664\u89c4\u5219\uff1a</p> <p>Bash<pre><code>zip -r archive.zip mydir $(cat exclude-list.txt | sed 's/^/-x /')\n</code></pre> \u8fd9\u91cc\u4f7f\u7528 <code>sed</code> \u5c06\u6bcf\u884c\u524d\u6dfb\u52a0 <code>-x</code> \uff0c\u4ee5\u4fbf <code>zip</code> \u547d\u4ee4\u80fd\u6b63\u786e\u8bc6\u522b\u548c\u5e94\u7528\u8fd9\u4e9b\u6392\u9664\u89c4\u5219\u3002</p>"},{"location":"TOOL/ubuntu/07-faiss/","title":"faiss-c \u5b89\u88c5","text":"<p>FAISS (Facebook AI Similarity Search) \u662f\u4e00\u4e2a\u9ad8\u6548\u7684\u76f8\u4f3c\u6027\u641c\u7d22\u5e93\uff0c\u5e7f\u6cdb\u7528\u4e8e\u5411\u91cf\u641c\u7d22\u548c\u805a\u7c7b\u4efb\u52a1\u3002FAISS \u63d0\u4f9b\u4e86 C++ \u548c Python \u7684\u63a5\u53e3\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u5728 C++ \u9879\u76ee\u4e2d\u4f7f\u7528 FAISS \u4f5c\u4e3a\u7b2c\u4e09\u65b9\u5e93\uff0c\u5e76\u7f16\u8bd1\u5b83\u7684\u65b9\u6cd5\u3002</p> <p>\u9996\u5148\uff0c\u4f60\u9700\u8981\u5728\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5 FAISS\u3002FAISS \u53ef\u4ee5\u901a\u8fc7\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5305\u7ba1\u7406\u5668\uff08\u5982 conda\uff09\u5b89\u88c5\u3002\u4e0b\u9762\u662f\u4ece\u6e90\u7801\u7f16\u8bd1\u7684\u6b65\u9aa4\uff1a</p>"},{"location":"TOOL/ubuntu/07-faiss/#1-faiss","title":"1. \u514b\u9686FAISS\u4ed3\u5e93","text":"Bash<pre><code>git clone https://github.com/facebookresearch/faiss.git\ncd faiss\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4ecehttps://github.com/facebookresearch/faiss/releases\u4e0b\u8f7drelease\u7248\u672c</p>"},{"location":"TOOL/ubuntu/07-faiss/#2","title":"2. \u7f16\u8bd1\u548c\u5b89\u88c5","text":"Bash<pre><code>cmake -B build -DBUILD_SHARED_LIBS=ON.\ncmake --build build -j4\n</code></pre> <p>\u5347\u7ea7cmake https://github.com/Kitware/CMake/releases \u4e0b\u8f7dsh\u7248\u672c\uff0c\u76f4\u63a5\u5b89\u88c5 \u4e34\u65f6\u7528\u65b0\u7684cmake <code>export PATH=/home/xujg/cmake-3.26.6-linux-aarch64/bin:$PATH</code></p>"},{"location":"TOOL/ubuntu/07-faiss/#3","title":"3. \u52a8\u6001\u5e93","text":"<p>\u7f16\u8bd1\u751f\u6210\u7684\u52a8\u6001\u5e93\u5728 <code>./build/faiss/libfaiss.so</code></p> <p>\u793a\u4f8b\u4ee3\u7801\uff0c\u8c03\u7528\u751f\u6210\u7684\u52a8\u6001\u5e93 C<pre><code>/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n#include &lt;cstdio&gt;\n#include &lt;cstdlib&gt;\n#include &lt;random&gt;\n\n#include &lt;faiss/IndexFlat.h&gt;\n\n// 64-bit int\nusing idx_t = faiss::idx_t;\n\nint main() {\n    int d = 64;      // dimension\n    int nb = 100000; // database size\n    int nq = 10000;  // nb of queries\n\n    std::mt19937 rng;\n    std::uniform_real_distribution&lt;&gt; distrib;\n\n    float* xb = new float[d * nb];\n    float* xq = new float[d * nq];\n\n    for (int i = 0; i &lt; nb; i++) {\n        for (int j = 0; j &lt; d; j++)\n            xb[d * i + j] = distrib(rng);\n        xb[d * i] += i / 1000.;\n    }\n\n    for (int i = 0; i &lt; nq; i++) {\n        for (int j = 0; j &lt; d; j++)\n            xq[d * i + j] = distrib(rng);\n        xq[d * i] += i / 1000.;\n    }\n\n    faiss::IndexFlatL2 index(d); // call constructor\n    printf(\"is_trained = %s\\n\", index.is_trained ? \"true\" : \"false\");\n    index.add(nb, xb); // add vectors to the index\n    printf(\"ntotal = %zd\\n\", index.ntotal);\n\n    int k = 4;\n\n    { // sanity check: search 5 first vectors of xb\n        idx_t* I = new idx_t[k * 5];\n        float* D = new float[k * 5];\n\n        index.search(5, xb, k, D, I);\n\n        // print results\n        printf(\"I=\\n\");\n        for (int i = 0; i &lt; 5; i++) {\n            for (int j = 0; j &lt; k; j++)\n                printf(\"%5zd \", I[i * k + j]);\n            printf(\"\\n\");\n        }\n\n        printf(\"D=\\n\");\n        for (int i = 0; i &lt; 5; i++) {\n            for (int j = 0; j &lt; k; j++)\n                printf(\"%7g \", D[i * k + j]);\n            printf(\"\\n\");\n        }\n\n        delete[] I;\n        delete[] D;\n    }\n\n    { // search xq\n        idx_t* I = new idx_t[k * nq];\n        float* D = new float[k * nq];\n\n        index.search(nq, xq, k, D, I);\n\n        // print results\n        printf(\"I (5 first results)=\\n\");\n        for (int i = 0; i &lt; 5; i++) {\n            for (int j = 0; j &lt; k; j++)\n                printf(\"%5zd \", I[i * k + j]);\n            printf(\"\\n\");\n        }\n\n        printf(\"I (5 last results)=\\n\");\n        for (int i = nq - 5; i &lt; nq; i++) {\n            for (int j = 0; j &lt; k; j++)\n                printf(\"%5zd \", I[i * k + j]);\n            printf(\"\\n\");\n        }\n\n        delete[] I;\n        delete[] D;\n    }\n\n    delete[] xb;\n    delete[] xq;\n\n    return 0;\n}\n</code></pre></p> <p>\u7f16\u8bd1\u751f\u6210 Bash<pre><code>g++ postprocess.cc -L/home/xujg/code/RKNN_C_API/3rdparty/faiss-1.8.0/build/faiss -lfaiss -o test\n</code></pre></p> <p>Note</p> <p>\u5982\u679c\u76f4\u63a5\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u65e0\u6cd5\u627e\u5230 libfaiss.so \u5171\u4eab\u5e93\u3002\u5c3d\u7ba1\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u6307\u5b9a\u4e86\u5e93\u7684\u8def\u5f84\uff0c\u4f46\u5728\u6267\u884c\u65f6\uff0c\u7cfb\u7edf\u8fd8\u9700\u8981\u77e5\u9053\u8be5\u5e93\u7684\u8def\u5f84\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5c06 libfaiss.so\u590d\u5236\u5230/usr/lib/\u6587\u4ef6\u4e0b</p>"},{"location":"TOOL/ubuntu/08-scp/","title":"\u8fdc\u7a0b\u6587\u4ef6\u4f20\u8f93","text":""},{"location":"TOOL/ubuntu/08-scp/#1-rsync","title":"1. rsync","text":"<ul> <li> <p>\u529f\u80fd\uff1a \u7528\u4e8e\u540c\u6b65\u548c\u4f20\u8f93\u6587\u4ef6\u548c\u76ee\u5f55</p> </li> <li> <p>\u4f18\u52bf\uff1a</p> </li> <li>\u589e\u91cf\u4f20\u8f93\uff1a \u53ea\u590d\u5236\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\u90e8\u5206\uff0c\u8282\u7701\u5e26\u5bbd\u548c\u65f6\u95f4\u3002</li> <li>\u652f\u6301\u538b\u7f29\uff1a \u53ef\u4ee5\u4f7f\u7528<code>-z</code>\u9009\u9879\u8fdb\u884c\u6570\u636e\u538b\u7f29\u3002</li> <li>\u4fdd\u7559\u5c5e\u6027: \u53ef\u4ee5\u4fdd\u7559\u6587\u4ef6\u7684\u6743\u9650\uff0c\u65f6\u95f4\u6233\uff0c\u7b26\u53f7\u94fe\u63a5\u7b49</li> <li>\u53ef\u663e\u793a\u8fdb\u5ea6\uff1a \u4f7f\u7528<code>--process</code>\u663e\u793a\u4f20\u8f93\u8fdb\u5ea6\u3002</li> </ul> <p>\u5e38\u89c1\u4f7f\u7528\u547d\u4ee4\uff1a Bash<pre><code>rsync -av --partial --process source/ user@remote:/path/to/desination/\n</code></pre></p> <p><code>--partial</code>\u9009\u9879\uff0c\u4f1a\u5728\u4e2d\u65ad\u65f6\u4fdd\u7559\u672a\u5b8c\u6210\u7684\u6587\u4ef6\u7247\u6bb5</p> <p>\u4f7f\u7528<code>-e</code>\u9009\u9879\u6765\u6307\u5b9aSSH\u8fde\u63a5\u548c\u7aef\u53e3, \u793a\u4f8b\u5982\u4e0b\uff1a Bash<pre><code>rsync -av -e \"ssh -p \u7aef\u53e3\u53f7\" source_file user@remote:/path/to/destination/\n</code></pre></p>"},{"location":"TOOL/ubuntu/08-scp/#2-scp","title":"2. scp","text":"<ul> <li>\u529f\u80fd\uff1a \u7528\u4e8e\u5b89\u5168\u5730\u590d\u5236\u6587\u4ef6\u5230\u8fdc\u7a0b\u4e3b\u673a</li> <li>\u4f18\u52bf\uff1a</li> <li>\u7b80\u5355\u6613\u7528\uff1a \u547d\u4ee4\u8f83\u4e3a\u7b80\u5355\uff0c\u9002\u5408\u5feb\u901f\u4f20\u8f93\u6587\u4ef6</li> <li>\u5b89\u5168\u6027\uff1a \u4f7f\u7528SSH\u52a0\u5bc6\u4f20\u8f93\uff0c\u786e\u4fdd\u6570\u636e\u5b89\u5168</li> <li>\u9650\u5236\uff1a</li> <li>\u4e0d\u652f\u6301\u589e\u91cf\u4f20\u8f93\uff1a\u6bcf\u6b21\u90fd\u9700\u8981\u5b8c\u6574\u4f20\u8f93\u6587\u4ef6</li> </ul> <p>\u5e38\u7528\u547d\u4ee4\uff1a Bash<pre><code>scp -P port source_file user@remote:/path/to/desination/ \n</code></pre> \u52a0\u5165\u53c2\u6570<code>-c aes128-ctr</code>\u8868\u793a\u4f7f\u7528AES 128\u4f4dCTR\u6a21\u5f0f\u6765\u52a0\u5bc6\u4f20\u8f93\u6570\u636e\uff0c\u53ef\u4ee5\u7a0d\u5fae\u63d0\u9ad8\u4f20\u8f93\u901f\u5ea6\uff0c\u76f8\u5bf9\u8f83\u8f7b\u91cf\u7ea7\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u5927\u91cf\u5c0f\u6587\u4ef6\u65f6\u3002</p>"},{"location":"UAV/01-elevation/","title":"\u6570\u5b57\u9ad8\u7a0b\u6a21\u578b(DEM)","text":""},{"location":"UAV/01-elevation/#_1","title":"\u5b9a\u4e49","text":"<p>\u6570\u5b57\u9ad8\u7a0b\u6a21\u578b\uff08Digital Elevation Model, DEM\uff09 \u662f\u4e00\u79cd\u6570\u5b57\u8868\u793a\u5730\u5f62\u9ad8\u7a0b\u7684\u6570\u636e\u6a21\u578b\uff0c\u901a\u5e38\u4ee5\u6805\u683c\u6216\u7f51\u683c\u5f62\u5f0f\u5b58\u50a8\u3002DEM \u662f\u5730\u7406\u4fe1\u606f\u7cfb\u7edf\uff08GIS\uff09\u548c\u9065\u611f\u4e2d\u7684\u4e00\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5730\u5f62\u5206\u6790\u3001\u6d41\u57df\u5212\u5206\u3001\u5730\u5f62\u9634\u5f71\u7ed8\u5236\u3001\u89c6\u57df\u5206\u6790\u7b49\u9886\u57df\u3002</p>"},{"location":"UAV/01-elevation/#dem_1","title":"DEM \u7684\u4e3b\u8981\u7279\u5f81","text":"<p>\u6805\u683c\u683c\u5f0f\uff1aDEM \u901a\u5e38\u4ee5\u6805\u683c\u683c\u5f0f\u5b58\u50a8\uff0c\u6bcf\u4e2a\u6805\u683c\u5355\u5143\uff08\u50cf\u7d20\uff09\u4ee3\u8868\u5730\u9762\u4e0a\u7684\u4e00\u4e2a\u533a\u57df\uff0c\u5355\u5143\u503c\u8868\u793a\u8be5\u533a\u57df\u7684\u9ad8\u7a0b\u3002 \u5206\u8fa8\u7387\uff1aDEM \u7684\u5206\u8fa8\u7387\u662f\u6307\u6bcf\u4e2a\u6805\u683c\u5355\u5143\u7684\u5927\u5c0f\u3002\u5206\u8fa8\u7387\u8d8a\u9ad8\uff0c\u6a21\u578b\u7684\u7cbe\u5ea6\u8d8a\u9ad8\u3002 \u5355\u4f4d\uff1a\u9ad8\u7a0b\u503c\u901a\u5e38\u4ee5\u7c73\u6216\u82f1\u5c3a\u4e3a\u5355\u4f4d\u3002 \u6570\u636e\u6e90\uff1aDEM \u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u9065\u611f\u6280\u672f\u3001\u6fc0\u5149\u96f7\u8fbe\uff08LiDAR\uff09\u3001\u5730\u5f62\u6d4b\u91cf\u7b49\u65b9\u5f0f\u83b7\u5f97\u3002</p>"},{"location":"UAV/01-elevation/#dem_2","title":"DEM \u7684\u5e94\u7528","text":"<p>\u5730\u5f62\u5206\u6790\uff1a\u5206\u6790\u5730\u5f62\u7684\u5761\u5ea6\u3001\u5761\u5411\u3001\u66f2\u7387\u7b49\u3002 \u6d41\u57df\u5212\u5206\uff1a\u6839\u636e\u9ad8\u7a0b\u4fe1\u606f\u8fdb\u884c\u6d41\u57df\u8fb9\u754c\u7684\u5212\u5206\u3002 \u6c34\u6587\u6a21\u578b\uff1a\u6a21\u62df\u6c34\u6d41\u7684\u8def\u5f84\u3001\u6d41\u901f\u7b49\u3002 \u5730\u7406\u53ef\u89c6\u5316\uff1a\u751f\u6210\u4e09\u7ef4\u5730\u5f62\u56fe\u3001\u5730\u5f62\u9634\u5f71\u56fe\u7b49\u3002 \u89c6\u57df\u5206\u6790\uff1a\u5206\u6790\u5730\u5f62\u5bf9\u89c6\u7ebf\u7684\u963b\u6321\u60c5\u51b5\u3002 DEM \u793a\u4f8b \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684 DEM \u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u4e00\u5c0f\u90e8\u5206\u533a\u57df\u7684\u9ad8\u7a0b\u6570\u636e\uff1a Text Only<pre><code>10  12  13  15\n11  14  15  17\n12  15  18  20\n14  16  19  21\n</code></pre> \u8fd9\u4e2a\u793a\u4f8b\u8868\u793a\u4e00\u4e2a 4x4 \u7684\u6805\u683c\uff0c\u6bcf\u4e2a\u5355\u5143\u7684\u503c\u8868\u793a\u8be5\u4f4d\u7f6e\u7684\u9ad8\u7a0b\u3002</p> <p>DEM \u5728\u56fe\u50cf\u91cd\u6295\u5f71\u4e2d\u7684\u4f5c\u7528 \u5728\u5c06\u65e0\u4eba\u673a\u62cd\u6444\u7684\u56fe\u50cf\u91cd\u6295\u5f71\u5230\u6b63\u5c04\u56fe\u50cf\u7684\u8fc7\u7a0b\u4e2d\uff0cDEM \u7528\u4e8e\u63d0\u4f9b\u5730\u9762\u7684\u9ad8\u7a0b\u4fe1\u606f\u3002\u8fd9\u662f\u56e0\u4e3a\u5730\u5f62\u7684\u8d77\u4f0f\u4f1a\u5f71\u54cd\u56fe\u50cf\u7684\u6295\u5f71\u6548\u679c\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u5730\u5f62\u8fdb\u884c\u6821\u6b63\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p>\u83b7\u53d6 DEM \u6570\u636e\uff1a\u4ece\u9065\u611f\u56fe\u50cf\u3001LiDAR \u6570\u636e\u6216\u5730\u5f62\u6d4b\u91cf\u4e2d\u83b7\u53d6 DEM\u3002 \u8bfb\u53d6 DEM \u6570\u636e\uff1a\u5c06 DEM \u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u4ee5\u4fbf\u5728\u6295\u5f71\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u3002 \u5730\u9762\u9ad8\u7a0b\u6821\u6b63\uff1a\u5728\u56fe\u50cf\u5750\u6807\u8f6c\u6362\u5230\u5730\u9762\u5750\u6807\u65f6\uff0c\u4f7f\u7528 DEM \u63d0\u4f9b\u7684\u9ad8\u7a0b\u4fe1\u606f\u8fdb\u884c\u6821\u6b63\u3002 \u751f\u6210\u6b63\u5c04\u56fe\u50cf\uff1a\u6839\u636e\u6821\u6b63\u540e\u7684\u5730\u9762\u5750\u6807\uff0c\u5c06\u56fe\u50cf\u50cf\u7d20\u91cd\u65b0\u6620\u5c04\u5230\u6b63\u5c04\u56fe\u50cf\u4e0a\u3002</p>"},{"location":"UAV/02-Flight_attitude/","title":"\u98de\u884c\u59ff\u6001","text":"<p>Note</p> <p>\u6eda\u8f6c\u89d2 (roll)\uff1a\u98de\u884c\u5668\u7ed5\u524d\u540e\u8f74\uff08X\u8f74\uff09\u7684\u65cb\u8f6c\u89d2\u5ea6 \u4fef\u4ef0\u89d2 (pitch)\uff1a\u98de\u884c\u5668\u5411\u4e0a\u6216\u5411\u4e0b\u7684\u89d2\u5ea6 \u504f\u822a\u89d2 (yaw)\uff1a\u98de\u884c\u5668\u5411\u5de6\u6216\u5411\u53f3\u7684\u89d2\u5ea6</p> <p>python\u53ef\u89c6\u5316\u6f14\u793a\uff1a \u4ee3\u7801\u5982\u4e0b\uff1a Python<pre><code>import matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nimport numpy as np\n\n# Initialize the figure and axis\nfig = plt.figure(figsize=(10, 7))\nax = fig.add_subplot(111, projection='3d')\n\n# Define the aircraft's orientation (simple representation)\naircraft = np.array([[-1, -1, 0],\n                     [1, -1, 0],\n                     [1, 1, 0],\n                     [-1, 1, 0],\n                     [0, 0, 1]])\n\n# Function to create rotation matrices\ndef rotate_aircraft(roll, pitch, yaw):\n    R_roll = np.array([[1, 0, 0],\n                       [0, np.cos(roll), -np.sin(roll)],\n                       [0, np.sin(roll), np.cos(roll)]])\n\n    R_pitch = np.array([[np.cos(pitch), 0, np.sin(pitch)],\n                        [0, 1, 0],\n                        [-np.sin(pitch), 0, np.cos(pitch)]])\n\n    R_yaw = np.array([[np.cos(yaw), -np.sin(yaw), 0],\n                      [np.sin(yaw), np.cos(yaw), 0],\n                      [0, 0, 1]])\n\n    return R_yaw @ R_pitch @ R_roll @ aircraft.T\n\n# Animation function for Roll\ndef animate_roll(i):\n    ax.clear()\n    roll = np.radians(i % 360)\n    rotated_aircraft = rotate_aircraft(roll, 0, 0)\n\n    ax.plot3D(rotated_aircraft[0], rotated_aircraft[1], rotated_aircraft[2], 'o-')\n    ax.set_xlim([-2, 2])\n    ax.set_ylim([-2, 2])\n    ax.set_zlim([-2, 2])\n    ax.set_xlabel('X-axis (Roll)')\n    ax.set_ylabel('Y-axis')\n    ax.set_zlabel('Z-axis')\n    ax.set_title('Aircraft Roll (Rotation around X-axis)')\n\n# Animation function for Pitch\ndef animate_pitch(i):\n    ax.clear()\n    pitch = np.radians(i % 360)\n    rotated_aircraft = rotate_aircraft(0, pitch, 0)\n\n    ax.plot3D(rotated_aircraft[0], rotated_aircraft[1], rotated_aircraft[2], 'o-')\n    ax.set_xlim([-2, 2])\n    ax.set_ylim([-2, 2])\n    ax.set_zlim([-2, 2])\n    ax.set_xlabel('X-axis')\n    ax.set_ylabel('Y-axis (Pitch)')\n    ax.set_zlabel('Z-axis')\n    ax.set_title('Aircraft Pitch (Rotation around Y-axis)')\n\n# Animation function for Yaw\ndef animate_yaw(i):\n    ax.clear()\n    yaw = np.radians(i % 360)\n    rotated_aircraft = rotate_aircraft(0, 0, yaw)\n\n    ax.plot3D(rotated_aircraft[0], rotated_aircraft[1], rotated_aircraft[2], 'o-')\n    ax.set_xlim([-2, 2])\n    ax.set_ylim([-2, 2])\n    ax.set_zlim([-2, 2])\n    ax.set_xlabel('X-axis')\n    ax.set_ylabel('Y-axis')\n    ax.set_zlabel('Z-axis (Yaw)')\n    ax.set_title('Aircraft Yaw (Rotation around Z-axis)')\n\n# Create the animations\nanim_roll = FuncAnimation(fig, animate_roll, frames=360, interval=20)\nanim_roll.save('aircraft_roll.gif', writer='imagemagick')\n\nanim_pitch = FuncAnimation(fig, animate_pitch, frames=360, interval=20)\nanim_pitch.save('aircraft_pitch.gif', writer='imagemagick')\n\nanim_yaw = FuncAnimation(fig, animate_yaw, frames=360, interval=20)\nanim_yaw.save('aircraft_yaw.gif', writer='imagemagick')\n</code></pre></p> <p>\u7ed3\u679c\u5982\u4e0b\uff1a</p>"},{"location":"UAV/02-Flight_attitude/#_2","title":"\u6eda\u8f6c\u89d2","text":"<p>(roll)\uff1a\u98de\u884c\u5668\u7ed5\u524d\u540e\u8f74\uff08X\u8f74\uff09\u7684\u65cb\u8f6c\u89d2\u5ea6 \u8303\u56f4\uff1a\u4ece <code>-180\u00b0</code> \u5230 <code>180\u00b0</code>\u3002 \u6b63\u65b9\u5411\uff1a\u5982\u679c\u53f3\u673a\u7ffc\u5411\u4e0b\uff0c\u5de6\u673a\u7ffc\u5411\u4e0a\uff0c\u5219\u4e3a\u6b63\u6eda\u8f6c\uff1b\u53cd\u4e4b\u5219\u4e3a\u8d1f\u6eda\u8f6c\u3002 </p>"},{"location":"UAV/02-Flight_attitude/#_3","title":"\u4fef\u4ef0\u89d2","text":"<p>(pitch)\uff1a\u98de\u884c\u5668\u5411\u4e0a\u6216\u5411\u4e0b\u7684\u89d2\u5ea6 \u8303\u56f4\uff1a\u4ece <code>-90\u00b0</code> \u5230 <code>90\u00b0</code>\u3002 \u6b63\u65b9\u5411\uff1a\u5982\u679c\u673a\u5934\u5411\u4e0a\uff0c\u673a\u5c3e\u5411\u4e0b\uff0c\u5219\u4e3a\u6b63\u4fef\u4ef0\uff1b\u53cd\u4e4b\u5219\u4e3a\u8d1f\u4fef\u4ef0\u3002 </p>"},{"location":"UAV/02-Flight_attitude/#_4","title":"\u504f\u822a\u89d2","text":"<p>(yaw)\uff1a\u98de\u884c\u5668\u5411\u5de6\u6216\u5411\u53f3\u7684\u89d2\u5ea6 \u8303\u56f4\uff1a\u4ece <code>-180\u00b0</code> \u5230 <code>180\u00b0</code>\u3002 \u6b63\u65b9\u5411\uff1a\u5982\u679c\u673a\u5934\u5411\u53f3\uff0c\u673a\u5c3e\u5411\u5de6\uff0c\u5219\u4e3a\u6b63\u504f\u822a\uff1b\u53cd\u4e4b\u5219\u4e3a\u8d1f\u504f\u822a\u3002 </p>"},{"location":"UAV/02-Flight_attitude/#_5","title":"\u6839\u636e\u98de\u884c\u59ff\u6001\u8c03\u6574\u81f3\u6b63\u5c04\u56fe\u50cf","text":"<p>\u6839\u636e\u4e0a\u8ff0\u4ecb\u7ecd\u7684\u504f\u822a\u89d2\uff0c\u4fef\u4ef0\u89d2\uff0c\u6eda\u8f6c\u89d2\u6821\u6b63\u56fe\u50cf,\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>\u6839\u636e\u4fef\u4ef0\u89d2\uff0c\u504f\u822a\u89d2\uff0c\u6eda\u8f6c\u89d2\u5f97\u5230\u56f4\u7ed5\u4e09\u4e2a\u65b9\u5411\u7684\u65cb\u8f6c\u77e9\u9635</li> <li>\u5b9a\u4e49src_img\u7684\u56db\u4e2a\u89d2\u70b9src_points</li> <li>\u6839\u636e\u65cb\u8f6c\u77e9\u9635\u6c42\u89e3\u56db\u4e2a\u89d2\u70b9\u65cb\u8f6c\u540e\u7684\u4f4d\u7f6edst_points</li> <li>\u901a\u8fc7dst_points\u548csrc_points\u8ba1\u7b97\u900f\u89c6\u77e9\u9635</li> <li>\u5c06\u900f\u89c6\u77e9\u9635\u5e94\u7528\u5230src_img\u4e0a\u5f97\u5230dst_img</li> </ul> Python<pre><code>import cv2\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\ndef euler_to_rotation_matrix(roll, pitch, yaw):\n    \"\"\"\n    Convert Euler angles to a rotation matrix.\n    \"\"\"\n    R_x = np.array([[1, 0, 0],\n                    [0, np.cos(roll), -np.sin(roll)],\n                    [0, np.sin(roll), np.cos(roll)]])\n\n    R_y = np.array([[np.cos(pitch), 0, np.sin(pitch)],\n                    [0, 1, 0],\n                    [-np.sin(pitch), 0, np.cos(pitch)]])\n\n    R_z = np.array([[np.cos(yaw), -np.sin(yaw), 0],\n                    [np.sin(yaw), np.cos(yaw), 0],\n                    [0, 0, 1]])\n\n    R = np.dot(R_z, np.dot(R_y, R_x))\n    return R\n\ndef adjust_image(image_path, roll, pitch, yaw):\n    \"\"\"\n    Adjust the image to orthographic view using the given roll, pitch, and yaw angles.\n    \"\"\"\n    # Read the image\n    image = cv2.imread(image_path)\n\n    # Image dimensions\n    height, width = image.shape[:2]\n\n    # Get the rotation matrix\n    R = euler_to_rotation_matrix(roll, pitch, yaw)\n\n    # Define the source points (four corners of the image)\n    src_points = np.array([[0, 0],\n                           [width - 1, 0],\n                           [width - 1, height - 1],\n                           [0, height - 1]], dtype='float32')\n\n    # Apply the rotation to the source points\n    dst_points = np.dot(src_points - np.array([width / 2, height / 2]), R[:2, :2].T) + np.array([width / 2, height / 2])\n    dst_points = dst_points.astype('float32')\n\n    # Compute the perspective transform matrix\n    matrix = cv2.getPerspectiveTransform(src_points, dst_points)\n\n    # Apply the perspective transformation\n    adjusted_image = cv2.warpPerspective(image, matrix, (width, height))\n\n    return adjusted_image\n\n# Example usage\nimage_path = 'stamp19291.jpg'\n#\u8fd9\u4e2a\u4f8b\u5b50\u6211\u4f7f\u7528\u7684\u662f\u5f27\u5ea6\uff0c\u89d2\u5ea6\u7684\u8bdd\u4e5f\u53ef\u4ee5\uff0c\u9700\u8981\u8f6c\u6362\nyaw, pitch, roll = 1.793676, 0.061006, -0.014411\n\nadjusted_image = adjust_image(image_path, roll, pitch, yaw)\n\n# Read the original image\noriginal_image = cv2.imread(image_path)\n\n# Concatenate the original and adjusted images horizontally\nconcatenated_image = np.concatenate((original_image, adjusted_image), axis=1)\n\n# Convert the image from BGR to RGB for displaying using matplotlib\nconcatenated_image_rgb = cv2.cvtColor(concatenated_image, cv2.COLOR_BGR2RGB)\n\n# Display the concatenated image\nplt.figure(figsize=(10, 5))\nplt.imshow(concatenated_image_rgb)\nplt.axis('off')\nplt.title('Original and Adjusted Images')\nplt.show()\n</code></pre> <p></p>"},{"location":"UAV/03-livox_ros_driver/","title":"ROS\u73af\u5883\u63a5\u6536\u548c\u5904\u7406Livox\u6fc0\u5149\u96f7\u8fbe\u6570\u636e","text":"<ul> <li>\u96f7\u8fbe\u8bbe\u5907\uff1a Livox MID-360</li> <li>SDK\u94fe\u63a5\uff1a https://github.com/Livox-SDK/Livox-SDK2</li> <li>\u9a71\u52a8\u94fe\u63a5\uff1a https://github.com/Livox-SDK/livox_ros_driver2</li> <li>LivoxViewer2\uff1a \u56fe\u5f62\u5316\u8f6f\u4ef6\u5de5\u5177\uff08x86\uff09\uff0c \u4e3b\u8981\u7528\u4e8e\u53ef\u89c6\u5316\u548c\u7ba1\u7406livox\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u7684\u91c7\u96c6\u6570\u636e\u548c\u8bbe\u5907\u4fe1\u606f\uff0c \u4e0b\u8f7d\u94fe\u63a5</li> </ul> <p>Livox-SDK2: Livox-SDK2\u63d0\u4f9b\u4e86\u57fa\u7840\u7684\u5f00\u53d1\u63a5\u53e3\uff0c\u7528\u4e8e\u4e0eLivox\u6fc0\u5149\u96f7\u8fbe\u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\uff0c\u6570\u636e\u91c7\u96c6\u548c\u70b9\u4e91\u6570\u636e\u5904\u7406</p> <p>livox_ros_driver2\uff1a livox_ros_driver2\u662f\u63d0\u4f9b\u7684\u4e00\u4e2aROS\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4e3b\u8981\u7528\u4e8e\u96c6\u6210\u548c\u64cd\u4f5clivox\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\uff0c\u5141\u8bb8\u5728ROS2\u73af\u5883\u4e2d\u63a5\u6536\u548c\u5904\u7406Livox\u6fc0\u5149\u96f7\u8fbe\u91c7\u96c6\u70b9\u4e91\u6570\u636e\u3002</p> <p>livox_ros_driver2\u4f9d\u8d56\u4e8eLivox-SDK2\uff0c \u5b83\u5229\u7528Livox-SDK2\u63d0\u4f9b\u7684\u6838\u5fc3\u529f\u80fd\u4e0eLivox\u6fc0\u5149\u96f7\u8fbe\u8fdb\u884c\u901a\u4fe1\uff0c\u7ba1\u7406\u8bbe\u5907\u5e76\u63a5\u6536\u70b9\u4e91\u6570\u636e\uff0c\u56e0\u6b64\u5728\u4f7f\u7528livox_ros_driver2\u65f6\uff0c\u9700\u5148\u7f16\u8bd1SDK\u7684\u5e93\u6587\u4ef6</p> <p>Note</p> <p>\u8fde\u63a5\u65b9\u5f0f: \u5c06Livox\u8bbe\u5907\u4e0e3588\u6216\u8005PC\u901a\u8fc7\u4ea4\u6362\u673a\u8fde\u63a5\uff0cLivox\u8bbe\u5907\u9ed8\u8ba4ip\u4e3a 192.168.1.1xx\uff0c xx\u662f\u5e7f\u64ad\u7801\u540e\u4e24\u4f4d</p>"},{"location":"UAV/03-livox_ros_driver/#livox-viewer","title":"\u4f7f\u7528livox viewer\u8fde\u63a5\u8bbe\u5907","text":"<p>\u901a\u8fc7livox viewer\u53ef\u4ee5\u67e5\u770b\u8bbe\u5907\u7684ip, \u5b9e\u65f6\u663e\u793a\u6fc0\u5149\u63a2\u6d4b\u6d4b\u8ddd\u4eea\u70b9\u4e91\u6570\u636e</p> <ul> <li> <ol> <li>\u5c06PC\u4e0eLivox\u8bbe\u5907\u76f4\u8fde\uff0c\u540c\u65f6\u5c06PC\u7684IP\u8bbe\u5907\u8bbe\u7f6e\u4e3a\u9759\u6001IP\uff0c IP\u5730\u5740\u4e3a==192.168.1.2==, \u5b50\u7f51\u63a9\u7801==255.255.255.0==\uff0c\u9ed8\u8ba4\u7f51\u5173\u4e3a==192.168.1.1==</li> </ol> </li> <li> <ol> <li>\u4e0b\u8f7dLivox Viewer\u5e76\u89e3\u538b\u6587\u4ef6\uff0c\u542f\u52a8\u7ec8\u7aef\u5e76\u8fdb\u884c\u89e3\u538b\u7f29\u540e\u6587\u4ef6\u5939\u7684\u6839\u76ee\u5f55\uff0c\u8fd0\u884c\u547d\u4ee4<code>./livox_viewer.sh</code>\u5373\u53ef\u542f\u52a8</li> </ol> </li> <li> <ol> <li>\u901a\u8fc7\u754c\u9762\u53ef\u5b9e\u65f6 \u67e5\u770b\u70b9\u4e91\u6570\u636e\uff0c\u9a8c\u8bc1\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\uff1b\u5de5\u5177\u680f\u4e2d\u53ef\u67e5\u770bLivox\u8bbe\u5907\u7684\u5c5e\u6027\u53ca\u5404\u53c2\u6570</li> </ol> </li> </ul>"},{"location":"UAV/03-livox_ros_driver/#livox-sdk2","title":"\u5b89\u88c5Livox-SDK2","text":"Bash<pre><code>git clone https://github.com/Livox-SDK/Livox-SDK2.git\ncd ./Livox-SDK2/\nmkdir build\ncd build\ncmake ..\nmake\nsudo make install\n</code></pre> <p>\u7f16\u8bd1\u5b89\u88c5\u540e\u9ed8\u8ba4\u4f1a\u5728<code>/usr/local/lib</code>\u76ee\u5f55\u4e0b\u751f\u6210\u5171\u4eab\u5e93\u548c\u9759\u6001\u5e93\uff0c \u5934\u6587\u4ef6\u4f1a\u5b89\u88c5\u5230<code>/usr/local/include</code>\u76ee\u5f55\u4e0b\u3002 \u5982\u679c\u8981\u79fb\u9664Livox SDK2: Bash<pre><code>sudo rm -rf /usr/local/lib/liblivox_lidar_sdk_*\nsudo rm -rf /usr/local/include/livox_lidar_*\n</code></pre></p>"},{"location":"UAV/03-livox_ros_driver/#livox-sdk2_1","title":"\u8fd0\u884cLivox SDK2\u793a\u4f8b","text":"<p>\u8fde\u63a5\u6fc0\u5149\u96f7\u8fbe\uff0c\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6<code>livox_lidar_quick_start</code>, \u53ef\u4ee5\u83b7\u53d6\u5230\u70b9\u4e91\u6570\u636e Bash<pre><code>cd build/samples/livox_lidar_quick_start\n./livox_lidar_quick_start ../../../samples/livox_lidar_quick_start/mid360_config.json\n</code></pre></p> <p>\u914d\u7f6e\u6587\u4ef6<code>mid360_config.json</code>\u793a\u4f8b\uff1a Text Only<pre><code>{\n  \"MID360\": {\n    \"lidar_net_info\" : {\n      \"cmd_data_port\"  : 56100,\n      \"push_msg_port\"  : 56200,\n      \"point_data_port\": 56300,\n      \"imu_data_port\"  : 56400,\n      \"log_data_port\"  : 56500\n    },\n    \"host_net_info\" : [\n      {\n        \"lidar_ip\"        : \"192.168.1.150\",\n        \"host_ip\"   : \"192.168.1.56\",\n        \"cmd_data_port\"  : 56101,\n        \"push_msg_port\"  : 56201,\n        \"point_data_port\": 56301,\n        \"imu_data_port\"  : 56401,\n        \"log_data_port\"  : 56501\n      }\n    ]\n  }\n}\n</code></pre></p>"},{"location":"UAV/03-livox_ros_driver/#livox-ros-driver2","title":"\u5b89\u88c5Livox ROS Driver2","text":"<p>ROS\u7248\u672c\uff1a <code>ROS2 Foxy</code></p>"},{"location":"UAV/03-livox_ros_driver/#livox-ros-driver2_1","title":"\u514b\u9686Livox ROS Driver2\u6e90\u7801","text":"Bash<pre><code>git clone https://github.com/Livox-SDK/livox_ros_driver2.git ws_livox/src/livox_ros_driver2\n</code></pre>"},{"location":"UAV/03-livox_ros_driver/#livox-ros-driver2_2","title":"\u6784\u5efaLivox ROS Driver2","text":"Bash<pre><code>./build.sh ROS2\n</code></pre>"},{"location":"UAV/03-livox_ros_driver/#livox-ros-driver2_3","title":"\u8fd0\u884cLivox ROS Driver2","text":"Bash<pre><code>source install/setup.sh\n# source ~/ros2_foxy/install/local_setup.bash\ncd install/livox_ros_driver2/share/livox_ros_driver2/launch_ROS2\nros2 launch msg_MID360_launch.py\n</code></pre> <p>py\u542f\u52a8\u6587\u4ef6\u5e38\u7528\u53c2\u6570\u8bbe\u7f6e\uff1a * publish_freq = 10.0  # \u70b9\u4e91\u53d1\u5e03\u9891\u7387 * multi_topic = 0 # \u6240\u6709\u6fc0\u5149\u96f7\u8fbe\u8bbe\u5907\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u4e3b\u9898\u53d1\u5e03\u70b9\u4e91\u6570\u636e * xfer_format = 0 # \u70b9\u4e91\u683c\u5f0f\uff0c 0: PointXYZRTLT</p>"},{"location":"UAV/03-livox_ros_driver/#_1","title":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6","text":"<p>\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a <code>install/livox_ros_driver2/share/livox_ros_driver2/config/MID360_config.json</code></p> <p>\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\uff1a Text Only<pre><code>{\n  \"lidar_summary_info\" : {\n    \"lidar_type\": 8\n  },\n  \"MID360\": {\n    \"lidar_net_info\" : {\n      \"cmd_data_port\": 56100,\n      \"push_msg_port\": 56200,\n      \"point_data_port\": 56300,\n      \"imu_data_port\": 56400,\n      \"log_data_port\": 56500\n    },\n    \"host_net_info\" : {\n      \"cmd_data_ip\" : \"192.168.1.56\",\n      \"cmd_data_port\": 56101,\n      \"push_msg_ip\": \"192.168.1.56\",\n      \"push_msg_port\": 56201,\n      \"point_data_ip\": \"192.168.1.56\",\n      \"point_data_port\": 56301,\n      \"imu_data_ip\" : \"192.168.1.56\",\n      \"imu_data_port\": 56401,\n      \"log_data_ip\" : \"\",\n      \"log_data_port\": 56501\n    }\n  },\n  \"lidar_configs\" : [\n    {\n      \"ip\" : \"192.168.1.150\",\n      \"pcl_data_type\" : 1,\n      \"pattern_mode\" : 0,\n      \"extrinsic_parameter\" : {\n        \"roll\": 0.0,\n        \"pitch\": 0.0,\n        \"yaw\": 0.0,\n        \"x\": 0,\n        \"y\": 0,\n        \"z\": 0\n      }\n    }\n  ]\n}\n</code></pre></p> <p>\u6b64\u5916\uff0c \u8fd8\u9700\u8981\u5c06sdk\u5e93\u6587\u4ef6\u7684\u73af\u5883\u53d8\u91cf<code>/usr/local/lib</code>\u6dfb\u52a0\u5230\u542f\u52a8\u4e2d</p> <ul> <li>\u5982\u679c\u6dfb\u52a0\u5230\u5f53\u524d\u7ec8\u7aef\uff1a Bash<pre><code>export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib\n</code></pre></li> <li>\u5982\u679c\u8981\u6dfb\u52a0\u5230\u5f53\u524d\u7528\u6237\uff1a Bash<pre><code>vim ~/.bashrc\nexport LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib\nsource ~/.bashrc\n</code></pre></li> </ul>"},{"location":"UAV/04-intro/","title":"\u65e0\u4eba\u673a\u7cfb\u7edf","text":""},{"location":"UAV/04-intro/#_2","title":"\u65e0\u4eba\u673a\u7cfb\u7edf\u7ec4\u6210\u90e8\u5206","text":"\u7c7b\u522b \u7ec4\u4ef6 \u529f\u80fd\u63cf\u8ff0 \u65e0\u4eba\u673a\u5e73\u53f0 \u673a\u8eab\u3001\u6846\u67b6\u3001\u6750\u6599\u3001\u52a8\u529b\u7cfb\u7edf\u3001\u7535\u673a\u3001\u7535\u6c60\u3001\u87ba\u65cb\u6868\u3001\u8d77\u843d\u88c5\u7f6e \u63d0\u4f9b\u98de\u884c\u8f7d\u4f53\uff0c\u652f\u6301\u52a8\u529b\u7cfb\u7edf\u3001\u5347\u529b\u4e0e\u63a8\u529b\uff0c\u4fdd\u969c\u98de\u884c\u5b89\u5168\u3002 \u98de\u884c\u63a7\u5236\u7cfb\u7edf \u98de\u63a7\uff08\u98de\u884c\u63a7\u5236\u5668\uff09\u3001PID\u63a7\u5236\u5668 \u5b9e\u73b0\u98de\u884c\u7a33\u5b9a\u3001\u59ff\u6001\u63a7\u5236\u3001\u81ea\u52a8\u98de\u884c\u3001\u5bfc\u822a\u4e0e\u8def\u5f84\u89c4\u5212\u3002 \u5bfc\u822a\u548c\u5b9a\u4f4d\u7cfb\u7edf GPS/\u5317\u6597\u3001IMU\uff08\u60ef\u6027\u6d4b\u91cf\u5355\u5143\uff09\u3001\u6c14\u538b\u8ba1\u3001\u78c1\u529b\u8ba1\u3001RTK \u63d0\u4f9b\u9ad8\u7cbe\u5ea6\u5b9a\u4f4d\u3001\u822a\u5411\u3001\u901f\u5ea6\u3001\u9ad8\u5ea6\u7b49\u4fe1\u606f\uff0c\u786e\u4fdd\u65e0\u4eba\u673a\u81ea\u6211\u5b9a\u4f4d\u3002 \u901a\u4fe1\u7cfb\u7edf \u9065\u63a7\u7cfb\u7edf\u3001\u6570\u4f20\u6a21\u5757\u3001\u56fe\u4f20\u6a21\u5757\u3001\u536b\u661f\u901a\u4fe1 \u65e0\u4eba\u673a\u4e0e\u5730\u9762\u7ad9/\u64cd\u63a7\u8bbe\u5907\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u3001\u89c6\u9891\u3001\u63a7\u5236\u4fe1\u53f7\u4f20\u8f93\uff0c\u786e\u4fdd\u9065\u63a7\u548c\u4efb\u52a1\u6267\u884c\u3002 \u4efb\u52a1\u8f7d\u8377 \u76f8\u673a\uff08RGB\u3001\u7ea2\u5916\u3001\u6fc0\u5149\u96f7\u8fbe\u3001\u9ad8\u6e05\u6444\u50cf\u5934\uff09\u3001\u4f20\u611f\u5668\uff08\u6c14\u4f53\u3001\u6e29\u6e7f\u5ea6\u7b49\uff09\u3001\u673a\u68b0\u8bbe\u5907\uff08\u55b7\u6d12\u3001\u6293\u53d6\uff09 \u6267\u884c\u5177\u4f53\u4efb\u52a1\uff0c\u63d0\u4f9b\u56fe\u50cf\u3001\u89c6\u9891\u3001\u6d4b\u7ed8\u3001\u63a2\u6d4b\u7b49\u529f\u80fd\u3002 \u80fd\u6e90\u7cfb\u7edf \u7535\u6c60\uff08\u9502\u805a\u5408\u7269\u3001\u9502\u79bb\u5b50\uff09\u3001\u71c3\u6cb9\u53d1\u52a8\u673a\u3001\u592a\u9633\u80fd \u63d0\u4f9b\u52a8\u529b\u6765\u6e90\uff0c\u51b3\u5b9a\u98de\u884c\u65f6\u95f4\u548c\u7eed\u822a\u80fd\u529b\uff0c\u652f\u6491\u957f\u822a\u65f6\u6216\u91cd\u8f7d\u4efb\u52a1\u3002 \u907f\u969c\u4e0e\u73af\u5883\u611f\u77e5 \u89c6\u89c9\u4f20\u611f\u5668\uff08\u53cc\u76ee\u3001\u6df1\u5ea6\u6444\u50cf\u5934\uff09\u3001\u6fc0\u5149\u96f7\u8fbe\u3001\u8d85\u58f0\u6ce2\u4f20\u611f\u5668\u3001\u6beb\u7c73\u6ce2\u96f7\u8fbe \u63d0\u4f9b\u73af\u5883\u611f\u77e5\u80fd\u529b\uff0c\u68c0\u6d4b\u969c\u788d\u7269\u5e76\u81ea\u52a8\u907f\u8ba9\uff0c\u786e\u4fdd\u98de\u884c\u5b89\u5168\u3002 \u64cd\u4f5c\u4e0e\u63a7\u5236\u7cfb\u7edf \u5730\u9762\u7ad9\u8f6f\u4ef6\u3001\u624b\u6301\u9065\u63a7\u5668\u3001\u81ea\u52a8\u5316\u63a7\u5236\u6a21\u5757 \u63d0\u4f9b\u98de\u884c\u64cd\u4f5c\u754c\u9762\u3001\u4efb\u52a1\u89c4\u5212\u3001\u5b9e\u65f6\u76d1\u63a7\u3001\u4efb\u52a1\u8c03\u6574\u3001\u81ea\u52a8\u98de\u884c\u63a7\u5236\u7b49\u529f\u80fd\u3002 \u5b89\u5168\u7cfb\u7edf \u5197\u4f59\u63a7\u5236\u3001\u7d27\u6025\u8feb\u964d\u7cfb\u7edf\u3001\u81ea\u52a8\u8fd4\u822a\u3001\u7535\u5b50\u56f4\u680f\u3001\u98de\u884c\u9650\u5236 \u589e\u5f3a\u98de\u884c\u5b89\u5168\u6027\uff0c\u907f\u514d\u6545\u969c\u3001\u5931\u8054\u3001\u504f\u79bb\u4efb\u52a1\u533a\u57df\u7b49\u95ee\u9898\u3002"},{"location":"UAV/04-intro/#flight-controller","title":"\u98de\u63a7\uff08Flight Controller\uff09","text":"<p>\u98de\u63a7\u662f\u65e0\u4eba\u673a\u7684\u6838\u5fc3\u63a7\u5236\u7cfb\u7edf\uff0c\u662f\u4e00\u4e2a\u5d4c\u5165\u5f0f\u786c\u4ef6\u8bbe\u5907\uff0c\u642d\u8f7d\u4e86\u5fc5\u8981\u7684\u8f6f\u4ef6\u548c\u7b97\u6cd5\uff0c\u8d1f\u8d23\u6267\u884c\u65e0\u4eba\u673a\u7684\u6240\u6709\u98de\u884c\u63a7\u5236\u4efb\u52a1\u3002</p>"},{"location":"UAV/04-intro/#_3","title":"\u4e3b\u8981\u529f\u80fd","text":"<ol> <li>\u98de\u884c\u59ff\u6001\u63a7\u5236<ul> <li>\u901a\u8fc7\u4f20\u611f\u5668\uff08\u5982\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\uff09\u5b9e\u65f6\u68c0\u6d4b\u65e0\u4eba\u673a\u7684\u59ff\u6001\uff0c\u5e76\u901a\u8fc7\u8c03\u8282\u7535\u673a\u8f6c\u901f\u4fdd\u6301\u5e73\u7a33\u98de\u884c\u3002</li> <li>\u63d0\u4f9b\u60ac\u505c\u3001\u8f6c\u5f2f\u3001\u4e0a\u5347\u3001\u4e0b\u964d\u7b49\u57fa\u672c\u98de\u884c\u529f\u80fd\u3002</li> </ul> </li> <li>\u5bfc\u822a\u4e0e\u5b9a\u4f4d<ul> <li>\u96c6\u6210 GPS\u3001\u6c14\u538b\u8ba1\u3001\u78c1\u529b\u8ba1\u7b49\u4f20\u611f\u5668\uff0c\u5b9e\u73b0\u65e0\u4eba\u673a\u7684\u4f4d\u7f6e\u8ddf\u8e2a\u548c\u5b9a\u70b9\u60ac\u505c\u3002</li> <li>\u652f\u6301\u81ea\u52a8\u822a\u7ebf\u8ddf\u8e2a\u548c\u4efb\u52a1\u6267\u884c\u3002</li> </ul> </li> <li>\u4f20\u611f\u5668\u6570\u636e\u5904\u7406<ul> <li>\u63a5\u6536\u4f20\u611f\u5668\uff08IMU\u3001GPS \u7b49\uff09\u7684\u6570\u636e\uff0c\u5e76\u901a\u8fc7\u6ee4\u6ce2\u3001\u878d\u5408\u7b49\u7b97\u6cd5\u63d0\u4f9b\u7a33\u5b9a\u7684\u98de\u884c\u6570\u636e\u3002</li> </ul> </li> <li>\u98de\u884c\u6a21\u5f0f\u5207\u6362<ul> <li>\u63d0\u4f9b\u624b\u52a8\u6a21\u5f0f\uff08Manual\uff09\u3001\u5b9a\u9ad8\u6a21\u5f0f\uff08Altitude Hold\uff09\u3001\u5b9a\u70b9\u6a21\u5f0f\uff08Position Hold\uff09\u7b49\u591a\u79cd\u6a21\u5f0f\u3002</li> </ul> </li> <li>\u4efb\u52a1\u6267\u884c<ul> <li>\u6839\u636e\u5730\u9762\u7ad9\u4f20\u6765\u7684\u6307\u4ee4\uff0c\u6267\u884c\u4efb\u52a1\uff0c\u5982\u81ea\u52a8\u98de\u884c\u3001\u8fd4\u822a\u3001\u964d\u843d\u7b49\u3002</li> </ul> </li> <li>\u5b89\u5168\u4fdd\u62a4<ul> <li>\u5b9e\u73b0\u5931\u63a7\u4fdd\u62a4\uff08Fail-Safe\uff09\u3001\u4f4e\u7535\u91cf\u81ea\u52a8\u8fd4\u822a\u3001\u969c\u788d\u7269\u907f\u8ba9\u7b49\u529f\u80fd\u3002</li> </ul> </li> </ol>"},{"location":"UAV/04-intro/#_4","title":"\u5730\u9762\u7ad9","text":"<p>\u65e0\u4eba\u673a\uff08UAV\uff09\u6216\u5176\u4ed6\u822a\u7a7a\u5668\u7684\u5730\u9762\u63a7\u5236\u548c\u7ba1\u7406\u7cfb\u7edf\uff0c\u4e3b\u8981\u7528\u4e8e\u76d1\u63a7\u548c\u64cd\u63a7\u98de\u884c\u5668\u7684\u8fd0\u884c\u3002\u5b83\u901a\u5e38\u7531\u786c\u4ef6\u548c\u8f6f\u4ef6\u7ec4\u6210\uff0c\u53ef\u4ee5\u5b9e\u65f6\u63a5\u6536\u98de\u884c\u5668\u7684\u6570\u636e\uff0c\u5e76\u53d1\u9001\u63a7\u5236\u6307\u4ee4\u3002</p>"},{"location":"UAV/04-intro/#_5","title":"\u5730\u9762\u7ad9\u7684\u4e3b\u8981\u529f\u80fd","text":"<ol> <li>\u98de\u884c\u6570\u636e\u76d1\u63a7 <ul> <li>\u63a5\u6536\u5e76\u663e\u793a\u98de\u884c\u5668\u7684\u4f4d\u7f6e\u4fe1\u606f\uff08\u5982 GPS \u5750\u6807\uff09\u3001\u98de\u884c\u9ad8\u5ea6\u3001\u901f\u5ea6\u3001\u59ff\u6001\uff08\u5982\u4fef\u4ef0\u3001\u504f\u822a\u3001\u6a2a\u6eda\u89d2\u5ea6\uff09\u7b49\u3002</li> <li>\u76d1\u63a7\u98de\u884c\u5668\u7684\u7535\u6c60\u72b6\u6001\u3001\u6e29\u5ea6\u7b49\u8bbe\u5907\u5065\u5eb7\u53c2\u6570\u3002</li> </ul> </li> <li> <p>\u98de\u884c\u4efb\u52a1\u89c4\u5212</p> <ul> <li>\u63d0\u4f9b\u56fe\u5f62\u5316\u754c\u9762\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5730\u56fe\u4e0a\u8bbe\u7f6e\u98de\u884c\u8def\u5f84\u3001\u822a\u70b9\uff08Waypoints\uff09\u3001\u4efb\u52a1\u76ee\u6807\uff08\u5982\u62cd\u6444\u5730\u70b9\uff09\u3002</li> <li>\u652f\u6301\u5b9e\u65f6\u4fee\u6539\u98de\u884c\u8ba1\u5212\u3002</li> <li>\u901a\u4fe1\u548c\u63a7\u5236</li> <li>\u901a\u8fc7\u65e0\u7ebf\u901a\u4fe1\u6a21\u5757\uff08\u5982 2.4GHz \u6216 5.8GHz\uff09\u4e0e\u98de\u884c\u5668\u4fdd\u6301\u8054\u7cfb\uff0c\u53d1\u9001\u8d77\u98de\u3001\u964d\u843d\u3001\u60ac\u505c\u7b49\u6307\u4ee4\u3002</li> <li>\u5728\u81ea\u52a8\u98de\u884c\u65f6\uff0c\u53ef\u4ee5\u5207\u6362\u5230\u624b\u52a8\u6a21\u5f0f\u8fdb\u884c\u5e72\u9884\u3002</li> <li>\u6570\u636e\u7ba1\u7406</li> <li>\u5b58\u50a8\u98de\u884c\u8bb0\u5f55\u548c\u4efb\u52a1\u6570\u636e\uff0c\u7528\u4e8e\u540e\u7eed\u5206\u6790\u3002</li> <li>\u63a5\u6536\u5e76\u663e\u793a\u4ece\u65e0\u4eba\u673a\u4f20\u56de\u7684\u56fe\u50cf\u3001\u89c6\u9891\u6216\u5176\u4ed6\u4f20\u611f\u5668\u6570\u636e\uff08\u5982\u70ed\u6210\u50cf\u3001\u6fc0\u5149\u96f7\u8fbe\u626b\u63cf\uff09\u3002</li> <li>\u5e94\u6025\u5904\u7406</li> <li>\u63d0\u4f9b\u7d27\u6025\u8fd4\u56de\uff08Return-to-Home, RTH\uff09\u529f\u80fd\uff0c\u5f53\u4fe1\u53f7\u4e22\u5931\u3001\u7535\u6c60\u7535\u91cf\u4f4e\u6216\u9047\u5230\u5176\u4ed6\u5f02\u5e38\u60c5\u51b5\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1\u8fd4\u822a\u3002</li> <li>\u652f\u6301\u624b\u52a8\u89e6\u53d1\u5e94\u6025\u63aa\u65bd\uff0c\u5982\u7d27\u6025\u964d\u843d\u3002</li> </ul> </li> </ol>"},{"location":"computer_network/01-client_server/","title":"\u7f51\u7edc\u901a\u4fe1","text":""},{"location":"computer_network/01-client_server/#client","title":"\u5ba2\u6237\u7aef\uff08Client\uff09","text":"<p>\u5ba2\u6237\u7aef\u662f\u6307\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u670d\u52a1\u7684\u8ba1\u7b97\u673a\u6216\u7a0b\u5e8f\u3002\u5ba2\u6237\u7aef\u901a\u5e38\u662f\u7528\u6237\u76f4\u63a5\u4ea4\u4e92\u7684\u8bbe\u5907\u6216\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u53d1\u9001\u8bf7\u6c42\u5230\u670d\u52a1\u5668\uff0c\u5e76\u7b49\u5f85\u670d\u52a1\u5668\u8fd4\u56de\u54cd\u5e94\u3002</p> <ul> <li>\u7279\u70b9\uff1a<ul> <li>\u4e3b\u52a8\u53d1\u8d77\u8bf7\u6c42\uff1a\u5ba2\u6237\u7aef\u4e3b\u52a8\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u4f8b\u5982\u8bf7\u6c42\u7f51\u9875\u3001\u6570\u636e\u6216\u5176\u4ed6\u8d44\u6e90\u3002</li> <li>\u8d44\u6e90\u6709\u9650\uff1a\u76f8\u5bf9\u4e8e\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u901a\u5e38\u8d44\u6e90\uff08\u5982\u5904\u7406\u80fd\u529b\u3001\u5b58\u50a8\u7a7a\u95f4\uff09\u8f83\u6709\u9650\u3002</li> </ul> </li> <li>\u4f8b\u5b50\uff1a<ul> <li>Web\u6d4f\u89c8\u5668\uff1a\u5982Google Chrome\u3001Mozilla Firefox\u7b49\uff0c\u901a\u8fc7HTTP\u5411Web\u670d\u52a1\u5668\u8bf7\u6c42\u7f51\u9875\u3002</li> <li>Email\u5ba2\u6237\u7aef\uff1a\u5982Microsoft Outlook\u3001Thunderbird\uff0c\u901a\u8fc7IMAP\u6216SMTP\u534f\u8bae\u4e0e\u90ae\u4ef6\u670d\u52a1\u5668\u901a\u4fe1\u3002</li> <li>\u79fb\u52a8\u5e94\u7528\uff1a\u5982\u5fae\u4fe1\u3001Twitter\u7b49\uff0c\u901a\u8fc7API\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u6570\u636e\u4ea4\u4e92\u3002</li> </ul> </li> </ul>"},{"location":"computer_network/01-client_server/#server","title":"\u670d\u52a1\u7aef\uff08Server\uff09","text":"<p>\u670d\u52a1\u7aef\u662f\u6307\u54cd\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u8ba1\u7b97\u673a\u6216\u7a0b\u5e8f\u3002\u670d\u52a1\u5668\u901a\u5e38\u662f\u63d0\u4f9b\u67d0\u79cd\u670d\u52a1\u7684\u8bbe\u5907\u6216\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u5904\u7406\u8bf7\u6c42\u5e76\u8fd4\u56de\u54cd\u5e94\u3002</p> <ul> <li>\u7279\u70b9\uff1a<ul> <li>\u88ab\u52a8\u7b49\u5f85\u8bf7\u6c42\uff1a\u670d\u52a1\u5668\u88ab\u52a8\u5730\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u5e76\u5904\u7406\u8fd9\u4e9b\u8bf7\u6c42\u3002</li> <li>\u5904\u7406\u80fd\u529b\u5f3a\uff1a\u901a\u5e38\u5177\u6709\u5f3a\u5927\u7684\u5904\u7406\u80fd\u529b\u548c\u5927\u91cf\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u80fd\u591f\u5904\u7406\u5927\u91cf\u5e76\u53d1\u8bf7\u6c42\u3002</li> <li>\u63d0\u4f9b\u670d\u52a1\uff1a\u670d\u52a1\u5668\u63d0\u4f9b\u5404\u79cd\u670d\u52a1\uff0c\u5982Web\u670d\u52a1\u3001\u6587\u4ef6\u670d\u52a1\u3001\u6570\u636e\u5e93\u670d\u52a1\u7b49\u3002</li> </ul> </li> <li>\u4f8b\u5b50\uff1a<ul> <li>Web\u670d\u52a1\u5668\uff1a\u5982Apache\u3001Nginx\uff0c\u63d0\u4f9b\u7f51\u9875\u548c\u5176\u4ed6Web\u8d44\u6e90\u3002</li> <li>\u6570\u636e\u5e93\u670d\u52a1\u5668\uff1a\u5982MySQL\u3001PostgreSQL\uff0c\u5904\u7406\u6570\u636e\u5e93\u67e5\u8be2\u548c\u4e8b\u52a1\u3002</li> <li>\u6587\u4ef6\u670d\u52a1\u5668\uff1a\u5982FTP\u670d\u52a1\u5668\uff0c\u63d0\u4f9b\u6587\u4ef6\u4e0a\u4f20\u548c\u4e0b\u8f7d\u670d\u52a1\u3002</li> </ul> </li> </ul>"},{"location":"computer_network/01-client_server/#-client-server-model","title":"\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u6a21\u578b\uff08Client-Server Model\uff09","text":"<p>\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u6a21\u578b\u662f\u4e00\u79cd\u7f51\u7edc\u67b6\u6784\u6a21\u578b\uff0c\u5728\u8fd9\u79cd\u6a21\u578b\u4e2d\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5404\u81ea\u627f\u62c5\u7279\u5b9a\u7684\u89d2\u8272\uff1a</p> <ul> <li>\u5ba2\u6237\u7aef\uff1a\u53d1\u8d77\u8bf7\u6c42\uff0c\u901a\u5e38\u7531\u7ec8\u7aef\u7528\u6237\u4f7f\u7528\u3002</li> <li>\u670d\u52a1\u5668\uff1a\u54cd\u5e94\u8bf7\u6c42\uff0c\u63d0\u4f9b\u8d44\u6e90\u6216\u670d\u52a1\u3002</li> </ul>"},{"location":"computer_network/01-client_server/#_2","title":"\u4ea4\u4e92\u8fc7\u7a0b","text":"<ol> <li>\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\uff1a\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u4f8b\u5982\u8bf7\u6c42\u4e00\u4e2a\u7f51\u9875\u6216\u67e5\u8be2\u67d0\u4e2a\u6570\u636e\u5e93\u8bb0\u5f55\u3002</li> <li>\u670d\u52a1\u5668\u63a5\u6536\u8bf7\u6c42\uff1a\u670d\u52a1\u5668\u63a5\u6536\u5e76\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002</li> <li>\u670d\u52a1\u5668\u8fd4\u56de\u54cd\u5e94\uff1a\u670d\u52a1\u5668\u5c06\u5904\u7406\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002</li> <li>\u5ba2\u6237\u7aef\u63a5\u6536\u54cd\u5e94\uff1a\u5ba2\u6237\u7aef\u63a5\u6536\u5e76\u5904\u7406\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\uff0c\u53ef\u80fd\u4f1a\u663e\u793a\u7ed9\u7528\u6237\u6216\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u3002</li> </ol> \u7279\u6027 UDP TCP \u534f\u8bae\u7c7b\u578b \u65e0\u8fde\u63a5\uff08Datagram\uff09 \u9762\u5411\u8fde\u63a5\uff08Stream\uff09 \u53ef\u9760\u6027 \u4e0d\u53ef\u9760\uff0c\u4e0d\u4fdd\u8bc1\u5230\u8fbe\u3001\u987a\u5e8f\u3001\u53bb\u91cd \u53ef\u9760\uff0c\u4fdd\u8bc1\u987a\u5e8f\u3001\u65e0\u4e22\u5305\u3001\u65e0\u91cd\u590d \u4f20\u8f93\u901f\u5ea6 \u5feb\uff0c\u5f00\u9500\u5c0f \u7a0d\u6162\uff0c\u6709\u63e1\u624b\u786e\u8ba4\u3001\u91cd\u4f20\u673a\u5236 \u6570\u636e\u683c\u5f0f \u6570\u636e\u62a5\uff08Datagram\uff09\uff0c\u4e00\u6761\u4e00\u6761 \u5b57\u8282\u6d41\uff08Stream\uff09\uff0c\u8fde\u7eed\u6570\u636e\u6d41 \u9002\u7528\u573a\u666f \u89c6\u9891\u76f4\u64ad\u3001\u8bed\u97f3\u901a\u8bdd\u3001\u6e38\u620f \u7f51\u9875\u6d4f\u89c8\u3001\u6587\u4ef6\u4f20\u8f93\u3001\u6570\u636e\u5e93\u8bbf\u95ee \u662f\u5426\u9700\u8981\u8fde\u63a5 \u274c \u65e0\u8fde\u63a5\uff08\u76f4\u63a5\u53d1\uff09 \u2705 \u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5 \u662f\u5426\u5206\u5305/\u7ec4\u5305 \u5e94\u7528\u5c42\u5904\u7406 TCP \u5185\u90e8\u5904\u7406\uff08\u6570\u636e\u7c98\u5305/\u62c6\u5305\uff09"},{"location":"computer_network/01-client_server/#udp","title":"UDP\u901a\u4fe1\uff08\u65e0\u8fde\u63a5\uff0c\u5feb\u901f\u4f20\u8f93\uff09","text":"<p>UDP\uff08User Datagram Protocol\uff0c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09\u662f\u4e00\u79cd\u7b80\u5355\u7684\u3001\u65e0\u8fde\u63a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\u3002UDP\u901a\u4fe1\u4e2d\u7684\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u5404\u81ea\u627f\u62c5\u7279\u5b9a\u7684\u89d2\u8272\uff0c\u901a\u8fc7\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u62a5\u8fdb\u884c\u901a\u4fe1\u3002</p>"},{"location":"computer_network/01-client_server/#1-udp","title":"1. UDP \u670d\u52a1\u7aef","text":"<p>\u4e3b\u8981\u8d1f\u8d23\u76d1\u542c\u7279\u5b9a\u7aef\u53e3\u5e76\u5904\u7406\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6570\u636e\u62a5\u3002\u7531\u4e8eUDP\u662f\u65e0\u8fde\u63a5\u7684\uff0c\u670d\u52a1\u7aef\u4e0d\u9700\u8981\u7ef4\u62a4\u5ba2\u6237\u7aef\u8fde\u63a5\u72b6\u6001\u3002</p> <p>\u5de5\u4f5c\u6d41\u7a0b</p> <ol> <li>\u521b\u5efa\u4e00\u4e2aUDP\u5957\u63a5\u5b57\u3002</li> <li>\u7ed1\u5b9a\u5230\u4e00\u4e2a\u6307\u5b9a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u3002</li> <li>\u4e0d\u65ad\u76d1\u542c\u548c\u63a5\u6536\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u6570\u636e\u62a5\u3002</li> <li>\u5904\u7406\u63a5\u6536\u5230\u7684\u6570\u636e\u5e76\u53ef\u80fd\u53d1\u9001\u54cd\u5e94\u6570\u636e\u62a5\u56de\u5ba2\u6237\u7aef\u3002</li> </ol> Python<pre><code>import socket\n\ndef udp_server():\n    # \u521b\u5efaUDP\u5957\u63a5\u5b57 AF_INET: \u4f7f\u7528 IPv4 \u5730\uff1bSOCK_DGRAM: \u6570\u636e\u62a5\u5957\u63a5\u5b57\uff08UDP\uff09\n    server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n    # \u5b9a\u4e49\u670d\u52a1\u5668\u5730\u5740\u548c\u7aef\u53e3\n    server_address = (\"0.0.0.0\", 12345)\n\n    # \u7ed1\u5b9a\u5957\u63a5\u5b57\u5230\u5730\u5740\u548c\u7aef\u53e3\n    server_socket.bind(server_address)\n    print(\"Server is listening on {}:{}\".format(*server_address))\n\n    while True:\n        # \u7b49\u5f85\u63a5\u6536\u6570\u636e\uff0c\u6700\u59274096\u5b57\u8282\uff0c\u963b\u585e\u5f0f\uff0c\u76f4\u5230\u6709\u6570\u636e\u5230\u6765\u624d\u7ee7\u7eed\u6267\u884c\n        # data\u662f\u6536\u5230\u7684\u6570\u636e\uff09\uff08bytes\u7c7b\u578b\uff09\uff0cclient_address\u662f\u5ba2\u6237\u7aef\u7684IP\u548c\u7aef\u53e3\n        data, client_address = server_socket.recvfrom(4096)\n        print(f\"Received {data.decode()} from {client_address}\")\n\n        # \u53d1\u9001\u54cd\u5e94\n        if data.decode().lower() == \"exit\":\n            print(\"Server exiting...\")\n            break\n\n        response = \"Hello, client!\".encode()\n        # \u4f7f\u7528sendto\u53d1\u9001\u4fe1\u606f\u56de\u5ba2\u6237\u7aef\n        server_socket.sendto(response, client_address)\n\n    # \u5173\u95ed\u5957\u63a5\u5b57\n    server_socket.close()\n\nif __name__ == \"__main__\":\n    udp_server()\n</code></pre> <p>c++\u7248\u672c C++<pre><code>//udp_server.cpp\n#include &lt;iostream&gt;\n#include &lt;cstring&gt; // memset, strcmp\n#include &lt;unistd.h&gt; // close\n#include &lt;arpa/inet.h&gt; // sockaddr_in, inet_ntoa\n\nint main(){\n\n    // 1. \u521b\u5efaUDP\u5957\u63a5\u5b57\n    int server_socket = socket(AF_INET, SOCK_DGRAM, 0);\n    if (server_socket &lt; 0){\n        perror(\"socket creation failed\");\n        return 1;\n    }\n\n    // 2. \u8bbe\u7f6e\u670d\u52a1\u7aef\u5730\u5740\u7ed3\u6784\u4f53\n    sockaddr_in server_addr;\n    memset(&amp;server_addr, 0, sizeof(server_addr)); // \u6e05\u7a7a\u7ed3\u6784\u4f53\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_addr.s_addr = INADDR_ANY; // \u76d1\u542c\u6240\u6709\u7f51\u5361\n    server_addr.sin_port = htons(12345); // \u7aef\u53e3\u53f7\n\n    // 3. \u7ed1\u5b9asocket\u5230\u5730\u5740\u548c\u7aef\u53e3\n    if(bind(server_socket, (sockaddr*)&amp;server_addr, sizeof(server_addr)) &lt; 0){\n        perror(\"bind failed\");\n        close(server_socket);\n        return 1;\n    }\n\n    // 4. \u63a5\u6536\u5e76\u56de\u590d\u5ba2\u6237\u7aef\n    char buffert[4096];\n    sockaddr_in client_addr;\n    socklen_t client_len = sizeof(client_addr);\n    while(true){\n        memset(buffer, 0, sizeof(buffer));\n        int bytes_received = recvfrom(server_socket, buffer, sizeof(buffer)-1, 0, (sockaddr*)&amp;client_addr, &amp;client_len);\n        if (bytes_received &lt; 0){\n            perror(\"revfrom failed\");\n            break;\n        }\n\n        buffer[bytes_received] = '\\0';\n        std::string message(buffer);\n    }\n    // 5. \u5173\u95edsocket\n    close(server_socket);\n    return 0;\n}\n</code></pre></p>"},{"location":"computer_network/01-client_server/#2-udp","title":"2. UDP \u5ba2\u6237\u7aef","text":"<p>UDP \u5ba2\u6237\u7aef\u8d1f\u8d23\u5411\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u62a5\uff0c\u5e76\u5904\u7406\u670d\u52a1\u5668\u7684\u54cd\u5e94\u3002\u7531\u4e8eUDP\u662f\u65e0\u8fde\u63a5\u7684\uff0c\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u5efa\u7acb\u548c\u5173\u95ed\u8fde\u63a5\uff0c\u53ea\u9700\u53d1\u9001\u6570\u636e\u62a5\u5373\u53ef\u3002</p>"},{"location":"computer_network/01-client_server/#udp_1","title":"UDP \u5ba2\u6237\u7aef\u7684\u5de5\u4f5c\u6d41\u7a0b","text":"<ol> <li>\u521b\u5efa\u4e00\u4e2aUDP\u5957\u63a5\u5b57\u3002</li> <li>\u5411\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u62a5\u3002</li> <li>\u63a5\u6536\u6765\u81ea\u670d\u52a1\u5668\u7684\u54cd\u5e94\u6570\u636e\u62a5\uff08\u5982\u679c\u6709\uff09\u3002</li> <li>\u5904\u7406\u63a5\u6536\u5230\u7684\u6570\u636e\u3002</li> </ol> <p>Python<pre><code>import socket\n\ndef udp_client():\n    # \u521b\u5efaUDP\u5957\u63a5\u5b57 AF_INET: \u4f7f\u7528 IPv4 \u5730\uff1bSOCK_DGRAM: \u6570\u636e\u62a5\u5957\u63a5\u5b57\uff08UDP\uff09\n    client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n    # \u5b9a\u4e49\u670d\u52a1\u5668\u5730\u5740\u548c\u7aef\u53e3\n    server_address = (\"127.0.0.1\", 12345)\n\n    try:\n        # \u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\n        message = \"Hello, server!\".encode()\n        client_socket.sendto(message, server_address)\n\n        # \u63a5\u6536\u670d\u52a1\u5668\u7684\u54cd\u5e94\n        data, server = client_socket.recvfrom(4096)\n        print(f\"Received {data.decode()} from server\")\n\n        # \u53d1\u9001\u9000\u51fa\u6d88\u606f\n        exit_message = \"exit\".encode()\n        client_socket.sendto(exit_message, server_address)\n\n    finally:\n        # \u5173\u95ed\u5957\u63a5\u5b57\n        client_socket.close()\n\nif __name__ == \"__main__\":\n    udp_client()\n</code></pre> cpp\u7248\u672c</p> C++<pre><code>//udp_client.cpp\n\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;unistd.h&gt; // for memset\n#include &lt;arpa/inet.h&gt; // for sockaddr_in, inet_pton\n\nint main(){\n\n    // 1. \u521b\u5efaudp socket\n    int client_socket = socket(AF_INET, SOCK_DGRAM, 0);\n    if (client_socket &lt; 0){\n        perror(\"socket creation failed\");\n        return 1;\n    }\n    // 2. \u8bbe\u7f6e\u670d\u52a1\u7aef\u5730\u5740\u7ed3\u6784\u4f53\n    sockaddr_in server_addr;\n    memset(&amp;server_addr, 0, sizeof(server_addr));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(12345);\n\n    // \u5c06ip\u8f6c\u6362\u4e3a\u7f51\u7edc\u5730\u5740\u683c\u5f0f\n    if (inet_pton(AF_INET, \"127.0.0.1\", &amp;server_addr.sin_addr) &lt;= 0){\n        std::error &lt;&lt; \"Invalid server IP address\" &lt;&lt; std::endl;\n        close(client_socket);\n        return 1;\n    }\n\n    // 3. \u53d1\u9001\u6570\u636e\u7ed9\u670d\u52a1\u5668\n    std::string message = \"hello server!\";\n    int sent = sendto(client_socket, message.c_str(), message.size(), 0, (socketaddr*)&amp;server_addr, sizeof(server_addr));\n\n    if(sent &lt; 0)\n    {\n        perror(\"sendto failed\");\n        close(client_socket);\n        return 1;\n    }\n\n    // 4. \u63a5\u6536\u670d\u52a1\u5668\u54cd\u5e94\n    char buffer[4096];\n    memset(buffer, 0, sizeof(buffer));\n    socklen_t addr_len = sizeof(server_addr);\n\n    int received = recvfrom(client_socket, buffer, sizeof(buffer)-1, 0, (sockaddr*)&amp;server_addr, &amp;addr_len);\n\n    if (received &lt; 0){\n        perror(\"recvfrom failed\");\n        close(client_socket);\n        return 1;\n    }\n    buffer[received] = '\\0';\n    std::cout &lt;&lt; \"Received from server: \" &lt;&lt; buffer &lt;&lt; std::endl;\n\n    // 5. \u53d1\u9001exit \u6d88\u606f\n    std::string exit_msg = \"exit\";\n    sendto(client_socket, exit_msg.c_str(), exit_msg.size(), 0, (sockaddr*)&amp;server_addr, sizeof(server_addr));\n\n    // 6. \u5173\u95edsocket\n    close(client_socket);\n    return 0;\n}\n</code></pre>"},{"location":"computer_network/01-client_server/#tcp","title":"TCP\u901a\u4fe1","text":""},{"location":"computer_network/01-client_server/#1-tcp","title":"1. TCP\u670d\u52a1\u7aef\uff08\u76d1\u542c\uff0c\u63a5\u53d7\u8fde\u63a5\uff0c\u53cc\u5411\u901a\u4fe1\uff09","text":"Python<pre><code># tcp_server.py\nimport socket\n\ndef tcp_server():\n    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    server_address = (\"0.0.0.0\", 12345)\n    server_socket.bind(server_address)\n    server_socket.listen(1) # \u5f00\u59cb\u76d1\u542c\uff0c\u6700\u5927\u8fde\u63a5\u6570\u4e3a1\n\n    print(f\"TCP Server is listening on {server_address}\")\n\n    conn, client_address = server_socket.accept()\n    print(f\"Connected by {client_address}\")\n\n    try:\n        while True:\n            fata = conn.recv(1024)\n            if not data:\n                print(\"Connection closed by client\")\n                break\n            print(f\"Received from client: {data.decode{}}\")\n\n            if data.decode().lower() == \"exit\":\n                print(\"Server exiting...\")\n                break\n\n            conn.sendall(b\"hello, tcp client!\")\n    finally:\n            conn.close()\n            server_socket.close()\n\nif __name__ == \"__main__\":\n    tcp_server()\n</code></pre>"},{"location":"computer_network/01-client_server/#2-tcp","title":"2. TCP \u5ba2\u6237\u7aef\uff08\u8fde\u63a5\uff0c\u53d1\u9001\uff0c\u63a5\u6536\uff09","text":"Python<pre><code># tcp_client.py\n\nimport socket\n\ndef tcp_client():\n    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    server_address = (\"127.0.0.1\", 12345)\n    client_socket.connect(server_address)\n\n    try:\n        # \u53d1\u9001\u6570\u636e\n        message = \"hello, server\".encode()\n        client_socket.sendall(message)\n\n        # \u63a5\u6536\u54cd\u5e94\n        data = client_socket.recv(1024)\n        print(f\"received from server: {data.decode()}\")\n\n        # \u53d1\u9001\u9000\u51fa\u6d88\u606f\n        exit_message = \"exit\".encode()\n        client_socket.sendall(exit_message)\n\n    finally:\n        client_socket.close()\n\nif __name__ == \"__main__\":\n    tcp_client()\n</code></pre> \u64cd\u4f5c\u884c\u4e3a UDP TCP \u521b\u5efa Socket <code>SOCK_DGRAM</code> <code>SOCK_STREAM</code> \u662f\u5426\u9700\u8981 bind() \u670d\u52a1\u5668\u9700\u8981\uff0c\u5ba2\u6237\u7aef\u4e0d\u5fc5\u987b \u670d\u52a1\u5668\u9700\u8981\uff0c\u5ba2\u6237\u7aef\u7528 <code>connect()</code> \u53d1\u9001\u65b9\u5f0f <code>sendto(data, addr)</code> <code>sendall(data)</code> \u63a5\u6536\u65b9\u5f0f <code>recvfrom()</code> <code>recv()</code> \u8fde\u63a5\u5efa\u7acb\u65b9\u5f0f \u65e0\u8fde\u63a5 \u5ba2\u6237\u7aef <code>connect()</code>\uff0c\u670d\u52a1\u7aef <code>accept()</code>"},{"location":"deepLearning/01-transformer/","title":"transformer","text":"<p>2017\u5e74\u63d0\u51fa\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u79cd\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\uff0c\u5982\u673a\u5668\u7ffb\u8bd1\uff0c\u6587\u672c\u6458\u8981\uff0c\u6587\u672c\u5206\u7c7b\u7b49\u3002 \u4f20\u7edf\u7684\u5e8f\u5217\u6a21\u578b\u5982\u5faa\u73af\u795e\u7ecf\u7f51\u7edcRNN\u5728\u5904\u7406\u957f\u6587\u672c\u65f6\u4f1a\u9047\u5230\u68af\u5ea6\u6d88\u5931\u6216\u8005\u68af\u5ea6\u7206\u70b8\u7684\u95ee\u9898\uff0c\u800ctransformer\u7f51\u7edc\u901a\u8fc7\u5f15\u5165\u81ea\u6ce8\u610f\u529b\u673a\u5236\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002 \u81ea\u6ce8\u610f\u529b\u662f\u4e00\u79cd\u901a\u8fc7\u5bf9\u8f93\u5165\u5e8f\u5217\u7684\u6240\u6709\u4f4d\u7f6e\u8fdb\u884c\u6ce8\u610f\u529b\u8ba1\u7b97\uff0c\u4ece\u800c\u540c\u65f6\u8003\u8651\u8f93\u5165\u5e8f\u5217\u4e2d\u56fd\u6240\u6709\u4f4d\u7f6e\u4fe1\u606f\u7684\u65b9\u6cd5\uff0c\u5728transformer\u4e2d\uff0c\u8f93\u5165\u5e8f\u5217\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u4f1a\u901a\u8fc7\u4e0e\u5176\u4ed6\u4f4d\u7f6e\u7684\u5173\u7cfb\u8fdb\u884c\u8054\u7cfb\uff0c\u5728Encoder\u548cDecoder\u4e2d\u90fd\u4f7f\u7528\u81ea\u6ce8\u610f\u529b\u673a\u5236\u3002</p> <p>\u5728\u7f16\u7801\u5668\u4e2d\uff0c\u81ea\u6ce8\u610f\u529b\u673a\u5236\u5c06\u8f93\u5165\u5e8f\u5217\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u4e0e\u5176\u4ed6\u4f4d\u7f6e\u8fdb\u884c\u5173\u8054\uff0c\u5f97\u5230\u4e00\u4e2a\u52a0\u6743\u7684\u8868\u793a\uff0c\u8fd9\u6837\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u80fd\u591f\u540c\u65f6\u8003\u8651\u5230\u5176\u4ed6\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002\u901a\u8fc7\u591a\u5c42\u5806\u53e0\u7684\u81ea\u6ce8\u610f\u529b\u673a\u5236\u548c\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u7684\u7ec4\u5408\u3002Encoder\u5c06\u8f93\u5165\u5e8f\u5217\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u9690\u85cf\u8868\u793a\u4e3a\u67e5\u8be2\uff0c\u952e\u548c\u503c\uff0c\u901a\u8fc7\u8ba1\u7b97\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u5bf9\u5e8f\u5217\u4e2d\u7684\u4e0d\u540c\u4f4d\u7f6e\u8fdb\u884c\u52a0\u6743\u6c42\u548c\u5f97\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8f93\u51fa\uff0c\u8fd9\u4f7f\u5f97Encoder\u80fd\u591f\u83b7\u5f97\u5168\u5c40\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5904\u7406\u4e0d\u540c\u4f4d\u7f6e\u65f6\u81ea\u52a8\u6355\u83b7\u5e8f\u5217\u4e2d\u7684\u957f\u7a0b\u4f9d\u8d56\u5173\u7cfb\u3002\u5728\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0cEncoder\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u9690\u85cf\u8868\u793a\u5e94\u7528\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\uff0c\u5e76\u4f7f\u7528\u6fc0\u6d3b\u51fd\u6570\u5bf9\u5176\u8fdb\u884c\u53d8\u6362\uff0c\u8fd9\u4e2a\u5c42\u5145\u5f53\u4e86\u5c40\u90e8\u6a21\u5f0f\u7684\u63d0\u53d6\u5668\uff0c\u5e2e\u52a9\u6a21\u578b\u66f4\u597d\u5730\u6355\u83b7\u5230\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u5c40\u90e8\u5173\u7cfb\u3002</p> <p>Embedding \u7528\u4e8e\u5c06\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6807\u8bb0\u8f6c\u6362\u4e3a\u5411\u91cf\u5f62\u5f0f\uff0c\u4ee5\u4fbf\u6a21\u578b\u80fd\u591f\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002\u5728transformer\u4e2d\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\u7684embedding\uff1a\u4f4d\u7f6e\u7f16\u7801\u548c\u8bcd\u5d4c\u5165 \u4f4d\u7f6e\u7f16\u7801\uff08\u76f8\u5f53\u4e8e\u52a0\u5165\u65f6\u95f4\u7ef4\u5ea6\uff09\uff1atransfomer\u6a21\u578b\u4e0d\u5177\u6709\u4efb\u4f55\u9012\u5f52\u6216\u5377\u79ef\u8fd0\u7b97\uff0c\u6240\u4ee5\u65e0\u6cd5\u76f4\u63a5\u6355\u6349\u8f93\u5165\u5e8f\u5217\u7684\u987a\u5e8f\u4fe1\u606f\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0ctransformer\u4f7f\u7528\u4e86\u4f4d\u7f6e\u7f16\u7801\u3002\u4f4d\u7f6e\u7f16\u7801\u901a\u8fc7\u4e3a\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u5206\u914d\u4e00\u4e2a\u5411\u91cf\uff0c\u6765\u8868\u793a\u8be5\u4f4d\u7f6e\u5728\u5e8f\u5217\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002 \u8bcd\u5d4c\u5165\uff1a\u8bcd\u5d4c\u5165\u65f6\u5c06\u79bb\u6563\u7684\u8bcd\u6c47\u8868\u4e2d\u8bcd\u8f6c\u6362\u4e3a\u4f4e\u7ef4\u5b9e\u6570\u5411\u91cf\u7684\u8fc7\u7a0b\u3002\u6bcf\u4e2a\u8bcd\u4f1a\u88ab\u6620\u5c04\u5230\u4e00\u4e2a\u76f8\u5e94\u7684\u5b9e\u6570\u5411\u91cf\uff0c\u4f7f\u5f97\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u53ef\u4ee5\u901a\u8fc7\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\u6765\u8861\u91cf\u3002 \u603b\u7ed3\uff1aembedding\u7528\u4e8e\u5c06\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u79bb\u6563\u6807\u8bb0\u8f6c\u6362\u4e3a\u53ef\u5904\u7406\u7684\u5411\u91cf\u8868\u793a\uff0c\u4ee5\u4fbf\u6a21\u578b\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u548c\u63a8\u7406\u3002</p>"},{"location":"deepLearning/01-transformer/#self-attention","title":"Self-Attention\u5b9e\u73b0\u6b65\u9aa4\uff1a","text":"<ul> <li>\u8ba1\u7b97\u6ce8\u610f\u529b\u6743\u91cd\uff1a\u901a\u8fc7\u8ba1\u7b97\u8f93\u5165\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u4e0e\u76ee\u6807\u4f4d\u7f6e\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u4f7f\u7528softmax\u51fd\u6570\u5c06\u8fd9\u4e9b\u76f8\u4f3c\u5ea6\u8f6c\u6362\u4e3a\u6743\u91cd\u3002\u8fd9\u4e9b\u6743\u91cd\u8868\u793a\u4e86\u6a21\u578b\u5bf9\u4e8e\u8f93\u5165\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5173\u6ce8\u7a0b\u5ea6\u3002\u5176\u5b9e\u5c31\u662f\u4f59\u5f26\u76f8\u4f3c\u5ea6</li> <li>\u52a0\u6743\u6c42\u548c\uff1a\u5c06\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5411\u91cf\u4e58\u4ee5\u5bf9\u5e94\u7684\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u5e76\u5bf9\u6240\u6709\u4f4d\u7f6e\u8fdb\u884c\u52a0\u6743\u6c42\u548c\uff0c\u5f97\u5230\u4e00\u4e2a\u52a0\u6743\u548c\u5411\u91cf\u3002\u8fd9\u4e2a\u52a0\u6743\u548c\u5411\u91cf\u4ee3\u8868\u4e86\u6a21\u578b\u5728\u8ba1\u7b97\u8f93\u51fa\u65f6\u5173\u6ce8\u7684\u90e8\u5206\u3002</li> <li>\u8f93\u51fa\u8ba1\u7b97\uff1a\u901a\u8fc7\u5c06\u52a0\u6743\u548c\u5411\u91cf\u8f93\u5165\u5230\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u6216\u8005\u5176\u4ed6\u7c7b\u578b\u7684\u7f51\u7edc\u5c42\u4e2d\uff0c\u8ba1\u7b97\u5904\u6700\u7ec8\u7684\u8f93\u51fa\u5411\u91cf\u3002 \u901a\u8fc7\u4f7f\u7528Attention\u673a\u5236\uff0ctransformer\u6a21\u578b\u80fd\u591f\u6355\u6349\u8f93\u5165\u5e8f\u5217\u4e2d\u4e0d\u540c\u4f4d\u7f6e\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u5e76\u6839\u636e\u8f93\u5165\u7684\u91cd\u8981\u6027\u51b3\u5b9a\u5728\u8ba1\u7b97\u8f93\u51fa\u65f6\u7684\u5173\u6ce8\u7a0b\u5ea6\u3002\u8fd9\u4f7f\u5f97transformer\u80fd\u591f\u5904\u7406\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\uff0c\u53d6\u5f97\u663e\u8457\u6027\u80fd\u63d0\u5347\u3002</li> </ul> <p>\u4e0b\u9762\u8fdb\u884c\u5177\u4f53\u7406\u89e3\uff1a</p> <p>\u5047\u8bbe\u8f93\u5165\u7684\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a<code>2</code>\uff0c \u8f93\u5165\u5c31\u4e24\u4e2a\u8282\u70b9\\(x_1\\), \\(x_2\\)\uff0c \u7136\u540e\u901a\u8fc7<code>Input Embeeding</code>\u8fdb\u884c\u6620\u5c04\uff08\u5c06\u9ad8\u7ef4\u5ea6\u6570\u636e\u6620\u5c04\u5230\u4f4e\u7ef4\u5ea6\u4e0a\uff09\uff0c \u5982\u56fe\u6240\u793a\u7684\u5c06\u8f93\u5165\u8282\u70b9\\(x_1\\), \\(x_2\\)\u901a\u8fc7<code>f(x)</code>\u6620\u5c04\u5230\\(a_1\\), \\(a_2\\)\u3002\u7d27\u63a5\u7740\u5206\u522b\u5c06\\(a_1\\), \\(a_2\\)\u5206\u522b\u901a\u8fc7\u4e09\u4e2a\u53d8\u6362\u77e9\u9635\\(W_q\\)\\(W_k\\)\\(W_v\\)\uff08\u8fd9\u4e09\u4e2a\u53c2\u6570\u662f\u53ef\u8bad\u7ec3\u7684\uff0c \u662f\u5171\u4eab\u7684\uff09, \u5f97\u5230\u5bf9\u5e94\u7684\\(q^i\\)\\(k^i\\)\\(v^i\\)\uff08\u8fd9\u91cc\u76f4\u63a5\u901a\u8fc7\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u5b9e\u73b0\u7684\uff09</p> <p></p> <p>\u5176\u4e2d\uff0c </p> <ul> <li><code>q</code>\u4ee3\u8868<code>query</code>, \u540e\u7eed\u4f1a\u53bb\u548c\u6bcf\u4e00\u4e2a<code>k</code>\u8fdb\u884c\u5339\u914d</li> <li><code>k</code>\u4ee3\u8868<code>key</code>\uff0c \u540e\u7eed\u4f1a\u88ab\u6bcf\u4e2a<code>q</code>\u5339\u914d</li> <li><code>v</code>\u4ee3\u8868\u4ece<code>a</code>\u4e2d\u63d0\u53d6\u5f97\u5230\u7684\u4fe1\u606f</li> <li>\u540e\u7eed<code>q</code>\u548c<code>k</code>\u5339\u914d\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u6210\u8ba1\u7b97\u4e24\u8005\u7684\u76f8\u5173\u6027\uff0c\u76f8\u5173\u6027\u8d8a\u5927\u5bf9\u5e94v\u7684\u6743\u91cd\u4e5f\u5c31\u8d8a\u5927\u3002</li> </ul> <p></p> <p></p> <p></p> <p>\u4e0a\u9762\u5df2\u7ecf\u8ba1\u7b97\u5f97\u5230\\(\\alpha\\)\uff0c \u5373\u9488\u5bf9\u6bcf\u4e2a<code>v</code>\u7684\u6743\u91cd\uff0c \u63a5\u7740\u8fdb\u884c\u52a0\u6743\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\uff1a</p> <p></p> <p>\u4ee5\u4e0a\u5c31\u662f<code>self-Attention</code>\u7684\u5185\u5bb9\uff0c \u603b\u7ed3\u4e0b\u6765\u5c31\u662f\u8bba\u6587\u4e2d\u7684\u4e00\u4e2a\u516c\u5f0f\uff1a $$ Attention(Q, K, V) = softmax(\\frac{QK^T}{\\sqrt{d_k}})V $$</p>"},{"location":"deepLearning/01-transformer/#multi-head-attention","title":"Multi-Head Attention","text":"<p>\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u80fd\u591f\u8054\u5408\u6765\u81ea\u4e0d\u540c<code>head</code>\u90e8\u5206\u5b66\u4e60\u5230\u7684\u4fe1\u606f\u3002</p> <p>\u9996\u5148\u8fd8\u662f\u548cself-Attention\u6a21\u5757\u4e00\u6837\u5c06\\(a_i\\)\u5206\u522b\u901a\u8fc7\\(W^q, W^k, W^v\\)\u5f97\u5230\u5bf9\u5e94\u7684\\(q^i, k^i, v^i\\), \u7136\u540e\u518d\u6839\u636e\u4f7f\u7528\u7684<code>head</code>\u7684\u6570\u76ee<code>h</code>\u8fdb\u4e00\u6b65\u628a\u5f97\u5230\u7684\\(q^i, k^i, v^i\\)\u5747\u5206\u6210h\u4efd\uff0c \u6bd4\u5982\u4e0b\u56fe\u4e2d\u5047\u8bbe<code>h=2</code>\uff0c \u7136\u540e\\(q^1\\)\u62c6\u5206\u6210\\(q^{1,1}, q^{1, 2}\\)</p> <p>\u90a3\u4e48\\(q^{1, 1}\\)\u5c31\u5c5e\u4e8e<code>head1</code>, \\(q^{1, 2}\\)\u5c31\u5c5e\u4e8e<code>head2</code></p> <p></p> <p></p> <p>\u901a\u8fc7\u4e0a\u8ff0\u65b9\u6cd5\u5c31\u80fd\u5f97\u5230\u6bcf\u4e2a\\(head_i\\)\u5bf9\u5e94\u7684\\(Q_i, K_i, V_i\\)\u53c2\u6570\uff0c \u63a5\u4e0b\u6765\u9488\u5bf9\u6bcf\u4e2a<code>head</code>\u4f7f\u7528\u548c<code>self-Attention</code>\u4e2d\u76f8\u540c\u7684\u65b9\u6cd5\u5373\u53ef\u5f97\u5230\u5bf9\u5e94\u7684\u7ed3\u679c\u3002 $$ Attention(Q_i, K_i, V_i) = softmax(\\frac{Q_iK^T}{\\sqrt{d_k}})V_i $$ </p> <p>\u63a5\u7740\u5c06\u6bcf\u4e2a<code>head</code>\u5f97\u5230\u7684\u7ed3\u679c\u8fdb\u884c<code>concat</code>\u62fc\u63a5\uff0c \u6bd4\u5982\u4e0b\u56fe\u4e2d\\(b_{1, 1}\\)(\\(head_1\\)\u5f97\u5230\u7684\\(b_1\\))\u548c\\(b_{1, 2}\\)\uff08\\(head_2\\)\u5f97\u5230\u7684\\(b_1\\)\uff09\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\\(b_{2, 1}\\)(\\(head_2\\)\u5f97\u5230\u7684\\(b_2\\))\u548c\\(b_{2, 2}\\)\uff08\\(head_2\\)\u5f97\u5230\u7684\\(b_2\\)\uff09\u62fc\u63a5\u5728\u4e00\u8d77\uff0c</p> <p></p> <p>\u63a5\u7740\u5c06\u62fc\u63a5\u540e\u7684\u7ed3\u679c\u901a\u8fc7\\(W^O\\)\uff08\u53ef\u5b66\u4e60\u7684\u53c2\u6570\uff09\u8fdb\u884c\u878d\u5408\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c \u878d\u5408\u540e\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\\(b_1, b_2\\)</p> <p></p> <p>\u5230\u8fd9\uff0c <code>Multi-Head Attention</code>\u7684\u5185\u5bb9\u5c31\u8bb2\u5b8c\u4e86\uff0c \u603b\u7ed3\u4e0b\u6765\u5c31\u662f\u8bba\u6587\u4e2d\u7684\u4e24\u4e2a\u516c\u5f0f $$ MuiltiHead(Q, K, V) = Concat(head_1,..., head_h)W^O\\ where~head_i = Attention(QW^Q_i, KW^K_i, VW^V_i) $$</p>"},{"location":"deepLearning/01-transformer/#_1","title":"\u5e38\u89c1\u95ee\u9898","text":"<p>1. Transformer\u4e3a\u4f55\u4f7f\u7528\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\uff1f\uff08\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u4e00\u4e2a\u5934\uff09</p> <p>\u6bcf\u4e2a\u5934\u5bf9\u5e94\u4e00\u5957Wq\u3001Wk\u3001Wv\u53c2\u6570\u77e9\u9635\uff0c\u5bf9\u5e94q\u3001k\u3001v\u7684\u4e00\u4e2a\u8868\u5f81\u7a7a\u95f4\uff0c\u7528\u591a\u5934\u80fd\u5728\u591a\u4e2a\u8868\u5f81\u7a7a\u95f4\u8fdb\u884cattention\uff0c\u63d0\u53d6\u591a\u79cdpatten\u4fe1\u606f\uff0c\u63d0\u9ad8\u6cdb\u5316\u80fd\u529b\u3002</p> <p>2.Transformer\u4e3a\u4ec0\u4e48Q\u548cK\u4f7f\u7528\u4e0d\u540c\u7684\u6743\u91cd\u77e9\u9635\u751f\u6210\uff0c\u4e3a\u4f55\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u4e2a\u503c\u8fdb\u884c\u81ea\u8eab\u7684\u70b9\u4e58\uff1f \uff08\u6ce8\u610f\u548c\u7b2c\u4e00\u4e2a\u95ee\u9898\u7684\u533a\u522b\uff09</p> <p>\u5982\u679c\u4e0d\u7528\u53c2\u6570\u77e9\u9635\uff0c\u76f4\u63a5\u7528Q\u548cK\u70b9\u4e58\uff0c\u90a3\u4e48attention\u7684\u8fc7\u7a0b\u5c31\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u8fc7\u7a0b\uff0c\u6ca1\u6709\u4efb\u4f55\u9700\u8981\u5b66\u4e60\u7684\u53c2\u6570\uff0c\u8868\u8fbe\u80fd\u529b\u548c\u6cdb\u5316\u80fd\u529b\u6709\u9650\u3002</p> <p>3.Transformer\u8ba1\u7b97attention\u7684\u65f6\u5019\u4e3a\u4f55\u9009\u62e9\u70b9\u4e58\u800c\u4e0d\u662f\u52a0\u6cd5\uff1f\u4e24\u8005\u8ba1\u7b97\u590d\u6742\u5ea6\u548c\u6548\u679c\u4e0a\u6709\u4ec0\u4e48\u533a\u522b\uff1f</p> <p>\u70b9\u4e58\u662f\u5168\u77e9\u9635\u8fd0\u7b97\uff0c\u53ef\u4ee5\u5e76\u884c\u5316\uff1b\u52a0\u6cd5\u901a\u5e38\u9700\u8981\u4e00\u4e2aFFN\u6765\u8ba1\u7b97\u76f8\u4f3c\u6027\u3002\u4e8c\u8005\u590d\u6742\u5ea6\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u70b9\u4e58\u7531\u4e8e\u53ef\u4ee5\u5229\u7528\u9ad8\u6548\u77e9\u9635\u8fd0\u7b97\u901f\u5ea6\u66f4\u5feb\u3002</p> <p>4.\u4e3a\u4ec0\u4e48\u5728\u8fdb\u884csoftmax\u4e4b\u524d\u9700\u8981\u5bf9attention\u8fdb\u884cscaled\uff08\u4e3a\u4ec0\u4e48\u9664\u4ee5dk\u7684\u5e73\u65b9\u6839\uff09\uff0c\u5e76\u4f7f\u7528\u516c\u5f0f\u63a8\u5bfc\u8fdb\u884c\u8bb2\u89e3</p> <p>\u5f53\u7ef4\u5ea6\u5f88\u5927\u65f6\uff0c\u70b9\u4e58\u4e4b\u540e\u7684\u7ed3\u679c\u6570\u636e\u91cf\u7ea7\u5f88\u5927\u3002\u5bf9\u4e8esoftmax\u51fd\u6570\u800c\u8a00\uff0c\u4e00\u65e6\u8f93\u5165\u5f88\u5927\uff0c\u4f1a\u8fdb\u5165\u51fd\u6570\u7684\u9971\u548c\u533a\uff0c\u68af\u5ea6\u503c\u5f88\u5c0f\u3002\u56e0\u800c\u9700\u8981scaled\u3002\u5982\u679c\u8f93\u5165q\u548ck\u5404\u81ea\u90fd\u662f\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u7684\u5206\u5e03\uff0cq\u4e0ek\u7684\u70b9\u79ef\u5c06\u662f\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3adk\uff0c\u4e3a\u4e86\u5c06\u5176\u65b9\u5dee\u63a7\u5236\u57281\uff0c\u9700\u8981\u9664\u4ee5dk\u7684\u5e73\u65b9\u6839\u3002</p> <p>5.\u5728\u8ba1\u7b97attention score\u7684\u65f6\u5019\u5982\u4f55\u5bf9padding\u505amask\u64cd\u4f5c\uff1f</p> <p>\u5728decoder\u7684mask multi-head attention\uff0c\u5373\u7b2c\u4e00\u4e2aattention\u6a21\u5757\u505amask\u64cd\u4f5c\u3002\u5177\u4f53\u65b9\u6cd5\uff1a\u5bf9k\u5411\u91cf\u7b2ct\u6b65\u4ee5\u540e\u7684\u503c\u5728\u8fdb\u5165softmax\u4e4b\u524d\u7f6e\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u8d1f\u6570\uff0c\u5728\u8fdb\u5165softmax\u4e4b\u540e\u8fd9\u4e2a\u8d1f\u6570\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4f1a\u53d8\u62100\uff0c\u5373\u5bf9\u5e94\u7684\u6743\u91cd\u53d8\u62100\uff0c\u4ece\u800c\u5bf9\u5e94\u7684v\u4e0d\u4f1a\u53c2\u4e0e\u8ba1\u7b97\u3002\u4e4b\u6240\u4ee5\u4e0d\u5728softmax\u4e4b\u540e\u76f4\u63a5\u7f6e0\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6743\u91cd\u548c\u4e3a1\u3002</p> <p>6.\u4e3a\u4ec0\u4e48\u5728\u8fdb\u884c\u591a\u5934\u6ce8\u610f\u529b\u7684\u65f6\u5019\u9700\u8981\u5bf9\u6bcf\u4e2ahead\u8fdb\u884c\u964d\u7ef4\uff1f\uff08\u53ef\u4ee5\u53c2\u8003\u4e0a\u9762\u4e00\u4e2a\u95ee\u9898\uff09</p> <p>\u591a\u5934\u7684\u8f93\u51fa\u6700\u540e\u4f1aconcat\u5230\u4e00\u8d77\u7ee7\u7eed\u8fdb\u884c\u4e0b\u4e00\u5c42\u7684\u8fd0\u7b97\u3002\u4e3a\u4e86\u4fdd\u8bc1concat\u540e\u8f93\u51fa\u7ef4\u5ea6\u4e0d\u53d8\uff0c\u6bcf\u4e2ahead\u7684\u7ef4\u5ea6\u90fd\u662fd_model / h\u3002</p> <p>7.\u5927\u6982\u8bb2\u4e00\u4e0bTransformer\u7684Encoder\u6a21\u5757\uff1f Transformer\u7684Encoder\u6a21\u5757\u662f\u7531\u4e00\u7cfb\u5217\u76f8\u540c\u7684\u5c42\u5806\u53e0\u800c\u6210\u7684\uff0c\u6bcf\u4e00\u5c42\u90fd\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u5b50\u6a21\u5757\uff1a\u591a\u5934\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff08Multi-Head Self-Attention\uff09\u548c\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff08Position-wise Feed-Forward Networks\uff09\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u5b50\u6a21\u5757\u5468\u56f4\u90fd\u6709\u4e00\u4e2a\u6b8b\u5dee\u8fde\u63a5\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5b50\u6a21\u5757\u7684\u8f93\u51fa\u90fd\u4f1a\u7ecf\u8fc7\u5c42\u5f52\u4e00\u5316\uff08Layer Normalization\uff09\u3002\u4e0b\u9762\u662f\u5bf9\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u8be6\u7ec6\u8bf4\u660e\uff1a</p> <ol> <li> <p>\u591a\u5934\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff08Multi-Head Self-Attention\uff09 \u8fd9\u4e2a\u6a21\u5757\u53ef\u4ee5\u4f7f\u7f51\u7edc\u5728\u8fdb\u884c\u9884\u6d4b\u65f6\u8003\u8651\u8f93\u5165\u5e8f\u5217\u7684\u4e0d\u540c\u4f4d\u7f6e\uff0c\u5bf9\u4e0d\u540c\u4f4d\u7f6e\u7684\u8f93\u5165\u5206\u914d\u4e0d\u540c\u7684\u6ce8\u610f\u529b\u3002\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u610f\u5473\u7740\u6a21\u578b\u6709\u591a\u7ec4\u4e0d\u540c\u7684\u6ce8\u610f\u529b\u53c2\u6570\uff0c\u6bcf\u7ec4\u90fd\u4f1a\u8f93\u51fa\u4e00\u4e2a\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u8fd9\u4e9b\u6ce8\u610f\u529b\u6743\u91cd\u4f1a\u88ab\u5408\u5e76\u6210\u6700\u7ec8\u7684\u6ce8\u610f\u529b\u8f93\u51fa\u3002</p> </li> <li> <p>\u6b8b\u5dee\u8fde\u63a5\uff08Residual Connection\uff09 \u6b8b\u5dee\u8fde\u63a5\u5e2e\u52a9\u907f\u514d\u4e86\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002\u5728Transformer\u4e2d\uff0c\u6bcf\u4e2a\u5b50\u6a21\u5757\u7684\u8f93\u51fa\u662f LayerNorm(x + SubLayer(x))\uff0c\u5176\u4e2dSubLayer(x)\u662f\u5b50\u6a21\u5757\u81ea\u8eab\uff08\u6bd4\u5982\u591a\u5934\u81ea\u6ce8\u610f\u529b\u6216\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff09\u7684\u8f93\u51fa\u3002</p> </li> <li> <p>\u5c42\u5f52\u4e00\u5316\uff08Layer Normalization\uff09 \u5c42\u5f52\u4e00\u5316\u662f\u5728\u6a21\u578b\u7684\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u52a0\u901f\u6536\u655b\u7684\u4e00\u79cd\u6280\u672f\uff0c\u5b83\u5bf9\u5c42\u7684\u8f93\u5165\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406\uff0c\u4f7f\u5f97\u5176\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u3002</p> </li> <li> <p>\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff08Position-wise Feed-Forward Networks\uff09 \u8fd9\u4e2a\u6a21\u5757\u7531\u4e24\u4e2a\u7ebf\u6027\u53d8\u6362\u7ec4\u6210\uff0c\u4e2d\u95f4\u5939\u6709\u4e00\u4e2aReLU\u6fc0\u6d3b\u51fd\u6570\u3002\u5b83\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8bcd\u5411\u91cf\u72ec\u7acb\u5730\u8fdb\u884c\u53d8\u6362\u3002</p> </li> <li> <p>\u4f4d\u7f6e\u7f16\u7801\uff08Position Encoding\uff09 \u7531\u4e8eTransformer\u6a21\u578b\u6ca1\u6709\u5faa\u73af\u6216\u5377\u79ef\u64cd\u4f5c\uff0c\u4e3a\u4e86\u8ba9\u6a21\u578b\u80fd\u591f\u5229\u7528\u8bcd\u7684\u987a\u5e8f\u4fe1\u606f\uff0c\u9700\u8981\u5728\u8f93\u5165\u5d4c\u5165\u5c42\u4e2d\u52a0\u5165\u4f4d\u7f6e\u7f16\u7801\u3002\u4f4d\u7f6e\u7f16\u7801\u548c\u8bcd\u5d4c\u5165\u76f8\u52a0\u540e\u8f93\u5165\u5230Encoder\u6a21\u5757\u3002</p> </li> </ol> <p>\u6574\u4f53\u6765\u770b\uff0cTransformer\u7684Encoder\u6a21\u5757\u5c06\u8f93\u5165\u5e8f\u5217\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u8fde\u7eed\u8868\u793a\uff0c\u8fd9\u4e9b\u8868\u793a\u5728\u540e\u7eed\u7684Decoder\u6a21\u5757\u4e2d\u7528\u4e8e\u751f\u6210\u8f93\u51fa\u5e8f\u5217\u3002\u6bcf\u4e00\u5c42\u7684Encoder\u90fd\u5bf9\u8f93\u5165\u5e8f\u5217\u7684\u6240\u6709\u4f4d\u7f6e\u540c\u65f6\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u50cfRNN\u90a3\u6837\u9010\u4e2a\u4f4d\u7f6e\u5904\u7406\uff0c\u8fd9\u662fTransformer\u6a21\u578b\u9ad8\u6548\u5e76\u884c\u5904\u7406\u7684\u5173\u952e\u3002</p> <p>8.\u4e3a\u4f55\u5728\u83b7\u53d6\u8f93\u5165\u8bcd\u5411\u91cf\u4e4b\u540e\u9700\u8981\u5bf9\u77e9\u9635\u4e58\u4ee5embedding size\u7684\u5f00\u65b9\uff1f\u610f\u4e49\u662f\u4ec0\u4e48\uff1f \u5c06\u8bcd\u5d4c\u5165\u77e9\u9635\u4e58\u4ee5\u5d4c\u5165\u7ef4\u5ea6\uff08embedding dimension\uff09\u7684\u5e73\u65b9\u6839\u662f\u4e3a\u4e86\u5bf9\u6a21\u578b\u8fdb\u884c\u7f29\u653e\uff0c\u76ee\u7684\u662f\u9632\u6b62\u5728\u8ba1\u7b97\u81ea\u6ce8\u610f\u529b\uff08self-attention\uff09\u65f6\u5f97\u5230\u7684\u6570\u503c\u8fc7\u5927\u3002\u5728\u81ea\u6ce8\u610f\u529b\u673a\u5236\u4e2d\uff0c\u6211\u4eec\u8ba1\u7b97\u8f93\u5165\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5176\u4ed6\u6240\u6709\u5143\u7d20\u7684\u6ce8\u610f\u529b\u5206\u6570\uff0c\u8fd9\u6d89\u53ca\u5230\u4e00\u4e2a\u70b9\u79ef\u64cd\u4f5c\uff0c\u53ef\u80fd\u5bfc\u81f4\u975e\u5e38\u5927\u7684\u6570\u503c\uff0c\u7279\u522b\u662f\u5f53\u5d4c\u5165\u7ef4\u5ea6\u8f83\u5927\u65f6\u3002</p> <p>\u5c06\u5d4c\u5165\u4e58\u4ee5\u5d4c\u5165\u7ef4\u5ea6\u7684\u5e73\u65b9\u6839\u53ef\u4ee5\u5e2e\u52a9\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u5f97\u70b9\u79ef\u7684\u8303\u56f4\u66f4\u52a0\u5408\u7406\uff0c\u4ece\u800c\u5e2e\u52a9\u6a21\u578b\u7684\u8bad\u7ec3\u7a33\u5b9a\u6027\u3002\u8fd9\u4e2a\u7f29\u653e\u64cd\u4f5c\u6709\u52a9\u4e8e\u907f\u514d\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u68af\u5ea6\u6d88\u5931\u6216\u68af\u5ea6\u7206\u70b8\u7684\u95ee\u9898\uff0c\u4f7f\u5f97\u6a21\u578b\u66f4\u5bb9\u6613\u8bad\u7ec3\uff0c\u6700\u7ec8\u8fbe\u5230\u66f4\u597d\u7684\u6027\u80fd\u3002</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u6570\u503c\u7a33\u5b9a\u6027\u548c\u8bad\u7ec3\u7a33\u5b9a\u6027\uff0c\u5e2e\u52a9\u6a21\u578b\u66f4\u6709\u6548\u5730\u5b66\u4e60\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u7684\u6620\u5c04\u3002</p> <p>\u4ee5\u4e0b\u662f\u4f60\u63d0\u51fa\u7684\u7b2c 9~20 \u6761 Transformer \u76f8\u5173\u95ee\u9898\u7684\u7b80\u6d01\u56de\u7b54\uff0c\u9002\u5408\u7528\u4e8e\u7406\u89e3\u548c\u51c6\u5907\u9762\u8bd5/\u7b54\u8fa9\uff1a</p> <p>9. \u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b Transformer \u7684\u4f4d\u7f6e\u7f16\u7801\uff1f\u6709\u4ec0\u4e48\u610f\u4e49\u548c\u4f18\u7f3a\u70b9\uff1f Transformer \u662f\u5168\u6ce8\u610f\u529b\u673a\u5236\uff0c\u6ca1\u6709\u5faa\u73af\u7ed3\u6784\uff08\u5982RNN\uff09\uff0c\u65e0\u6cd5\u611f\u77e5\u5e8f\u5217\u987a\u5e8f\uff0c\u56e0\u6b64\u5f15\u5165 \u4f4d\u7f6e\u7f16\u7801\uff08Positional Encoding\uff09\u3002\u5e38\u89c1\u7684\u662f \u6b63\u5f26\u4f59\u5f26\u4f4d\u7f6e\u7f16\u7801\uff08Sinusoidal\uff09\uff0c\u901a\u8fc7\u5bf9\u4f4d\u7f6e\u548c\u7ef4\u5ea6\u8fdb\u884c\u5468\u671f\u6027\u6620\u5c04\uff0c\u52a0\u5165\u5230\u8f93\u5165\u4e2d\uff1a</p> \\[ PE_{(pos, 2i)} = \\sin\\left(\\frac{pos}{10000^{2i/d_{model}}}\\right),\\quad PE_{(pos, 2i+1)} = \\cos\\left(\\frac{pos}{10000^{2i/d_{model}}}\\right) \\] <ul> <li>\u610f\u4e49\uff1a\u6ce8\u5165\u4f4d\u7f6e\u4fe1\u606f\uff0c\u8ba9\u6a21\u578b\u533a\u5206\u201c\u8c01\u5728\u524d\u8c01\u5728\u540e\u201d\u3002</li> <li>\u4f18\u70b9\uff1a\u65e0\u53c2\u6570\u3001\u53ef\u63a8\u5e7f\u5230\u957f\u5e8f\u5217\u3001\u5177\u5907\u5e73\u79fb\u4e0d\u53d8\u6027\u3002</li> <li>\u7f3a\u70b9\uff1a\u8868\u8fbe\u80fd\u529b\u6709\u9650\uff0c\u4e0d\u9002\u5e94\u590d\u6742\u7ed3\u6784\u3002</li> </ul> <p>10. \u4f60\u8fd8\u4e86\u89e3\u54ea\u4e9b\u5173\u4e8e\u4f4d\u7f6e\u7f16\u7801\u7684\u6280\u672f\uff1f\u5404\u81ea\u4f18\u7f3a\u70b9\u662f\u4ec0\u4e48\uff1f</p> \u7f16\u7801\u65b9\u5f0f \u8bf4\u660e \u4f18\u70b9 \u7f3a\u70b9 Sinusoidal \u56fa\u5b9a\u51fd\u6570\uff0c\u65e0\u8bad\u7ec3\u53c2\u6570 \u901a\u7528\u6027\u5f3a\uff0c\u5916\u63a8\u6027\u597d \u8868\u8fbe\u529b\u5f31 Learnable Position Embedding \u6bcf\u4e2a\u4f4d\u7f6e\u4e00\u4e2a\u53ef\u5b66\u4e60\u5411\u91cf \u8868\u8fbe\u66f4\u5f3a \u4e0d\u53ef\u5916\u63a8 Relative Position Encoding \u8868\u793a\u4f4d\u7f6e\u95f4\u7684\u76f8\u5bf9\u5173\u7cfb\uff08\u5982 Transformer-XL\uff09 \u9002\u5408\u8bed\u8a00\u5efa\u6a21\u3001\u5916\u63a8\u6027\u5f3a \u5b9e\u73b0\u66f4\u590d\u6742 Rotary Position Encoding\uff08RoPE\uff09 \u7528\u590d\u6570\u6216\u65cb\u8f6c\u77e9\u9635\u5f62\u5f0f\u5d4c\u5165\u4f4d\u7f6e\u5173\u7cfb\uff08\u5982RoFormer\uff09 \u9002\u5408\u591a\u5934\u6ce8\u610f\u529b\uff0c\u8ba1\u7b97\u9ad8\u6548 \u7406\u89e3\u95e8\u69db\u7a0d\u9ad8 ALiBi \u7528\u659c\u7387\u63a7\u5236\u8ddd\u79bb\u8870\u51cf\uff0c\u65e0\u9700\u663e\u5f0f\u7f16\u7801 \u65e0\u9700\u5d4c\u5165\u3001\u957f\u5e8f\u5217\u5916\u63a8\u6027\u5f3a \u4e0e\u5177\u4f53\u4efb\u52a1\u5339\u914d\u5ea6\u672a\u77e5 <p>11. \u7b80\u5355\u8bb2\u4e00\u4e0b Transformer \u4e2d\u7684\u6b8b\u5dee\u7ed3\u6784\u4ee5\u53ca\u610f\u4e49\u3002 Transformer \u6bcf\u5c42\u91c7\u7528\u6b8b\u5dee\u8fde\u63a5\uff08Residual Connection\uff09\uff1a</p> \\[ \\text{Layer Output} = \\text{LayerNorm}(x + \\text{SubLayer}(x)) \\] <ul> <li>\u610f\u4e49\uff1a\u7f13\u89e3\u6df1\u5c42\u7f51\u7edc\u8bad\u7ec3\u56f0\u96be\uff0c\u9632\u6b62\u68af\u5ea6\u6d88\u5931\uff0c\u52a0\u5feb\u6536\u655b\u901f\u5ea6\u3002</li> <li>\u4f18\u70b9\uff1a\u68af\u5ea6\u66f4\u7a33\u5b9a\uff0c\u8bad\u7ec3\u66f4\u6df1\u7684\u6a21\u578b\u3002</li> <li>\u7c7b\u4f3c\u7ed3\u6784\uff1a\u4e0e ResNet \u6b8b\u5dee\u601d\u60f3\u76f8\u540c\u3002</li> </ul> <p>12. \u4e3a\u4ec0\u4e48 Transformer \u5757\u4f7f\u7528 LayerNorm \u800c\u4e0d\u662f BatchNorm\uff1fLayerNorm \u5728 Transformer \u7684\u4f4d\u7f6e\u662f\u54ea\u91cc\uff1f</p> <ul> <li> <p>\u539f\u56e0\uff1a</p> </li> <li> <p>BatchNorm \u4f9d\u8d56 batch \u7ef4\u5ea6\uff0cNLP \u4e2d\u5e8f\u5217\u957f\u5ea6\u4e0d\u5b9a\u3001batch size \u5c0f\uff0c\u6548\u679c\u5dee\u3002</p> </li> <li>LayerNorm \u662f\u5728\u7279\u5f81\u7ef4\u5ea6\u505a\u5f52\u4e00\u5316\uff0c\u9002\u5408 NLP\u3002</li> <li>\u4f4d\u7f6e\uff1a\u539f\u8bba\u6587\u4e3a Post-LN \u7ed3\u6784\uff0c\u5728\u6b8b\u5dee\u540e\u518d LayerNorm\uff1a</li> </ul> Text Only<pre><code>output = LayerNorm(x + Sublayer(x))\n</code></pre> <p>\u4e5f\u6709\u53d8\u79cd\u5982 Pre-LN\uff0c\u5148 LayerNorm \u518d\u505a\u6b8b\u5dee\u7ed3\u6784\uff0c\u8bad\u7ec3\u66f4\u7a33\u5b9a\u3002</p> <p>13. \u7b80\u5355\u8bb2\u4e00\u4e0b BatchNorm \u6280\u672f\uff0c\u4ee5\u53ca\u5b83\u7684\u4f18\u7f3a\u70b9\u3002</p> <ul> <li>\u539f\u7406\uff1a\u5bf9\u6bcf\u4e2a mini-batch \u7684\u7279\u5f81\u8fdb\u884c\u6807\u51c6\u5316\uff1a</li> </ul> \\[ \\hat{x} = \\frac{x - \\mu}{\\sqrt{\\sigma^2 + \\epsilon}} \\] <ul> <li> <p>\u4f18\u70b9\uff1a</p> </li> <li> <p>\u7f13\u89e3\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\uff0c\u63d0\u5347\u8bad\u7ec3\u901f\u5ea6\uff1b</p> </li> <li>\u51cf\u5c11\u5bf9\u521d\u59cb\u5316\u7684\u4f9d\u8d56\u3002</li> <li> <p>\u7f3a\u70b9\uff1a</p> </li> <li> <p>\u5728\u5c0f batch size \u65f6\u4e0d\u7a33\u5b9a\uff1b</p> </li> <li>\u4e0e\u5faa\u73af/\u81ea\u6ce8\u610f\u529b\u4e0d\u517c\u5bb9\u3002</li> </ul> <p>14. \u7b80\u5355\u63cf\u8ff0\u4e00\u4e0b Transformer \u4e2d\u7684\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff1f\u4f7f\u7528\u4e86\u4ec0\u4e48\u6fc0\u6d3b\u51fd\u6570\uff1f\u76f8\u5173\u4f18\u7f3a\u70b9\uff1f</p> <ul> <li>\u7ed3\u6784\uff1a</li> </ul> <p>$$   FFN(x) = \\text{ReLU}(xW_1 + b_1)W_2 + b_2   $$</p> <p>\u901a\u5e38\u662f\u4e24\u5c42\u7ebf\u6027\u7f51\u7edc\uff0c\u4e2d\u95f4\u662f\u975e\u7ebf\u6027\u6fc0\u6d3b\u3002 * \u6fc0\u6d3b\u51fd\u6570\uff1a\u539f\u7248\u4f7f\u7528 ReLU\uff0c\u4e5f\u6709 GELU\uff08\u5982BERT\uff09\u3002 * \u4f18\u70b9\uff1a\u589e\u5f3a\u7279\u5f81\u8868\u793a\u80fd\u529b\uff1b * \u7f3a\u70b9\uff1a\u53c2\u6570\u591a\u3001\u8ba1\u7b97\u91cf\u5927\uff0c\u5bf9\u957f\u5e8f\u5217\u5904\u7406\u5b58\u5728\u74f6\u9888\u3002</p> <p>15. Encoder \u7aef\u548c Decoder \u7aef\u662f\u5982\u4f55\u8fdb\u884c\u4ea4\u4e92\u7684\uff1f\uff08\u5173\u8054 seq2seq \u7684 Attention\uff09</p> <ul> <li>\u4ea4\u4e92\u65b9\u5f0f\uff1aDecoder \u7684\u4e2d\u95f4\u5c42\u901a\u8fc7 Encoder-Decoder Attention \u83b7\u53d6 Encoder \u7684\u8f93\u51fa\uff08\u8bb0\u5fc6\uff09\u3002</li> <li>\u673a\u5236\uff1a\u6bcf\u4e2a Decoder token \u67e5\u8be2 Encoder \u5168\u90e8 token \u7684\u4fe1\u606f\uff0c\u7b49\u4ef7\u4e8e seq2seq \u4e2d\u7684 attention\uff1a</li> </ul> \\[ \\text{Attention}(Q_{dec}, K_{enc}, V_{enc}) \\] <p>16. Decoder \u9636\u6bb5\u7684\u591a\u5934\u81ea\u6ce8\u610f\u529b\u548c Encoder \u7684\u591a\u5934\u81ea\u6ce8\u610f\u529b\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0\u4e48 Decoder \u81ea\u6ce8\u610f\u529b\u9700\u8981 sequence mask\uff1f</p> <ul> <li> <p>\u533a\u522b\uff1a</p> </li> <li> <p>Encoder\uff1a\u81ea\u6ce8\u610f\u529b\u5141\u8bb8\u770b\u5230\u6574\u4e2a\u5e8f\u5217\uff1b</p> </li> <li>Decoder\uff1a\u81ea\u6ce8\u610f\u529b\u9700\u8981\u4f7f\u7528 causal mask \u9632\u6b62\u770b\u89c1\u672a\u6765\u7684\u4fe1\u606f\u3002</li> <li>\u539f\u56e0\uff1a\u8bad\u7ec3\u65f6\u8f93\u5165\u5b8c\u6574\u53e5\u5b50\uff0c\u4f46\u9884\u6d4b\u65f6\u5fc5\u987b\u4e00\u6b65\u4e00\u6b65\u751f\u6210\uff0c\u9632\u6b62\u201c\u4fe1\u606f\u6cc4\u9732\u201d\u3002</li> </ul> <p>17. Transformer \u7684\u5e76\u884c\u5316\u4f53\u73b0\u5728\u4ec0\u4e48\u5730\u65b9\uff1fDecoder \u53ef\u4ee5\u505a\u5e76\u884c\u5316\u5417\uff1f</p> <ul> <li> <p>\u5e76\u884c\u5316\u4f53\u73b0\u5728\uff1a</p> </li> <li> <p>\u81ea\u6ce8\u610f\u529b\u7ed3\u6784\u53ef\u5e76\u884c\u8ba1\u7b97\uff0c\u4e0d\u50cf RNN \u9700\u8981\u524d\u540e\u4f9d\u8d56\uff1b</p> </li> <li>\u524d\u9988\u7f51\u7edc\u3001\u4f4d\u7f6e\u7f16\u7801\u7b49\u4e5f\u53ef\u5e76\u884c\u3002</li> <li> <p>Decoder \u5e76\u884c\u5316\uff1a</p> </li> <li> <p>\u8bad\u7ec3\u9636\u6bb5\u53ef\u5e76\u884c\uff1b</p> </li> <li>\u63a8\u7406\u9636\u6bb5\u4e0d\u80fd\u5b8c\u5168\u5e76\u884c\uff0c\u5fc5\u987b\u4e00\u6b65\u6b65\u751f\u6210\uff0c\u56e0\u4e3a\u540e\u4e00\u4e2a token \u4f9d\u8d56\u524d\u4e00\u4e2a\u3002</li> </ul> <p>19. Transformer \u8bad\u7ec3\u65f6\u7684\u5b66\u4e60\u7387\u662f\u5982\u4f55\u8bbe\u5b9a\u7684\uff1fDropout \u662f\u5982\u4f55\u8bbe\u5b9a\u7684\uff0c\u4f4d\u7f6e\u5728\u54ea\u91cc\uff1f\u6d4b\u8bd5\u65f6\u9700\u8981\u6ce8\u610f\u4ec0\u4e48\uff1f</p> <ul> <li>\u5b66\u4e60\u7387\u7b56\u7565\uff08\u539f\u8bba\u6587\uff09\uff1a</li> </ul> <p>$$   lr = d_{\\text{model}}^{-0.5} \\cdot \\min(\\text{step}^{-0.5}, \\text{step} \\cdot \\text{warmup}^{-1.5})   $$</p> <p>\u5373\u5148 warmup \u518d\u8870\u51cf\u3002 * Dropout \u4f4d\u7f6e\uff1a</p> <ul> <li>\u5e94\u7528\u4e8e attention \u6743\u91cd\uff1b</li> <li>\u5e94\u7528\u4e8e FFN \u5c42\u8f93\u51fa\uff1b</li> <li>\u6709\u65f6\u4e5f\u7528\u4e8e embedding\u3002</li> <li>\u6d4b\u8bd5\u65f6\u6ce8\u610f\uff1aDropout \u4f1a\u81ea\u52a8\u5173\u95ed\uff0c\u65e0\u9700\u663e\u5f0f\u5904\u7406\u3002</li> </ul> <p>20. \u89e3\u7801\u7aef\u7684\u6b8b\u5dee\u7ed3\u6784\u6709\u6ca1\u6709\u628a\u540e\u7eed\u672a\u88ab\u770b\u89c1\u7684 mask \u4fe1\u606f\u6dfb\u52a0\u8fdb\u6765\uff0c\u9020\u6210\u4fe1\u606f\u7684\u6cc4\u9732\uff1f</p> <ul> <li>\u4e0d\u4f1a\u9020\u6210\u4fe1\u606f\u6cc4\u9732\u3002</li> <li>\u56e0\u4e3a mask \u662f\u52a0\u5728 attention \u6743\u91cd\u8ba1\u7b97\u524d\u7684\uff0c\u5373\uff1a</li> </ul> \\[ \\text{softmax}(QK^T / \\sqrt{d_k} + \\text{mask}) \\] <ul> <li>\u5373\u4f7f\u6b8b\u5dee\u7ed3\u6784\u52a0\u56de\u6765\u7684\u662f\u5f53\u524d token \u7684\u8f93\u51fa\uff0c\u4e5f\u4e0d\u5305\u542b\u672a\u6765\u4fe1\u606f\uff0c\u56e0\u4e3a\u672a\u6765 token \u672c\u8eab\u6ca1\u6709\u88ab\u53c2\u4e0e attention\u3002</li> </ul>"},{"location":"deepLearning/02-ViT/","title":"ViT","text":"<p>\u4e0b\u56fe\u662f\u539f\u8bba\u6587\u4e2d\u7ed9\u51fa\u7684\u5173\u4e8eVision Transformer\u7684\u6a21\u578b\u6846\u67b6\uff0c \u7b80\u5355\u800c\u8a00\uff0c\u6a21\u578b\u7531\u4e09\u4e2a\u6a21\u5757\u7ec4\u6210\uff1a</p> <ul> <li>Linear Projection of Flattened Patches(Embedding\u5c42)</li> <li>Transformer Encoder(\u56fe\u53f3)</li> <li>MLP Head(\u6700\u7ec8\u7528\u4e8e\u5206\u7c7b\u7684\u5c42\u7ed3\u6784)</li> </ul> <p></p> <p>\u5bf9\u4e8e\u56fe\u50cf\u6570\u636e\u800c\u8a00\uff0c\u5176\u6570\u636e\u683c\u5f0f\u4e3a[H, W, C]\u662f\u4e09\u7ef4\u77e9\u9635\u660e\u663e\u4e0d\u662ftransformer\u60f3\u8981\u7684\u3002\u6240\u4ee5\u9700\u8981\u5148\u901a\u8fc7\u4e00\u4e2aEmbedding\u5c42\u6765\u5bf9\u6570\u636e\u505a\u4e2a\u53d8\u6362\uff0c \u5982\u4e0b\u56fe\u6240\u793a\uff0c \u9996\u5148\u5c06\u4e00\u5f20\u56fe\u7247\u6309\u7ed9\u5b9a\u5927\u5c0f\u5206\u4e3a \u4e00\u5806Patches\u3002\u4ee5ViT-B/16\u4e3a\u4f8b\uff0c \u5c06\u8f93\u5165\u56fe\u7247(224, 224)\u6309\u716716x16\u5927\u5c0f\u7684Patch\u8fdb\u884c\u5212\u5206\uff0c \u5212\u5206\u540e\u4f1a\u5f97\u5230\\((224/16)^2=196\\)\u4e2aPatches\u3002\u63a5\u7740\u901a\u8fc7\u7ebf\u6027\u6620\u5c04\u5c06\u6bcf\u4e2aPatch\u6620\u5c04\u5230\u4e00\u7ef4\u5411\u91cf\u4e2d\uff0c\u6bcf\u4e2aPatches\u6570\u636eshape\u4e3a[16, 16, 3]\u901a\u8fc7\u6620\u5c04\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a768\u7684\u5411\u91cf\uff08\u540e\u9762\u90fd\u76f4\u63a5\u79f0\u4e3atoken\uff09</p> <p>\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c \u76f4\u63a5\u901a\u8fc7\u4e00\u4e2a\u5377\u79ef\u5c42\u6765\u5b9e\u73b0\u3002\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u5377\u79ef\u6838\u5927\u5c0f\u4e3a16x16\uff0c \u6b65\u8ddd\u4e3a16\uff0c \u5377\u79ef\u6838\u4e2a\u6570\u4e3a768\u7684\u5377\u79ef\u6765\u5b9e\u73b0\uff0c \u901a\u8fc7\u5377\u79ef<code>[224, 224, 3] -&gt; [14, 14, 768]</code>\uff0c \u7136\u540e\u76f4\u63a5\u628aH\u548cW\u4e24\u4e2a\u7ef4\u5ea6\u5c55\u5e73\u5373\u53ef<code>[14, 14, 768] -&gt; [196, 768]</code>, \u6b64\u65f6\u6b63\u597d\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u6b63\u662ftransformer\u60f3\u8981\u7684\u3002</p> <p>\u5728\u8f93\u5165Transformer Encoder\u4e4b\u524d\u6ce8\u610f\u9700\u8981\u52a0\u4e0a[class]token\u4ee5\u53caPosition Embedding\u3002\u5728\u539f\u8bba\u6587\u4e2d\uff0c \u5728\u521a\u521a\u5f97\u5230\u7684token\u4e2d\u63d2\u5165\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u5206\u7c7b\u7684[class]token\uff0c \u8fd9\u4e2a[class]token\u662f\u4e00\u4e2a\u53ef\u8bad\u7ec3\u7684\u53c2\u6570\uff0c\u6570\u636e\u683c\u5f0f\u548c\u5176\u4ed6token\u4e00\u6837\u90fd\u662f\u4e00\u4e2a\u5411\u91cf\uff0c \u957f\u5ea6\u4e3a[768]\uff0c \u4e0e\u4e4b\u524d\u4ece\u56fe\u7247\u4e2d\u751f\u6210\u7684tokens\u62fc\u63a5\u5728\u4e00\u8d77\uff0c <code>cat([1, 768], [196, 768]) -&gt; [197, 768]</code>\u3002\u7136\u540e\u5173\u4e8ePosition Embedding\u5c31\u662f\u4e4b\u524dTransformer\u4e2d\u5c06\u7684\u4f4d\u7f6e\u7f16\u7801\uff0c \u8fd9\u91cc\u7684\u4f4d\u7f6e\u7f16\u7801\u91c7\u7528\u7684\u662f\u4e00\u4e2a\u53ef\u8bad\u7ec3\u7684\u53c2\u6570(<code>1D, Pos. Emb.</code>)\uff0c \u662f\u76f4\u63a5\u53e0\u52a0\u5728tokens\u4e0a\u7684\uff0c \u6240\u4ee5shape\u8981\u4e00\u6837\uff0c \u521a\u521a\u62fc\u63a5[class]token\u540eshape\u662f<code>[197, 768]</code>\uff0c \u90a3\u4e48\u8fd9\u91cc\u7684Position Embedding\u7684shape\u4e5f\u662f<code>[197, 768]</code></p> <p></p> <p>Transformer Encoder\u8be6\u89e3</p> <p>Transformer Encoder\u5176\u5b9e\u5c31\u662f\u91cd\u590d\u5806\u53e0Encoder Block L\u6b21\uff0c \u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>Layer Norm , \u8fd9\u79cdNormalization\u65b9\u6cd5\u4e3b\u8981\u9488\u5bf9NLP\u63d0\u51fa\u7684\uff0c \u8fd9\u91cc\u662f\u5bf9\u6bcf\u4e2atoken\u8fdb\u884cNorm\u5904\u7406</li> <li>Multi-Head Attention, \u8fd9\u4e2a\u7ed3\u6784\u4e4b\u524d\u5728\u8bb2Transformer \u4e2d\u5f88\u8be6\u7ec6\u7684\u8bb2\u8fc7</li> <li>Dropout/DropPath</li> <li>MLP Block\uff0c \u5982\u56fe\u6240\u793a\uff0c \u5c31\u662f\u5168\u8fde\u63a5+GELU\u6fc0\u6d3b\u51fd\u6570+Dropout\u7ec4\u6210\uff0c \u9700\u8981\u6ce8\u610f\u7684\u662f\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u4f1a\u628a\u8f93\u5165\u8282\u70b9\u4e2a\u6570\u7ffb4\u500d<code>[197, 768]-&gt;[197, 3072]</code>\uff0c \u7b2c\u4e8c\u4e2a\u5168\u8fde\u63a5\u5c42\u4f1a\u8fd8\u539f\u56de\u539f\u6765\u7684\u8282\u70b9\u4e2a\u6570<code>[197, 3072] -&gt; [197, 768]</code></li> </ul> <p></p> <p>MLP Head</p> <p>\u4e0a\u9762\u901a\u8fc7Transformer Encoder\u540e\u8f93\u51fa\u7684shape\u548c\u8f93\u5165\u7684shape\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\uff0c \u8f93\u5165\u7684\u662f<code>[197, 768]</code>\uff0c \u8f93\u51fa\u7684\u662f\u8fd8\u662f<code>[197, 768]</code>\u3002\u6211\u4eec\u53ea\u9700\u8981\u63d0\u53d6\u51fa[class]token\u751f\u6210\u7684\u5bf9\u5e94\u7ed3\u679c\u5c31\u884c\uff0c \u5373<code>[197, 768]</code>\u4e2d\u62bd\u53d6\u51fa[class]token\u5bf9\u5e94\u7684<code>[1, 768]</code>\u3002\u63a5\u7740\u6211\u4eec\u901a\u8fc7MLP Head\u5f97\u5230\u6211\u4eec\u6700\u7ec8\u7684\u5206\u7c7b\u7ed3\u679c\uff0c MLP Head\u539f\u8bba\u6587\u4e2d\u8bf4\u5728\u8bad\u7ec3ImageNet21K\u65f6\u662f\u7531<code>Linear + tanh\u6fc0\u6d3b\u51fd\u6570 +Linear</code>\u7ec4\u6210\uff0c \u4f46\u662f\u8fc1\u79fb\u5230Image1K\u4e0a\u65f6\uff0c \u53ea\u7528\u4e00\u4e2aLinear\u5373\u53ef\u3002</p>"},{"location":"deepLearning/rnn_lstm/","title":"RNN","text":""},{"location":"deepLearning/triplet_loss/","title":"triplet loss","text":""},{"location":"deepLearning/triplet_loss/#1-database","title":"1. database\u521d\u59cb\u5316","text":"<p>\u4e3a\u6bcf\u4e2a<code>queries</code>\u901a\u8fc7<code>KNN</code>\u8ba1\u7b97<code>hard_positive</code>\uff0c <code>soft_positive</code></p>"},{"location":"deepLearning/triplet_loss/#2-epoch","title":"2. epoch\u5185\u5206\u6279\u52a0\u8f7d,\u6784\u9020\u5b50\u6570\u636e\u96c6","text":"<p>\u5728\u6bcf\u4e2aepoch\u4e2d\uff0c \u4e00\u5171\u968f\u673a<code>sample</code>5000\u4e2a<code>queries</code>\uff0c \u4e3a\u907f\u514d\u4e00\u6b21\u6027\u52a0\u8f7d\u8fc7\u591a\u6837\u672c\u5bfc\u81f4\u5185\u5b58\u4e0d\u8db3\uff0c \u901a\u8fc7<code>cache_refresh_rate</code>\u5206\u6279\u52a0\u8f7d\u6570\u636e\u3002 Python<pre><code>sampled_queries_indexes = np.random.choice(self.queries_num, args.cache_refresh_rate, replace=False)\n</code></pre></p> <p><code>queries_num</code>\u4e3a\u67e5\u8be2\u6837\u672c\u7684\u603b\u6570\u91cf\uff0c \u4ece\u4e2d\u968f\u673a\u9009\u62e9<code>cache_refresh_rate</code>\u4e00\u6b21\u6027\u52a0\u8f7d\uff0c \u540c\u65f6\u4e0d\u5141\u8bb8\u91cd\u590d\u62bd\u53d6\u76f8\u540c\u7684\u67e5\u8be2\u6837\u672c\u3002\u4f8b\u5982<code>cache_refresh_rate</code>\u4e3a1000\u3002</p> <p>\u968f\u673a\u4ecedatabase\u4e2d\u9009\u62e9<code>neg_samples_num</code>\u4e2a\u4e3a\u8d1f\u6837\u672c , \u4f8b\u5982\u4e5f\u4e3a1000 Python<pre><code>sampled_database_indexes = np.random.choice(self.database_num, self.neg_samples_num, replace=False)\npositives_indexes = [self.hard_positives_per_query[i] for i in sampled_queries_indexes]\n\npositives_indexes = [p for pos in positives_indexes for p in pos]\n</code></pre></p> <p>\u627e\u5230\u968f\u673a\u7684<code>queries</code>\u5bf9\u5e94\u7684<code>positive</code>\uff0c \u5c06<code>positive_idx</code>\u4e0e\u8d1f\u6837\u672c\u52a0\u8f7d\u5728\u4e00\u8d77\uff0c \u7ec4\u6210\u4e09\u5143\u7ec4\u3002 Python<pre><code>database_indexes = list(sampled_database_indexes) + positives_indexes\n\ndatabase_indexes = list(np.unique(database_indexes))\n\nsubset_ds = Subset(self, database_indexes + list(sampled_queries_indexes + self.database_num))\n</code></pre></p> <p>\u5c06\u4e00\u4e2acache\u7684anchor\uff0c positive, negative\u7ec4\u6210\u4e00\u4e2a\u5b50\u6570\u636e\u96c6\uff0c \u8ba1\u7b97\u8fd9\u4e9b\u6837\u672c\u7684\u7279\u5f81\u3002\u50a8\u5b58\u5728cache\u5185 Python<pre><code>subset_ds = Subset(self, positives_indexes + list(sampled_queries_indexes + self.database_num))\n\ncache = self.compute_cache(args, model, subset_ds, (len(self), args.features_dim))\n</code></pre> \u8c03\u7528\u5b50\u6570\u636e\u96c6\u8fdb\u884c\u6837\u672c\u7684\u7279\u5f81\u8868\u793a\u3002 Python<pre><code>def compute_cache(args, model, subset_ds, cache_shape):\n\n    \"\"\"Compute the cache containing features of images, which is used to\n\n    find best positive and hardest negatives.\"\"\"\n\n    subset_dl = DataLoader(dataset=subset_ds, num_workers=args.num_workers,\n\n    batch_size=args.infer_batch_size, shuffle=False,\n\n    pin_memory=(args.device == \"cuda\"))\n\n    model = model.eval()\n\n    # RAMEfficient2DMatrix can be replaced by np.zeros, but using\n\n    # RAMEfficient2DMatrix is RAM efficient for full database mining.\n\n    cache = RAMEfficient2DMatrix(cache_shape, dtype=np.float32)\n\n    with torch.no_grad():\n\n    for images, indexes in tqdm(subset_dl, ncols=100):\n\n    images = images.to(args.device)\n\n    features = model(images)\n\n    cache[indexes.numpy()] = features.cpu().numpy()\n\n    return cache\n</code></pre></p> <p>cache\u5185\u5b58\u50a8\u4e861000\u4e2aqueries\uff0c 1000\u4e2a\u8d1f\u6837\u672c\uff08\u6709\u53ef\u80fd\u90e8\u5206\u4e3a\u6b63\u6837\u672c\uff09\uff0c \u4ee5\u53ca\u8fd91000\u4e2aqueries\u5bf9\u5e94\u7684\u6b63\u6837\u672c\uff0c \u7ecf\u8fc7\u7f51\u7edc\u6a21\u578b\u7684\u7279\u5f81\u8868\u793a</p> <p>\u7136\u540e\u8ba1\u7b97<code>best_positive</code>\u548c<code>negative</code>\u7684\u7d22\u5f15 * <code>best_positive</code>\u662f\u5c06<code>queries</code>\u7684<code>positive</code>\u4e0e\u6a21\u578b\u7684\u8f93\u51fa\u901a\u8fc7<code>faiss</code>\u8ba1\u7b97 * <code>negative</code>\u662f\u968f\u673a\u4ece<code>1000</code>\u4e2a\u8d1f\u6837\u672c\u4e2d\u9009\u62e9\u7684\uff0c \u4f46\u662f<code>soft_positive</code>\u4e4b\u5916\u7684<code>negs_num_per_query</code>\u4e2a \u4ee5\u4e0a\u5c31\u7ec4\u6210\u4e86\u4e00\u4e2a<code>queries</code>\u7684\u5168\u5c40\u7d22\u5f15<code>triplets_global_indexes</code>\uff0c \u75311\u4e2a<code>anchor</code>, 1\u4e2a<code>positive</code>\uff0c 10\u4e2a<code>negative</code>\u7ec4\u6210\u3002 \u4e00\u4e2a\u5b50\u6570\u636e\u96c6\u7684\u5168\u5c40\u7d22\u5219\u4e3a<code>[1000, 12]</code></p> <p><code>__getitem__</code>\u4e2d\u5219\u4e3a\uff1a Python<pre><code>def __getitem__(self, index):\n\n    if self.is_inference:\n\n    # At inference time return the single image. This is used for caching or computing NetVLAD's clusters\n\n        return super().__getitem__(index)\n\n    query_index, best_positive_index, neg_indexes = torch.split(self.triplets_global_indexes[index], (1, 1, self.negs_num_per_query))\n\n    query = self.query_transform(path_to_pil_img(self.queries_paths[query_index]))\n\n    positive = self.resized_transform(path_to_pil_img(self.database_paths[best_positive_index]))\n\n    negatives = [self.resized_transform(path_to_pil_img(self.database_paths[i])) for i in neg_indexes]\n\n    images = torch.stack((query, positive, *negatives), 0)\n\n    triplets_local_indexes = torch.empty((0, 3), dtype=torch.int)\n\n    for neg_num in range(len(neg_indexes)):\n\n        triplets_local_indexes = torch.cat((triplets_local_indexes, torch.tensor([0, 1, 2 + neg_num]).reshape(1, 3)))\n\n    return images, triplets_local_indexes, self.triplets_global_indexes[index]\n</code></pre></p>"},{"location":"deepLearning/triplet_loss/#3","title":"3. \u6a21\u578b\u524d\u5411\u4f20\u64ad\u4e0e\u635f\u5931\u8ba1\u7b97","text":"<p>\u5bf9\u4e00\u4e2a<code>batch</code>\u5185\u76841\u4e2a<code>anchor</code>, 1\u4e2a<code>positive</code>\uff0c 10\u4e2a<code>negative</code>\u8fdb\u884c\u6a21\u578b\u63a8\u7406</p> <p>\u4e00\u4e2a<code>batch</code>\u8c03\u7528\u63a8\u7406\u540e\uff0c \u8ba1\u7b97\u635f\u5931\u3002</p> Python<pre><code>criterion_triplet = nn.TripletMarginLoss(margin=args.margin, p=2, reduction=\"sum\")\n</code></pre> <ol> <li> <p><code>nn.TripletMarginLoss</code>:</p> <ul> <li>\u8fd9\u662f PyTorch \u4e2d\u7684\u4e00\u4e2a\u5185\u7f6e\u635f\u5931\u51fd\u6570\uff0c\u7528\u4e8e\u8ba1\u7b97\u4e09\u5143\u7ec4\u635f\u5931\u3002\u5b83\u7684\u76ee\u6807\u662f\u901a\u8fc7\u6700\u5c0f\u5316\u4e09\u5143\u7ec4\u7684\u635f\u5931\uff0c\u62c9\u8fd1\u6b63\u6837\u672c\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u63a8\u8fdc\u8d1f\u6837\u672c\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</li> <li> <p><code>margin=args.margin</code>:</p> </li> <li> <p><code>margin</code> \u662f\u4e09\u5143\u7ec4\u635f\u5931\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u53c2\u6570\uff0c\u8868\u793a\u6b63\u6837\u672c\u548c\u8d1f\u6837\u672c\u4e4b\u95f4\u7684\u6700\u5c0f\u8fb9\u8ddd\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u635f\u5931\u51fd\u6570\u4f1a\u5f3a\u5236\u6b63\u6837\u672c\uff08<code>anchor</code> \u548c <code>positive</code>\uff09\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\u4e8e\u8d1f\u6837\u672c\uff08<code>anchor</code> \u548c <code>negative</code>\uff09\u4e4b\u95f4\u7684\u8ddd\u79bb\u52a0\u4e0a\u8fd9\u4e2a <code>margin</code> \u7684\u503c\u3002</p> </li> <li>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u8d1f\u6837\u672c\u8ddd\u79bb\u6bd4\u6b63\u6837\u672c\u8ddd\u79bb\u66f4\u5c0f\uff0c\u8d85\u8fc7\u4e86 <code>margin</code>\uff0c\u635f\u5931\u5c06\u4f1a\u589e\u5927\uff0c\u4fc3\u4f7f\u6a21\u578b\u8fdb\u884c\u8c03\u6574\u3002</li> <li><code>args.margin</code> \u662f\u4e00\u4e2a\u53ef\u8c03\u7684\u8d85\u53c2\u6570\uff0c\u51b3\u5b9a\u4e86\u8fd9\u4e2a\u8fb9\u8ddd\u7684\u5927\u5c0f\u3002</li> <li> <p><code>p=2</code>:</p> </li> <li> <p><code>p</code> \u53c2\u6570\u6307\u5b9a\u4e86\u8ddd\u79bb\u5ea6\u91cf\u7684\u7c7b\u578b\u3002<code>p=2</code> \u8868\u793a\u4f7f\u7528\u6b27\u6c0f\u8ddd\u79bb\uff08Euclidean distance\uff09\u6765\u8ba1\u7b97\u6837\u672c\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u5982\u679c\u4f60\u5c06 <code>p</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5219\u4f1a\u4f7f\u7528\u66fc\u54c8\u987f\u8ddd\u79bb\uff08Manhattan distance\uff09\u3002</p> </li> <li>\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u6b27\u6c0f\u8ddd\u79bb\u901a\u5e38\u662f\u6700\u5e38\u7528\u7684\u8ddd\u79bb\u5ea6\u91cf\u65b9\u6cd5\uff0c\u7528\u4e8e\u5ea6\u91cf\u6837\u672c\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002</li> <li> <p><code>reduction=\"sum\"</code>:</p> </li> <li> <p><code>reduction</code> \u53c2\u6570\u6307\u5b9a\u4e86\u5982\u4f55\u6c47\u603b\u6bcf\u4e2a\u4e09\u5143\u7ec4\u635f\u5931\u7684\u503c\u3002\u8fd9\u91cc\u7684 <code>\"sum\"</code> \u8868\u793a\u5c06\u6240\u6709\u7684\u635f\u5931\u503c\u76f8\u52a0\u3002\u8fd9\u610f\u5473\u7740\u5728\u8ba1\u7b97\u635f\u5931\u65f6\uff0c\u4f1a\u5bf9\u6bcf\u4e2a\u4e09\u5143\u7ec4\u7684\u635f\u5931\u8fdb\u884c\u6c42\u548c\u3002</p> </li> <li>\u9664\u4e86 <code>\"sum\"</code>\uff0c\u8fd8\u6709 <code>\"mean\"</code>\uff08\u6c42\u5e73\u5747\uff09\u548c <code>\"none\"</code>\uff08\u4e0d\u505a\u4efb\u4f55\u6c47\u603b\uff0c\u8fd4\u56de\u6bcf\u4e2a\u4e09\u5143\u7ec4\u7684\u635f\u5931\u503c\uff09\u3002\u901a\u5e38\uff0c<code>\"sum\"</code> \u4f1a\u7528\u4e8e\u6279\u91cf\u5904\u7406\uff0c<code>\"mean\"</code> \u4f1a\u5728\u8ba1\u7b97\u5e73\u5747\u635f\u5931\u65f6\u4f7f\u7528\u3002</li> </ul> </li> </ol> <p>\u4e09\u5143\u7ec4\u635f\u5931\u51fd\u6570\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u4ee5\u4e0b\u7684\u635f\u5931\uff1a</p> <p>\\(L = \\sum_{i=1}^{N} \\max(d(a_i, p_i) - d(a_i, n_i) + \\text{margin}, 0)\\)</p> <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(d(a_i, p_i)\\) \u662f\u951a\u70b9\uff08anchor\uff09\u6837\u672c\u4e0e\u6b63\u6837\u672c\uff08positive\uff09\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c</li> <li>\\(d(a_i, n_i)\\) \u662f\u951a\u70b9\uff08anchor\uff09\u6837\u672c\u4e0e\u8d1f\u6837\u672c\uff08negative\uff09\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c</li> <li><code>margin</code> \u662f\u4e00\u4e2a\u53ef\u8c03\u7684\u8fb9\u8ddd\u8d85\u53c2\u6570\uff0c</li> <li>\\(N\\) \u662f\u4e09\u5143\u7ec4\u7684\u6570\u91cf\u3002</li> </ul> <p><code>loss</code>\u4e3a Python<pre><code>loss = criterion_triplet(anchor, positive, negative)\n</code></pre></p>"},{"location":"deploy/01-rknn/","title":"RKNN","text":"<p>RKNN\uff08Rockchip Neural Network\uff09\u662f \u745e\u82af\u5fae\uff08Rockchip\uff09 \u63a8\u51fa\u7684\u4e13\u7528\u4e8e\u5176 NPU\uff08Neural Processing Unit\uff0c\u795e\u7ecf\u7f51\u7edc\u5904\u7406\u5668\uff09\u5e73\u53f0\u4e0a\u7684 AI \u6a21\u578b\u90e8\u7f72\u5de5\u5177\u94fe\u3002\u5b83\u7684\u4e3b\u8981\u76ee\u6807\u662f\u5c06\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff08\u5982 PyTorch\u3001TensorFlow\u3001ONNX \u7b49\uff09\u8bad\u7ec3\u51fa\u7684\u6a21\u578b\u8f6c\u6362\u5e76\u90e8\u7f72\u5230 Rockchip \u82af\u7247\uff08\u5982 RK1808\u3001RK3399Pro\u3001RK356x\u3001RK3588 \u7b49\uff09\u4e0a\u9ad8\u6548\u8fd0\u884c</p>"},{"location":"deploy/01-rknn/#1-rknn","title":"1. RKNN\u5de5\u5177\u94fe\u4ecb\u7ecd","text":""},{"location":"deploy/01-rknn/#11","title":"1.1 \u6a21\u578b\u8f93\u5165\u9636\u6bb5","text":"<p>\u6a21\u578b\u8bad\u7ec3\u9636\u6bb5\uff0c\u652f\u6301\u7684\u6846\u67b6\u5305\u62ec\uff1a</p> <ul> <li>PyTorch</li> <li>ONNX</li> <li>TensorFlow</li> <li>TFLite</li> <li>Caffe</li> <li>Darknet</li> </ul> <p>\u2705 \u8bf4\u660e\uff1a \u8fd9\u4e9b\u662f\u5e38\u89c1\u7684\u8bad\u7ec3\u6846\u67b6\u6216\u4e2d\u95f4\u6a21\u578b\u683c\u5f0f\uff0c\u5f00\u53d1\u8005\u901a\u5e38\u4f7f\u7528\u5b83\u4eec\u8bad\u7ec3\u51fa\u6a21\u578b\u6587\u4ef6\uff08\u5982 <code>.pt</code>, <code>.onnx</code>, <code>.tflite</code>, <code>.pb</code> \u7b49\uff09\u3002</p>"},{"location":"deploy/01-rknn/#12-rknn-toolkit2","title":"1.2 \u6a21\u578b\u8f6c\u6362\u9636\u6bb5(RKNN-Toolkit2)","text":"<p>\u8fd9\u4e00\u9636\u6bb5\u901a\u8fc7 RKNN-Toolkit2 \u5de5\u5177\u5305\uff0c\u5c06\u4e0a\u8ff0\u6a21\u578b\u8f6c\u6362\u4e3a <code>.rknn</code> \u683c\u5f0f\u7684\u6a21\u578b\u3002</p> <p>\u2714\ufe0f \u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u52a0\u8f7d\u6a21\u578b    \u4f7f\u7528 <code>rknn.load_onnx()</code> / <code>rknn.load_tflite()</code> \u7b49\u65b9\u5f0f\u8f7d\u5165\u3002</p> </li> <li> <p>\u914d\u7f6e\u53c2\u6570    \u8bbe\u7f6e <code>mean/std</code>\u3001\u8f93\u5165\u5c3a\u5bf8\u3001\u91cf\u5316\u65b9\u5f0f\u3001\u76ee\u6807\u5e73\u53f0\u7b49\u3002</p> </li> <li> <p>\u91cf\u5316\uff08\u53ef\u9009\uff09    \u4f7f\u7528\u6821\u51c6\u6570\u636e\u8fdb\u884c INT8 \u91cf\u5316\uff0c\u52a0\u901f\u63a8\u7406\u3001\u964d\u4f4e\u529f\u8017\u3002</p> </li> <li> <p>\u56fe\u4f18\u5316 + \u7f16\u8bd1    \u5bf9\u6a21\u578b\u56fe\u8fdb\u884c\u4f18\u5316\u3001\u878d\u5408\u5e38\u91cf\u3001\u683c\u5f0f\u5bf9\u9f50\uff0c\u7136\u540e\u751f\u6210 <code>.rknn</code> \u6587\u4ef6\u3002</p> </li> </ol> <p>\u2705 \u6700\u7ec8\u4ea7\u7269\u662f\uff1a\u4e00\u4e2a\u53ef\u4ee5\u88ab Rockchip NPU \u6267\u884c\u7684 <code>.rknn</code> \u6a21\u578b\u3002</p>"},{"location":"deploy/01-rknn/#13","title":"1.3 \u6a21\u578b\u90e8\u7f72\u4e0e\u6267\u884c\u9636\u6bb5","text":"<p>\u8fd9\u90e8\u5206\u8fd0\u884c\u5728 RK \u82af\u7247\u8bbe\u5907\u7aef\uff1a</p>"},{"location":"deploy/01-rknn/#131-rk-npu-hardware","title":"1.3.1 RK-NPU Hardware\uff08\u786c\u4ef6\u5c42\uff09","text":"<ul> <li>Rockchip \u82af\u7247\uff08\u5982 RK3588\uff09\u5185\u90e8\u7684 NPU \u786c\u4ef6\u6a21\u5757\uff0c\u8d1f\u8d23\u77e9\u9635\u8ba1\u7b97\u3001\u5377\u79ef\u52a0\u901f\u3002</li> </ul>"},{"location":"deploy/01-rknn/#132-rk-npu-driver","title":"1.3.2 RK-NPU Driver\uff08\u9a71\u52a8\u5c42\uff09","text":"<ul> <li>Linux \u5185\u6838\u4e2d\u7684 NPU \u9a71\u52a8\u6a21\u5757\uff0c\u4f8b\u5982 <code>/dev/rknpu</code>\uff0c\u4e0e\u786c\u4ef6\u4ea4\u4e92\u3002</li> <li>\u901a\u8fc7 <code>librknn_runtime.so</code> \u4e0e\u4e0a\u5c42\u63a5\u53e3\u901a\u4fe1\uff0c\u5b8c\u6210\u5185\u5b58\u5206\u914d\u3001\u6a21\u578b\u8c03\u5ea6\u3001\u4efb\u52a1\u63d0\u4ea4\u3002</li> </ul>"},{"location":"deploy/01-rknn/#133-rknn-api-api","title":"1.3.3 RKNN API\uff08\u8fd0\u884c\u65f6 API\uff09","text":"<ul> <li> <p>\u63d0\u4f9b Python / C / C++ \u63a5\u53e3\uff0c\u7528\u4e8e\uff1a</p> </li> <li> <p>\u52a0\u8f7d <code>.rknn</code> \u6a21\u578b</p> </li> <li>\u521d\u59cb\u5316 NPU</li> <li>\u8bbe\u7f6e\u8f93\u5165 / \u83b7\u53d6\u8f93\u51fa</li> <li>\u63a7\u5236\u63a8\u7406\u6d41\u7a0b</li> </ul>"},{"location":"deploy/01-rknn/#134-ai-apps","title":"1.3.4 AI Apps\uff08\u5e94\u7528\u5c42\uff09","text":"<ul> <li> <p>\u5f00\u53d1\u8005\u7f16\u5199\u7684 AI \u5e94\u7528\uff0c\u6bd4\u5982\uff1a</p> </li> <li> <p>\u89c6\u9891\u68c0\u6d4b\u3001\u4eba\u8138\u8bc6\u522b\u3001\u76ee\u6807\u8ddf\u8e2a\u7cfb\u7edf</p> </li> <li>\u4f7f\u7528 RKNN API \u8c03\u7528\u63a8\u7406\u7ed3\u679c\u8fdb\u884c\u5904\u7406\u6216\u63a7\u5236\u903b\u8f91</li> </ul>"},{"location":"deploy/01-rknn/#14","title":"1.4 \u6d41\u7a0b","text":"Text Only<pre><code>\u3010\u6a21\u578b\u8bad\u7ec3\u3011 \u2192 PyTorch/TF\u7b49\n      \u2193\n\u3010\u6a21\u578b\u8f6c\u6362\u3011 \u2192 RKNN Toolkit2\n      \u2193\n\u3010\u751f\u6210.rknn\u3011 \u2192 \u90e8\u7f72\u5230\u8bbe\u5907\n      \u2193\n\u3010\u6a21\u578b\u52a0\u8f7d\u3011 \u2192 RKNN API\uff08Python/C/C++\uff09\n      \u2193\n\u3010\u9a71\u52a8\u8c03\u7528\u3011 \u2192 RK-NPU Driver\uff08\u5185\u6838\u6a21\u5757\uff09\n      \u2193\n\u3010\u63a8\u7406\u6267\u884c\u3011 \u2192 RK-NPU Hardware\n      \u2193\n\u3010\u7ed3\u679c\u8fd4\u56de\u3011 \u2192 \u7528\u6237AI\u5e94\u7528\u4f7f\u7528\u8f93\u51fa\u7ed3\u679c\n</code></pre>"},{"location":"deploy/01-rknn/#2","title":"2. \u6a21\u578b\u8bad\u7ec3","text":"<p>\u7565</p>"},{"location":"deploy/01-rknn/#3","title":"3. \u6a21\u578b\u8f6c\u6362","text":"<p>RKNN-Toolkit2\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u5728\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3001\u63a8\u7406\u548c\u6027\u80fd\u8bc4\u4f30\u7684\u5f00\u53d1\u5957\u4ef6\uff0cRKNN-Toolkit2\u7684 \u4e3b\u8981\u6846\u56fe\u5982\u4e0b\uff1a</p> <p>\u901a\u8fc7\u8be5\u5de5\u5177\u63d0\u4f9b\u7684Python\u63a5\u53e3\u53ef\u4ee5\u4fbf\u6377\u5730\u5b8c\u6210\u4ee5\u4e0b\u529f\u80fd\uff1a 1. \u6a21\u578b\u8f6c\u6362\uff1a\u652f\u6301\u5c06PyTorch\u3001ONNX\u3001TensorFlow\u3001TensorFlow Lite\u3001Caffe\u3001DarkNet\u7b49\u6a21\u578b\u8f6c\u4e3aRKNN\u6a21\u578b 2. \u91cf\u5316\u529f\u80fd\uff1a\u652f\u6301\u5c06\u6d6e\u70b9\u6a21\u578b\u91cf\u5316\u4e3a\u5b9a\u70b9\u6a21\u578b\uff0c\u5e76\u652f\u6301\u6df7\u5408\u91cf\u5316 3. \u6027\u80fd\u548c\u5185\u5b58\u8bc4\u4f30\uff1a\u5c06RKNN\u6a21\u578b\u5206\u53d1\u5230\u6307\u5b9aNPU\u8bbe\u5907\u4e0a\u8fd0\u884c\uff0c\u4ee5\u8bc4\u4f30\u6a21\u578b\u5728\u5b9e\u9645\u8bbe\u5907\u4e0a\u8fd0\u884c\u65f6\u7684\u6027\u80fd\u548c\u5185\u5b58\u5360\u7528\u60c5\u51b5 4. \u91cf\u5316\u7cbe\u5ea6\u5206\u6790\uff1a\u8be5\u529f\u80fd\u5c06\u7ed9\u51fa\u6a21\u578b\u91cf\u5316\u540e\u6bcf\u4e00\u5c42\u63a8\u7406\u7ed3\u679c\u4e0e\u6d6e\u70b9\u6a21\u578b\u63a8\u7406\u7ed3\u679c\u7684\u4f59\u5f26\u8ddd\u79bb\u548c\u6b27\u6c0f\u8ddd\u79bb\uff0c\u4ee5\u4fbf\u4e8e\u5206\u6790\u91cf\u5316\u8bef\u5dee\u662f\u5982\u4f55\u51fa\u73b0\u7684\uff0c\u4e3a\u63d0\u9ad8\u91cf\u5316\u6a21\u578b\u7684\u7cbe\u5ea6\u63d0\u4f9b\u601d\u8def</p>"},{"location":"deploy/01-rknn/#31","title":"3.1 \u91cf\u5316","text":"<p>\u6a21\u578b\u91cf\u5316\u662f\u6307\u5c06 \u9ad8\u7cbe\u5ea6\uff08\u901a\u5e38\u662f FP32\uff09\u6a21\u578b\u53c2\u6570\u548c\u6fc0\u6d3b\u503c\u538b\u7f29\u4e3a\u4f4e\u7cbe\u5ea6\uff08\u5982 INT8\uff09\u8868\u793a \u7684\u8fc7\u7a0b\u3002\u4f18\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u51cf\u5c11\u6a21\u578b\u5927\u5c0f\uff08\u51cf\u5c11\u5185\u5b58\u5360\u7528\uff09</li> <li>\u52a0\u5feb\u63a8\u7406\u901f\u5ea6\uff08\u4f4e\u7cbe\u5ea6\u8ba1\u7b97\u66f4\u5feb\uff09</li> <li>\u964d\u4f4e\u529f\u8017\uff08\u9002\u5408\u5d4c\u5165\u5f0f\u7aef\uff09</li> </ul> <p>\u7ebf\u6027\u91cf\u5316\u516c\u5f0f\uff1a</p> <p>\u4ece float \u2192 int\uff1a</p> Text Only<pre><code>quantized = round((float_value - zero_point) / scale)\n</code></pre> <p>\u4ece int \u2192 float\uff08\u53cd\u91cf\u5316\uff09\uff1a</p> Text Only<pre><code>float_value = scale \u00d7 (quantized - zero_point)\n</code></pre>"},{"location":"deploy/01-rknn/#311-vs","title":"3.1.1 \u5bf9\u79f0\u91cf\u5316 vs \u975e\u5bf9\u79f0\u91cf\u5316","text":"<p>1.\u5bf9\u79f0\u91cf\u5316\uff08Symmetric Quantization\uff09</p> <ul> <li>\u6620\u5c04\u4e2d\u5fc3\u662f <code>0</code></li> <li><code>zero_point = 0</code></li> <li><code>scale = max(|min|, |max|) / (2^(bitwidth-1) - 1)</code></li> </ul> Text Only<pre><code>INT8 \u8303\u56f4\u662f [-127, 127]\nfloat\u8303\u56f4\u4e3a [-6.35, 6.35]\n</code></pre> <p>\u597d\u5904\uff1a\u7b80\u5355\u3001\u9ad8\u6548\u3001\u786c\u4ef6\u5b9e\u73b0\u5bb9\u6613 \u7f3a\u70b9\uff1a\u4e0d\u80fd\u51c6\u786e\u91cf\u5316\u975e\u96f6\u5747\u503c\u7684\u5206\u5e03</p> <p>2.\u975e\u5bf9\u79f0\u91cf\u5316\uff08Asymmetric Quantization\uff09</p> <ul> <li>\u6620\u5c04\u4e2d\u5fc3\u662f <code>min_value</code></li> <li>\u652f\u6301\u4efb\u610f\u96f6\u70b9 <code>zero_point \u2208 [0, 255]</code></li> <li><code>scale = (max - min) / (quant_max - quant_min)</code></li> <li><code>zero_point = quant_min - round(min / scale)</code></li> </ul> <p>\u9002\u5408\u5206\u5e03\u4e0d\u5bf9\u79f0\u7684\u6570\u636e</p>"},{"location":"deploy/01-rknn/#312-per-layer-vs-per-channel","title":"3.1.2 Per-Layer vs Per-Channel \u91cf\u5316","text":"<p>1.Per-Layer\uff1a</p> <ul> <li>\u6574\u4e2a tensor \u4f7f\u7528\u540c\u4e00\u4e2a <code>scale</code> \u548c <code>zero_point</code></li> <li>\u7b80\u5355\u3001\u9ad8\u6548</li> <li>\u4f46\u5bf9\u5206\u5e03\u4e0d\u5747\u5300\u7684\u901a\u9053\u635f\u5931\u5927</li> </ul> <p>2.Per-Channel\uff1a</p> <ul> <li>\u6bcf\u4e2a\u8f93\u51fa\u901a\u9053\u90fd\u6709\u72ec\u7acb\u7684 <code>scale</code>\uff08\u53ea\u4f5c\u7528\u4e8e\u6743\u91cd\uff09</li> <li>\u9002\u7528\u4e8e\u5377\u79ef\u7b49\u5c42\uff0c\u663e\u8457\u63d0\u9ad8\u7cbe\u5ea6</li> <li>NPU \u9700\u8981\u652f\u6301\u5411\u91cf\u5316\u6216\u5e7f\u64ad\u4e58\u6cd5</li> </ul> <p>\u4e3e\u4f8b\uff1a</p> <ul> <li>\u5377\u79ef\u5c42\u6743\u91cd\u662f <code>[C_out, C_in, H, W]</code></li> <li>\u6bcf\u4e2a <code>C_out</code> \u90fd\u72ec\u7acb\u91cf\u5316\uff08\u4e00\u4e2a scale\uff09</li> </ul>"},{"location":"deploy/01-rknn/#313","title":"3.1.3 \u91cf\u5316\u8303\u56f4\u8ba1\u7b97","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u7528\u8fd9\u4e9b\u7b97\u6cd5\u6765\u786e\u5b9a\u91cf\u5316\u8303\u56f4\uff1f</p> <p>\u9ed8\u8ba4\u505a\u91cf\u5316\u65f6\uff0c\u6211\u4eec\u4f1a\u7b80\u5355\u53d6\uff1a</p> Text Only<pre><code>min_value = tensor.min()\nmax_value = tensor.max()\n</code></pre> <p>\u4f46\u8fd9\u6837\u505a\u5bb9\u6613\u53d7**\u6781\u7aef\u5f02\u5e38\u503c\uff08outliers\uff09**\u5f71\u54cd \u2014\u2014 \u6bd4\u5982 99.9% \u7684\u503c\u90fd\u96c6\u4e2d\u5728 [-1, 1]\uff0c\u4f46\u6709\u4e00\u4e2a\u503c\u662f 100\uff0c\u90a3\u4e48\u6574\u4e2a scale \u4f1a\u88ab\u62c9\u5927\uff0c\u5bfc\u81f4\u7cbe\u5ea6\u964d\u4f4e\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u667a\u80fd\u7684\u65b9\u5f0f\u6765\u786e\u5b9a\u4e00\u4e2a\u201c\u66f4\u5408\u9002\u201d\u7684\u91cf\u5316\u8303\u56f4\uff0c\u4fdd\u7559\u4e3b\u8981\u5206\u5e03\u7684\u4fe1\u606f\uff0c\u540c\u65f6\u4e22\u5f03\u5bf9\u7ed3\u679c\u5f71\u54cd\u5c0f\u7684\u5f02\u5e38\u503c\u3002</p> <p>1\ufe0f\u20e3 Normal\uff08\u57fa\u4e8e\u9ad8\u65af\u5206\u5e03\u5047\u8bbe\uff09</p> <p>\u539f\u7406\uff1a</p> <ul> <li>\u5047\u8bbe\u6fc0\u6d3b\u503c\u670d\u4ece\u9ad8\u65af\u5206\u5e03\uff08Normal Distribution\uff09</li> <li>\u6839\u636e\u7edf\u8ba1\u5b66\u7279\u6027\uff0c\u7528\u6807\u51c6\u5dee\u03c3\u63a7\u5236\u8303\u56f4\uff08\u4f8b\u5982 [-3\u03c3, 3\u03c3]\uff09</li> <li>\u901a\u5e38\u53d6\u8303\u56f4\u5305\u542b 99.7% \u7684\u6570\u636e</li> </ul> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u8ba1\u7b97\u7b80\u5355\u3001\u901f\u5ea6\u5feb</li> <li>\u5bf9\u4e2d\u7b49\u5206\u5e03\u7684\u6570\u636e\u6548\u679c\u5c1a\u53ef</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u5982\u679c\u6fc0\u6d3b\u503c\u4e0d\u662f\u6b63\u6001\u5206\u5e03\uff08\u5982 ReLU \u8f93\u51fa\u5168\u662f\u975e\u8d1f\u504f\u6001\uff09\uff0c\u6548\u679c\u8f83\u5dee</li> </ul> <p>2\ufe0f\u20e3 KL\u6563\u5ea6\u6cd5\uff08Kullback\u2013Leibler Divergence\uff09 \u2605\u5e38\u7528\u2605</p> <p>\u539f\u7406\uff1a</p> <ul> <li>\u679a\u4e3e\u591a\u4e2a\u5019\u9009\u7684\u622a\u65ad\u533a\u95f4 <code>[a, b]</code></li> <li>\u6bcf\u4e2a\u533a\u95f4\u5c06 float \u503c\u79bb\u6563\u4e3a\u76f4\u65b9\u56fe\uff08P\uff09\uff0c\u518d\u6620\u5c04\u4e3a int8 \u76f4\u65b9\u56fe\uff08Q\uff09</li> <li>\u8ba1\u7b97 P \u4e0e Q \u7684 KL \u6563\u5ea6\uff08\u8861\u91cf\u4fe1\u606f\u635f\u5931\uff09</li> <li>\u9009\u62e9\u4f7f KL \u6563\u5ea6\u6700\u5c0f\u7684\u8303\u56f4\u4f5c\u4e3a\u6700\u7ec8\u91cf\u5316\u533a\u95f4</li> </ul> <p>\u516c\u5f0f\uff1a</p> Text Only<pre><code>KL(P || Q) = \u03a3 P(x) * log(P(x)/Q(x))\n</code></pre> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u80fd\u4fdd\u7559\u6700\u591a\u7684\u4fe1\u606f\u91cf</li> <li>\u9002\u5408\u5206\u5e03\u590d\u6742\u3001\u504f\u6001\u3001\u5e26\u5c3e\u90e8\u7684\u8f93\u51fa\uff08\u5982 ReLU\uff09</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u8ba1\u7b97\u590d\u6742\uff0c\u901f\u5ea6\u6162\u4e00\u4e9b</li> <li>\u9700\u8981\u8f83\u5927\u6837\u672c\u91cf\u624d\u80fd\u7edf\u8ba1\u7a33\u5b9a</li> </ul> <p>3\ufe0f\u20e3 MMSE\uff08\u6700\u5c0f\u5747\u65b9\u8bef\u5dee\uff09</p> <p>\u539f\u7406\uff1a</p> <ul> <li>\u904d\u5386\u4e0d\u540c\u7684\u622a\u65ad\u8303\u56f4 <code>[a, b]</code></li> <li>\u5bf9\u6bcf\u4e2a\u5019\u9009\u8303\u56f4\uff0c\u6a21\u62df\u91cf\u5316\u2192\u53cd\u91cf\u5316\u8fc7\u7a0b</li> <li>\u8ba1\u7b97\u8bef\u5dee\uff1a</li> </ul> Text Only<pre><code>MSE = mean((fp32_tensor - dequantized_tensor)^2)\n</code></pre> <ul> <li>\u9009\u4f7f\u8bef\u5dee\u6700\u5c0f\u7684\u533a\u95f4\u4f5c\u4e3a\u6700\u7ec8\u91cf\u5316\u533a\u95f4</li> </ul> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u4e0e\u5b9e\u9645\u503c\u7684\u6570\u503c\u8bef\u5dee\u6700\u5c0f</li> <li>\u7cbe\u5ea6\u6709\u65f6\u751a\u81f3\u4f18\u4e8e KL \u6563\u5ea6</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u8ba1\u7b97\u8f83\u590d\u6742\uff0c\u901f\u5ea6\u6162</li> <li>\u4e0e\u5b9e\u9645\u4efb\u52a1\u635f\u5931\uff08\u5982\u5206\u7c7b\u4ea4\u53c9\u71b5\uff09\u4e0d\u76f4\u63a5\u76f8\u5173</li> </ul> <p>\u5bf9\u6bd4\u603b\u7ed3</p> \u65b9\u6cd5 \u5047\u8bbe/\u601d\u60f3 \u4f18\u70b9 \u7f3a\u70b9 \u9002\u5408\u5206\u5e03\u7c7b\u578b Normal \u5047\u8bbe\u6570\u636e\u670d\u4ece\u6b63\u6001\u5206\u5e03 \u5feb\u901f\u3001\u7b80\u5355 \u4e0d\u9002\u5408\u504f\u6001/\u975e\u5bf9\u79f0\u5206\u5e03 \u5bf9\u79f0\u3001\u65e0\u504f\u6570\u636e KL\u6563\u5ea6 \u4fe1\u606f\u635f\u5931\u6700\u5c0f \u7cbe\u5ea6\u597d\u3001\u4fe1\u606f\u4fdd\u7559\u591a \u6162\u3001\u5bf9\u6837\u672c\u4f9d\u8d56\u8f83\u5927 \u975e\u5bf9\u79f0\u3001\u504f\u6001\u5206\u5e03\uff08\u5982ReLU\uff09 MMSE \u6700\u5c0f\u5747\u65b9\u8bef\u5dee \u5bf9\u6570\u503c\u62df\u5408\u6700\u4f18 \u6162\u3001\u4e0d\u4fdd\u8bc1\u4efb\u52a1\u7cbe\u5ea6 \u5bf9\u7cbe\u5ea6\u8981\u6c42\u6781\u9ad8\u4efb\u52a1"},{"location":"deploy/01-rknn/#314","title":"3.1.4 \u91cf\u5316\u914d\u7f6e","text":"<p>\u91cf\u5316\u6570\u636e\u7c7b\u578b\uff1a \u7ebf\u6027\u975e\u5bf9\u79f0INT8 \u91cf\u5316\u7b97\u6cd5\uff1a Normal(default), KL-Divergence, MMSE \u91cf\u5316\u65b9\u6cd5\uff1a Per-Layer, Per-Channel(Default) \u91cf\u5316\u6570\u636e\u96c6\uff1a \u8ba1\u7b97\u6fc0\u6d3b\u503c\uff08\u5404\u5c42\u7684\u8f93\u51fa\u503c\uff09\u7684\u91cf\u5316\u8303\u56f4\uff0c \u5e94\u5305\u542b\u5b9e\u9645\u573a\u666f\u4e2d\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u50cf\uff0c\u4e00\u822c\u63a8\u8350\u6821\u6b63\u6570\u636e\u96c6\u4e3a20-200\u5f20\u3002</p>"},{"location":"deploy/01-rknn/#32","title":"3.2 \u7cbe\u5ea6\u8bc4\u4f30","text":"<p> TODO</p>"},{"location":"deploy/01-rknn/#33","title":"3.3 \u6027\u80fd\u8bc4\u4f30","text":""},{"location":"deploy/01-rknn/#4","title":"4. \u6a21\u578b\u90e8\u7f72","text":"<p><code>RKNN Runtime</code>\u8d1f\u8d23\u52a0\u8f7dRKNN\u6a21\u578b\uff0c\u5e76\u8c03\u7528NPU\u9a71\u52a8\u5b9e\u73b0\u5728NPU\u4e0a\u63a8\u7406RKNN\u6a21\u578b\u3002\u63a8\u7406RKNN\u6a21\u578b\u65f6\uff0c\u5305\u62ec\u539f\u59cb\u6570\u636e\u8f93\u5165\u9884\u5904\u7406\u3001NPU\u8fd0\u884c\u6a21\u578b\u3001\u8f93\u51fa\u540e\u5904\u7406\u4e09\u9879\u6d41\u7a0b\u3002\u6839\u636e\u4e0d\u540c\u6a21\u578b\u8f93\u5165\u683c\u5f0f\u548c\u91cf\u5316\u65b9\u5f0f\uff0cRKNN Runtime\u63d0\u4f9b\u901a\u7528API\u548c\u96f6\u62f7\u8d1dAPI\u4e24\u79cd\u5904\u7406\u6d41\u7a0b</p>"},{"location":"deploy/01-rknn/#41-api","title":"4.1 \u901a\u7528API","text":"<p>\u901a\u7528API\u63a8\u7406\uff1a\u5bf9\u6570\u636e\u7684\u5f52\u4e00\u5316\u3001\u91cf\u5316\u3001\u6570\u636e\u6392\u5e03\u683c\u5f0f\u8f6c\u6362\u3001\u53cd\u91cf\u5316\u7b49\u5747\u5728CPU\u4e0a\u8fd0\u884c\uff08\u5728\u7b26\u5408\u96f6\u62f7\u8d1d\u8f93\u5165\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u5f52\u4e00\u5316\u548c\u91cf\u5316\u4f1a\u8fd0\u884c\u5728NPU\u4e0a\uff0c\u4f46\u8f93\u5165\u6570\u636e\u4ecd\u9700\u8981\u7528CPU\u62f7\u8d1d\u5230\u6a21\u578b\u7684\u8f93\u5165buffer\u4e0a\uff09\uff0c\u6a21\u578b\u672c\u8eab\u7684\u63a8\u7406\u5728NPU\u4e0a\u8fd0\u884c </p> <p>\u677f\u7aefC API\u63a8\u7406</p> <p></p> <p>RKNN\u901a\u7528API\u63a5\u53e3\u8c03\u7528\u6d41\u7a0b\uff1a 1. \u8c03\u7528 <code>rknn_init()</code> \u63a5\u53e3\u521d\u59cb\u5316\u6a21\u578b\uff1b 2. \u8c03\u7528 <code>rknn_query()</code> \u63a5\u53e3\u67e5\u8be2\u6a21\u578b\u7684\u8f93\u5165\u8f93\u51fa\u5c5e\u6027\uff1b 3. \u5bf9\u8f93\u5165\u8fdb\u884c\u524d\u5904\u7406\uff1b 4. \u8c03\u7528 <code>rknn_inputs_set()</code> \u63a5\u53e3\u8bbe\u7f6e\u8f93\u5165\u6570\u636e; 5. \u8c03\u7528 <code>rknn_run()</code> \u63a5\u53e3\u8fdb\u884c\u6a21\u578b\u63a8\u7406\uff1b 6. \u8c03\u7528 <code>rknn_outputs_get()</code> \u63a5\u53e3\u83b7\u53d6\u63a8\u7406\u7ed3\u679c\u6570\u636e\uff1b 7. \u5bf9\u8f93\u51fa\u8fdb\u884c\u540e\u5904\u7406\uff1b 8. \u8c03\u7528 <code>rknn_outputs_release()</code> \u63a5\u53e3\u91ca\u653e\u8f93\u51fa\u6570\u636e\u5185\u5b58\uff1b 9. \u8c03\u7528 <code>rknn_destroy()</code> \u63a5\u53e3\u9500\u6bc1RKNN;</p> <p>\u901a\u7528API\u8c03\u7528\u6d41\u7a0b\u4ee3\u7801\u793a\u4f8b</p> C++<pre><code>// Init RKNN model\nret = rknn_init(&amp;ctx, model, model_len, 0, NULL);\n// Get Model Input Output Number\nrknn_input_output_num io_num;\nret = rknn_query(ctx, RKNN_QUERY_IN_OUT_NUM, &amp;io_num, sizeof(io_num));\n// Get Model Input Info\nrknn_tensor_attr input_attrs[io_num.n_input];\nmemset(input_attrs, 0, sizeof(input_attrs));\nfor (int i = 0; i &lt; io_num.n_input; i++)\n{\n      input_attrs[i].index = i;\n      ret = rknn_query(ctx, RKNN_QUERY_INPUT_ATTR, &amp;(input_attrs[i]), sizeof(rknn_tensor_attr));\n}\n// Get Model Output Info\nrknn_tensor_attr output_attrs[io_num.n_output];\nmemset(output_attrs, 0, sizeof(output_attrs));\nfor (int i = 0; i &lt; io_num.n_output; i++)\n{\n      output_attrs[i].index = i;\n      ret = rknn_query(ctx, RKNN_QUERY_OUTPUT_ATTR, &amp;(output_attrs[i]), sizeof(rknn_tensor_attr));\n}\nrknn_input inputs[io_num.n_input];\nrknn_output outputs[io_num.n_output];\nmemset(inputs, 0, sizeof(inputs));\nmemset(outputs, 0, sizeof(outputs));\n// Pre-process\n// Read Image\nimage_buffer_t src_image;\nmemset(&amp;src_image, 0, sizeof(image_buffer_t));\nret = read_image(image_path, &amp;src_image);\n// Set Input Data\ninputs[0].index = 0;\ninputs[0].type = RKNN_TENSOR_UINT8;\ninputs[0].fmt = RKNN_TENSOR_NHWC;\ninputs[0].size = src_image.size;\ninputs[0].buf = src_image.virt_addr;\nret = rknn_inputs_set(rknn_ctx, io_num.n_input, inputs);\n// Run\nret = rknn_run(rknn_ctx, nullptr);\n// Get Output Data\nret = rknn_outputs_get(rknn_ctx, io_num.n_output, outputs, NULL);\n// Post-process\npost_process(outputs, results);\n// Release RKNN Output\nrknn_outputs_release(rknn_ctx, io_num.n_output, outputs);\nif (rknn_ctx != 0)\n{\n      rknn_destroy(rknn_ctx);\n}\n</code></pre>"},{"location":"deploy/01-rknn/#42-api","title":"4.2 \u96f6\u62f7\u8d1dAPI","text":"<p>\u96f6\u62f7\u8d1dAPI\u63a8\u7406\uff1a\u6d41\u7a0b\u5982\u56fe\u6240\u793a\u3002\u4f18\u5316\u4e86\u901a\u7528API\u7684\u6570\u636e\u5904\u7406\u6d41\u7a0b\uff0c\u5f52\u4e00\u5316\u3001\u91cf\u5316\u548c\u6a21\u578b\u63a8\u7406\u90fd\u4f1a\u5728NPU\u4e0a\u8fd0\u884c\uff0cNPU\u8f93\u51fa\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u548c\u53cd\u91cf\u5316\u8fc7\u7a0b\u5728CPU\u6216\u8005NPU\u4e0a\u8fd0\u884c\u3002\u96f6\u62f7\u8d1dAPI\u5bf9\u4e8e\u8f93\u5165\u6570\u636e\u6d41\u7a0b\u7684\u5904\u7406\u6548\u7387\u4f1a\u6bd4\u901a\u7528API\u9ad8\u3002\u652f\u6301\u6570\u636e\u5728\u4e0d\u540c\u7684IP\u6838\u4e4b\u95f4\u6d41\u52a8\uff0c\u6ca1\u6709\u6570\u636e\u62f7\u8d1d\uff0c\u51cf\u5c11CPU\u53caDDR\u5e26\u5bbd\u6d88\u8017\u3002\u6bd4\u5982\u901a\u8fc7camera\u6216\u8005\u89e3\u7801\u51fa\u6765\u7684\u6570\u636e\uff0c\u652f\u6301\u96f6\u62f7\u8d1d\u5bfc\u5165\u5230NPU\u4e2d\u4f7f\u7528 </p> <p>\u677f\u7aefC \u96f6\u62f7\u8d1dAPI\u63a8\u7406</p> <p></p> <p>RKNN\u96f6\u62f7\u8d1dAPI\u63a5\u53e3\u8c03\u7528\u6d41\u7a0b\uff1a 1. \u8c03\u7528 <code>rknn_init()</code> \u63a5\u53e3\u521d\u59cb\u5316\u6a21\u578b\uff1b 2. \u8c03\u7528 <code>rknn_query()</code> \u63a5\u53e3\u67e5\u8be2\u6a21\u578b\u7684\u8f93\u5165\u8f93\u51fa\u5c5e\u6027\uff1b 3. \u4f7f\u7528 <code>rknn_create_mem()</code> \u5206\u914d\u8f93\u5165\u8f93\u51fa\u5185\u5b58\uff1b 4. \u8c03\u7528 <code>rknn_set_io_mem()</code> \u7ed1\u5b9a\u8f93\u5165\u8f93\u51fa\u5185\u5b58\uff08\u4e00\u6b21\u6027\uff09\uff1b 5. \u5bf9\u8f93\u5165\u8fdb\u884c\u524d\u5904\u7406\uff0c\u5e76\u5c06\u6570\u636e <code>memcpy</code> \u5230\u7ed1\u5b9a\u7684\u8f93\u5165\u5185\u5b58\uff1b 6. \u8c03\u7528 <code>rknn_run()</code> \u63a5\u53e3\u8fdb\u884c\u6a21\u578b\u63a8\u7406\uff1b 7. \u76f4\u63a5\u4f7f\u7528\u7ed1\u5b9a\u7684\u8f93\u51fa\u5185\u5b58\uff08\u65e0\u9700\u8c03\u7528 <code>rknn_outputs_get()</code>\uff09\u8fdb\u884c\u540e\u5904\u7406\uff1b 8. \u4e0d\u9700\u8981\u8c03\u7528 <code>rknn_outputs_release()</code>\uff1b 9. \u8c03\u7528 <code>rknn_destroy()</code> \u63a5\u53e3\u9500\u6bc1 RKNN \u53e5\u67c4</p> <p>\u901a\u7528API\u8c03\u7528\u6d41\u7a0b\u4ee3\u7801\u793a\u4f8b C++<pre><code>// 1. \u521d\u59cb\u5316\u6a21\u578b\nret = rknn_init(&amp;ctx, model, model_len, 0, NULL);\n\n// 2. \u67e5\u8be2\u8f93\u5165\u8f93\u51fa\u6570\u91cf\nrknn_input_output_num io_num;\nret = rknn_query(ctx, RKNN_QUERY_IN_OUT_NUM, &amp;io_num, sizeof(io_num));\n\n// 3. \u67e5\u8be2\u8f93\u5165\u4fe1\u606f\nrknn_tensor_attr input_attrs[io_num.n_input];\nmemset(input_attrs, 0, sizeof(input_attrs));\nfor (int i = 0; i &lt; io_num.n_input; i++)\n{\n    input_attrs[i].index = i;\n    ret = rknn_query(ctx, RKNN_QUERY_INPUT_ATTR, &amp;input_attrs[i], sizeof(rknn_tensor_attr));\n}\n\n// 4. \u67e5\u8be2\u8f93\u51fa\u4fe1\u606f\nrknn_tensor_attr output_attrs[io_num.n_output];\nmemset(output_attrs, 0, sizeof(output_attrs));\nfor (int i = 0; i &lt; io_num.n_output; i++)\n{\n    output_attrs[i].index = i;\n    ret = rknn_query(ctx, RKNN_QUERY_OUTPUT_ATTR, &amp;output_attrs[i], sizeof(rknn_tensor_attr));\n}\n\n// 5. \u521b\u5efa\u8f93\u5165\u8f93\u51fa\u5185\u5b58\uff08Zero-Copy\u6838\u5fc3\uff09\nrknn_tensor_mem* input_mems[io_num.n_input];\nrknn_tensor_mem* output_mems[io_num.n_output];\n\n// \u5206\u914d\u8f93\u5165\u5185\u5b58\uff08\u5982 640x640x3\uff09\ninput_mems[0] = rknn_create_mem(ctx, input_attrs[0].size_with_stride);\n\n// \u5206\u914d\u8f93\u51fa\u5185\u5b58\uff08\u6ce8\u610f\u9700\u6309 float32 \u63a8\u7406\uff09\nfor (int i = 0; i &lt; io_num.n_output; ++i)\n{\n    int out_size = output_attrs[i].n_elems * sizeof(float);\n    output_mems[i] = rknn_create_mem(ctx, out_size);\n}\n\n// 6. \u7ed1\u5b9a\u8f93\u5165\u8f93\u51fa\u5185\u5b58\uff08\u4e00\u6b21\u6027\u7ed1\u5b9a\uff0c\u63a8\u7406\u53ef\u590d\u7528\uff09\ninput_attrs[0].type = RKNN_TENSOR_UINT8;\ninput_attrs[0].fmt  = RKNN_TENSOR_NHWC;\nret = rknn_set_io_mem(ctx, input_mems[0], &amp;input_attrs[0]);\n\nfor (int i = 0; i &lt; io_num.n_output; i++)\n{\n    output_attrs[i].type = RKNN_TENSOR_FLOAT32;\n    ret = rknn_set_io_mem(ctx, output_mems[i], &amp;output_attrs[i]);\n}\n\n// 7. \u8bfb\u53d6\u56fe\u50cf\u5e76\u9884\u5904\u7406\nimage_buffer_t src_image;\nmemset(&amp;src_image, 0, sizeof(image_buffer_t));\nret = read_image(image_path, &amp;src_image);\n\nimage_buffer_t resized_image;\nmemset(&amp;resized_image, 0, sizeof(image_buffer_t));\nresized_image.width = input_attrs[0].dims[2];\nresized_image.height = input_attrs[0].dims[1];\nresized_image.format = IMAGE_FORMAT_RGB888;\nresized_image.size = resized_image.width * resized_image.height * 3;\nresized_image.virt_addr = (uint8_t*)malloc(resized_image.size);\n\n// \u56fe\u50cf\u7f29\u653e\uff08letterbox\u7b49\uff09\nret = convert_image_with_letterbox(&amp;src_image, &amp;resized_image, NULL, 114);\n\n// \u5c06\u9884\u5904\u7406\u540e\u7684\u6570\u636e\u5199\u5165 input_mems\nmemcpy(input_mems[0]-&gt;virt_addr, resized_image.virt_addr, resized_image.size);\n\n// 8. \u63a8\u7406\nret = rknn_run(ctx, nullptr);\n\n// 9. \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff08\u76f4\u63a5\u6307\u5411 output_mems[i]-&gt;virt_addr\uff09\nrknn_output outputs[io_num.n_output];\nfor (int i = 0; i &lt; io_num.n_output; i++)\n{\n    outputs[i].index = i;\n    outputs[i].is_quant = 0;\n    outputs[i].buf = output_mems[i]-&gt;virt_addr;\n    outputs[i].size = output_attrs[i].n_elems * sizeof(float);\n}\n\n// 10. \u540e\u5904\u7406\npost_process(outputs, results);\n\n// 11. \u91ca\u653e\u56fe\u50cf\u5185\u5b58\nfree(resized_image.virt_addr);\nrelease_image(&amp;src_image);\n\n// 12. \u9500\u6bc1 RKNN \u4e0a\u4e0b\u6587\nif (ctx &gt; 0) {\n    rknn_destroy(ctx);\n}\n</code></pre> | \u6b65\u9aa4         | \u666e\u901a\u65b9\u5f0f                                        | \u96f6\u62f7\u8d1d\u65b9\u5f0f                                         | | ---------- | ------------------------------------------- | --------------------------------------------- | | \u6a21\u578b\u521d\u59cb\u5316      | \u2705 \u4e00\u6837\uff0c\u7528 <code>rknn_init</code>                          |        -                                       | | \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u4fe1\u606f | \u2705 \u4e00\u6837\uff0c\u4f7f\u7528 <code>rknn_query</code>                        |           -                                    | | \u8f93\u5165\u8f93\u51fa\u5c5e\u6027\u7ed3\u6784\u5904\u7406 | \u2705 \u4e00\u6837\uff0c\u4f7f\u7528 <code>rknn_tensor_attr</code>                  |         -                                      | | \u5185\u5b58\u5206\u914d   | \u274c \u4e0d\u624b\u52a8\u5206\u914d\uff0c\u63a8\u7406\u65f6\u4f20 <code>rknn_inputs</code> \u548c <code>rknn_outputs</code> | \u2705 \u624b\u52a8\u4f7f\u7528 <code>rknn_create_mem()</code> \u521b\u5efa\u5185\u5b58               | | \u5185\u5b58\u7ed1\u5b9a   | \u274c \u4e0d\u7ed1\u5b9a\u5185\u5b58                                     | \u2705 \u4f7f\u7528 <code>rknn_set_io_mem()</code> \u624b\u52a8\u7ed1\u5b9a input/output \u5185\u5b58 | | \u6570\u636e\u8f93\u5165\u65b9\u5f0f     | \u6784\u9020 <code>rknn_input inputs[]</code>\u8bbe\u7f6e <code>.buf</code>                      | \u76f4\u63a5\u5c06\u6570\u636e\u586b\u5145\u8fdb\u5df2\u7ed1\u5b9a\u7684 <code>rknn_tensor_mem-&gt;virt_addr</code>     | | \u6570\u636e\u8f93\u51fa\u65b9\u5f0f     | \u6784\u9020 <code>rknn_output outputs[]</code>\u8c03\u7528 <code>rknn_outputs_get()</code> \u83b7\u53d6\u6570\u636e | \u76f4\u63a5\u6307\u5411 <code>output_mem[i]-&gt;virt_addr</code>| | \u63a8\u7406\u6267\u884c | <code>rknn_run(ctx, NULL)</code>                                      | <code>rknn_run(ctx, NULL)</code>                  | | \ud83d\udcbe \u6570\u636e\u62f7\u8d1d | \u6bcf\u6b21\u90fd\u62f7\u8d1d <code>input -&gt; RKNN\u5185\u90e8</code>                                    | \u4e00\u6b21 memcpy \u5230\u7ed1\u5b9a mem                      | | \ud83d\udca1 \u4f18\u70b9   | \u7b80\u5355\uff0cAPI \u5b8c\u5584                                                  | \u5feb\uff0c\u5ef6\u8fdf\u4f4e                                  | </p>"},{"location":"deploy/01-rknn/#43-yolov5-demo","title":"4.3 yolov5 demo","text":""},{"location":"deploy/01-rknn/#431","title":"4.3.1 \u901a\u7528\u65b9\u5f0f\u521d\u59cb\u5316","text":"C++<pre><code>int init_yolov5_model(const char *model_path, rknn_app_context_t *app_ctx)\n{\n    int ret;\n    int model_len = 0;\n    rknn_context ctx = 0;\n\n    // 1. \u52a0\u8f7d\u6a21\u578b\u5e76\u521d\u59cb\u5316\n    unsigned char* model = load_model(model_path, &amp;model_len);\n    if (!model) return -1;\n    ret = rknn_init(&amp;ctx, model, model_len, 0, NULL);\n    free(model);\n    if (ret &lt; 0) return -1;\n\n    // 2.\u67e5\u8be2\u8f93\u5165\u8f93\u51fa\u4e2a\u6570\n    rknn_input_output_num io_num;\n    ret = rknn_query(ctx, RKNN_QUERY_IN_OUT_NUM, &amp;io_num, sizeof(io_num));\n    if (ret != RKNN_SUCC) return -1;\n\n    // 3.\u67e5\u8be2\u8f93\u5165\u8f93\u51fa\u5c5e\u6027\n    rknn_tensor_attr input_attrs[io_num.n_input];\n    memset(input_attrs, 0, sizeof(input_attrs));\n    for (int i = 0; i &lt; io_num.n_input; i++) {\n        input_attrs[i].index = i;\n        rknn_query(ctx, RKNN_QUERY_INPUT_ATTR, &amp;input_attrs[i], sizeof(rknn_tensor_attr));\n    }\n\n    rknn_tensor_attr output_attrs[io_num.n_output];\n    memset(output_attrs, 0, sizeof(output_attrs));\n    for (int i = 0; i &lt; io_num.n_output; i++) {\n        output_attrs[i].index = i;\n        rknn_query(ctx, RKNN_QUERY_OUTPUT_ATTR, &amp;output_attrs[i], sizeof(rknn_tensor_attr));\n    }\n\n    // 4.\u4fdd\u5b58\u4fe1\u606f\u5230\u4e0a\u4e0b\u6587\n    app_ctx-&gt;rknn_ctx = ctx;\n    app_ctx-&gt;io_num = io_num;\n    app_ctx-&gt;input_attrs = (rknn_tensor_attr *)malloc(io_num.n_input * sizeof(rknn_tensor_attr));\n    memcpy(app_ctx-&gt;input_attrs, input_attrs, io_num.n_input * sizeof(rknn_tensor_attr));\n    app_ctx-&gt;output_attrs = (rknn_tensor_attr *)malloc(io_num.n_output * sizeof(rknn_tensor_attr));\n    memcpy(app_ctx-&gt;output_attrs, output_attrs, io_num.n_output * sizeof(rknn_tensor_attr));\n    app_ctx-&gt;is_quant = (output_attrs[0].qnt_type == RKNN_TENSOR_QNT_AFFINE_ASYMMETRIC &amp;&amp;\n                         output_attrs[0].type != RKNN_TENSOR_FLOAT16);\n\n    // \u63d0\u53d6\u6a21\u578b\u8f93\u5165\u5927\u5c0f\n    if (input_attrs[0].fmt == RKNN_TENSOR_NCHW) {\n        app_ctx-&gt;model_channel = input_attrs[0].dims[1];\n        app_ctx-&gt;model_height = input_attrs[0].dims[2];\n        app_ctx-&gt;model_width = input_attrs[0].dims[3];\n    } else {\n        app_ctx-&gt;model_height = input_attrs[0].dims[1];\n        app_ctx-&gt;model_width = input_attrs[0].dims[2];\n        app_ctx-&gt;model_channel = input_attrs[0].dims[3];\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"deploy/01-rknn/#432-zero-copy","title":"4.3.2 zero-copy\u65b9\u5f0f\u521d\u59cb\u5316","text":"<p>C++<pre><code>int init_yolov5_zero_copy_model(const char *model_path, rknn_app_context_t *app_ctx)\n{\n    int ret, model_len = 0;\n    rknn_context ctx = 0;\n\n    // 1. \u52a0\u8f7d\u6a21\u578b\u5e76\u521d\u59cb\u5316\n    unsigned char* model = load_model(model_path, &amp;model_len);\n    if (!model) return -1;\n    ret = rknn_init(&amp;ctx, model, model_len, 0, NULL);\n    free(model);\n    if (ret &lt; 0) return -1;\n\n    // \u2705 \u548c\u666e\u901a\u65b9\u5f0f\u76f8\u540c\uff1a\u67e5\u8be2\u8f93\u5165\u8f93\u51fa\u4e2a\u6570\n    rknn_input_output_num io_num;\n    ret = rknn_query(ctx, RKNN_QUERY_IN_OUT_NUM, &amp;io_num, sizeof(io_num));\n    if (ret != RKNN_SUCC) return -1;\n\n    // \u2705 \u67e5\u8be2\u8f93\u5165\u8f93\u51fa\u5c5e\u6027\n    rknn_tensor_attr input_attrs[io_num.n_input];\n    memset(input_attrs, 0, sizeof(input_attrs));\n    for (int i = 0; i &lt; io_num.n_input; i++) {\n        input_attrs[i].index = i;\n        rknn_query(ctx, RKNN_QUERY_INPUT_ATTR, &amp;input_attrs[i], sizeof(rknn_tensor_attr));\n    }\n\n    rknn_tensor_attr output_attrs[io_num.n_output];\n    memset(output_attrs, 0, sizeof(output_attrs));\n    for (int i = 0; i &lt; io_num.n_output; i++) {\n        output_attrs[i].index = i;\n        rknn_query(ctx, RKNN_QUERY_OUTPUT_ATTR, &amp;output_attrs[i], sizeof(rknn_tensor_attr));\n    }\n\n    // \u2705 \u4fdd\u5b58\u4fe1\u606f\u5230\u4e0a\u4e0b\u6587\n    app_ctx-&gt;rknn_ctx = ctx;\n    app_ctx-&gt;io_num = io_num;\n    app_ctx-&gt;is_quant = (output_attrs[0].qnt_type == RKNN_TENSOR_QNT_AFFINE_ASYMMETRIC &amp;&amp;\n                         output_attrs[0].type != RKNN_TENSOR_FLOAT16);\n\n    app_ctx-&gt;input_attrs = (rknn_tensor_attr *)malloc(io_num.n_input * sizeof(rknn_tensor_attr));\n    memcpy(app_ctx-&gt;input_attrs, input_attrs, io_num.n_input * sizeof(rknn_tensor_attr));\n    app_ctx-&gt;output_attrs = (rknn_tensor_attr *)malloc(io_num.n_output * sizeof(rknn_tensor_attr));\n    memcpy(app_ctx-&gt;output_attrs, output_attrs, io_num.n_output * sizeof(rknn_tensor_attr));\n\n    // \u2705 \u63d0\u53d6\u6a21\u578b\u8f93\u5165\u5927\u5c0f\n    if (input_attrs[0].fmt == RKNN_TENSOR_NCHW) {\n        app_ctx-&gt;model_channel = input_attrs[0].dims[1];\n        app_ctx-&gt;model_height = input_attrs[0].dims[2];\n        app_ctx-&gt;model_width = input_attrs[0].dims[3];\n    } else {\n        app_ctx-&gt;model_height = input_attrs[0].dims[1];\n        app_ctx-&gt;model_width = input_attrs[0].dims[2];\n        app_ctx-&gt;model_channel = input_attrs[0].dims[3];\n    }\n\n    // \u2705 Zero-Copy \u4e13\u5c5e\uff1a\u521b\u5efa\u8f93\u5165\u8f93\u51fa mem \u6307\u9488\u6570\u7ec4\n    app_ctx-&gt;input_mems = (rknn_tensor_mem**)malloc(sizeof(rknn_tensor_mem*) * io_num.n_input);\n    app_ctx-&gt;output_mems = (rknn_tensor_mem**)malloc(sizeof(rknn_tensor_mem*) * io_num.n_output);\n\n    // \u2705 Zero-Copy \u4e13\u5c5e\uff1a\u8bbe\u7f6e\u8f93\u5165\u5c5e\u6027\u5e76\u521b\u5efa mem\uff08\u4fee\u6539 type &amp; fmt\uff09\n    app_ctx-&gt;input_attrs[0].type = RKNN_TENSOR_UINT8;\n    app_ctx-&gt;input_attrs[0].fmt = RKNN_TENSOR_NHWC;\n    app_ctx-&gt;input_mems[0] = rknn_create_mem(ctx, input_attrs[0].size_with_stride);\n\n    // \u2705 Zero-Copy \u4e13\u5c5e\uff1a\u4e3a\u8f93\u51fa\u5206\u914d\u5185\u5b58\uff08\u6309 float \u5927\u5c0f\uff09\n    for (uint32_t i = 0; i &lt; io_num.n_output; ++i) {\n        int output_size = output_attrs[i].n_elems * sizeof(float);\n        app_ctx-&gt;output_mems[i] = rknn_create_mem(ctx, output_size);\n    }\n\n    // \u2705 Zero-Copy \u4e13\u5c5e\uff1a\u7ed1\u5b9a\u8f93\u5165/\u8f93\u51fa\u5185\u5b58\n    ret = rknn_set_io_mem(ctx, app_ctx-&gt;input_mems[0], &amp;app_ctx-&gt;input_attrs[0]);\n    if (ret &lt; 0) return -1;\n\n    for (uint32_t i = 0; i &lt; io_num.n_output; ++i) {\n        app_ctx-&gt;output_attrs[i].type = RKNN_TENSOR_FLOAT32; // \u8bbe\u7f6e\u8f93\u51fa\u4e3a float32 \u7c7b\u578b\n        ret = rknn_set_io_mem(ctx, app_ctx-&gt;output_mems[i], &amp;app_ctx-&gt;output_attrs[i]);\n        if (ret &lt; 0) return -1;\n    }\n\n    return 0;\n}\n</code></pre> - <code>rknn_create_mem</code>       \u96f6\u62f7\u8d1dAPI\u63a5\u53e3\u4f7f\u7528 <code>rknn_tensor_memory</code> \u7ed3\u6784\u4f53\uff0c\u9700\u8981\u5728\u63a8\u7406\u524d\u521b\u5efa\u5e76\u8bbe\u7f6e\u8be5\u7ed3\u6784\u4f53\uff0c\u5e76\u5728\u63a8\u7406\u540e\u8bfb\u53d6\u8be5\u7ed3\u6784\u4f53\u4e2d\u7684\u5185\u5b58\u4fe1\u606f\u3002\u5f53\u65e0\u9700\u5bf9 <code>RKNN_QUERY_NATIVE_OUTPUT_ATTR</code> \u67e5\u8be2\u51fa\u6765\u7684layout\u548ctype\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u76f4\u63a5\u91c7\u7528\u9ed8\u8ba4\u914d\u7f6e\u7684<code>size_with_stride</code> \u521b\u5efa\u5185\u5b58\u5927\u5c0f\u3002\u82e5\u4fee\u6539\u4e86\u76f8\u5e94\u7684layout\u548ctype\uff0c\u5219\u9700\u6309\u7167\u76f8\u5e94\u7684size \u521b\u5efa\u5185\u5b58\u5927\u5c0f.(\u4f8b\u5982\u8f93\u51fa\u7684\u6570\u636e\u7c7b\u578b\u662fint8\uff0c\u7528\u6237\u60f3\u83b7\u53d6\u6210float32\u7c7b\u578b\u8f93\u51fa\uff0csize\u8981\u4fee\u6539\u6210\u539fsize\u7684\u56db\u500d) - <code>rknn_set_io_mem</code> <code>rknn_set_io_mem()</code>\u7528\u4e8e\u8bbe\u7f6e\u5305\u542b\u6a21\u578b\u8f93\u5165/\u8f93\u51fa\u5185\u5b58\u4fe1\u606f\u7684<code>rknn_tensor_mem</code>\u7ed3\u6784\u4f53\uff0c\u548c<code>rknn_init()</code>\u7c7b\u4f3c\uff0c\u53ea\u8981\u5728\u6700\u5f00\u59cb\u8c03\u7528\u4e00\u6b21\uff0c\u540e\u9762\u53cd\u590d\u6267\u884c<code>rknn_run()</code>\u5373\u53ef\u3002</p>"},{"location":"deploy/01-rknn/#433","title":"4.3.3 \u901a\u7528\u65b9\u5f0f\u63a8\u7406","text":"C++<pre><code>int inference_yolov5_model(rknn_app_context_t *app_ctx,\n                           image_buffer_t *img,\n                           object_detect_result_list *od_results,\n                           float nms_thresh, float box_thresh, int obj_class_num)\n{\n    if (!app_ctx || !img || !od_results) return -1;\n\n    int ret = 0;\n    const int bg_color = 114;\n    image_buffer_t dst_img = {};\n    letterbox_t letter_box = {};\n    rknn_input inputs[1] = {};\n    rknn_output outputs[app_ctx-&gt;io_num.n_output] = {};\n\n    // 1. \u9884\u5904\u7406\uff1a\u5206\u914d\u56fe\u50cf\u5185\u5b58\u5e76\u505aletterbox\n    dst_img.width = app_ctx-&gt;model_width;\n    dst_img.height = app_ctx-&gt;model_height;\n    dst_img.format = IMAGE_FORMAT_RGB888;\n    dst_img.size = get_image_size(&amp;dst_img);\n    dst_img.virt_addr = (uint8_t*)malloc(dst_img.size);\n\n    if (!dst_img.virt_addr) return -1;\n    ret = convert_image_with_letterbox(img, &amp;dst_img, &amp;letter_box, bg_color);\n    if (ret &lt; 0) goto out;\n\n    // 2. \u8bbe\u7f6e\u8f93\u5165\n    inputs[0].index = 0;\n    inputs[0].type = RKNN_TENSOR_UINT8;\n    inputs[0].fmt = RKNN_TENSOR_NHWC;\n    inputs[0].size = dst_img.size;\n    inputs[0].buf = dst_img.virt_addr;\n    inputs[0].pass_through = 0;\n\n    ret = rknn_inputs_set(app_ctx-&gt;rknn_ctx, 1, inputs);\n    if (ret &lt; 0) {\n        printf(\"rknn_inputs_set fail! ret=%d\\n\", ret);\n        goto out;\n    }\n\n    // 3. \u63a8\u7406\n    ret = rknn_run(app_ctx-&gt;rknn_ctx, NULL);\n    if (ret &lt; 0) {\n        printf(\"rknn_run fail! ret=%d\\n\", ret);\n        goto out;\n    }\n\n    // 4. \u83b7\u53d6\u8f93\u51fa\n    for (int i = 0; i &lt; app_ctx-&gt;io_num.n_output; i++) {\n        outputs[i].want_float = 1;\n    }\n\n    ret = rknn_outputs_get(app_ctx-&gt;rknn_ctx, app_ctx-&gt;io_num.n_output, outputs, NULL);\n    if (ret &lt; 0) {\n        printf(\"rknn_outputs_get fail! ret=%d\\n\", ret);\n        goto out;\n    }\n\n    // 5. \u540e\u5904\u7406\n    post_process(app_ctx, outputs, &amp;letter_box, box_thresh, nms_thresh, od_results, obj_class_num);\n\n    // 6. \u91ca\u653e\u8f93\u51fa\n    rknn_outputs_release(app_ctx-&gt;rknn_ctx, app_ctx-&gt;io_num.n_output, outputs);\n\nout:\n    if (dst_img.virt_addr) {\n        free(dst_img.virt_addr);\n    }\n\n    return ret;\n}\n</code></pre>"},{"location":"deploy/01-rknn/#434-zero-copy","title":"4.3.4 zero-copy\u65b9\u5f0f\u63a8\u7406","text":"C++<pre><code>int inference_yolov5_zero_copy_model(rknn_app_context_t *app_ctx,\n                                     image_buffer_t *img,\n                                     object_detect_result_list *od_results,\n                                     float nms_thresh, float box_thresh, int obj_class_num)\n{\n    if (!app_ctx || !img || !od_results) return -1;\n\n    int ret = 0;\n    const int bg_color = 114;\n    image_buffer_t dst_img = {};\n    letterbox_t letter_box = {};\n    rknn_output outputs[app_ctx-&gt;io_num.n_output] = {};\n\n    // 1. \u9884\u5904\u7406\uff1a\u5206\u914d dst_img\uff0c\u505a letterbox \u7f29\u653e\n    dst_img.width = app_ctx-&gt;model_width;\n    dst_img.height = app_ctx-&gt;model_height;\n    dst_img.format = IMAGE_FORMAT_RGB888;\n    dst_img.size = get_image_size(&amp;dst_img);\n    dst_img.virt_addr = (uint8_t*)malloc(dst_img.size);  // \u53ef\u66ff\u6362\u6210 DMA buffer\n\n    if (!dst_img.virt_addr) return -1;\n    ret = convert_image_with_letterbox(img, &amp;dst_img, &amp;letter_box, bg_color);\n    if (ret &lt; 0) goto out;\n\n    // 2. \u8f93\u5165\u62f7\u8d1d\u5230 rknn_input_mem\uff08Zero-Copy \u5df2\u7ed1\u5b9a\uff0c\u53ea\u9700\u5199\u5185\u5b58\uff09\n    int height  = app_ctx-&gt;input_attrs[0].dims[1];\n    int width   = app_ctx-&gt;input_attrs[0].dims[2];\n    int stride  = app_ctx-&gt;input_attrs[0].w_stride;\n    int channel = app_ctx-&gt;input_attrs[0].dims[3];\n\n    if (stride == width) {\n        memcpy(app_ctx-&gt;input_mems[0]-&gt;virt_addr, dst_img.virt_addr, width * height * channel);\n    } else {\n        // \u8de8\u6b65\u62f7\u8d1d\uff08\u8003\u8651\u5230 NPU \u5bf9\u9f50\uff09\n        uint8_t *src = dst_img.virt_addr;\n        uint8_t *dst = (uint8_t *)app_ctx-&gt;input_mems[0]-&gt;virt_addr;\n        for (int h = 0; h &lt; height; h++) {\n            memcpy(dst, src, width * channel);\n            src += width * channel;\n            dst += stride * channel;\n        }\n    }\n\n    // 3. \u6267\u884c\u63a8\u7406\uff08\u65e0\u9700\u8bbe\u7f6e input/output\uff09\n    ret = rknn_run(app_ctx-&gt;rknn_ctx, NULL);\n    if (ret &lt; 0) goto out;\n\n    // 4. \u6784\u9020 output \u6307\u9488\uff08\u76f4\u63a5\u6307\u5411\u7ed1\u5b9a\u5185\u5b58\uff09\n    for (int i = 0; i &lt; app_ctx-&gt;io_num.n_output; i++) {\n        outputs[i].buf = app_ctx-&gt;output_mems[i]-&gt;virt_addr;\n    }\n\n    // 5. \u540e\u5904\u7406\uff08\u8f93\u51fa\u68c0\u6d4b\u7ed3\u679c\uff09\n    post_process(app_ctx, outputs, &amp;letter_box, box_thresh, nms_thresh, od_results, obj_class_num);\n\nout:\n    if (dst_img.virt_addr) free(dst_img.virt_addr);\n    return ret;\n}\n</code></pre> <p>\u901a\u7528\u65b9\u5f0f\u6bcf\u6b21\u66f4\u65b0\u5e27\u6570\u636e\uff0c\u9700\u8981\u5c06\u5916\u90e8\u6a21\u5757\u5206\u914d\u7684\u6570\u636e\u62f7\u8d1d\u5230NPU\u8fd0\u884c\u65f6\u7684\u8f93\u5165\u5185\u5b58\uff0c\u800c\u96f6\u62f7\u8d1d\u6d41\u7a0b\u7684\u63a5\u53e3\u4f1a\u76f4\u63a5\u4f7f\u7528\u9884\u5148\u5206\u914d\u7684\u5185\u5b58\uff08\u5305\u62ecNPU\u8fd0\u884c\u65f6\u521b\u5efa\u7684\u6216\u5916\u90e8\u5176\u4ed6\u6846\u67b6\u521b\u5efa\u7684\uff0c\u6bd4\u5982DRM\u6846\u67b6\uff09\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u62f7\u8d1d\u7684\u82b1\u9500\uff0c\u6027\u80fd\u66f4\u4f18\uff0c\u5e26\u5bbd\u66f4\u5c11\u3002</p>"},{"location":"deploy/cpu/","title":"cpu","text":"<p>CPU\u5360\u7528\u7387\uff08%CPU\uff09\u901a\u5e38\u8868\u793a\u67d0\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u4f7f\u7528\u7684CPU\u65f6\u95f4\u5360\u6574\u4e2aCPU\u603b\u65f6\u95f4\u7684\u767e\u5206\u6bd4\u3002\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c%CPU\u53ef\u4ee5\u8d85\u8fc7100%\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u503c\u662f\u6240\u6709CPU\u6838\u5fc3\u4e0a\u4f7f\u7528\u7684CPU\u65f6\u95f4\u7684\u603b\u548c\u3002 \u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u5728\u4e00\u4e2a\u6838\u5fc3\u4e0a\u5360\u7528\u4e86100%\u7684CPU\u65f6\u95f4\uff0c\u90a3\u4e48\u5b83\u5b8c\u5168\u4f7f\u7528\u4e86\u8be5\u6838\u5fc3\u7684\u8d44\u6e90\u3002\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u5728\u4e24\u4e2a\u6838\u5fc3\u4e0a\u5404\u5360\u752850%\u7684\u65f6\u95f4\uff0c\u603b\u5360\u7528\u7387\u5c06\u663e\u793a\u4e3a100%\u3002</p>"},{"location":"deploy/cpu/#1cpu","title":"1.\u67e5\u770b\u7a0b\u5e8f\u5360\u7528\u4e86\u591a\u5c11cpu\u6838\u5fc3","text":"Bash<pre><code>top\n</code></pre>"},{"location":"deploy/cpu/#2-tasksetcpu","title":"2. \u4f7f\u7528taskset\u7ed1\u5b9a\u7ebf\u7a0b\u5230\u7279\u5b9acpu\u6838\u5fc3","text":"<p><code>taskset</code>\u547d\u4ee4\u5141\u8bb8\u4f60\u5c06\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u7ed1\u5b9a\u5230\u7279\u5b9a\u7684CPU\u6838\u5fc3\u4e0a\uff0c\u4ee5\u63a7\u5236\u5176\u5728\u7279\u5b9a\u6838\u5fc3\u4e0a\u8fd0\u884c\u3002</p> <ul> <li> <p>\u83b7\u53d6\u7ebf\u7a0bID\uff08<code>TID</code>\uff09\uff1a</p> <p>\u4f60\u53ef\u4ee5\u5728<code>top</code>\u6216<code>htop</code>\u4e2d\u627e\u5230\u7ebf\u7a0b\u7684<code>PID</code>\uff0c\u8fd9\u5c31\u662f\u7ebf\u7a0bID\uff08<code>TID</code>\uff09\u3002</p> </li> <li> <p>\u4f7f\u7528<code>taskset</code>\u547d\u4ee4\u67e5\u770b\u548c\u8bbe\u7f6eCPU\u4eb2\u548c\u6027\uff1a</p> <p><code>taskset -cp &lt;TID&gt;</code></p> </li> <li> <p>\u8fd9\u5c06\u663e\u793a\u6307\u5b9a\u7ebf\u7a0b\u5f53\u524d\u7ed1\u5b9a\u7684CPU\u6838\u5fc3\u3002\u8981\u5c06\u7ebf\u7a0b\u7ed1\u5b9a\u5230\u7279\u5b9a\u7684\u6838\u5fc3\uff0c\u4f8b\u5982\u6838\u5fc30\u548c\u6838\u5fc31\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1a</p> <p><code>taskset -cp 0,1 &lt;TID&gt;</code> \u4f8b\u5982 \uff1a Bash<pre><code>taskset -c 0,4 /home/xujg/UAV-VisionLoc-Deploy/cpp/install/UAV-VisionLoc-C_Linux/UAV-VisionLoc-C /home/xujg/UAV-VisionLoc-Deploy/cpp/config.yaml\n</code></pre></p> </li> </ul>"},{"location":"deploy/cpu/#3-pidstat","title":"3. \u4f7f\u7528pidstat\u67e5\u770b\u6bcf\u4e2a\u6838\u5fc3\u7684\u5360\u7528\u60c5\u51b5","text":"<p><code>pidstat</code>\u662f<code>sysstat</code>\u5de5\u5177\u5305\u4e2d\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u8be6\u7ec6\u663e\u793a\u6bcf\u4e2a\u8fdb\u7a0b\u7684CPU\u6838\u5fc3\u4f7f\u7528\u60c5\u51b5\u3002</p> <ol> <li> <p>\u5b89\u88c5 <code>sysstat</code> \u5de5\u5177\u5305\uff08\u5982\u679c\u5c1a\u672a\u5b89\u88c5\uff09\uff1a     <code>sudo apt-get install sysstat</code></p> </li> <li> <p>\u4f7f\u7528 <code>pidstat</code> \u67e5\u770b\u6bcf\u4e2a\u6838\u5fc3\u7684\u4f7f\u7528\u60c5\u51b5\uff1a</p> <p><code>pidstat -p 12172 -t -u 1</code></p> <ul> <li><code>-p 12172</code> \u6307\u5b9a\u8fdb\u7a0bID\u3002</li> <li><code>-t</code> \u663e\u793a\u7ebf\u7a0b\u7684\u4fe1\u606f\u3002</li> <li><code>-u</code> \u663e\u793aCPU\u4f7f\u7528\u7387\u3002</li> <li><code>1</code> \u8868\u793a\u6bcf\u79d2\u66f4\u65b0\u4e00\u6b21\u3002</li> </ul> <p>\u8fd9\u5c06\u663e\u793a\u8be5\u8fdb\u7a0b\u53ca\u5176\u7ebf\u7a0b\u5728\u6bcf\u4e2aCPU\u6838\u5fc3\u4e0a\u7684\u4f7f\u7528\u7387\u3002</p> </li> </ol> <p>CPU\u5360\u7528\u7387\uff08<code>%CPU</code>\uff09\u548c\u5360\u7528\u65f6\u95f4\u4e4b\u95f4\u6709\u76f4\u63a5\u7684\u5173\u7cfb\u3002<code>%CPU</code>\u5b9e\u9645\u4e0a\u53cd\u6620\u4e86\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u4f7f\u7528\u4e86\u591a\u5c11CPU\u8d44\u6e90\u3002\u4e0b\u9762\u6211\u8be6\u7ec6\u89e3\u91ca\u4e24\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a</p>"},{"location":"deploy/cpu/#4-cpu","title":"4. CPU\u5360\u7528\u7387\u7684\u5b9a\u4e49\uff1a","text":"<ul> <li>CPU\u5360\u7528\u7387\uff08<code>%CPU</code>\uff09 \u662f\u4e00\u4e2a\u65f6\u95f4\u5e73\u5747\u503c\uff0c\u8868\u793a\u5728\u4e00\u4e2a\u7ed9\u5b9a\u7684\u65f6\u95f4\u6bb5\u5185\uff0c\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u4f7f\u7528\u4e86\u591a\u5c11CPU\u65f6\u95f4\u3002</li> <li>\u5360\u7528\u65f6\u95f4 \u662f\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u5b9e\u9645\u5728CPU\u4e0a\u8fd0\u884c\u7684\u65f6\u95f4\u3002</li> </ul>"},{"location":"deploy/cpu/#5","title":"5. \u5360\u7528\u7387\u4e0e\u5360\u7528\u65f6\u95f4\u7684\u5173\u7cfb\uff1a","text":"<ul> <li> <p>\u5355\u6838\u7cfb\u7edf\uff1a</p> <ul> <li>\u5728\u5355\u6838\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u57281\u79d2\u5185\u5b8c\u5168\u5360\u7528\u4e86CPU\uff0c\u90a3\u4e48\u5b83\u7684<code>%CPU</code>\u5c06\u662f100%\u3002</li> <li>\u5982\u679c\u8fdb\u7a0b\u57281\u79d2\u5185\u53ea\u8fd0\u884c\u4e860.5\u79d2\uff0c\u90a3\u4e48\u5b83\u7684<code>%CPU</code>\u5c06\u662f50%\u3002</li> <li> <p>\u591a\u6838\u7cfb\u7edf\uff1a</p> </li> <li> <p>\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c<code>%CPU</code>\u53ef\u4ee5\u8d85\u8fc7100%\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u56db\u6838\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u57281\u79d2\u5185\u5360\u7528\u4e86\u4e24\u4e2a\u6838\u5fc3\u7684\u5168\u90e8\u65f6\u95f4\uff0c\u5b83\u7684<code>%CPU</code>\u5c06\u662f200%\u3002</p> </li> </ul> </li> </ul>"},{"location":"deploy/cpu/#6-cpu","title":"6. \u8ba1\u7b97<code>%CPU</code>\u7684\u516c\u5f0f\uff1a","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\uff0c<code>%CPU</code>\u901a\u5e38\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u8fd1\u4f3c\u8ba1\u7b97\uff1a</p> <p><code>%CPU = (\u4f7f\u7528\u7684CPU\u65f6\u95f4 / \u76d1\u6d4b\u95f4\u9694\u65f6\u95f4) * 100</code></p> <p>\u4f8b\u5982\uff1a</p> <ul> <li> <p>\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u5728\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\uff08\u4f8b\u59821\u79d2\uff09\u5185\u4f7f\u7528\u4e860.5\u79d2\u7684CPU\u65f6\u95f4\uff0c\u5e76\u4e14\u662f\u5355\u6838\u7cfb\u7edf\uff0c\u90a3\u4e48\u5b83\u7684<code>%CPU</code>\u4e3a\uff1a</p> <p><code>%CPU = (0.5\u79d2 / 1\u79d2) * 100 = 50%</code></p> </li> <li> <p>\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u95f4\u662f\u5206\u5e03\u5728\u4e24\u4e2a\u6838\u5fc3\u4e0a\u7684\uff08\u4f8b\u5982\u6bcf\u4e2a\u6838\u5fc30.25\u79d2\uff09\uff0c\u90a3\u4e48\u603b\u7684<code>%CPU</code>\u5c06\u4f1a\u662f\uff1a</p> <p><code>%CPU = ((0.25\u79d2 + 0.25\u79d2) / 1\u79d2) * 100 = 50%</code></p> </li> <li> <p>\u5982\u679c\u8fdb\u7a0b\u57281\u79d2\u5185\u5b8c\u5168\u5360\u7528\u4e86\u4e24\u4e2a\u6838\u5fc3\uff0c\u6bcf\u4e2a\u6838\u5fc31\u79d2\uff0c\u90a3\u4e48\u5b83\u7684<code>%CPU</code>\u4e3a\uff1a</p> <p><code>%CPU = (1\u79d2 + 1\u79d2) / 1\u79d2 * 100 = 200%</code></p> </li> </ul>"},{"location":"deploy/cpu/#7","title":"7. \u793a\u4f8b\u5206\u6790\uff1a","text":"<ul> <li>\u5728\u4f60\u7684\u6570\u636e\u4e2d\uff0c\u4e3b\u8fdb\u7a0b\u7684<code>%CPU</code>\u663e\u793a\u4e3a<code>105%-108%</code>\u3002\u5047\u8bbe\u4f60\u76d1\u6d4b\u7684\u65f6\u95f4\u95f4\u9694\u4e3a1\u79d2\uff0c\u8fd9\u610f\u5473\u7740\u57281\u79d2\u5185\uff0c\u4e3b\u8fdb\u7a0b\u53ca\u5176\u6240\u6709\u7ebf\u7a0b\u603b\u5171\u4f7f\u7528\u4e861.05\u52301.08\u79d2\u7684CPU\u65f6\u95f4\u3002</li> <li>\u5982\u679c\u5176\u4e2d\u4e00\u90e8\u5206\u65f6\u95f4\u662f\u5728\u6838\u5fc34\u4e0a\u8fd0\u884c\uff0c\u53e6\u4e00\u90e8\u5206\u65f6\u95f4\u662f\u5728\u6838\u5fc33\u4e0a\u8fd0\u884c\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u603b<code>%CPU</code>\u8d85\u8fc7100%\u3002</li> </ul>"},{"location":"deploy/cpu/#8-100","title":"8. \u4e3a\u4ec0\u4e48\u591a\u6838\u7cfb\u7edf\u4f1a\u51fa\u73b0\u8d85\u8fc7100%\u7684\u5360\u7528\u7387\uff1a","text":"<p>\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c<code>%CPU</code>\u53ef\u4ee5\u53cd\u6620\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u5728\u591a\u4e2a\u6838\u5fc3\u4e0a\u5e76\u884c\u8fd0\u884c\u7684\u65f6\u95f4\u603b\u548c\u3002\u4f8b\u5982\uff1a</p>"},{"location":"deploy/cpu/#-cpu100cpu","title":"- \u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u6709\u591a\u4e2a\u7ebf\u7a0b\uff0c\u5e76\u4e14\u8fd9\u4e9b\u7ebf\u7a0b\u5728\u4e0d\u540c\u7684\u6838\u5fc3\u4e0a\u5e76\u884c\u8fd0\u884c\uff0c\u5b83\u4eec\u7684CPU\u4f7f\u7528\u65f6\u95f4\u53ef\u4ee5\u53e0\u52a0\uff0c\u8fd9\u5c31\u53ef\u80fd\u5bfc\u81f4\u8d85\u8fc7100%\u7684<code>%CPU</code>\u3002","text":"<ul> <li>CPU\u5360\u7528\u7387\uff08<code>%CPU</code>\uff09 \u662f\u901a\u8fc7\u8ba1\u7b97\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u5728\u7ed9\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u4f7f\u7528\u7684CPU\u65f6\u95f4\u4e0e\u603b\u65f6\u95f4\u7684\u6bd4\u7387\u5f97\u51fa\u7684\u3002</li> <li>\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4e2a\u6bd4\u7387\u53ef\u4ee5\u8d85\u8fc7100%\uff0c\u56e0\u4e3a\u591a\u4e2a\u6838\u5fc3\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u8fdb\u7a0b\u7684\u4e0d\u540c\u90e8\u5206\u3002</li> <li>\u5360\u7528\u65f6\u95f4 \u76f4\u63a5\u5f71\u54cd\u5230<code>%CPU</code>\u7684\u8ba1\u7b97\uff1a\u5360\u7528\u65f6\u95f4\u8d8a\u957f\uff0c<code>%CPU</code>\u8d8a\u9ad8\u3002</li> </ul>"},{"location":"deploy/faiss_running_time/","title":"Faiss running time","text":"Python<pre><code>from time import time\nimport faiss\nfrom tqdm import tqdm\nimport numpy as np\n</code></pre> Python<pre><code>database_input = np.random.randn(30000, 4096)\nmax_recall_values = 1\nfaiss_index = faiss.IndexFlatL2(4096)\nfaiss_index.add(database_input)\n</code></pre> Python<pre><code>faiss_index\n</code></pre> Text Only<pre><code>&lt;faiss.swigfaiss_avx512.IndexFlatL2; proxy of &lt;Swig Object of type 'faiss::IndexFlatL2 *' at 0x76d74863c360&gt; &gt;\n</code></pre> Python<pre><code>t = []\nfor _ in tqdm(range(10000)):\n    query_input = np.random.randn(1, 4096)\n    t1 = time()\n    distances, predictions = faiss_index.search(query_input, max_recall_values)\n    t2 = time()\n    t.append(t2 - t1)\nprint(\"Average faiss.IndexFlatL2 running time on cpu: \", sum(t)/10000)\n</code></pre> Text Only<pre><code>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10000/10000 [02:04&lt;00:00, 80.39it/s]\n\nAverage faiss.IndexFlatL2 running time on cpu:  0.012288888859748841\n</code></pre> Python<pre><code>res = faiss.StandardGpuResources()\nfaiss_index = faiss.GpuIndexFlatL2(res, 4096)\nfaiss_index.add(database_input)\n</code></pre> Python<pre><code>faiss_index\n</code></pre> Text Only<pre><code>&lt;faiss.swigfaiss_avx512.GpuIndexFlatL2; proxy of &lt;Swig Object of type 'faiss::gpu::GpuIndexFlatL2 *' at 0x76d6bb652930&gt; &gt;\n</code></pre> Python<pre><code>t_gpu = []\nfor _ in tqdm(range(10000)):\n    query_input = np.random.randn(1, 4096)\n    t1 = time()\n    distances, predictions = faiss_index.search(query_input, max_recall_values)\n    t2 = time()\n    t_gpu.append(t2 - t1)\nprint(\"Average faiss.IndexFlatL2 running time on RTX 4060: \", sum(t_gpu)/10000)\n</code></pre> Text Only<pre><code>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10000/10000 [00:21&lt;00:00, 471.49it/s]\n\nAverage faiss.IndexFlatL2 running time on RTX 4060:  0.002055554723739624\n</code></pre>"},{"location":"deploy/npu/","title":"npu","text":"<p>NPU\uff08Neural Processing Unit\uff09\u7684\u8d1f\u8f7d\u548c\u5360\u7528\u7387\u867d\u7136\u76f8\u5173\uff0c\u4f46\u5e76\u4e0d\u662f\u5b8c\u5168\u76f8\u540c\u7684\u6982\u5ff5\u3002\u4e0b\u9762\u6211\u6765\u8be6\u7ec6\u89e3\u91ca\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u548c\u8054\u7cfb\u3002</p>"},{"location":"deploy/npu/#1-npu","title":"1. NPU\u5360\u7528\u7387\uff1a","text":"<ul> <li>\u5360\u7528\u7387\uff08Utilization\uff09\u901a\u5e38\u6307NPU\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u5b9e\u9645\u6267\u884c\u8ba1\u7b97\u7684\u65f6\u95f4\u4e0e\u603b\u65f6\u95f4\u7684\u6bd4\u7387\u3002\u5b83\u53cd\u6620\u4e86NPU\u5728\u5904\u7406\u4efb\u52a1\u65f6\u7684\u7e41\u5fd9\u7a0b\u5ea6\u3002</li> <li>\u5982\u679cNPU\u7684\u5360\u7528\u7387\u4e3a100%\uff0c\u610f\u5473\u7740NPU\u5728\u76d1\u6d4b\u7684\u65f6\u95f4\u6bb5\u5185\u4e00\u76f4\u5728\u5904\u7406\u4efb\u52a1\uff0c\u6ca1\u6709\u95f2\u7f6e\u65f6\u95f4\u3002\u5360\u7528\u7387\u8d8a\u9ad8\uff0c\u8bf4\u660eNPU\u88ab\u5229\u7528\u5f97\u8d8a\u5145\u5206\u3002</li> </ul>"},{"location":"deploy/npu/#2-npu","title":"2. NPU\u8d1f\u8f7d\uff1a","text":"<ul> <li>\u8d1f\u8f7d\uff08Load\uff09 \u901a\u5e38\u662f\u6307NPU\u6240\u627f\u53d7\u7684\u5de5\u4f5c\u91cf\uff0c\u6216\u8005\u8bf4NPU\u5728\u5904\u7406\u7684\u4efb\u52a1\u7684\u590d\u6742\u7a0b\u5ea6\u548c\u6570\u91cf\u3002\u8d1f\u8f7d\u53ef\u4ee5\u7531\u591a\u4e2a\u56e0\u7d20\u51b3\u5b9a\uff0c\u6bd4\u5982\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\u3001\u6a21\u578b\u7684\u590d\u6742\u6027\u3001\u5e76\u884c\u4efb\u52a1\u7684\u6570\u91cf\u7b49\u7b49\u3002</li> <li>\u8d1f\u8f7d\u53cd\u6620\u4e86NPU\u5904\u7406\u7684\u4efb\u52a1\u7684\u603b\u91cf\uff0c\u901a\u5e38\u5728\u8d1f\u8f7d\u8f83\u9ad8\u65f6\uff0cNPU\u7684\u5360\u7528\u7387\u4e5f\u4f1a\u5347\u9ad8\uff0c\u4f46\u8fd9\u4e0d\u4e00\u5b9a\u662f\u7ebf\u6027\u5173\u7cfb\u3002</li> </ul>"},{"location":"deploy/npu/#3","title":"3. \u533a\u522b\u4e0e\u8054\u7cfb\uff1a","text":"<ul> <li> <p>\u8054\u7cfb\uff1a\u4e00\u822c\u6765\u8bf4\uff0cNPU\u7684\u8d1f\u8f7d\u589e\u52a0\u4f1a\u5bfc\u81f4\u5360\u7528\u7387\u7684\u63d0\u9ad8\uff0c\u56e0\u4e3a\u66f4\u9ad8\u7684\u8d1f\u8f7d\u610f\u5473\u7740NPU\u9700\u8981\u5904\u7406\u66f4\u591a\u7684\u6570\u636e\u6216\u4efb\u52a1\uff0c\u56e0\u6b64\u5b83\u4f1a\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u5728\u8ba1\u7b97\u4e0a\u3002</p> </li> <li> <p>\u533a\u522b\uff1a\u7136\u800c\uff0c\u5360\u7528\u7387\u53cd\u6620\u7684\u662f\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u7684\u5229\u7528\u60c5\u51b5\uff0c\u800c\u8d1f\u8f7d\u53cd\u6620\u7684\u662f\u4efb\u52a1\u7684\u590d\u6742\u5ea6\u548c\u6570\u91cf\u3002\u4e00\u4e2aNPU\u53ef\u4ee5\u5728\u9ad8\u8d1f\u8f7d\u4e0b\u5de5\u4f5c\uff0c\u4f46\u5982\u679c\u4efb\u52a1\u4e4b\u95f4\u6709\u7b49\u5f85\u6216\u95f2\u7f6e\u65f6\u95f4\uff0c\u5360\u7528\u7387\u53ef\u80fd\u4e0d\u4f1a\u8fbe\u5230100%\u3002\u53cd\u4e4b\uff0c\u4e00\u4e2aNPU\u53ef\u4ee5\u6709\u5f88\u9ad8\u7684\u5360\u7528\u7387\uff0c\u4f46\u8d1f\u8f7d\u53ef\u80fd\u76f8\u5bf9\u8f83\u4f4e\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5728\u5904\u7406\u4e00\u4e9b\u7b80\u5355\u6216\u77ed\u65f6\u4efb\u52a1\u3002</p> </li> </ul>"},{"location":"deploy/npu/#4","title":"4. \u5b9e\u4f8b\u89e3\u91ca\uff1a","text":"<ul> <li> <p>\u9ad8\u8d1f\u8f7d\u4f4e\u5360\u7528\u7387\uff1a\u5047\u8bbeNPU\u5904\u7406\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u7531\u4e8e\u6570\u636e\u4f20\u8f93\u901f\u5ea6\u8f83\u6162\uff0cNPU\u7ecf\u5e38\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u3002\u6b64\u65f6\uff0cNPU\u7684\u8d1f\u8f7d\u5f88\u9ad8\uff08\u56e0\u4e3a\u4efb\u52a1\u590d\u6742\uff09\uff0c\u4f46\u5360\u7528\u7387\u53ef\u80fd\u4e0d\u9ad8\uff08\u56e0\u4e3a\u6709\u5927\u91cf\u7b49\u5f85\u65f6\u95f4\uff09\u3002</p> </li> <li> <p>\u4f4e\u8d1f\u8f7d\u9ad8\u5360\u7528\u7387\uff1a\u5982\u679cNPU\u5904\u7406\u7684\u662f\u4e00\u7cfb\u5217\u975e\u5e38\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u8fd9\u4e9b\u64cd\u4f5c\u6301\u7eed\u4e0d\u65ad\uff0c\u51e0\u4e4e\u6ca1\u6709\u7b49\u5f85\u65f6\u95f4\uff0cNPU\u7684\u5360\u7528\u7387\u53ef\u80fd\u5f88\u9ad8\uff0c\u4f46\u8d1f\u8f7d\u5374\u76f8\u5bf9\u8f83\u4f4e\u3002</p> </li> </ul>"},{"location":"deploy/npu/#5","title":"5. \u5982\u4f55\u76d1\u63a7\uff1a","text":"<ul> <li>NPU\u5360\u7528\u7387\uff1a\u901a\u5e38\u901a\u8fc7\u76d1\u63a7\u5de5\u5177\u76f4\u63a5\u89c2\u5bdfNPU\u7684\u5229\u7528\u7387\u6307\u6807\uff08\u6bd4\u5982\u4f7f\u7528\u7387\u6216\u95f2\u7f6e\u7387\uff09\u3002</li> <li>NPU\u8d1f\u8f7d\uff1a\u901a\u5e38\u9700\u8981\u5206\u6790NPU\u5f53\u524d\u6267\u884c\u7684\u4efb\u52a1\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u901a\u8fc7\u76d1\u63a7\u4efb\u52a1\u961f\u5217\u7684\u957f\u5ea6\u3001\u4efb\u52a1\u6267\u884c\u7684\u9891\u7387\u548c\u6570\u636e\u541e\u5410\u91cf\u7b49\u6765\u95f4\u63a5\u8861\u91cf\u3002</li> </ul>"},{"location":"deploy/npu/#_1","title":"\u603b\u7ed3\uff1a","text":"<ul> <li>\u5360\u7528\u7387 \u548c \u8d1f\u8f7d \u662f\u76f8\u5173\u4f46\u4e0d\u540c\u7684\u6982\u5ff5\u3002\u5360\u7528\u7387\u5173\u6ce8NPU\u5728\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u7684\u5fd9\u788c\u7a0b\u5ea6\uff0c\u800c\u8d1f\u8f7d\u5219\u5173\u6ce8NPU\u6240\u5904\u7406\u4efb\u52a1\u7684\u590d\u6742\u5ea6\u548c\u6570\u91cf\u3002</li> <li>\u5728\u6027\u80fd\u8c03\u4f18\u4e2d\uff0c\u901a\u5e38\u9700\u8981\u7efc\u5408\u8003\u8651\u4e24\u8005\uff0c\u4ee5\u786e\u4fddNPU\u65e2\u80fd\u591f\u5904\u7406\u9ad8\u8d1f\u8f7d\u4efb\u52a1\uff0c\u53c8\u80fd\u591f\u88ab\u5145\u5206\u5229\u7528\u3002</li> </ul>"},{"location":"deploy/onnx/","title":"ONNX","text":"<p>\u5728\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6a21\u578b\u8bad\u7ec3\u4e0e\u90e8\u7f72\u662f\u4e24\u4e2a\u73af\u8282\uff0cpytorch\u901a\u5e38\u53ea\u7528\u4e8e\u8bad\u7ec3\uff0c\u83b7\u5f97\u6a21\u578b\u6743\u91cd\u6587\u4ef6\uff0c\u800c\u6700\u7ec8\u90e8\u7f72\u8fd8\u6709\u4e13\u95e8\u7684\u90e8\u7f72\u5e73\u53f0\uff0c\u4f8b\u5982TensorRT\u3001NCNN\u3001OpenVINO\u7b49\u51e0\u5341\u79cd\u90e8\u7f72\u63a8\u7406\u5e73\u53f0\u3002 \u5982\u4f55\u5c06pytorch\u6a21\u578b\u6587\u4ef6\u8ba9\u51e0\u5341\u79cd\u90e8\u7f72\u63a8\u7406\u5e73\u53f0\u80fd\u63a5\u6536\u4e0e\u8bfb\u53d6\u662f\u4e2a\u5927\u95ee\u9898\u3002\u5373\u4f7f\u5404\u63a8\u7406\u5e73\u53f0\u90fd\u9002\u914dpytorch\uff0c\u90a3\u8fd8\u6709\u5176\u4ed6\u8bad\u7ec3\u6846\u67b6\u4e5f\u8981\u9002\u914d\uff0c\u662f\u975e\u5e38\u9ebb\u70e6\u7684\u3002 <code>onnx</code>\u5c31\u662f\u4e3a\u4e86\u964d\u4f4e\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u4ece\u8bad\u7ec3\u5230\u90e8\u7f72\u7684\u590d\u6742\u5ea6\uff0c\u7531\u5fae\u8f6f\u548cmeta\u57282017\u5e74\u63d0\u51fa\u7684\u4e00\u79cd\u5f00\u653e\u795e\u7ecf\u7f51\u7edc\u4ea4\u6362\u683c\u5f0f\uff0c\u76ee\u7684\u5728\u4e8e\u65b9\u4fbf\u7684\u5c06\u6a21\u578b\u4ece\u4e00\u4e2a\u6846\u67b6\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u6846\u67b6</p> <p><code>pytorch</code>\u6a21\u578b\u5bfc\u51fa<code>onnx</code>\u8c03\u7528<code>torch.onnx.export</code>\u51fd\u6570 Text Only<pre><code>torch.onnx.export(\n    model,\n    args,\n    f,\n    export_params=True,\n    opset_version=11,\n    do_constant_folding=True,\n    input_names=None,\n    output_names=None,\n    dynamic_axes=None,\n    verbose=False\n)\n</code></pre> \u53c2\u6570\u8be6\u60c5</p> \u53c2\u6570\u540d \u8bf4\u660e <code>model</code> \u8981\u5bfc\u51fa\u7684 PyTorch \u6a21\u578b\uff0c\u901a\u5e38\u662f <code>nn.Module</code> <code>args</code> \u4e00\u7ec4\u793a\u4f8b\u8f93\u5165\uff08<code>torch.Tensor</code> \u6216\u5143\u7ec4\uff09\uff0c\u7528\u4e8e\u6784\u5efa\u8ba1\u7b97\u56fe <code>f</code> \u5bfc\u51fa\u8def\u5f84\u6216\u6587\u4ef6\u5bf9\u8c61\uff0c\u6bd4\u5982 <code>\"model.onnx\"</code> <code>export_params</code> \u662f\u5426\u5bfc\u51fa\u6a21\u578b\u53c2\u6570\uff08True \u901a\u5e38\u4e0d\u9700\u8981\u6539\uff09 <code>opset_version</code> ONNX \u7684\u64cd\u4f5c\u96c6\u7248\u672c\uff08\u5efa\u8bae \u226511\uff0c\u9ed8\u8ba4\u662f 11\uff09 <code>do_constant_folding</code> \u662f\u5426\u5728\u5bfc\u51fa\u65f6\u6267\u884c\u5e38\u91cf\u6298\u53e0\u4f18\u5316\uff08\u63d0\u9ad8\u63a8\u7406\u6548\u7387\uff09 <code>input_names</code> \u7ed9\u8f93\u5165\u5f20\u91cf\u547d\u540d\uff0cONNX \u652f\u6301\u5177\u540d\u8f93\u5165 <code>output_names</code> \u7ed9\u8f93\u51fa\u5f20\u91cf\u547d\u540d <code>dynamic_axes</code> \u652f\u6301\u52a8\u6001\u5c3a\u5bf8\u8f93\u5165\u8f93\u51fa\uff08\u6bd4\u5982 batch_size \u53ef\u53d8\uff09 <code>verbose</code> \u662f\u5426\u6253\u5370\u8be6\u7ec6\u5bfc\u51fa\u4fe1\u606f <p><code>model</code>: \u9700\u8981\u88ab\u8f6c\u6362\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u6709\u4e09\u79cd\u7c7b\u578b\uff0c <code>torch.nn.Module</code>, <code>torch.jit.ScriptModule</code> or <code>torch.jit.ScriptFunction</code></p> <p><code>args</code>\uff1a<code>model</code>\u8f93\u5165\u65f6\u6240\u9700\u8981\u7684\u53c2\u6570\uff0c\u8fd9\u91cc\u8981\u4f20\u53c2\u65f6\u56e0\u4e3a\u6784\u5efa\u8ba1\u7b97\u56fe\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u91c7\u7528\u6570\u636e\u5bf9\u6a21\u578b\u8fdb\u884c\u4e00\u904d\u63a8\u7406\uff0c\u7136\u540e\u8bb0\u5f55\u63a8\u7406\u8fc7\u7a0b\u9700\u8981\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u751f\u6210\u8ba1\u7b97\u56fe\u3002<code>args</code>\u8981\u6c42\u662ftuple\u6216\u8005\u662fTensor\u7684\u5f62\u5f0f\u3002\u4e00\u822c\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u65f6\uff0c\u76f4\u63a5\u4f20\u5165<code>Tensor</code>\uff0c\u591a\u4e2a\u8f93\u5165\u65f6\u8981\u7528<code>tuple</code>\u5305\u8d77\u6765\u3002</p> <p><code>export_params</code>: \u662f\u5426\u9700\u8981\u4fdd\u5b58\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a<code>True</code>\uff0c\u901a\u5e38\u7528\u4e8e\u6a21\u578b\u7ed3\u6784\u8fc1\u79fb\u5230\u5176\u5b83\u6846\u67b6\u65f6\uff0c\u53ef\u4ee5\u7528<code>False</code>\u3002</p> <p><code>input_names</code>\uff1a\u8f93\u5165\u6570\u636e\u7684\u540d\u5b57\uff0c <code>(list of str, default empty list)</code> \uff0c\u5728\u4f7f\u7528<code>onnx</code>\u6587\u4ef6\u65f6\uff0c\u6570\u636e\u7684\u4f20\u8f93\u548c\u4f7f\u7528\uff0c\u90fd\u662f\u901a\u8fc7<code>name: value</code>\u7684\u5f62\u5f0f\u3002 <code>output_names</code>\uff1a\u540c\u4e0a\u3002</p> <p><code>opset_version</code>\uff1a\u4f7f\u7528\u7684\u7b97\u5b50\u96c6\u7248\u672c\u3002</p> <p><code>dynamic_axes</code>\uff1a\u52a8\u6001\u7ef4\u5ea6\u7684\u6307\u5b9a\uff0c\u4f8b\u5982<code>batchsize</code>\u5728\u4f7f\u7528\u65f6\u968f\u65f6\u4f1a\u53d8\uff0c\u5219\u9700\u8981\u628a\u8be5\u7ef4\u5ea6\u6307\u5b9a\u4e3a\u52a8\u6001\u7684\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8ba1\u7b97\u56fe\u7684\u6570\u636e\u7ef4\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u8fd9\u6709\u5229\u4e8e\u6548\u7387\u63d0\u5347\uff0c\u4f46\u7f3a\u4e4f\u7075\u6d3b\u6027\u3002\u7528\u6cd5\u662f\uff0c\u5bf9\u4e8e\u52a8\u6001\u7ef4\u5ea6\u7684\u8f93\u5165\u3001\u8f93\u51fa\uff0c\u9700\u8981\u8bbe\u7f6e\u5b83\u54ea\u4e2a\u8f74\u662f\u52a8\u6001\u7684\uff0c\u5e76\u4e14\u4e3a\u8fd9\u4e2a\u8f74\u8bbe\u5b9a\u540d\u79f0\u3002\u8fd9\u91cc\u67093\u4e2a\u8981\u7d20\uff0c\u6570\u636e\u540d\u79f0\uff0c\u8f74\u5e8f\u53f7\uff0c\u8f74\u540d\u79f0\u3002\u56e0\u6b64\u662f\u901a\u8fc7<code>dict</code>\u6765\u8bbe\u7f6e\u7684\u3002\u4f8b\u5982<code>dynamic_axes={ \"x\": {0: \"my_custom_axis_name\"} }</code>\uff0c \u8868\u793a\u540d\u79f0\u4e3a<code>x</code>\u7684\u6570\u636e\uff0c\u7b2c0\u4e2a\u8f74\u662f\u52a8\u6001\u7684\uff0c\u52a8\u6001\u8f74\u7684\u540d\u5b57\u53eb<code>my_custom_axis_name</code>\u3002\u901a\u5e38\u7528\u4e8e<code>batchsize</code>\u6216\u8005\u662f\u5bf9\u4e8e<code>h,w</code>\u662f\u4e0d\u56fa\u5b9a\u7684\u6a21\u578b\u8981\u8bbe\u7f6e\u52a8\u6001\u8f74\u3002</p> <p>\u4e0b\u9762\u4ee5<code>ResNet18</code>\u8fdb\u884c\u4e3e\u4f8b\uff0c<code>onnx</code>\u6587\u4ef6\u53ef\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u5f97\uff1a Python<pre><code>import torchvision\nimport torch\n\nmodel = torchvision.models.resnet18(pretrained=True)\ndummy_data = torch.randn((1, 3, 512, 512))\nwith torch.no_grad():\n    torch.onnx.export(model, (dummy_data), \"resnet18.onnx\",\n                    opset_version=19,\n                    input_names=[\"input0\"],\n                    output_names=[\"output0\"])\n</code></pre></p> <p>onnxsim-\u8ba9\u5bfc\u51fa\u7684onnx\u6a21\u578b\u66f4\u7cbe\u7b80 \u4ed3\u5e93\u5730\u5740\uff1a https://github.com/daquexian/onnx-simplifier</p> <p>\u672c\u5730\u7248: <code>pip install onnxsim</code> \u7136\u540e\uff0c\u5728\u7ec8\u7aef\uff1a <code>onnxsim input_onnx_model output_onnx_model</code></p>"},{"location":"deploy/video/","title":"\u62c9\u6d41","text":"<p>\u62c9\u6d41\u6307\u7684\u662f\u4ece\u67d0\u4e2a\u7f51\u7edc\u6e90\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u5b9e\u65f6\u6d41\u5a92\u4f53\u670d\u52a1\u5668\uff09\u83b7\u53d6\u5a92\u4f53\u6d41\uff08\u89c6\u9891\u6216\u97f3\u9891\u6d41\uff09\u5e76\u8fdb\u884c\u5904\u7406\u6216\u4fdd\u5b58\u7684\u8fc7\u7a0b\u3002</p>"},{"location":"deploy/video/#opencv","title":"\u65b9\u6848\u4e00\uff1a\u4f7f\u7528opencv\u76f4\u63a5\u5904\u7406\u6444\u50cf\u5934\u89c6\u9891\u6d41","text":"<p>opencv\u672c\u8eab\u5c31\u53ef\u4ee5\u76f4\u63a5\u4e0e\u6444\u50cf\u5934\u4ea4\u4e92\uff0c\u800c\u5176\u5b9eOpencv\u5185\u90e8\u8c03\u7528\u4e86FFmpeg\u5e93\u6765\u5904\u7406\u89c6\u9891\u6d41\u3002</p> Python<pre><code>import cv2\n\n# \u6253\u5f00\u6444\u50cf\u5934\ncap = cv2.VideoCapture(0)\n\nwhile True:\n    ret, frame = cap.read()\n    if not ret:\n        break\n\n    # \u663e\u793a\u56fe\u50cf\n    cv2.imshow('frame', frame)\n\n    # \u6309q\u952e\u9000\u51fa\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n        break\n# \u91ca\u653e\u6444\u50cf\u5934\u5e76\u5173\u95ed\u6240\u6709\u7a97\u53e3\ncap.release()\ncv2.destroyAllWindows()\n</code></pre>"},{"location":"deploy/video/#libuvc","title":"\u65b9\u6848\u4e8c\uff1a \u5229\u7528libuvc\u8fdb\u884c\u62c9\u6d41","text":""},{"location":"deploy/video/#1-libuvcso","title":"1. \u5b89\u88c5\u5e93\u6587\u4ef6 libuvc.so","text":"Bash<pre><code>git clone https://github.com/libuvc/libuvc.git\ncd libuvc\nmkdir build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Release ..\nmake\nsudo make install\n</code></pre> <p>Tip</p> <p>\u4e0a\u9762\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u9700\u8981\u5b89\u88c5libusb-1.0 <code>sudo apt-get install libusb-1.0-0-dev</code> \u5982\u679c\u5b58\u5728\u7248\u672c\u4f9d\u8d56\u95ee\u9898\uff0c\u5f3a\u5236\u5b89\u88c5\u4e0elibusb-1\u5339\u914d\u7684\u7248\u672c\u73af\u5883\u3002<code>sudo apt-get install libusb-1.0-0=2:1.0.25-1ubuntu1</code></p>"},{"location":"deploy/video/#2usb","title":"2.\u8bbe\u7f6eUSB\u6743\u9650","text":"<p>\u5f53\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u6444\u50cf\u5934\u8bbe\u5907\u65f6\uff0c\u7cfb\u7edf\u5c06\u81ea\u52a8\u6309\u7167\u8fd9\u6761\u89c4\u5219\u8c03\u6574\u8bbe\u5907\u7684\u7528\u6237\u7ec4\u548c\u6743\u9650\uff0c\u4f7f\u5f97\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u8bbf\u95ee\u8bbe\u5907\uff0c\u800c\u4e0d\u518d\u9700\u8981\u4f7f\u7528 sudo\u3002\u8fd9\u6837\uff0c\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528 sudo \u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u7a0b\u5e8f\u6765\u8bbf\u95ee\u6444\u50cf\u5934\u3002</p> <ul> <li>\u5728<code>/etc/udev/rules.d</code>\u4e0b\u65b0\u5efa\u6587\u4ef6<code>99-usbcam.rules</code></li> <li>\u6253\u5f00\u6587\u4ef6<code>sudo vim 99-usbcam.rules</code>, \u6dfb\u52a0<code>SUBSYSTEMS==\"usb\", ENV{DEVTYPE}==\"usb_device\", ATTRS{idVendor}==\"046d\", ATTRS{idProduct}==\"08cc\", MODE=\"0666\"</code></li> <li>\u4fdd\u5b58\u6587\u4ef6\u5e76\u9000\u51fa</li> <li>\u91cd\u65b0\u52a0\u8f7dudev\u89c4\u5219\uff1a</li> <li><code>sudo udevadm control --reload-rules</code></li> <li><code>sudo udevadm trigger</code> \u8fd9\u5c06\u91cd\u65b0\u52a0\u8f7d\u6240\u6709\u7684<code>udev</code>\u89c4\u5219\uff0c\u5e76\u7acb\u5373\u5e94\u7528\u65b0\u7684\u89c4\u5219.</li> </ul>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/","title":"\u914d\u7f6eADBD","text":"<p>\u4f7f\u7528<code>adb</code>\u8fde\u63a5<code>android</code>, <code>linux</code>\u9700\u8981\u5728\u88ab\u63a7\u5236\u8bbe\u5907\u4e0a\u5b89\u88c5<code>adbd</code>\uff0c <code>android</code>\u9ed8\u8ba4\u5b89\u88c5<code>adbd</code>\uff0c \u800cubuntu\u4e0b\u9ed8\u8ba4\u662f\u6ca1\u6709adbd\u670d\u52a1\uff0c\u7531\u4e8e\u9700\u8981android\u4e0b\u7684\u4e00\u4e9b\u914d\u7f6e\u73af\u5883\u5bfc\u81f4<code>apt</code>\u4e5f\u65e0\u6cd5\u8fdb\u884c\u5b89\u88c5\uff0c\u90a3\u5982\u4f55\u8ba9\u5b83\u672c\u8eab\u88ab\u8bc6\u522b\u6210\u4e00\u4e2a<code>adb</code>\u8bbe\u5907\uff0c\u7528\u6765\u8c03\u8bd5\uff0c\u4e0b\u9762\u8fdb\u884c\u4ecb\u7ecd\u3002</p>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#adbd","title":"\u4e0b\u8f7dadbd\u4e8c\u8fdb\u5236\u6587\u4ef6","text":"<p><code>\u94fe\u63a5</code>: https://mail.bjtu.edu.cn/coremail/common/nfFile.jsp?share_link=7BF7C9AC92E94CE8993D7E7729AF4455&amp;uid=20120017%40bjtu.edu.cn <code>\u5bc6\u7801</code>: <code>yq6E</code></p>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#_1","title":"\u89e3\u538b\u6587\u4ef6","text":"<p>\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a Bash<pre><code>sudo cp ./adbd.sh /etc/init.d/\nsudo cp ./.usb_config /etc/init.d/\n\nsudo cp adbd /usr/local/bin/\nsudo cp adbd.service /lib/systemd/system/\n</code></pre></p>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#_2","title":"\u521b\u5efa\u5f00\u673a\u542f\u52a8\u670d\u52a1\u94fe\u63a5","text":"<p>\u5728<code>/etc/systemd/system/multi-user.target.wants</code> \u76ee\u5f55\u521b\u5efa\u8f6f\u94fe\u63a5 Bash<pre><code>ln -s /lib/systemd/system/adbd.service .\n</code></pre></p>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#_3","title":"\u542f\u52a8\u670d\u52a1","text":"Bash<pre><code>systemctl start adbd.service\n</code></pre>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#_4","title":"\u9a8c\u8bc1\u670d\u52a1\u662f\u5426\u542f\u52a8\u6210\u529f","text":"Bash<pre><code>systemctl status adbd.service\n</code></pre>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#_5","title":"\u5f00\u673a\u81ea\u542f\u52a8","text":"Bash<pre><code>systemctl enable adbd.service\n</code></pre>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#_6","title":"\u5173\u95ed\u670d\u52a1","text":"Bash<pre><code>systemctl stop adbd.service\n</code></pre>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#_7","title":"\u5378\u8f7d\u670d\u52a1","text":"<p>Bash<pre><code>sudo rm /etc/init.d/adbd  \nsudo rm /etc/init.d/.usb_config\n</code></pre> \u4ee5\u4e0a\u5c31\u662f\u5728<code>ubuntu</code>\u4e0b\u589e\u52a0<code>adbd</code>\u670d\u52a1\u7684\u6b65\u9aa4</p> <p>\u4e0b\u9762\u5728\u4e0a\u4f4d\u673a\u7aef\u901a\u8fc7<code>adb</code>\u8fdb\u884c\u8fde\u63a5</p>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#adb-adb","title":"\u542f\u7528adb, \u521b\u5efaADB\u670d\u52a1\u5668","text":"Bash<pre><code>adb start_server\n</code></pre>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#adb","title":"\u6d4b\u8bd5ADB\u8fde\u63a5","text":"Bash<pre><code>adb devices\n</code></pre>"},{"location":"deploy/%E9%85%8D%E7%BD%AEADBD/#_8","title":"\u8fde\u63a5\u4e0b\u4f4d\u673a","text":"Bash<pre><code>adb connect &lt;server_ip&gt;:5555\n</code></pre>"}]}